[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    mainClass.set(\"panda.Panda\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"    archiveFileName \u003d \u0027Panda.jar\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"    archiveBaseName \u003d \"Panda\"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"modembcc":3,"-":40}},{"path":"src/main/java/panda/Panda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.component.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import panda.component.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import panda.component.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"import panda.component.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"public class Panda {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    private TaskList tlist;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"    private static final String filePath \u003d \"./src/main/list.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"    private Storage cacheFile;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Panda instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"     * Initializes the user interface, storage file, and task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     * @param filePath the path to the file where tasks are stored.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"    public Panda(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"        cacheFile \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"            tlist \u003d new TaskList(cacheFile.load());","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        } catch (PandaException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"            tlist \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     * Runs the Panda application.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     * Displays a welcome message, reads and executes commands until the exit command is received, and handles exceptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"    private void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"                c.execute(tlist, ui, cacheFile);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"            } catch (PandaException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     * Entry point for the Panda application.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"     * Creates a new Panda instance and runs it.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"     * @param args command-line arguments (not used).","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"        new Panda(filePath).run();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":61}},{"path":"src/main/java/panda/command/AlterMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.exception.OutOfBoundsException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import panda.component.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"public class AlterMarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    private int idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * Constructs a new AlterMarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * @param idx the index of the task to alter mark.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param isMarked the logic to mark the task","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    public AlterMarkCommand(int idx, boolean isMarked) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     * Executes the command on the given TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList on which the command is executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist) throws PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        if(idx - 1 \u003e\u003d tlist.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"            throw new OutOfBoundsException();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        if(isMarked) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"            tlist.mark(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"        else {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"            tlist.unmark(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"     * Executes the command on the given TaskList, updates the UI, and saves changes to the cache file.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList on which the command is executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to update after execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file to save changes to.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist, Ui ui, Storage cacheFile) throws PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"        if(idx - 1 \u003e\u003d tlist.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"            throw new OutOfBoundsException();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"        if(isMarked) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"            tlist.mark(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"        else {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"            tlist.unmark(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"        cacheFile.save(tlist);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"        ui.showReply(\"Nice! I\u0027ve marked this task as done:\\n  \" + tlist.taskString(idx));","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"     * @return always false, as this command is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"        if (!(o instanceof AlterMarkCommand)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"         ","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"        AlterMarkCommand c \u003d (AlterMarkCommand) o;","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"        return idx \u003d\u003d c.idx \u0026\u0026 isMarked \u003d\u003d c.isMarked;","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":85}},{"path":"src/main/java/panda/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.component.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":" * Abstract base class for commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    abstract public boolean isExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"     * Executes the command on the given TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList on which the command is executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"    abstract public void execute(TaskList tlist) throws PandaException;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"     * Executes the command on the given TaskList, updates the UI, and saves changes to the cache file.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList on which the command is executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to update after execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file to save changes to.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"    abstract public void execute(TaskList tlist, Ui ui, Storage cacheFile) throws PandaException;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"modembcc":35}},{"path":"src/main/java/panda/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.exception.OutOfBoundsException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import panda.component.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    private int idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"     * Constructs a new DeleteCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * @param idx the index of the task to delete.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"     * Deletes the task at the given index from the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList from which the task is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during deletion.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist) throws PandaException{","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"        if(idx \u003e\u003d tlist.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"            throw new OutOfBoundsException();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        tlist.remove(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"     * Deletes the task at the given index from the TaskList, updates the UI, and saves changes to the cache file.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList from which the task is deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to update after deletion.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file to save changes to.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during deletion.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist, Ui ui, Storage cacheFile) throws PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        if(idx \u003e\u003d tlist.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"            throw new OutOfBoundsException();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"        String tString \u003d tlist.taskString(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"        tlist.remove(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"        cacheFile.save(tlist);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        ui.showReply(\"OK, I\u0027ve deleted this task:\" ","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"            + \"\\n  \" + tString ","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"            + \"\\nNow you have \" + tlist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"     * @return always false, as this command is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"        if (!(o instanceof DeleteCommand)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"         ","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"        DeleteCommand c \u003d (DeleteCommand) o;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"        return idx \u003d\u003d c.idx;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":76}},{"path":"src/main/java/panda/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.component.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * Shows goodbye message on Ui","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * @param tlist the current TaskList. (unused)","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to show message.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file. (unused)","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist, Ui ui, Storage cacheFile) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"        ui.showBye();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     * @return true, as this command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"        return o instanceof ExitCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":33}},{"path":"src/main/java/panda/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.component.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import panda.component.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import panda.component.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    private String fString;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * Constructs a new FindCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param fString the string to find in tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    public FindCommand(String fString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"        this.fString \u003d fString;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     * Does nothing, as the FindCommand does not need to perform any action on the TaskList alone.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList on which the command is executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"     * Finds tasks in the TaskList that contain the find string, displays the resulting TaskList, and updates the UI.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList on which the command is executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to update after execution.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file to save changes to.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist, Ui ui, Storage cacheFile) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"        TaskList ftlist \u003d tlist.find(fString);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"        ui.showList(ftlist);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     * @return always false, as this command is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"     * Checks if this command is equal to another object.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"     * @param o the object to compare with.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     * @return true if the objects are equal, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"        if (!(o instanceof FindCommand)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"         ","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"        FindCommand c \u003d (FindCommand) o;","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"        return fString.equals(c.fString);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"modembcc":70}},{"path":"src/main/java/panda/command/NewTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.component.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"public class NewTaskCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"    private Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"     * Constructs a new NewTaskCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * @param task the task to be inserted.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"    public NewTaskCommand(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"     * Inserts the task into the given TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList into which the task is inserted.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"        tlist.insert(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"     * Inserts the task into the given TaskList, updates the UI, and saves changes to the cache file.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList into which the task is inserted.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to update after insertion.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file to save changes to.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist, Ui ui, Storage cacheFile) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"        tlist.insert(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"        cacheFile.save(tlist);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"        ui.showReply(\"Got it. I\u0027ve added this task:\" ","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"            + \"\\n \" + tlist.taskString(tlist.size() - 1) ","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"            + \"\\nNow you have \" + tlist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     * @return always false, as this command is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"        if (!(o instanceof NewTaskCommand)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"         ","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"        NewTaskCommand c \u003d (NewTaskCommand) o;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"        return task.equals(c.task);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":64}},{"path":"src/main/java/panda/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.component.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"        return;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * Shows current TaskList on Ui","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * @param tlist the current TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param ui the UI to show message.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     * @param cacheFile the cache file. (unused)","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    public void execute(TaskList tlist, Ui ui, Storage cacheFile) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"        ui.showList(tlist);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     * @return always false, as this command is not an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"        return o instanceof PrintListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":33}},{"path":"src/main/java/panda/component/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.component;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import panda.command.AlterMarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import panda.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import panda.command.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import panda.command.ExitCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"import panda.command.NewTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import panda.command.PrintListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"import panda.command.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"import panda.exception.EmptyDeadlineException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"import panda.exception.EmptyEventException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"import panda.exception.EmptyTodoException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"import panda.exception.InvalidFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"import panda.exception.UnknownCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"import panda.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"import panda.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"import panda.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * Parses the user input into a Command.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"     * @param userInput the user input to parse.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"     * @return the parsed Command.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if the user input does not correspond to a known command.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    public static Command parse(String userInput) throws PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"        if(userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"        if(userInput.equals((\"list\"))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"            return new PrintListCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"            int target;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"                target \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"            catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"                throw new InvalidFormatException();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"            return new AlterMarkCommand(target, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"            int target;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"                target \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"            catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"                throw new InvalidFormatException();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"            return new AlterMarkCommand(target, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"            int target;","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"                target \u003d Integer.parseInt(userInput.split(\" \", 2)[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"            catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"                throw new InvalidFormatException();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"            return new DeleteCommand(target);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"            String[] splitted \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"            if(splitted.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"                throw new EmptyTodoException();","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"            return new NewTaskCommand(new Todo(splitted[1].trim()));","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"            String[] splitted \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"            if(splitted.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"                throw new EmptyDeadlineException(\"desc\");","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"            String[] args \u003d splitted[1].split(\"/by\");","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"            if(args.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"modembcc"},"content":"                throw new EmptyDeadlineException(\"date\");","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"            return new NewTaskCommand(new Deadline(args[0].trim(), args[1].trim()));","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"            String[] splitted \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"            if(splitted.length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"                throw new EmptyEventException(\"desc\");","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"            String[] args \u003d splitted[1].split(\"/from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"modembcc"},"content":"            if(args.length \u003c 2 || args[1].split(\"/to\").length \u003c 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"modembcc"},"content":"                throw new EmptyEventException(\"date\");","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"modembcc"},"content":"            return new NewTaskCommand(new Event(","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"modembcc"},"content":"                args[0].trim(), ","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"modembcc"},"content":"                args[1].split(\"/to\")[0].trim(), ","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"modembcc"},"content":"                args[1].split(\"/to\")[1].trim()));","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"modembcc"},"content":"        if(userInput.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"modembcc"},"content":"            String[] splitted \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"modembcc"},"content":"            if(splitted.length \u003c 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"modembcc"},"content":"                throw new InvalidFormatException();","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"modembcc"},"content":"            return new FindCommand(splitted[1].trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"modembcc"},"content":"        throw new UnknownCommandException();","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"modembcc"},"content":"    } ","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":106}},{"path":"src/main/java/panda/component/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.component;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import panda.command.AlterMarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"import panda.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"import panda.command.NewTaskCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"import panda.exception.CorruptedFileException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"import panda.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"import panda.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"import panda.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    private File cacheFile;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"    ","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"     * @param filePath the path to the file where tasks are stored.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        cacheFile \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"        if (!cacheFile.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"                cacheFile.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"            }   ","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     * @return a list of commands representing the tasks loaded from the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during loading.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"    public ArrayList\u003cCommand\u003e load() throws PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"        ArrayList\u003cCommand\u003e clist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"            Scanner myReader \u003d new Scanner(cacheFile);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"            int idx \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"                String[] parts \u003d data.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"                for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"                    parts[i] \u003d parts[i].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"                if(parts[0].equals(\"T\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"                    clist.add(new NewTaskCommand(new Todo(parts[2])));","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"                } else  {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"                    if(parts[0].equals(\"D\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"                        clist.add(new NewTaskCommand(new Deadline(parts[2], parts[3])));","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"                        if(parts[0].equals(\"E\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"                            clist.add(new NewTaskCommand(new Event(parts[2],  parts[3], parts[4])));","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"                        else {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"                            myReader.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"                            throw new CorruptedFileException();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"                if(parts[1].equals(\"1\")) clist.add(new AlterMarkCommand(idx, true));","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"                idx \u003d idx + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"            myReader.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"            // System.out.println(\"Something went wrong\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"            throw new CorruptedFileException();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"        // System.out.println(\"inserted \" + clist.size() + \" tasks\");","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"modembcc"},"content":"        return clist;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList to save to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"    public void save(TaskList tlist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"        try (FileWriter writer \u003d new FileWriter(\"./src/main/list.txt\", false)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"modembcc"},"content":"            writer.write(tlist.saveString());","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"modembcc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"modembcc"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"modembcc"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":95}},{"path":"src/main/java/panda/component/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.component;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import panda.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"import panda.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    private ArrayList\u003cTask\u003e tlist;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * Constructs a new empty TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"        tlist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"     * Constructs a new TaskList with tasks loaded from a list of commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     * @param clist the list of commands to load tasks from.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * @throws PandaException if an error occurs during task loading.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"    public TaskList(ArrayList\u003cCommand\u003e clist) throws PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"        tlist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        for(Command c : clist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"            c.execute(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"     * Inserts a task into the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     * @param task the task to insert.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"    public void insert(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"        tlist.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     * Removes a task from the TaskList based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     * @param idx the index of the task to remove.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"    public void remove(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        tlist.remove(tlist.get(idx - 1));","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"     * Marks a task in the TaskList based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"     * @param idx the index of the task to mark.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"    public void mark(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"        tlist.get(idx - 1).mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"     * Unmarks a task in the TaskList based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"     * @param idx the index of the task to unmark.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"    public void unmark(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"        tlist.get(idx - 1).unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"     * @return the number of tasks in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"    public int size() {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"        return tlist.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of a task in the TaskList based on its index.","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"modembcc"},"content":"     * @param idx the index of the task to return.","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"    public String taskString(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"        return tlist.get(idx).toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"     * Searches for tasks that match the given filter string.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"     * The filter string is treated as a regular expression and the comparison is case insensitive.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"modembcc"},"content":"     * @param fString the filter string to match against.","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"modembcc"},"content":"     * @return a new TaskList containing only the tasks that match the filter string.","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"modembcc"},"content":"    public TaskList find(String fString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"modembcc"},"content":"        TaskList tmp \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"modembcc"},"content":"        for(Task task : tlist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"modembcc"},"content":"            if(task.match(fString)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"modembcc"},"content":"                tmp.insert(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"modembcc"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"modembcc"},"content":"        return tmp;","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"modembcc"},"content":"     * Returns a string representation of the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"modembcc"},"content":"     * If the TaskList is empty, returns a message indicating that the list is empty.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"modembcc"},"content":"     * Otherwise, returns a string listing all the tasks in the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"modembcc"},"content":"     * @return a string representation of the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"modembcc"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"modembcc"},"content":"        if(tlist.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"modembcc"},"content":"            return \"Your list is empty.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"modembcc"},"content":"        String result \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"modembcc"},"content":"        for(int i \u003d 0; i \u003c tlist.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"modembcc"},"content":"            result \u003d result + \"\\n\" + ((i + 1) + \".\" + taskString(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"modembcc"},"content":"        return result;","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the TaskList suitable for saving to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"modembcc"},"content":"    public String saveString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"modembcc"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"modembcc"},"content":"        for(Task t : tlist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"modembcc"},"content":"            result \u003d result + t.saveString() + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"modembcc"},"content":"        return result;","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":134}},{"path":"src/main/java/panda/component/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.component;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    private Scanner myScanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Ui.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * Initializes the Scanner for reading user inputs.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"        myScanner  \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"        System.out.println(","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"            \"Hello! I\u0027m Panda\\n\" + ","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"            \"What can I do for you?\"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"     * Displays a goodbye message to the user and closes the Scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    public void showBye() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        System.out.println(","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"            \"Bye. Hope to see you again soon!\"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"        myScanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"     * Displays a message indicating that no storage was found.","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        System.out.println(","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"            \"No storage found. Initializing empty list...\"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"     * Displays an error message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"     * @param errString the error message to display.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"    public void showError(String errString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"        System.out.println(","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"            \"An error has occured:\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"            + \"  \" + errString","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"     * Displays a reply message to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"     * @param replyString the reply message to display.","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"    public void showReply(String replyString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"        System.out.println(replyString);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"     * @return the command entered by the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"        String userInput \u003d myScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"        return userInput.trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"    // private void reply(String replyString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"    //     System.out.println(replyString);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"modembcc"},"content":"    // }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"     * Displays the given TaskList to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"     * @param tlist the TaskList to display.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"    public void showList(TaskList tlist) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"        System.out.println(tlist.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":89}},{"path":"src/main/java/panda/exception/CorruptedFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class CorruptedFileException extends PandaException {","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new CorruptedFileException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public CorruptedFileException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"Storage File in the wrong format. The list has been emptied.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":9}},{"path":"src/main/java/panda/exception/EmptyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class EmptyDeadlineException extends PandaException {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new EmptyDeadlineException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public EmptyDeadlineException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"OOPS! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * Constructs a new EmptyDeadlineException with a specific message.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param cat the category of the exception (\"desc\" for description, \"date\" for date).","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    public EmptyDeadlineException(String cat) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"        super(","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"            cat.equals(\"desc\") ","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"                ? \"OOPS! The description of a deadline cannot be empty.\" ","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"                : \"OOPS! The deadline of a deadline cannot be empty.\"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"        );","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":22}},{"path":"src/main/java/panda/exception/EmptyEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class EmptyEventException extends PandaException {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new EmptyEventException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public EmptyEventException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"OOPS! The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * Constructs a new EmptyEventException with a specific message.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param cat the category of the exception (\"desc\" for description, \"date\" for date).","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    public EmptyEventException(String cat) {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"        super(","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"            cat.equals(\"desc\") ","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"                ? \"OOPS! The description of an event cannot be empty.\" ","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"                : \"OOPS! Make sure you have both the from and to date to create an event.\"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"        );","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":22}},{"path":"src/main/java/panda/exception/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class EmptyTodoException extends PandaException {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new EmptyTodoException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public EmptyTodoException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"OOPS! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":9}},{"path":"src/main/java/panda/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class InvalidFormatException extends PandaException {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new InvalidFormatException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public InvalidFormatException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"OOPS! Please use the correct format for this command.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":9}},{"path":"src/main/java/panda/exception/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class OutOfBoundsException extends PandaException {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new OutOfBoundsException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public OutOfBoundsException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"OOPS! The item you want to mark doesn\u0027t exist. Use the \u0027list\u0027 command to check your current tasks.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":9}},{"path":"src/main/java/panda/exception/PandaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":" * Custom exception class for Panda application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":" * This exception is thrown when an error occurs in the Panda application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"public class PandaException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"     * Constructs a new PandaException with no detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    public PandaException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"        super();","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"     * Constructs a new PandaException with the specified detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"     * @param message the detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"    public PandaException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"     * Constructs a new PandaException with the specified cause.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"     * @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method).","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    public PandaException(Throwable cause) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        super(cause);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     * Constructs a new PandaException with the specified detail message and cause.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"     * @param message the detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"     * @param cause the cause (which is saved for later retrieval by the {@link #getCause()} method).","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"    public PandaException(String message, Throwable cause) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        super(message, cause);","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":42}},{"path":"src/main/java/panda/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class UnknownCommandException extends PandaException {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new UnknownCommandException with a default message.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"        super(\"OOPS! Panda doesn\u0027t have that command.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"modembcc":9}},{"path":"src/main/java/panda/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import java.util.Locale;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Deadline with the given description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * @param desc the description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     * @param datestr the deadline of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    public Deadline(String desc, String datestr) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"        super(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"        builder.parseCaseInsensitive()","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MMM d\u0027th\u0027 ha\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MMM d yyyy ha\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd ha\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"        DateTimeFormatter formatter \u003d builder.toFormatter(Locale.US);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"        if (!datestr.toLowerCase().contains(\"am\") \u0026\u0026 !datestr.contains(\"pm\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"            datestr +\u003d \" 12am\"; // append default time if none is provided","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"        this.date \u003d LocalDateTime.parse(datestr, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"    private String dateString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateString() + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the Deadline suitable for saving to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"        return \"D | \" + super.saveString() + \" | \" + dateString();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":57}},{"path":"src/main/java/panda/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import java.util.Locale;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Event with the given description, start time, and end time.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     * @param desc the description of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"     * @param from the start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"    public Event(String desc, String from, String to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"        super(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"        builder.parseCaseInsensitive()","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MMM d\u0027th\u0027 ha\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"MMM d yyyy ha\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"                .appendOptional(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss a\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        DateTimeFormatter formatter \u003d builder.toFormatter(Locale.US);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        if (!from.toLowerCase().contains(\"am\") \u0026\u0026 !from.toLowerCase().contains(\"pm\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"            from +\u003d \" 12am\"; // append default time if none is provided","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        if (!to.toLowerCase().contains(\"am\") \u0026\u0026 !to.toLowerCase().contains(\"pm\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"            to +\u003d \" 12am\"; // append default time if none is provided","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"     * Returns the formatted string representation of the start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"     * @return the formatted string representation of the start time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"    private String startString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"     * Returns the formatted string representation of the end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"     * @return the formatted string representation of the end time of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"    private String stopString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy ha\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"        String from \u003d startString();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"        String to \u003d stopString();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"        if (from.length() \u003e\u003d 12 \u0026\u0026 to.length() \u003e\u003d 12 \u0026\u0026 from.substring(0, 12).equals(to.substring(0, 12))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"            to \u003d to.substring(12);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the event suitable for saving to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"        return \"E | \" + super.saveString() + \" | \" + startString() + \" | \" + stopString();","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":77}},{"path":"src/main/java/panda/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"    private final String desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"     * @param desc the description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"     * Returns the current status of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"     * @return the current status of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"    private String curStatus() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"        return \"[\" + (isDone ? \u0027X\u0027 : \u0027 \u0027) + \"]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"        return curStatus() + \u0027 \u0027 + desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the task suitable for saving to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + desc;","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"     * Checks if the description matches the given filter string.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"     * The filter string is treated as a regular expression and the comparison is case insensitive.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"     * @param fString the filter string to match against.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"     * @return true if the description matches the filter string, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"    public boolean match(String fString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"        Pattern pattern \u003d Pattern.compile(fString, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"modembcc"},"content":"        Matcher matcher \u003d pattern.matcher(desc);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"modembcc"},"content":"        return matcher.find();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"modembcc"},"content":"    ","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"modembcc"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"modembcc"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"modembcc"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"modembcc"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"modembcc"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"modembcc"},"content":"            return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"modembcc"},"content":"         ","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"modembcc"},"content":"        Task c \u003d (Task) o;","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"modembcc"},"content":"        return desc.equals(c.desc) \u0026\u0026 isDone \u003d\u003d c.isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":88}},{"path":"src/main/java/panda/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"     * Constructs a new Todo with the given description.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"     * @param desc the description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    public Todo(String desc) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"        super(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"     * Returns the string representation of the task suitable for saving to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"     * ","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"        return \"T | \" + super.saveString();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":29}},{"path":"src/main/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"D | 0 | return book | Oct 15 2019 12AM","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"E | 0 | project meeting | Oct 15 2019 2PM | Oct 15 2019 4PM","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"T | 0 | sleep","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"T | 0 | wake up","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"D | 0 | party | Oct 15 2019 12AM","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"T | 0 | game","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"modembcc":8}},{"path":"src/test/java/panda/PandaTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda;  //same package as the class being tested","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"public class PandaTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"    public void dummyTest(){","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"modembcc":17}},{"path":"src/test/java/panda/component/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.component;  //same package as the class being tested","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import panda.command.AlterMarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"import panda.command.DeleteCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import panda.command.ExitCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"import panda.command.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"import panda.command.NewTaskCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"import panda.command.PrintListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"import panda.exception.PandaException;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"import panda.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"import panda.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"import panda.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"    public void parseCommand_validCommands_success() throws PandaException {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"        // valid command results in exit command","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"modembcc"},"content":"        // valid command results in print command","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"modembcc"},"content":"        assertEquals(new PrintListCommand(), Parser.parse(\"list\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"modembcc"},"content":"        // valid command results in alter mark command","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"modembcc"},"content":"        assertEquals(new AlterMarkCommand(1, true), Parser.parse(\"mark 1\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"modembcc"},"content":"        // valid command results in alter mark command (marked \u003d\u003d false)","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"modembcc"},"content":"        assertEquals(new AlterMarkCommand(1, false), Parser.parse(\"unmark 1\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"modembcc"},"content":"        // valid command results in delete command","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"modembcc"},"content":"        assertEquals(new DeleteCommand(1), Parser.parse(\"delete 1\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"modembcc"},"content":"        // valid add task command results in new task command (todo)","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"modembcc"},"content":"        assertEquals(new NewTaskCommand(new Todo(\"read book\")), Parser.parse(\"todo read book\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"modembcc"},"content":"        // valid add task command results in new task command (deadline)","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"modembcc"},"content":"        assertEquals(new NewTaskCommand(new Deadline(\"read book\", \"Oct 15 2019 12AM\")), Parser.parse(\"deadline read book /by Oct 15 2019 12AM\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"modembcc"},"content":"        // valid add task command results in new task command (event)","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"modembcc"},"content":"        assertEquals(new NewTaskCommand(new Event(\"read book\", \"Oct 15 2019 12AM\", \"Oct 16 2019 12AM\")), Parser.parse(\"event read book /from Oct 15 2019 12AM /to Oct 16 2019 12AM\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"modembcc"},"content":"        // valid command results in find command","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"modembcc"},"content":"        assertEquals(new FindCommand(\"read\"), Parser.parse(\"find read\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"modembcc"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"modembcc"},"content":"    public void parseCommand_invalidCommands_exceptionThrown() throws PandaException {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"modembcc"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"modembcc"},"content":"            assertEquals(0, Parser.parse(\"clear\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"modembcc"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"modembcc"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"modembcc"},"content":"            assertEquals(\"OOPS! Panda doesn\u0027t have that command.\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"modembcc"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"modembcc"},"content":"            assertEquals(0, Parser.parse(\"mark read book\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"modembcc"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"modembcc"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"modembcc"},"content":"            assertEquals(\"OOPS! Please use the correct format for this command.\", e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"modembcc"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"modembcc":68}},{"path":"src/test/java/panda/component/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"package panda.component;  //same package as the class being tested","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"import panda.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"modembcc"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    public void taskListToString_emptyList_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":"        // valid command results in exit command","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"        assertEquals(\"Your list is empty.\", new TaskList().toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"modembcc"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"modembcc"},"content":"    public void taskListToString_unemptyList_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"modembcc"},"content":"        // valid command results in exit command","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"modembcc"},"content":"        TaskList tlist \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"modembcc"},"content":"        tlist.insert(new Todo(\"read book\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"        assertEquals(\"Here are the tasks in your list:\\n1.[T][ ] read book\", tlist.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"modembcc"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"modembcc"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"modembcc":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"modembcc"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"modembcc"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"modembcc"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"modembcc"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"modembcc"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"modembcc"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"modembcc"},"content":"if not exist .\\bin mkdir .\\bin","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"modembcc"},"content":"for %%i in (.\\src\\main\\java\\*.java) do (","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"modembcc"},"content":"    javac -cp .\\src\\main\\java -Xlint:none -d .\\bin %%i","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"modembcc"},"content":")","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"modembcc"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"modembcc"},"content":"java -classpath .\\bin Panda \u003c .\\text-ui-test\\input.txt \u003e .\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"modembcc"},"content":"FC .\\text-ui-test\\ACTUAL.TXT .\\text-ui-test\\EXPECTED.TXT","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"modembcc":7,"-":17}}]
