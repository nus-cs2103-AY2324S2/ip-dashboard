[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    mainClass.set(\"kitchensink.Launcher\")","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"run {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"-":41,"logical-1985516":24}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"1.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"2.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"3.[E][X] zoom (from: 07 Feb 2024 08:00 to: 07 Feb 2024 09:00)","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"4.[T][ ] sleep","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"5.[T][ ] eat","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"6.[T][ ] eat","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":6}},{"path":"src/main/java/kitchensink/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * Currently unused. May refactor code to use this class in the future.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    public void execute(List taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/kitchensink/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":61}},{"path":"src/main/java/kitchensink/KitchenSink.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.*;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":" * The entry point of the app.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"public class KitchenSink /* extends Application */ {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"    private String fileName \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    private Storage storage \u003d new Storage(fileName);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    private List taskList \u003d new List(storage.loadTasks());","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    public KitchenSink() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    String getResponse(String input) throws IOException {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        return parser.parse(input, taskList, ui, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"logical-1985516":26,"-":2}},{"path":"src/main/java/kitchensink/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/kitchensink/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":" * Contains the tasks and manages them with its methods.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"public class List {","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    public List(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"     * Adds a task to the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"     * @param task The task to be added to taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    public String addTask(Task task, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        return ui.sayTaskAdded(task, tasks.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     * Deletes a task from the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number such that the task with that index is deleted from taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    public String deleteTask(int taskNum, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        Task task \u003d tasks.get(taskNum);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        return ui.sayTaskDeleted(task, tasks.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"     * Returns whether the task number is valid.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number in the user input (for mark/unmark).","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"     * @return Whether is task is valid.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    public boolean isValidTaskNum(int taskNum) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        return taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d tasks.size();","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"     * Marks a task in the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number such that the task with that index is marked in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"     * @param ui      The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    public String markTask(int taskNum, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"        String result \u003d tasks.get(taskNum).mark(ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        return result;","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"     * Unmarks a task in the taskList, saves the changes to the savefile and displays it to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"     * @param taskNum The number such that the task with that index is unmarked in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"     * @param storage The storage that saves the changed tasks to save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As the storage read/writes the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"    public String unmarkTask(int taskNum, Storage storage, Ui ui) throws IOException {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        String result \u003d tasks.get(taskNum).unmark(ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"        return result;","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"     * Finds tasks that contain the keyword(s).","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"     * @param keywords The words that the tasks in the resulting list should contain.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that displays the resulting list.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"    public String findTasks(String keywords, Ui ui) {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"        List results \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"            if (task.hasKeywords(keywords)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"                results.tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        return ui.displayResults(results);","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"    public int getListSize() {","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"     * Returns a String displaying the tasks in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"     * Format is as shown in Level-8.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"     * @return String representation of taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"            result.append(i + 1).append(\".\").append(tasks.get(i).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"                result.append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"        return String.valueOf(result);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"logical-1985516":121}},{"path":"src/main/java/kitchensink/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    private KitchenSink duke \u003d new KitchenSink();","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    public Main() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"            stage.setTitle(\"Luke\");","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":36}},{"path":"src/main/java/kitchensink/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.InvalidDateTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.InvalidSyntaxException;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.TaskNotFoundException;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.UnknownCommandException;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    private KitchenSink duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    public void setDuke(KitchenSink d) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    private void handleUserInput() throws TaskNotFoundException, UnknownCommandException, InvalidSyntaxException,","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"            IOException, InvalidDateTimeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":63}},{"path":"src/main/java/kitchensink/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.InvalidDateTimeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.InvalidSyntaxException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.TaskNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.UnknownCommandException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":" * Parses user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"     * Converts a String to LocalDateTime, if it is in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"     * @param date The Date (in String type) that the user inputted.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"     * @return Date in LocalDateTime type.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public LocalDateTime toLocalDateTime(String date) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"     * Parses the user input - if it is valid, executes it; otherwise, throws an exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"     * @param input    User input.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The list that contains the user\u0027s tasks. User can manipulate the tasks it contains.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"     * @param ui       The ui that confirms the user\u0027s action.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"     * @param storage  The storage that saves any change to the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"     * @return String to output in UI.","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As storage reads/writes save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"    public String parse(String input, List taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        String command \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"            if (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"bye\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"            assert input.equals(\"bye\") || input.equals(\"Bye\") || input.equals(\"bYe\") || input.equals(\"byE\")","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"BYe\") || input.equals(\"ByE\") || input.equals(\"bYE\") || input.equals(\"BYE\");","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"            return ui.sayGoodBye();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"            if (!input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"list\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"            assert input.equals(\"list\") || input.equals(\"List\") || input.equals(\"lIst\") || input.equals(\"liSt\")","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"lisT\") || input.equals(\"LIst\") || input.equals(\"LiSt\") || input.equals(\"LisT\")","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"lISt\") || input.equals(\"lIsT\") || input.equals(\"liST\") || input.equals(\"LISt\")","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"                    || input.equals(\"LIsT\") || input.equals(\"LiST\") || input.equals(\"lIST\") || input.equals(\"LIST\");","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"            return ui.displayTasks(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        case \"mark\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"mark\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"                Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"mark\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"            if (!taskList.isValidTaskNum(taskNum)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"                return new TaskNotFoundException(taskList).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"            return taskList.markTask(taskNum - 1, storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        case \"unmark\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"            if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"unmark\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"                Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"unmark\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"            if (!taskList.isValidTaskNum(taskNum)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"                return new TaskNotFoundException(taskList).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"            return taskList.unmarkTask(taskNum - 1, storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"            if (input.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"todo\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"            return taskList.addTask(new ToDo(input.substring(5)), storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        case \"deadline\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"            if (!Pattern.matches(\"deadline .+ /by .+\", input)","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"                    || input.split(\"/by\").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"deadline\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"                toLocalDateTime(input.split(\"/by \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidDateTimeException().toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"            String description \u003d input.substring(9).split(\" /by\")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"            String dueDate \u003d input.split(\"/by \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"            return taskList.addTask(new Deadline(description, toLocalDateTime(dueDate)), storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"            if (!Pattern.matches(\"event .+ /from .+ /to .+\", input)","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"                    || input.split(\"/from\").length !\u003d 2","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"                    || input.split(\"/to\").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"event\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"                toLocalDateTime(input.split(\"/from \")[1].split(\" /to\")[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"                toLocalDateTime(input.split(\"/to \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidDateTimeException().toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"            String description \u003d input.substring(6).split(\" /from\")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"            String startDate \u003d input.split(\"/from \")[1].split(\" /to\")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"            String endDate \u003d input.split(\"/to \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"            return taskList.addTask(new Event(description, toLocalDateTime(startDate), toLocalDateTime(endDate)),","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"                    storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"            if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"delete\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"                Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"logical-1985516"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"delete\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"logical-1985516"},"content":"            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"logical-1985516"},"content":"            if (!taskList.isValidTaskNum(taskNum)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"logical-1985516"},"content":"                return new TaskNotFoundException(taskList).toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"logical-1985516"},"content":"            return taskList.deleteTask(taskNum - 1, storage, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"logical-1985516"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"logical-1985516"},"content":"            if (input.split(\" \").length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"logical-1985516"},"content":"                return new InvalidSyntaxException(\"find\").toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"logical-1985516"},"content":"            String keywords \u003d input.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"logical-1985516"},"content":"            return taskList.findTasks(keywords, ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"logical-1985516"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"logical-1985516"},"content":"            assert !input.equals(\"bye\") \u0026\u0026 !input.equals(\"list\") \u0026\u0026 !input.equals(\"mark\") \u0026\u0026 !input.equals(\"unmark\")","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 !input.equals(\"todo\") \u0026\u0026 !input.equals(\"deadline\") \u0026\u0026 !input.equals(\"event\")","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"logical-1985516"},"content":"                    \u0026\u0026 !input.equals(\"delete\") \u0026\u0026 !input.equals(\"find\");","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"logical-1985516"},"content":"            return new UnknownCommandException().toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":151}},{"path":"src/main/java/kitchensink/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":" * Saves and loads tasks based on a save file specified by a path.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    private String fileName;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"     * Creates a directory for the save file if it does not exist, and creates a save file if it does not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"     * @param fileName The path to the save file (in String type).","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it may create a new file.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    public Storage(String fileName) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        File f \u003d new File(fileName);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            if (!f.getParentFile().exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"     * Saves/Writes the taskList String representation to the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"     * @param taskList The taskList that is saved to the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to file.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    public void saveTasks(List taskList) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        String newFileContent \u003d taskList.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName));","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"        writer.write(newFileContent);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        writer.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"     * Loads the save file content as a Task ArrayList.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"     * This is done by reading and parsing line-by-line from the save file, then adding tasks to the resultant taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"     * @return Task ArrayList that is to be loaded to a taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it reads a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        assert new File(fileName).exists();","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"        String currLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        while ((currLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"            String taskType;","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"            boolean isDone;","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"                taskType \u003d currLine.split(\"]\")[0].split(\"\\\\[\")[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"                isDone \u003d Objects.equals(currLine.split(\"\\\\[\")[2].split(\"]\")[0], \"X\");","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"                throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"            String description;","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"            case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"                try {","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"                    description \u003d currLine.split(\"] \")[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"                    throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"                tasks.add(new ToDo(description));","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"            case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"                String dueDate;","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"                try {","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"                    description \u003d currLine.split(\" \\\\(by:\")[0].split(\"] \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"                    dueDate \u003d currLine.split(\"\\\\(by: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"                    throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"                tasks.add(new Deadline(description, LocalDateTime.parse(dueDate,","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"                        DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))));","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"            case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"                String startDate;","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"                String endDate;","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"                try {","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"                    description \u003d currLine.split(\" \\\\(from:\")[0].split(\"] \")[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"                    startDate \u003d currLine.split(\"\\\\(from: \")[1].split(\" to:\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                    endDate \u003d currLine.split(\"to: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"                }  catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"                    throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"                tasks.add(new Event(description, LocalDateTime.parse(startDate,","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"                        DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")),","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"                        LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"))));","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"logical-1985516"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"logical-1985516"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"logical-1985516"},"content":"                throw new SaveFileCorruptedException();","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"logical-1985516"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"logical-1985516"},"content":"                tasks.get(tasks.size() - 1).setToDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"logical-1985516"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"logical-1985516"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"logical-1985516"},"content":"     * Clears the save file.","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"logical-1985516"},"content":"     * This is only used for testing so that each test can start with a clean save file, instead of creating a new path","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"logical-1985516"},"content":"     * for a new save file for each test.","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"logical-1985516"},"content":"     * @throws IOException As it writes to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"logical-1985516"},"content":"    public void clearData() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"logical-1985516"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileName));","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"logical-1985516"},"content":"        writer.write(\"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":129}},{"path":"src/main/java/kitchensink/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":" * In charge of printing statements, to confirm to the user that the action is completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    public static final String LINE \u003d \"________________________________________________________\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"//    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"//     * Processes the user\u0027s input into a String.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"//     * @return User\u0027s input in String type.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"//     */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"//    public String readInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"//        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"//        String input \u003d sc.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"//        return input;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"//    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    public String welcome() {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        return (LINE + \"Hello! I\u0027m KitchenSink!\\n\" + \"What can I do for you?\\n\" + LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    public String sayGoodBye() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        return LINE + \"Bye. Hope to see you again soon!\\n\" + LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"     * Confirms to the user that the specified task is added.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"     * Displays the number of tasks remaining and distinguishes between singular and plural form.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"     * @param task The task that is being added.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"     * @param taskListSize Number of tasks in taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    public String sayTaskAdded(Task task, int taskListSize) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        String taskOrTasks \u003d taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        return (Ui.LINE","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"                + task.toString()","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"                + \"\\nNow you have \" + taskListSize + taskOrTasks + \"in the list.\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"                + Ui.LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    public String displayTasks(List taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        return Ui.LINE + \"Here are the tasks in your list:\\n\" + taskList.toString() + \"\\n\" + Ui.LINE;","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    public String sayTaskMarked(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        return (Ui.LINE + \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString() + \"\\n\" + Ui.LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"    public String sayTaskUnmarked(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        return (Ui.LINE + \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString() + \"\\n\" + Ui.LINE);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"     * Confirms to the user that the specified task is deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"     * Displays the number of tasks remaining and distinguishes between singular and plural form.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"     * @param task The task that is being deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"     * @param taskListSize Number of tasks in taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"     * @return String to display in the ui.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    public String sayTaskDeleted(Task task, int taskListSize) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        String taskOrTasks \u003d taskListSize \u003d\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        return (Ui.LINE + \"Noted. I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"                + \"\\nNow you have \" + taskListSize + taskOrTasks + \"in the list.\\n\" + Ui.LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"    public String displayResults(List results) {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        return (LINE + \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"                + results.toString() + \"\\n\" + LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"logical-1985516":76}},{"path":"src/main/java/kitchensink/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the date given by the user is not in \"yyyy-MM-dd HH:mm\" format.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class InvalidDateTimeException extends Throwable {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"        return \"\\nThe date provided is invalid. \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"                + \"Please type the date in this format: yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/kitchensink/exception/InvalidSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the first word in the user input is valid, but the input is not in the correct format","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" * (based on the first word).","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"public class InvalidSyntaxException extends Throwable {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    private String command;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private String syntax;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Gives a certain syntax based on the command given.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * @param command The first word in the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    public InvalidSyntaxException(String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"bye (just \u0027bye\u0027, really)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"list (just \u0027list\u0027, really)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"mark [task number]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"unmark [task number]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"todo [task description]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"deadline [task description] /by [deadline]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"event [task description] /from [start date] /to [end date]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"delete [task number]\";","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"            syntax \u003d \"find [keyword(s)]\";","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        return \"\\nSorry, the format for the command is invalid. The syntax for \"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"                + command + \" is: \\n\" + syntax;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"logical-1985516":54}},{"path":"src/main/java/kitchensink/exception/SaveFileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.exception;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the tasks in save file are in the incorrect format, due to possibly corruption or user editing.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class SaveFileCorruptedException extends Throwable {","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"        return \"Save file could not be read. If you have edited the save file, please undo the edits \\n\" +","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"                \"so that it could be read. Otherwise, it could be due to corruption.\";","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"logical-1985516":12}},{"path":"src/main/java/kitchensink/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the task specified cannot be found in the taskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class TaskNotFoundException extends Throwable {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private List taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    public TaskNotFoundException(List taskList) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        if (taskList.getListSize() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"            return \"\\nTask not found: list is empty. Please add a task first.\";","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"        return \"\\nTask not found: Task number should be between 1 and \" + taskList.getListSize()","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"                + \".\";","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"logical-1985516":23}},{"path":"src/main/java/kitchensink/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * Thrown when the first word in the user input is not one of the recognised commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class UnknownCommandException extends Throwable {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"        return \"\\nSorry, please type a valid command. The valid commands are:\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"                + \"bye\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"                + \"list\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"                + \"mark\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"                + \"unmark\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"                + \"todo\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"                + \"deadline\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"                + \"event\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"                + \"delete\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"                + \"find\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"logical-1985516":20}},{"path":"src/main/java/kitchensink/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * A task that should be completed before its dueDate.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Constructor of Deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * Uses the constructor of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     * @param dueDate The date that the task should be completed before.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"        String month \u003d String.valueOf(dueDate.getMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"        String monthInShortForm \u003d month.charAt(0) + month.substring(1, 3).toLowerCase();","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        String day \u003d dueDate.getDayOfMonth() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + dueDate.getDayOfMonth()","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(dueDate.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        String minute \u003d dueDate.getMinute() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + dueDate.getMinute()","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(dueDate.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        String hour \u003d dueDate.getHour() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + dueDate.getHour()","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(dueDate.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + day + \" \" + monthInShortForm","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"                + \" \" + dueDate.getYear() + \" \" + hour + \":\" + minute + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":38}},{"path":"src/main/java/kitchensink/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" * A task that takes place over a time period, from startDate to endDate.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"     * Constructor of Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * Uses the constructor of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     * @param startDate The date that the task starts.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"     * @param endDate The date that the task ends.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    public Event(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        String month \u003d String.valueOf(startDate.getMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        String monthInShortForm \u003d month.charAt(0) + month.substring(1, 3).toLowerCase();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        String day \u003d startDate.getDayOfMonth() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + startDate.getDayOfMonth()","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(startDate.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"        String minute \u003d startDate.getMinute() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + startDate.getMinute()","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(startDate.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        String hour \u003d startDate.getHour() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + startDate.getHour()","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(startDate.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        String eMonth \u003d String.valueOf(endDate.getMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"        String eShortForm \u003d eMonth.charAt(0) + eMonth.substring(1, 3).toLowerCase();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        String eDay \u003d endDate.getDayOfMonth() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + endDate.getDayOfMonth()","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(endDate.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        String eMinute \u003d endDate.getMinute() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + endDate.getMinute()","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(endDate.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"        String eHour \u003d endDate.getHour() \u003c 10","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"                ? \"0\" + endDate.getHour()","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"                : String.valueOf(endDate.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + day + \" \" + monthInShortForm","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"                + \" \" + startDate.getYear() + \" \" + hour + \":\" + minute + \" to: \"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"                + eDay + \" \" + eShortForm + \" \" + endDate.getYear() + \" \" + eHour + \":\"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"                + eMinute + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":53}},{"path":"src/main/java/kitchensink/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":" * A class that extracts the common attributes of all Tasks, such as ToDo, Deadline and Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    private String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"     * Creates a Task with a description. By default, it is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"     * @param description The description of the task itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public void setToDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"     * Marks itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    public String mark(Ui ui) {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        return ui.sayTaskMarked(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"     * Unmarks itself.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"     * @param ui The ui that confirms to the user about the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"    public String unmark(Ui ui) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        return ui.sayTaskUnmarked(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    public boolean hasKeywords(String keywords) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        return description.contains(keywords);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"logical-1985516":55}},{"path":"src/main/java/kitchensink/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"package kitchensink.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":" * A generic task that should be done, with no specific time period.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":15}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"\u003cfx:root stylesheets\u003d\"@../style/styles.css\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"\u003cAnchorPane stylesheets\u003d\"@../style/styles.css\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"kitchensink.MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"logical-1985516":19}},{"path":"src/test/java/KitchenSinkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"public class KitchenSinkTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"    public void kitchenSinkTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":8}},{"path":"src/test/java/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"public class ListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"    private Storage storage \u003d new Storage(\"./testData/test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"    public ListTest() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    public void testAddToDo() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"1.[T][ ] eat\", taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"    public void testAddDeadline() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"1.[D][ ] homework (by: 02 Feb 2024 23:59)\", taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"    public void testAddEvent() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(\"1.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\", taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"    public void testMarkTask() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(1, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[T][ ] eat\";","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"    public void testUnmarkTask() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(1, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        taskList.unmarkTask(1, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[T][ ] eat\";","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"    public void testDeleteTask() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"sleep\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"study\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"        taskList.deleteTask(1, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][ ] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[T][ ] study\";","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"    public void testToString() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":105}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"//public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"//    Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"//    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"//    public void Test1() {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"//        assertEquals(2, parser.parse());","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"//    }","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"//}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":7}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.exception.SaveFileCorruptedException;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"logical-1985516"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"logical-1985516"},"content":"import kitchensink.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"logical-1985516"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"logical-1985516"},"content":"    private String path \u003d \"./testStorage/data.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"logical-1985516"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"logical-1985516"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"logical-1985516"},"content":"    public void testCreateFile() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"logical-1985516"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"logical-1985516"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"logical-1985516"},"content":"            file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(file.exists(), true);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"logical-1985516"},"content":"    public void testCreateDirectory() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"logical-1985516"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"logical-1985516"},"content":"        File directory \u003d new File(\"./testStorage\");","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"logical-1985516"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"logical-1985516"},"content":"            file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"logical-1985516"},"content":"        if (directory.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"logical-1985516"},"content":"            directory.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(directory.exists(), true);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"logical-1985516"},"content":"    public void testCreateDirectoryAndFile() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"logical-1985516"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"logical-1985516"},"content":"        File directory \u003d new File(\"./testStorage\");","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"logical-1985516"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"logical-1985516"},"content":"            file.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"logical-1985516"},"content":"        if (directory.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"logical-1985516"},"content":"            directory.delete();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(file.exists(), true);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"logical-1985516"},"content":"    public void testSaveTasks() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"logical-1985516"},"content":"        String expected \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"logical-1985516"},"content":"        StringBuilder newFileContent \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"logical-1985516"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"logical-1985516"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"logical-1985516"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"logical-1985516"},"content":"            newFileContent.append(reader.readLine()).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"logical-1985516"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"logical-1985516"},"content":"        newFileContent.append(reader.readLine());","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(expected, String.valueOf(newFileContent));","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"logical-1985516"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"logical-1985516"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"logical-1985516"},"content":"    public void testLoadTasks() throws IOException, SaveFileCorruptedException {","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"logical-1985516"},"content":"        Storage storage \u003d new Storage(path);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"logical-1985516"},"content":"        storage.clearData();","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"logical-1985516"},"content":"        List taskList \u003d new List(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new ToDo(\"eat\"), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Deadline(\"homework\", parser.toLocalDateTime(\"2024-02-02 23:59\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"logical-1985516"},"content":"        taskList.markTask(0, storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"logical-1985516"},"content":"        taskList.addTask(new Event(\"study\", parser.toLocalDateTime(\"2024-02-02 08:00\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"logical-1985516"},"content":"                parser.toLocalDateTime(\"2024-02-02 12:00\")), storage, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"logical-1985516"},"content":"        String newFileContent \u003d \"1.[T][X] eat\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"logical-1985516"},"content":"                + \"2.[D][ ] homework (by: 02 Feb 2024 23:59)\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"logical-1985516"},"content":"                + \"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"logical-1985516"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"logical-1985516"},"content":"        writer.write(newFileContent);","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"logical-1985516"},"content":"        writer.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"logical-1985516"},"content":"        storage.loadTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"logical-1985516"},"content":"        assertEquals(newFileContent, taskList.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"logical-1985516"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"logical-1985516"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":107}},{"path":"testStorage/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"1.[T][X] eat","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"2.[D][ ] homework (by: 02 Feb 2024 23:59)","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"3.[E][ ] study (from: 02 Feb 2024 08:00 to: 02 Feb 2024 12:00)","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"logical-1985516":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"logical-1985516"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"logical-1985516"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"logical-1985516"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"logical-1985516"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"logical-1985516"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"logical-1985516"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"logical-1985516"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"logical-1985516"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"logical-1985516"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"logical-1985516":9}}]
