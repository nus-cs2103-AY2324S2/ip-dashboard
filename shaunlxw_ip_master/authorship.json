[{"path":"src/main/java/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"    public CommandException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shaunlxw":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    private String by;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    private String from;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"    private String to;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":16}},{"path":"src/main/java/ParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class ParameterException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"    public ParameterException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shaunlxw":5}},{"path":"src/main/java/Shon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"public class Shon {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    private enum Action {","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"        TodoList list \u003d new TodoList();","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"        print(\"Hello! I\u0027m Shon\", \"What can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        input \u003d input.strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"        while (!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"                Action action \u003d getAction(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"                switch (action) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"//                    case \"\":","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"//                        print(\"Please enter a command.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"//                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"                    case LIST:","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"                        print(list.getList());","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"                    case MARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"                        print(markTask(input, list));","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"                    case UNMARK:","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"                        print(unmarkTask(input, list));","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"                    case TODO:","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"                        print(addTodo(input, list));","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"                        print(addDeadline(input, list));","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"                    case EVENT:","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"                        print(addEvent(input, list));","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"                    case DELETE:","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"                        print(deleteEvent(input, list));","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"                        break;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"            } catch (ParameterException | CommandException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"                print(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"            input \u003d input.strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        scanner.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"    private static Action getAction(String input) throws CommandException {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"            throw new CommandException(\"Please enter a command.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"            return Action.valueOf(input.split(\" \")[0].toUpperCase());","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"            throw new CommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-)\");","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"    private static void print(String... messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"        String line \u003d \"    _______________\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"                \"_____________________________________________\";","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"shaunlxw"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"        for (String msg : messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"shaunlxw"},"content":"            System.out.println(\"     \" + msg);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"shaunlxw"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"shaunlxw"},"content":"    private static String[] markTask(String input, TodoList list) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"shaunlxw"},"content":"        return list.mark(getIndex(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"shaunlxw"},"content":"    private static String[] unmarkTask(String input, TodoList list) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"shaunlxw"},"content":"        return list.unmark(getIndex(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"shaunlxw"},"content":"    private static int getIndex(String input) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"shaunlxw"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"shaunlxw"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please enter which task number to mark.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"shaunlxw"},"content":"        if (split.length \u003e 2) {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please enter only one task number to mark.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"shaunlxw"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"shaunlxw"},"content":"            return Integer.parseInt(split[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"shaunlxw"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please enter a number for task number.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"shaunlxw"},"content":"    private static String[] addTodo(String input, TodoList list) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"shaunlxw"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"shaunlxw"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Todo description cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"shaunlxw"},"content":"        String description \u003d split[1];","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"shaunlxw"},"content":"        return list.addTodo(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"shaunlxw"},"content":"    private static String[] addDeadline(String input, TodoList list) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"shaunlxw"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"shaunlxw"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please enter Deadline description and due date/time.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"shaunlxw"},"content":"        if (!split[1].contains(\"/by\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please indicate due date/time after \\\"/by\\\".\");","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"shaunlxw"},"content":"        if (split[1].strip().startsWith(\"/by\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"shaunlxw"},"content":"        if (split[1].strip().endsWith(\"/by\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Deadline due date/time cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"shaunlxw"},"content":"        String[] task \u003d split[1].split(\"/by\", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"shaunlxw"},"content":"        return list.addDeadline(task[0].strip(), task[1].strip());","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"shaunlxw"},"content":"    private static String[] addEvent(String input, TodoList list) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"shaunlxw"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"shaunlxw"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please enter Event description and from/to date/time.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"shaunlxw"},"content":"        if (!split[1].contains(\"/from\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please indicate from date/time after \\\"/from\\\".\");","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"shaunlxw"},"content":"        if (!split[1].contains(\"/to\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please indicate to date/time after \\\"/to\\\".\");","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"shaunlxw"},"content":"        if (split[1].strip().startsWith(\"/from\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Event description cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"shaunlxw"},"content":"        if (split[1].strip().endsWith(\"/to\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Event to date/time cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"shaunlxw"},"content":"        String[] task \u003d split[1].strip().split(\"/from\", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"shaunlxw"},"content":"        String description \u003d task[0].strip();","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"shaunlxw"},"content":"        if (!task[1].contains(\"/to\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"\\\"/to\\\" must come after \\\"/from\\\".\");","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"shaunlxw"},"content":"        if (task[1].strip().startsWith(\"/to\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Event from date/time cannot be empty.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"shaunlxw"},"content":"        String[] datetimes \u003d task[1].split(\"/to\", 2);","lastModifiedDate":"2024-01-27"},{"lineNumber":154,"author":{"gitId":"shaunlxw"},"content":"        return list.addEvent(description, datetimes[0].strip(), datetimes[1].strip());","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":156,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":157,"author":{"gitId":"shaunlxw"},"content":"    private static String[] deleteEvent(String input, TodoList list) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"shaunlxw"},"content":"        return list.deleteTask(getIndex(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"shaunlxw":160}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"    public String markAsDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"        return this.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"    public String markAsNotDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        return this.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":11}},{"path":"src/main/java/TodoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"public class TodoList {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"    public TodoList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"        this.list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"    public String[] add(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"        int size \u003d this.list.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"Got it. I\u0027ve added this task:\", \"  \" + task,","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"                String.format(\"Now you have %s %s in the list.\", size, size \u003c 2 ? \"task\" : \"tasks\")};","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"    public String[] addTodo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        return add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"    public String[] addDeadline(String description, String by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"        return add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"shaunlxw"},"content":"    public String[] addEvent(String description, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"shaunlxw"},"content":"        return add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shaunlxw"},"content":"    public String[] getList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"shaunlxw"},"content":"        if (this.list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"shaunlxw"},"content":"            return new String[]{\"Your list is currently empty.\"};","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"shaunlxw"},"content":"        String[] output \u003d new String[this.list.size()+1];","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"shaunlxw"},"content":"        output[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"shaunlxw"},"content":"        for (int i \u003d 1; i \u003c this.list.size()+1; i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"shaunlxw"},"content":"            output[i] \u003d i + \".\" + this.list.get(i-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"shaunlxw"},"content":"        return output;","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"shaunlxw"},"content":"    public String[] mark(int i) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"shaunlxw"},"content":"        if (i \u003e this.list.size() || i \u003c 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please select a valid task number from the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"shaunlxw"},"content":"        String description \u003d task.markAsDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"Nice! I\u0027ve marked this task as done:\", \"  \" + description};","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"shaunlxw"},"content":"    public String[] unmark(int i) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"shaunlxw"},"content":"        if (i \u003e this.list.size() || i \u003c 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please select a valid task number from the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"shaunlxw"},"content":"        String description \u003d task.markAsNotDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"OK, I\u0027ve marked this task as not done yet:\", \"  \" + description};","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"shaunlxw"},"content":"    public String[] deleteTask(int i) throws ParameterException {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"shaunlxw"},"content":"        if (this.list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Your list is empty. Nothing to delete.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"shaunlxw"},"content":"        if (i \u003e this.list.size() || i \u003c 1) {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"shaunlxw"},"content":"            throw new ParameterException(\"Please select a valid task number to delete from the list.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"shaunlxw"},"content":"        Task task \u003d this.list.get(i-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"shaunlxw"},"content":"        this.list.remove(i-1);","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"shaunlxw"},"content":"        int size \u003d this.list.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"shaunlxw"},"content":"        return new String[]{\"Noted. I\u0027ve removed this task:\", \"  \" + task,","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"shaunlxw"},"content":"                String.format(\"Now you have %s %s in the list.\", size, size \u003c 2 ? \"task\" : \"tasks\")};","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":77}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"todo read book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"todo join sports club","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"mark 4","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shaunlxw":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"java -classpath ..\\bin Shon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"shaunlxw":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"java -classpath ../bin Shon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"shaunlxw":1}}]
