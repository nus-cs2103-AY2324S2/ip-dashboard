[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"    protected LocalDateTime by; // date/time to be done before","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"    public Deadline(String description, boolean completed, LocalDateTime by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"        super(description, completed);","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"        return this.by;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"        return this.by.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    public void setBy(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"        this.by \u003d dateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getByString() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime start; // start date/time","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime end; // end date/time","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"    public Event(String description, boolean completed, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"        super(description, completed);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"        return this.start;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public String getStartString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        return this.start.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public String getEndString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        return this.end.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        return this.end;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    public void setStart(LocalDateTime date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        this.start \u003d date;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"    public void setEnd(LocalDateTime date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"        this.end \u003d date;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getStartString() + \" to: \" + this.getEndString() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":45}},{"path":"src/main/java/Scribbles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"import java.io.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.sql.Date;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":" * This class implements the chatbot Scribbles.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":" * @author danielle","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"public class Scribbles {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    private Scribbles() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"     * Prints the greeting message of the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"     * @return Greeting message","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    public static String greet() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"        String greetingMessage \u003d \"Hello! I\u0027m Scribbles :) What can I do for you?\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"        return greetingMessage;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"     * Prints the exiting message of the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"     * @return Exit message","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    public static String exit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"        String exitingMessage \u003d \"Bye! Hope to see you again soon :)\";","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"        return exitingMessage;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"     * @return List of tasks","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"    public static String listTasks() {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size(); // number of task in list currently","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        int index \u003d 1; // index of the task in list","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"        String listOfTasks \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        while (numOfTasks !\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"            listOfTasks \u003d listOfTasks + index + \". \" + taskList.get(index - 1).toString() + \"\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"            numOfTasks--;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"            index++;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"        return listOfTasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"     * Marks task in list as completed.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to mark","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"    public static void markCompleted(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"            taskList.get(index - 1).markComplete();","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"                saveFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"     * Prints message after marking task instruction is called.","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to mark","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"     * @return Message to confirm marking of a task","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"    public static String markCompleteMessage(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"            return \"Nice! I\u0027ve marked task number \" + index + \" as done: \\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"                    taskList.get(index - 1).toString() + \"\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"        } else { // message if task index does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"            return \"Uh oh! looks like that task does not exist in your list.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"                    \"You currently only have \" + numOfTasks + \" task(s) in your list.\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"     * Unmarks task in list.","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to unmark","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"    public static void markIncomplete(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"            taskList.get(index - 1).markIncomplete();","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"                saveFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"     * Prints message after unmarking task instruction is called.","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to unmark","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"     * @return Message to confirm unmarking of a task","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"    public static String markIncompleteMessage(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"            return \"Okay! I\u0027ve marked task number \" + index + \" as incomplete: \\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"                    taskList.get(index - 1).toString() + \"\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"        } else { // message if task index does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"            return \"Uh oh! looks like that task does not exist in your list.\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"                    \"You currently only have \" + numOfTasks + \" task(s) in your list.\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"     * Adds a to-do task to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"     * Prints error message if description of task is empty.","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"     * @param description Description of task","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"    public static void addTodo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! There\u0027s missing information in your instructions!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"You can try the command \\\"todo [task description]\\\" instead.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"            taskList.add(new Todo(description, false));","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"                saveFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"I\u0027ve added this to-do to your list: \");","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"            System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"     * Prints error message if there are missing information in the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"     * @param description Description of task","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"    public static void addDeadline(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"        if (description.isEmpty() || !description.contains(\" /by \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! there\u0027s missing information in your instructions!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"You can try the command \\\"deadline [task description] /by [date/time]\\\" \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"danielleloh"},"content":"                    \"instead.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"                String taskDescription \u003d description.split(\" /by\")[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"                String taskDeadlineString \u003d description.split(\" /by \")[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"                DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"                LocalDateTime taskDeadline \u003d LocalDateTime.parse(taskDeadlineString, dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"                taskList.add(new Deadline(taskDescription, false, taskDeadline));","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"                    saveFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"                } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"I\u0027ve added this deadline to your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"                System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Uh oh! there\u0027s missing information in your instructions!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"You can try the command \\\"deadline [task description] /by [date/time]\\\" \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"                        \"instead.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Uh oh! Looks like your date/time format is wrong!: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Try formatting your date/time as dd/MM/yyyy HHmm.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":205,"author":{"gitId":"danielleloh"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"danielleloh"},"content":"     * Prints errpr message if there are any missing information in the description.","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"danielleloh"},"content":"     * @param description Description of task","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"danielleloh"},"content":"    public static void addEvent(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"danielleloh"},"content":"        if (description.isEmpty() || !description.contains(\" /from \") || !description.contains(\" /to \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! there\u0027s missing information in your instructions!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":213,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"You can try the command \\\"event [task description] /from [date/time] \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"danielleloh"},"content":"                    \"/to [date/time]\\\" instead.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"danielleloh"},"content":"                String taskDescription \u003d description.split(\" /from \")[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"danielleloh"},"content":"                String taskStartString \u003d description.split(\" /from \")[1].split(\"/to \")[0].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"danielleloh"},"content":"                String taskEndString \u003d description.split(\" /to \")[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"danielleloh"},"content":"                if (!taskDescription.isEmpty() \u0026\u0026 !taskStartString.isEmpty() \u0026\u0026 !taskEndString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"danielleloh"},"content":"                    DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"danielleloh"},"content":"                    LocalDateTime taskStart \u003d LocalDateTime.parse(taskStartString, dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"danielleloh"},"content":"                    LocalDateTime taskEnd \u003d LocalDateTime.parse(taskEndString, dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"danielleloh"},"content":"                    taskList.add(new Event(taskDescription, false, taskStart, taskEnd));","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":228,"author":{"gitId":"danielleloh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":229,"author":{"gitId":"danielleloh"},"content":"                        saveFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"danielleloh"},"content":"                    } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":231,"author":{"gitId":"danielleloh"},"content":"                        System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":232,"author":{"gitId":"danielleloh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":233,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":234,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"I\u0027ve added this deadline to your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":235,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":236,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":237,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"danielleloh"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":239,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Uh oh! there\u0027s missing information in your instructions!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":240,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"You can try the command \\\"event [task description] /from [date/time] \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":241,"author":{"gitId":"danielleloh"},"content":"                            \"/to [date/time]\\\" instead.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":242,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":243,"author":{"gitId":"danielleloh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":244,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Uh oh! there\u0027s missing information in your instructions!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":245,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"You can try the command \\\"event [task description] /from [date/time] \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":246,"author":{"gitId":"danielleloh"},"content":"                        \"/to [date/time]\\\" instead.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":247,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"danielleloh"},"content":"            } catch (DateTimeParseException dateTimeException) {","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Uh oh! Looks like your date/time format is wrong!: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Try formatting your date/time as dd/MM/yyyy HHmm.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":252,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":253,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":254,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":255,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"danielleloh"},"content":"     * Deletes task at index from taskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to delete","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"danielleloh"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":261,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size(); // finds the number of tasks in list currently","lastModifiedDate":"2024-01-30"},{"lineNumber":262,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":263,"author":{"gitId":"danielleloh"},"content":"            String taskRemoved \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":264,"author":{"gitId":"danielleloh"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":265,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":266,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":267,"author":{"gitId":"danielleloh"},"content":"                saveFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":268,"author":{"gitId":"danielleloh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":269,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":270,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":271,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":272,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"I\u0027ve removed this task from your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":273,"author":{"gitId":"danielleloh"},"content":"            System.out.println(taskRemoved);","lastModifiedDate":"2024-01-30"},{"lineNumber":274,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":275,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":276,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! looks like that task does not exist in your list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":277,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"You currently only have \" + numOfTasks + \" task(s) in your list.\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":278,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":279,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":280,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":281,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":282,"author":{"gitId":"danielleloh"},"content":"     * Loads data from the file to Scribbles.","lastModifiedDate":"2024-01-30"},{"lineNumber":283,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":284,"author":{"gitId":"danielleloh"},"content":"     * @param filePath File path where tasks are stored","lastModifiedDate":"2024-01-30"},{"lineNumber":285,"author":{"gitId":"danielleloh"},"content":"     * @throws FileNotFoundException If data file does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":286,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":287,"author":{"gitId":"danielleloh"},"content":"    public static void loadFileData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2024-01-30"},{"lineNumber":288,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":289,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":290,"author":{"gitId":"danielleloh"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(f));","lastModifiedDate":"2024-01-30"},{"lineNumber":291,"author":{"gitId":"danielleloh"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":292,"author":{"gitId":"danielleloh"},"content":"            String delimiter \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2024-01-30"},{"lineNumber":293,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":294,"author":{"gitId":"danielleloh"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":295,"author":{"gitId":"danielleloh"},"content":"                String[] tokens \u003d line.split(delimiter);","lastModifiedDate":"2024-01-30"},{"lineNumber":296,"author":{"gitId":"danielleloh"},"content":"                String typeOfTask \u003d tokens[0].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":297,"author":{"gitId":"danielleloh"},"content":"                int completed \u003d Integer.parseInt(tokens[1].trim());","lastModifiedDate":"2024-01-30"},{"lineNumber":298,"author":{"gitId":"danielleloh"},"content":"                boolean isCompleted \u003d (completed \u003d\u003d 1 ? true : false);","lastModifiedDate":"2024-01-30"},{"lineNumber":299,"author":{"gitId":"danielleloh"},"content":"                String description \u003d tokens[2].trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":300,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":301,"author":{"gitId":"danielleloh"},"content":"                switch(typeOfTask){","lastModifiedDate":"2024-01-30"},{"lineNumber":302,"author":{"gitId":"danielleloh"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":303,"author":{"gitId":"danielleloh"},"content":"                        taskList.add(new Todo(description, isCompleted));","lastModifiedDate":"2024-01-30"},{"lineNumber":304,"author":{"gitId":"danielleloh"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":305,"author":{"gitId":"danielleloh"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":306,"author":{"gitId":"danielleloh"},"content":"                        String deadlineString \u003d tokens[3].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":307,"author":{"gitId":"danielleloh"},"content":"                        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":308,"author":{"gitId":"danielleloh"},"content":"                            DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":309,"author":{"gitId":"danielleloh"},"content":"                            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":310,"author":{"gitId":"danielleloh"},"content":"                            taskList.add(new Deadline(description, isCompleted, deadline));","lastModifiedDate":"2024-01-30"},{"lineNumber":311,"author":{"gitId":"danielleloh"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":312,"author":{"gitId":"danielleloh"},"content":"                            System.out.println(\"Your deadline, \\\"\" + description + \"\\\" stored in file has incorrect \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":313,"author":{"gitId":"danielleloh"},"content":"                                    \"date/time format and cannot be loaded into task list. \");","lastModifiedDate":"2024-01-31"},{"lineNumber":314,"author":{"gitId":"danielleloh"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":315,"author":{"gitId":"danielleloh"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":316,"author":{"gitId":"danielleloh"},"content":"                    case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":317,"author":{"gitId":"danielleloh"},"content":"                        String startString \u003d tokens[3].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":318,"author":{"gitId":"danielleloh"},"content":"                        String endString \u003d tokens[4].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":319,"author":{"gitId":"danielleloh"},"content":"                        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":320,"author":{"gitId":"danielleloh"},"content":"                            DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":321,"author":{"gitId":"danielleloh"},"content":"                            LocalDateTime start \u003d LocalDateTime.parse(startString,dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":322,"author":{"gitId":"danielleloh"},"content":"                            LocalDateTime end \u003d LocalDateTime.parse(endString, dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":323,"author":{"gitId":"danielleloh"},"content":"                            taskList.add(new Event(description, isCompleted, start, end));","lastModifiedDate":"2024-01-30"},{"lineNumber":324,"author":{"gitId":"danielleloh"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":325,"author":{"gitId":"danielleloh"},"content":"                            System.out.println(\"Your event, \\\"\" + description + \"\\\" stored in file has incorrect \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":326,"author":{"gitId":"danielleloh"},"content":"                                    \"date/time format and cannot be loaded into task list. \");","lastModifiedDate":"2024-01-31"},{"lineNumber":327,"author":{"gitId":"danielleloh"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":328,"author":{"gitId":"danielleloh"},"content":"                        break;","lastModifiedDate":"2024-01-30"},{"lineNumber":329,"author":{"gitId":"danielleloh"},"content":"                    default:","lastModifiedDate":"2024-01-30"},{"lineNumber":330,"author":{"gitId":"danielleloh"},"content":"                        System.out.println(\"Invalid task type \\\"\" + typeOfTask + \"\\\" was found in file.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":331,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":332,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":333,"author":{"gitId":"danielleloh"},"content":"                line \u003d reader.readLine(); // read the next line","lastModifiedDate":"2024-01-30"},{"lineNumber":334,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":335,"author":{"gitId":"danielleloh"},"content":"            reader.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":336,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":337,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":338,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":339,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! looks like the data in your file is corrupted and cannot be read! \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":340,"author":{"gitId":"danielleloh"},"content":"                    \"Please verify data in the file to proceed. Proceeding without verification may cause \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":341,"author":{"gitId":"danielleloh"},"content":"                    \"current data to disappear. \\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":342,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":343,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":344,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":345,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":346,"author":{"gitId":"danielleloh"},"content":"     * Edits data in the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":347,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":348,"author":{"gitId":"danielleloh"},"content":"     * @param filePath File path where tasks are stored","lastModifiedDate":"2024-01-30"},{"lineNumber":349,"author":{"gitId":"danielleloh"},"content":"     * @throws FileNotFoundException If data file does not exist","lastModifiedDate":"2024-01-30"},{"lineNumber":350,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":351,"author":{"gitId":"danielleloh"},"content":"    public static void saveFileData(String filePath) throws FileNotFoundException {","lastModifiedDate":"2024-01-30"},{"lineNumber":352,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":353,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":354,"author":{"gitId":"danielleloh"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-01-30"},{"lineNumber":355,"author":{"gitId":"danielleloh"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":356,"author":{"gitId":"danielleloh"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":357,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":358,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"T | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription());","lastModifiedDate":"2024-01-30"},{"lineNumber":359,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":360,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":361,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"D | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription() +","lastModifiedDate":"2024-01-30"},{"lineNumber":362,"author":{"gitId":"danielleloh"},"content":"                            \" | \" + ((Deadline) task).getByString());","lastModifiedDate":"2024-01-31"},{"lineNumber":363,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":364,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":365,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"E | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription() +","lastModifiedDate":"2024-01-30"},{"lineNumber":366,"author":{"gitId":"danielleloh"},"content":"                            \" | \" + ((Event) task).getStartString() + \" | \" + ((Event) task).getEndString());","lastModifiedDate":"2024-01-31"},{"lineNumber":367,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":368,"author":{"gitId":"danielleloh"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":369,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":370,"author":{"gitId":"danielleloh"},"content":"            writer.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":371,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":372,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":373,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":374,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":375,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":376,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":377,"author":{"gitId":"danielleloh"},"content":"     * Prints the error message for invalid inputs into chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":378,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":379,"author":{"gitId":"danielleloh"},"content":"     * @return Error message","lastModifiedDate":"2024-01-30"},{"lineNumber":380,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":381,"author":{"gitId":"danielleloh"},"content":"    public static String inputErrorMessage() {","lastModifiedDate":"2024-01-30"},{"lineNumber":382,"author":{"gitId":"danielleloh"},"content":"       String errorMessage \u003d \"Sorry, Scribbles was unable to understand your instructions :(\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":383,"author":{"gitId":"danielleloh"},"content":"               \"Try formatting your instructions as follows: \\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":384,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"list\\\" to view your current list of tasks\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":385,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"mark [index]\\\" to mark task at index as completed\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":386,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"unmark [index]\\\" to mark task at index as incomplete\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":387,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"todo [task]\\\" to insert to-do task into your list\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":388,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"deadline [task] /by [date]\\\" to insert task into your list with deadline as date\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":389,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"event [task] /from [start] to [end]\\\" \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":390,"author":{"gitId":"danielleloh"},"content":"               \"to insert task into your list with a start and end duration\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":391,"author":{"gitId":"danielleloh"},"content":"               \"- type \\\"delete [index]\\\" to remove a task at index from your list\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":392,"author":{"gitId":"danielleloh"},"content":"               \"Please try again :)\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":393,"author":{"gitId":"danielleloh"},"content":"       return errorMessage;","lastModifiedDate":"2024-01-30"},{"lineNumber":394,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":395,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":396,"author":{"gitId":"danielleloh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":397,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":398,"author":{"gitId":"danielleloh"},"content":"        // check if directory exists","lastModifiedDate":"2024-01-31"},{"lineNumber":399,"author":{"gitId":"danielleloh"},"content":"        File directory \u003d new File(\"src/main/java/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":400,"author":{"gitId":"danielleloh"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":401,"author":{"gitId":"danielleloh"},"content":"            boolean directoryCreated \u003d directory.mkdir();","lastModifiedDate":"2024-01-31"},{"lineNumber":402,"author":{"gitId":"danielleloh"},"content":"            if (directoryCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":403,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Directory for taskData.txt has been created.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":404,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":405,"author":{"gitId":"danielleloh"},"content":"            if (!directoryCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":406,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Directory for taskData.txt could not be created.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":407,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":408,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":409,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":410,"author":{"gitId":"danielleloh"},"content":"        // check if file exists","lastModifiedDate":"2024-01-31"},{"lineNumber":411,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":412,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":413,"author":{"gitId":"danielleloh"},"content":"            File file \u003d new File(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":414,"author":{"gitId":"danielleloh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":415,"author":{"gitId":"danielleloh"},"content":"                boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":416,"author":{"gitId":"danielleloh"},"content":"                if (fileCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":417,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"A new file, taskData.txt has been created.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":418,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":419,"author":{"gitId":"danielleloh"},"content":"                if (!fileCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":420,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"A new file, taskData.txt could not be created.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":421,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":422,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":423,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":424,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":425,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":426,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":427,"author":{"gitId":"danielleloh"},"content":"        // read data stored in hard disk","lastModifiedDate":"2024-01-30"},{"lineNumber":428,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":429,"author":{"gitId":"danielleloh"},"content":"            loadFileData(\"src/main/java/taskData.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":430,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2024-01-30"},{"lineNumber":431,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":432,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":433,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":434,"author":{"gitId":"danielleloh"},"content":"        Scanner sc \u003d new Scanner(System.in); // scanner for user input","lastModifiedDate":"2024-01-30"},{"lineNumber":435,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":436,"author":{"gitId":"danielleloh"},"content":"        System.out.println((greet()));","lastModifiedDate":"2024-01-30"},{"lineNumber":437,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":438,"author":{"gitId":"danielleloh"},"content":"        String input \u003d sc.nextLine(); // takes in input from user","lastModifiedDate":"2024-01-30"},{"lineNumber":439,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":440,"author":{"gitId":"danielleloh"},"content":"        while (!(input.equals(\"bye\"))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":441,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":442,"author":{"gitId":"danielleloh"},"content":"            if (input.equals(\"list\")) { // user inputs \"list\"","lastModifiedDate":"2024-01-30"},{"lineNumber":443,"author":{"gitId":"danielleloh"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":444,"author":{"gitId":"danielleloh"},"content":"                System.out.println(listTasks());","lastModifiedDate":"2024-01-30"},{"lineNumber":445,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":446,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":447,"author":{"gitId":"danielleloh"},"content":"            } else if (input.startsWith(\"mark \")) { // user inputs \"mark...\" to mark task in list","lastModifiedDate":"2024-01-30"},{"lineNumber":448,"author":{"gitId":"danielleloh"},"content":"                int index \u003d Integer.parseInt(input.substring(5)); // get the index to mark","lastModifiedDate":"2024-01-30"},{"lineNumber":449,"author":{"gitId":"danielleloh"},"content":"                markCompleted(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":450,"author":{"gitId":"danielleloh"},"content":"                System.out.println(markCompleteMessage(index));","lastModifiedDate":"2024-01-30"},{"lineNumber":451,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":452,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":453,"author":{"gitId":"danielleloh"},"content":"            } else if (input.startsWith(\"unmark \")) { // user inputs \"unmark...\" to unmark task in list","lastModifiedDate":"2024-01-30"},{"lineNumber":454,"author":{"gitId":"danielleloh"},"content":"                int index \u003d Integer.parseInt(input.substring(7)); // get the task number to unmark","lastModifiedDate":"2024-01-30"},{"lineNumber":455,"author":{"gitId":"danielleloh"},"content":"                markIncomplete(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":456,"author":{"gitId":"danielleloh"},"content":"                System.out.println(markIncompleteMessage(index));","lastModifiedDate":"2024-01-30"},{"lineNumber":457,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":458,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":459,"author":{"gitId":"danielleloh"},"content":"            } else if (input.startsWith(\"todo \")) { // adds a to-do task to the list","lastModifiedDate":"2024-01-30"},{"lineNumber":460,"author":{"gitId":"danielleloh"},"content":"                String description \u003d input.substring(5);","lastModifiedDate":"2024-01-30"},{"lineNumber":461,"author":{"gitId":"danielleloh"},"content":"                addTodo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":462,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":463,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":464,"author":{"gitId":"danielleloh"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":465,"author":{"gitId":"danielleloh"},"content":"                String description \u003d input.substring(9);","lastModifiedDate":"2024-01-30"},{"lineNumber":466,"author":{"gitId":"danielleloh"},"content":"                addDeadline(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":467,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":468,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":469,"author":{"gitId":"danielleloh"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":470,"author":{"gitId":"danielleloh"},"content":"                String description \u003d input.substring(6);","lastModifiedDate":"2024-01-30"},{"lineNumber":471,"author":{"gitId":"danielleloh"},"content":"                addEvent(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":472,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":473,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":474,"author":{"gitId":"danielleloh"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":475,"author":{"gitId":"danielleloh"},"content":"                int taskNumber \u003d Integer.parseInt(input.substring(7)); // get the task number to remove","lastModifiedDate":"2024-01-30"},{"lineNumber":476,"author":{"gitId":"danielleloh"},"content":"                deleteTask(taskNumber);","lastModifiedDate":"2024-01-30"},{"lineNumber":477,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":478,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":479,"author":{"gitId":"danielleloh"},"content":"            } else { // invalid inputs","lastModifiedDate":"2024-01-30"},{"lineNumber":480,"author":{"gitId":"danielleloh"},"content":"                System.out.println(inputErrorMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":481,"author":{"gitId":"danielleloh"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":482,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":483,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":484,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":485,"author":{"gitId":"danielleloh"},"content":"        System.out.println(exit()); // exits when user inputs bye","lastModifiedDate":"2024-01-30"},{"lineNumber":486,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":487,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":487}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"    protected String description; // task description","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"    protected boolean completed; // true is task is completed","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"    public Task(String description, boolean completed) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"        return this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"        return this.completed;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    public void markComplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"        if (this.completed) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        return \"[ ] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"    public Todo(String description, boolean completed) {","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"        super(description, completed);","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"danielleloh":14}}]
