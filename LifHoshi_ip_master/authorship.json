[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"LifHoshi":6}},{"path":"src/main/java/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" * This class is used to add a task to the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    private Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"        ui.addMessage(task, tasks.taskSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":23}},{"path":"src/main/java/Command/BlahCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" * This class is used to respond to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"public class BlahCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"        ui.respondBlah();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":18}},{"path":"src/main/java/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create a command","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    public abstract TaskList perform(TaskList tasks, UI ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    public boolean isRunning() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"        return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":16}},{"path":"src/main/java/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" * This class is used to delete a task from the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    private int idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"            Task deletedTask \u003d tasks.deleteTask(this.idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"            ui.deleteTaskMessage(this.idx, deletedTask, tasks.taskSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Incorrect number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":27}},{"path":"src/main/java/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":" * This class is used to exit the program","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"        ui.goodBye();","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    public boolean isRunning() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":24}},{"path":"src/main/java/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" * This class is used to find the tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"        ui.findTaskMessage(tasks.findTasks(keyword));","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"LifHoshi":23}},{"path":"src/main/java/Command/HiCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" * This class is used to respond to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"public class HiCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"        ui.hiMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":18}},{"path":"src/main/java/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" * This class is used to list the tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"        ui.showList(tasks.allTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":16}},{"path":"src/main/java/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" * This class is used to mark a task as done","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    private int idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    public MarkCommand(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"            Task task \u003d tasks.getTask(this.idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"            task.markDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"            ui.markTaskMessage(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Invalid number in the list\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":27}},{"path":"src/main/java/Command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import Ping.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import Ping.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Ping.UI;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" * This class is used to unmark a task","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    private int idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    public UnMarkCommand(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    public TaskList perform(TaskList tasks, UI ui) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"            Task task \u003d tasks.getTask(this.idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"            task.unMarkDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"            ui.markTaskMessage(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Invalid number\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":28}},{"path":"src/main/java/Ping/DateTimeCheck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" * This class is used to check the format of the date and time input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":" * and compare the time to ensure that the start time is not greater than the end time","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"public class DateTimeCheck {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to check the format of the date input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"     * @param s the date input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"     * @return the date in the format of LocalDate","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"    public static LocalDate timeCheckOnDate(String s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"        DateTimeFormatter formatterDate \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"            return LocalDate.parse(s, formatterDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Invalid date format. Check whether it is format dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to check the format of the time input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"     * @param s the time input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"     * @return the time in the format of LocalDateTime","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"    public static LocalDateTime timeCheckOnTime(String s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"        DateTimeFormatter formatterDateTime \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"LifHoshi"},"content":"            return LocalDateTime.parse(s, formatterDateTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LifHoshi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Invalid date format. Check whether it is format dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"LifHoshi"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to compare the time to ensure that the start time is not greater than the end time","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"LifHoshi"},"content":"     * @param time1 the start time","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"LifHoshi"},"content":"     * @param time2 the end time","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"LifHoshi"},"content":"     * @return true if the start time is not greater than the end time, otherwise return false","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"LifHoshi"},"content":"    public static boolean timeCompare(LocalDateTime time1, LocalDateTime time2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"LifHoshi"},"content":"        if (time1.isAfter(time2)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"from time cannot larger than to time\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"LifHoshi"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"LifHoshi"},"content":"        } else if (time1.isEqual(time2)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Two time can not be equal\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"LifHoshi"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"LifHoshi"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"LifHoshi"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"LifHoshi":63}},{"path":"src/main/java/Ping/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"//// Solution below adapted by week2 iP Level-3 Partial solution","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create a deadline task","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"     * This is the constructor of the Deadline class","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"     * @param destription the description of the deadline task","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"     * @param by the date of the deadline task","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    public Deadline(String destription, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"        super(destription);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LifHoshi":25}},{"path":"src/main/java/Ping/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"//// Solution below adapted by week2 iP Level-3 Partial solution","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create an event task","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"     * This is the constructor of the Event class","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"     * @param destription the description of the event task","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"     * @param from the start time of the event task","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"     * @param to the end time of the event task","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    public Event(String destription, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"        super(destription);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \"to: \" + this.to + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LifHoshi":28}},{"path":"src/main/java/Ping/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"import Command.AddCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"import Command.BlahCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"import Command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"import Command.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"import Command.ExitCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"import Command.FindCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"import Command.HiCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"import Command.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"import Command.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"import Command.UnMarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":" * This class is used to parse the command input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"    * This method is used to parse the command input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"     * @param input the command input by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"     * @return the command object","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"        String[] restCommands \u003d input.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"        String command \u003d restCommands[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"        switch (command.toLowerCase()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"        case \"hi\":","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"            return new HiCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"        case \"blah\":","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"            return new BlahCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"            return parseMark(restCommands);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LifHoshi"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LifHoshi"},"content":"            return parseUnMark(restCommands);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LifHoshi"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LifHoshi"},"content":"            return parseTodo(restCommands);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LifHoshi"},"content":"        case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LifHoshi"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LifHoshi"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LifHoshi"},"content":"            return parseDelete(restCommands);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LifHoshi"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LifHoshi"},"content":"            return parseDeadline(restCommands);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LifHoshi"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LifHoshi"},"content":"            return parseEvent(restCommands);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LifHoshi"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"LifHoshi"},"content":"            return parseFind(restCommands);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"LifHoshi"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Pleas fill in the valid command\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"LifHoshi"},"content":"                    + \"Valid commands are: bye, list, blah, todo, event, deadline, mark, unmark, delete, hi\");","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseMark(String[] restCommands) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LifHoshi"},"content":"            int i \u003d Integer.parseInt(restCommands[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LifHoshi"},"content":"            return new MarkCommand(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Make sure you follow the right format of mark \u003cnumber\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseUnMark(String[] restCommands) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LifHoshi"},"content":"            int i \u003d Integer.parseInt(restCommands[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LifHoshi"},"content":"            return new UnMarkCommand(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Make sure you follow the right format of unmark \u003cnumber\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseTodo(String[] todoCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"LifHoshi"},"content":"        String rest \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"LifHoshi"},"content":"            for (int i \u003d 1; i \u003c todoCommand.length; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"LifHoshi"},"content":"                rest \u003d rest + todoCommand[i] + \" \";","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"LifHoshi"},"content":"            Todo j \u003d new Todo(rest);","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"LifHoshi"},"content":"            if (!rest.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"LifHoshi"},"content":"                return new AddCommand(j);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"LifHoshi"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"LifHoshi"},"content":"                System.out.println(\"Todo what? you can\u0027t to do nothing right?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Make sure you follow the right format of todo \u003cThings you want to add\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseDelete(String[] delCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"LifHoshi"},"content":"            int i \u003d Integer.parseInt(delCommand[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"LifHoshi"},"content":"            return new DeleteCommand(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Incorrect number or command\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseDeadline(String[] dlCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"LifHoshi"},"content":"        StringBuilder rest \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"LifHoshi"},"content":"        StringBuilder date \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"LifHoshi"},"content":"            int idx \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"LifHoshi"},"content":"            for (int i \u003d 1; i \u003c dlCommand.length; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"LifHoshi"},"content":"                if (dlCommand[i].equals(\"/by\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"LifHoshi"},"content":"                    idx \u003d i;","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"LifHoshi"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"LifHoshi"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"LifHoshi"},"content":"                    rest.append(dlCommand[i]).append(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"LifHoshi"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"LifHoshi"},"content":"            // Check for weekdays or month","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"LifHoshi"},"content":"            int check \u003d idx + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"LifHoshi"},"content":"            for (int j \u003d idx + 1; j \u003c dlCommand.length; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"LifHoshi"},"content":"                if (check !\u003d dlCommand.length - 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"LifHoshi"},"content":"                    date.append(dlCommand[j]).append(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"LifHoshi"},"content":"                    check++;","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"LifHoshi"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"LifHoshi"},"content":"                    date.append(dlCommand[j]);","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"LifHoshi"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"LifHoshi"},"content":"            LocalDate dt \u003d DateTimeCheck.timeCheckOnDate(date.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"LifHoshi"},"content":"            Deadline dl \u003d new Deadline(rest.toString(), dt);","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"LifHoshi"},"content":"            if (rest.length() \u003e 0 \u0026\u0026 dt !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"LifHoshi"},"content":"                return new AddCommand(dl);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"LifHoshi"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"LifHoshi"},"content":"                System.out.println(\"Did you type right?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Incorrect number or command\");","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseEvent(String[] evCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"LifHoshi"},"content":"        StringBuilder rest \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"LifHoshi"},"content":"        StringBuilder date1 \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"LifHoshi"},"content":"        StringBuilder date2 \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"LifHoshi"},"content":"            int idx \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"LifHoshi"},"content":"            for (int i \u003d 1; i \u003c evCommand.length; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"LifHoshi"},"content":"                if (evCommand[i].equals(\"/from\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"LifHoshi"},"content":"                    idx \u003d i;","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"LifHoshi"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"LifHoshi"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"LifHoshi"},"content":"                    rest.append(evCommand[i]).append(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"LifHoshi"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"LifHoshi"},"content":"            int idx2 \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"LifHoshi"},"content":"            for (int j \u003d idx + 1; j \u003c evCommand.length; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"LifHoshi"},"content":"                if (evCommand[j].equals(\"/to\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"LifHoshi"},"content":"                    idx2 \u003d j;","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"LifHoshi"},"content":"                    break;","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"LifHoshi"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"LifHoshi"},"content":"                    date1.append(evCommand[j]).append(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"LifHoshi"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"LifHoshi"},"content":"            int check \u003d idx2 + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"LifHoshi"},"content":"            for (int k \u003d idx2 + 1; k \u003c evCommand.length; k++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"LifHoshi"},"content":"                if (check !\u003d evCommand.length - 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"LifHoshi"},"content":"                    date2.append(evCommand[k]).append(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"LifHoshi"},"content":"                    check++;","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"LifHoshi"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"LifHoshi"},"content":"                    date2.append(evCommand[k]);","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"LifHoshi"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"LifHoshi"},"content":"            LocalDateTime dt1 \u003d DateTimeCheck.timeCheckOnTime(date1.toString().stripTrailing());","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"LifHoshi"},"content":"            LocalDateTime dt2 \u003d DateTimeCheck.timeCheckOnTime(date2.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"LifHoshi"},"content":"            boolean compareOfTime \u003d DateTimeCheck.timeCompare(dt1, dt2);","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"LifHoshi"},"content":"            Event e \u003d new Event(rest.toString(), dt1, dt2);","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"LifHoshi"},"content":"            if ((rest.length() \u003e 0) \u0026\u0026 dt1 !\u003d null \u0026\u0026 dt2 !\u003d null \u0026\u0026 compareOfTime) {","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"LifHoshi"},"content":"                return new AddCommand(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"LifHoshi"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"LifHoshi"},"content":"                System.out.println(\"Did you type right?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Incorrect number or command\");","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"LifHoshi"},"content":"    // This function after prCommand[0] is the string that need to be found in ArrayList\u003cTask\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"LifHoshi"},"content":"    // After matching, it will return the list of tasks that contain the string ","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"LifHoshi"},"content":"    private static Command parseFind(String[] prCommand) {","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"LifHoshi"},"content":"        StringBuilder rest \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"LifHoshi"},"content":"            for (int i \u003d 1; i \u003c prCommand.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"LifHoshi"},"content":"                rest.append(prCommand[i]).append(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"LifHoshi"},"content":"            return new FindCommand(rest.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Incorrect number or command\");","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"LifHoshi"},"content":"        return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":205}},{"path":"src/main/java/Ping/Ping.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import Command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":" * This class is used to run the program","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"public class Ping {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    private UI ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"     * This is the constructor of the Ping class","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    public Ping() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to run the program","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Storage.loadFiles();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"        TaskList tasks1 \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"        ui.welcome();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"        boolean isRun \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"        while (isRun) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"                String lines \u003d ui.readLines();","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"                Command cmd \u003d Parser.parseCommand(lines);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"                assert cmd !\u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"                cmd.perform(tasks1, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"                isRun \u003d cmd.isRunning();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LifHoshi"},"content":"                System.out.println(\"Try again\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LifHoshi"},"content":"            Storage.saveFiles(tasks1.allTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LifHoshi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LifHoshi"},"content":"        new Ping().run();","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":47}},{"path":"src/main/java/Ping/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"import java.io.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":" * This class is used to save and load the file","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"@SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    private static final String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to save the file","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    public static void saveFiles(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"            File file \u003d new File(PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"            File dir \u003d new File(\"./data\");","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"                dir.mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"            FileOutputStream fout \u003d new FileOutputStream(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"            ObjectOutputStream oot \u003d new ObjectOutputStream(fout);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"            oot.writeObject(tasks);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"            oot.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"            fout.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Oops! Something goes wrong!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to load the file","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"LifHoshi"},"content":"     * @return the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"LifHoshi"},"content":"    public static ArrayList\u003cTask\u003e loadFiles() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"LifHoshi"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"LifHoshi"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"LifHoshi"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"LifHoshi"},"content":"            return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"LifHoshi"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"LifHoshi"},"content":"            FileInputStream inputStream \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"LifHoshi"},"content":"            ObjectInputStream objInputStream \u003d new ObjectInputStream(inputStream);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"LifHoshi"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) objInputStream.readObject();","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"LifHoshi"},"content":"            objInputStream.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"LifHoshi"},"content":"            inputStream.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"LifHoshi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"----------------------------------------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"No existing file found\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"LifHoshi"},"content":"                    + \"Dont\u0027worry, I already creat an empty list for you\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"LifHoshi"},"content":"                    + \"ChatBot Ping now could be used!\"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"LifHoshi"},"content":"            );","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"----------------------------------------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"LifHoshi":65}},{"path":"src/main/java/Ping/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"// Solution below adapted by week2 iP Level-3 Partial solution","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create a task","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"     * This is the constructor of the Task class","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"    public void unMarkDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"            return \"[ ] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LifHoshi":35}},{"path":"src/main/java/Ping/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create a list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"        return tasks.get(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    public int taskSize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"        return tasks.remove(idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"    public boolean emptyCheck() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"    public ArrayList\u003cTask\u003e allTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to find tasks that contain the keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"LifHoshi"},"content":"     * @param keyword the keyword to search for","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"LifHoshi"},"content":"     * @return an ArrayList of tasks that contain the keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"LifHoshi"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"LifHoshi"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"LifHoshi"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"LifHoshi"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"LifHoshi"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"LifHoshi"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":51}},{"path":"src/main/java/Ping/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"//// Solution below adapted by week2 iP Level-3 Partial solution","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create a todo task","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LifHoshi":16}},{"path":"src/main/java/Ping/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":" * This class is used to create a user interface","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"public class UI {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"    public UI() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    public String readLines() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to print the welcome message","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"    public void welcome() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"----------------------------------------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Hello! I\u0027m Ping\" + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"----------------------------------------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"LifHoshi"},"content":"    public void goodBye() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LifHoshi"},"content":"    public void respondBlah() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"haha, that\u0027s humorous\");","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LifHoshi"},"content":"    public void exceptionMessage() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Incorrect number or command\");","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LifHoshi"},"content":"    public void hiMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Hi, there\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LifHoshi"},"content":"     * This function below used for event and deadline command","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LifHoshi"},"content":"    public void addMessage(Task task, int numOfWork) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LifHoshi"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\" + \"%n\", numOfWork);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"LifHoshi"},"content":"     * This function below used for todo command","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"LifHoshi"},"content":"    public void deleteTaskMessage(int i, Task task, int numOfWork) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LifHoshi"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\" + \"%n\", numOfWork);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to show the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"LifHoshi"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"LifHoshi"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"LifHoshi"},"content":"    public void showList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LifHoshi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"No task added yet\");","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LifHoshi"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LifHoshi"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"LifHoshi"},"content":"                int idx \u003d i + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"LifHoshi"},"content":"                if (tasks.get(i).isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"LifHoshi"},"content":"                    System.out.printf(\"%d.\" + tasks.get((i)).toString() + \"%n\", idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"LifHoshi"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"LifHoshi"},"content":"                    System.out.printf(\"%d.\" + tasks.get(i).toString() + \"%n\", idx);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"LifHoshi"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to mark the task as done","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"LifHoshi"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"LifHoshi"},"content":"     * @param t the task","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"LifHoshi"},"content":"    public void markTaskMessage(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to unmark the task as not done","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"LifHoshi"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"LifHoshi"},"content":"     * @param t the task","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"LifHoshi"},"content":"    public void unmarkTaskMessage(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"LifHoshi"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"LifHoshi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"LifHoshi"},"content":"     * This method is used to find the task","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"LifHoshi"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"LifHoshi"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"LifHoshi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"LifHoshi"},"content":"    public void findTaskMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"LifHoshi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"No matching task found\");","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"LifHoshi"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"LifHoshi"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"LifHoshi"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"LifHoshi"},"content":"                int idx \u003d i + 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"LifHoshi"},"content":"                System.out.printf(\"%d.\" + tasks.get(i).toString() + \"%n\", idx);","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"LifHoshi"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"LifHoshi"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LifHoshi":121}},{"path":"src/test/java/Ping/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"    public void todoCommand_ShouldHaveCorrectForamt() {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"        LocalDate dt \u003d DateTimeCheck.timeCheckOnDate(\"09/04/2023\");","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"        Deadline dl \u003d new Deadline(\"Eat Apple \", dt);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"        assertEquals(\"Eat Apple \", dl.description);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"        assertEquals(LocalDate.of(2023,4,9), dl.by);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"    public void String_ShouldBeCorrect() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"        LocalDate dt \u003d DateTimeCheck.timeCheckOnDate(\"09/04/2023\");","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"        Deadline dl \u003d new Deadline(\"Eat Apple\", dt);","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"        String correct \u003d \"[D][ ] Eat Apple(by: 2023-04-09)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"LifHoshi"},"content":"        assertEquals(correct, dl.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"LifHoshi":23}},{"path":"src/test/java/Ping/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"package Ping;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"    public void todoCommand_ShouldHaveCorrectFormat() {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"        Todo todo \u003d new Todo(\"shower\");","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"        assertEquals(\"shower\", todo.description);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"LifHoshi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"LifHoshi"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"LifHoshi"},"content":"    public void String_ShouldBeCorrect() {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"LifHoshi"},"content":"        Todo todo \u003d new Todo(\"shower\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"LifHoshi"},"content":"        String correctAnswer \u003d \"[T][ ] shower\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"LifHoshi"},"content":"        assertEquals(correctAnswer, todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"LifHoshi"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"LifHoshi":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LifHoshi"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"LifHoshi"},"content":"blah","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"LifHoshi"},"content":"read book","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"LifHoshi"},"content":"return book","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"LifHoshi"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"LifHoshi"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LifHoshi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LifHoshi"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LifHoshi"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LifHoshi"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LifHoshi":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LifHoshi"},"content":"java -classpath ..\\bin Ping\u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"LifHoshi":1}}]
