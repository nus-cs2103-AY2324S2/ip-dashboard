[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"java {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"    sourceCompatibility \u003d \"1.11\"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"    targetCompatibility \u003d \"1.11\"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"    mainClass.set(\"duke.Main\")","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minreiseah":6,"-":41}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"import duke.command.CommandParser;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"import duke.command.CommandType;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"import duke.commons.utils.DateUtils;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"import duke.storage.PersistentStorageHandler;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"import duke.ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":" * The main entry point for the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":" * This class handles the initialization and main execution loop of the application,","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":" * including loading tasks from disk, processing user commands, and exiting the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"public class Main {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"    private static PersistentStorageHandler persistentStorageHandler \u003d new PersistentStorageHandler();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"    /** ","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"     * Processes and responds to user commands until exit is requested.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"     * @param args Command line arguments (not used)","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printWelcome();","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"            if (persistentStorageHandler.ensureTaskFileExists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"                taskList \u003d persistentStorageHandler.readTaskFileFromDisc();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"                int numTasks \u003d taskList.getNumberTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"                UserInterface.print(\"Read existing tasks (\" + numTasks + \") from disc\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"            UserInterface.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"                String userInput \u003d UserInterface.getUserInput();","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"                CommandType commandType \u003d CommandParser.parseCommand(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"                switch (commandType) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"                case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"                    handleList();","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"                case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"                    handleMark(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"                    handleUnmark(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"                case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"                    handleDelete(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"                case FIND:","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"                    handleFind(userInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"minreiseah"},"content":"                case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"minreiseah"},"content":"                    handleToDo(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"minreiseah"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"minreiseah"},"content":"                    handleDeadline(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"minreiseah"},"content":"                case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"minreiseah"},"content":"                    handleEvent(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"minreiseah"},"content":"                case BYE:","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"minreiseah"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"minreiseah"},"content":"                default:","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"minreiseah"},"content":"                    throw new DukeException(\"Invalid Command\" + commandType);","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"minreiseah"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"minreiseah"},"content":"                persistentStorageHandler.writeTaskFileToDisc(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"minreiseah"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"minreiseah"},"content":"                UserInterface.showError(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printExit();","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"minreiseah"},"content":"        return;","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"minreiseah"},"content":"    /** ","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"minreiseah"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If an error during task listing.","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"minreiseah"},"content":"    private static void handleList() throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"minreiseah"},"content":"        taskList.printTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"minreiseah"},"content":"    /** ","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"minreiseah"},"content":"     * Marks a specified task as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the index of the task to mark as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"minreiseah"},"content":"    private static void handleMark(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"minreiseah"},"content":"        int idx \u003d CommandParser.parseTaskIndex(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"minreiseah"},"content":"        String response \u003d taskList.markTaskDone(idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"minreiseah"},"content":"        UserInterface.print(response);","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"minreiseah"},"content":"    /** ","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"minreiseah"},"content":"     * Marks a specified task as not done.","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the index of the task to mark as not done.","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"minreiseah"},"content":"    private static void handleUnmark(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"minreiseah"},"content":"        int idx \u003d CommandParser.parseTaskIndex(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"minreiseah"},"content":"        String response \u003d taskList.markTaskUndone(idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"minreiseah"},"content":"        UserInterface.print(response);","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"minreiseah"},"content":"    /** ","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"minreiseah"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the index of the task to delete.","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the task index is invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"minreiseah"},"content":"    private static void handleDelete(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"minreiseah"},"content":"        int idx \u003d CommandParser.parseTaskIndex(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"minreiseah"},"content":"        String response \u003d taskList.deleteTask(idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"minreiseah"},"content":"        int totalTasks \u003d taskList.getNumberTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printTaskDeleted(response, totalTasks);","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"minreiseah"},"content":"    private static void handleFind(String userInput) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"minreiseah"},"content":"        String[] keywords \u003d CommandParser.parseFind(userInput);","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"minreiseah"},"content":"        ArrayList\u003cInteger\u003e taskIndices \u003d taskList.findTasksByKeywordsMatching(keywords);","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"minreiseah"},"content":"        ArrayList\u003cString\u003e response \u003d taskList.getTaskRepresentationsByIndices(taskIndices);","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printTasksByIndices(response);","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":163,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":164,"author":{"gitId":"minreiseah"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":165,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the description of the ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the description is invalid or other errors occur.","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"minreiseah"},"content":"    private static void handleToDo(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"minreiseah"},"content":"        String description \u003d CommandParser.parseToDo(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"minreiseah"},"content":"        String response \u003d taskList.addTask(new ToDo(description));","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"minreiseah"},"content":"        int totalTasks \u003d taskList.getNumberTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printTaskAdded(response, totalTasks);","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"minreiseah"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":178,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the description of the Deadline task.","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the description is invalid or other errors occur.","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":182,"author":{"gitId":"minreiseah"},"content":"    private static void handleDeadline(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"minreiseah"},"content":"        String[] deadlineDetails \u003d CommandParser.parseDeadline(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"minreiseah"},"content":"        String description \u003d deadlineDetails[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"minreiseah"},"content":"        LocalDate due \u003d DateUtils.parseDateString(deadlineDetails[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":186,"author":{"gitId":"minreiseah"},"content":"        String response \u003d taskList.addTask(new Deadline(description, due));","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"minreiseah"},"content":"        int totalTasks \u003d taskList.getNumberTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printTaskAdded(response, totalTasks);","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"minreiseah"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the description of the Event task.","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the description is invalid or other errors occur.","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"minreiseah"},"content":"    private static void handleEvent(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"minreiseah"},"content":"        String[] eventDetails \u003d CommandParser.parseEvent(userInput);","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"minreiseah"},"content":"        String description \u003d eventDetails[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"minreiseah"},"content":"        LocalDate start \u003d DateUtils.parseDateString(eventDetails[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"minreiseah"},"content":"        LocalDate end \u003d DateUtils.parseDateString(eventDetails[2]);","lastModifiedDate":"2024-02-22"},{"lineNumber":202,"author":{"gitId":"minreiseah"},"content":"        String response \u003d taskList.addTask(new Event(description, start, end));","lastModifiedDate":"2024-01-26"},{"lineNumber":203,"author":{"gitId":"minreiseah"},"content":"        int totalTasks \u003d taskList.getNumberTasks();","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"minreiseah"},"content":"        UserInterface.printTaskAdded(response, totalTasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":205,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"minreiseah":206}},{"path":"src/main/java/duke/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":" * Parses user input into commands and arguments.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":" * Facilitates the interpretation of user input, converting strings into","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":" * actionable commands and parameters.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":" * Includes methods for parsing different aspects of tasks such as indices and","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":" * descriptions, ensuring inputs are correctly formatted before processing.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"public class CommandParser {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"     * Parses the user input to determine the command type.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The complete user input string.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"     * @return The CommandType corresponding to the user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the command is not recognized.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"    public static CommandType parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"            return CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Invalid Command: \" + command);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"     * Extracts the task index from the user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the task index.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"     * @return The index of the task in the task list (0-based).","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the task index is not provided, is not an integer,","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"     *                       or is out of bounds.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"    public static int parseTaskIndex(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"            int idx \u003d Integer.parseInt(splitInput[1]) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"            if (idx \u003c 0) {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"                throw new DukeException(\"Invalid task Index\" + splitInput[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"            return idx;","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Please provide a task index\");","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Invalid task index: \" + splitInput[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"     * @param userInput","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"     * @return String[] Array of keywords to search for in task list","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If keywords not provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"    public static String[] parseFind(String userInput) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"            String[] keywords \u003d Arrays.copyOfRange(splitInput, 1, splitInput.length);","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"            return keywords;","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Please provide keyword(s) to search for\");","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"        } ","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"minreiseah"},"content":"     * Extracts the description for a ToDo task from the user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the description of the ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"minreiseah"},"content":"     * @return The description of the ToDo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the description is not provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"minreiseah"},"content":"    public static String parseToDo(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"minreiseah"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"minreiseah"},"content":"            String description \u003d splitInput[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"minreiseah"},"content":"            return description;","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"minreiseah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Valid format: todo [description]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"minreiseah"},"content":"     * Extracts the details (description and due date) for a Deadline task from the","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"minreiseah"},"content":"     * user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the details of the Deadline task.","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"minreiseah"},"content":"     * @return An array where the first element is the description and the second","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"minreiseah"},"content":"     *         element is the due date of the Deadline task.","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the input format is incorrect or if the details are","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"minreiseah"},"content":"     *                       not provided.","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"minreiseah"},"content":"    public static String[] parseDeadline(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"minreiseah"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"minreiseah"},"content":"            String[] deadlineDetails \u003d splitInput[1].split(\" /by \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"minreiseah"},"content":"            if (deadlineDetails.length !\u003d 2) {","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"minreiseah"},"content":"                throw new DukeException(\"Valid format: deadline [description] /by [duedate]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"minreiseah"},"content":"            return deadlineDetails;","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"minreiseah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Valid format: deadline [description] /by [duedate]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"minreiseah"},"content":"     * Extracts the details (description, start date, and end date) for an Event","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"minreiseah"},"content":"     * task from the user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"minreiseah"},"content":"     * @param userInput The user input containing the details of the Event task.","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"minreiseah"},"content":"     * @return An array where the first element is the description, the second is","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"minreiseah"},"content":"     *         the start date, and the third is the end date of the Event task.","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the input format is incorrect or if the details are","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"minreiseah"},"content":"     *                       not provided properly.","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"minreiseah"},"content":"    public static String[] parseEvent(String userInput) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"minreiseah"},"content":"        String[] splitInput \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"minreiseah"},"content":"            String[] eventDetails \u003d splitInput[1].split(\" /from \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"minreiseah"},"content":"            String description \u003d eventDetails[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"minreiseah"},"content":"            String[] timings \u003d eventDetails[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"minreiseah"},"content":"            String start \u003d timings[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"minreiseah"},"content":"            String end \u003d timings[1];","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"minreiseah"},"content":"            return new String[] { description, start, end };","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"minreiseah"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Valid format: event [description] /from [start] /to [end]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":135,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"minreiseah":135}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"public enum CommandType {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"    LIST,","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"    MARK,","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"    UNMARK,","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"    DELETE,","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"    FIND,","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"    TODO,","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"    EVENT,","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"    BYE","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"minreiseah":13}},{"path":"src/main/java/duke/commons/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.commons.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":" * Custom exception for handling application-specific exceptions in Duke.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":" * ","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":" * @param msg Mesage that explains reason for exception.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"        super(msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"minreiseah":13}},{"path":"src/main/java/duke/commons/exceptions/TaskDataNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.commons.exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"public class TaskDataNotFoundException extends DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"    public TaskDataNotFoundException(String msg) {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"        super(msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"minreiseah":7}},{"path":"src/main/java/duke/commons/utils/DateUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.commons.utils;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"import java.util.List;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.DukeException;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"public class DateUtils {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"    private static final List\u003cDateTimeFormatter\u003e FORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"            // Basic ISO date","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ISO_LOCAL_DATE,","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"            // ISO Date Time","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ISO_DATE_TIME,","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"            // ISO Zoned Date Time","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ISO_ZONED_DATE_TIME,","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"            // Custom patterns","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"            // Including time","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSS\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"            // With time zones","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSSXXX\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSSXXX\"),","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss.SSSZ\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"     * Tries to parse any given date string into a LocalDate object using a list of","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"     * predefined formatters.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"     * @param dateString The date string to parse.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"     * @return The parsed LocalDate object, or null if parsing was not successful","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"     *         with any format.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"    public static LocalDate parseDateString(String dateString) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"        for (DateTimeFormatter formatter : FORMATTERS) {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"                return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"                // Try the next format","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"        throw new DukeException(\"Invalid datetime format.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"minreiseah":62}},{"path":"src/main/java/duke/storage/PersistentStorageHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.TaskDataNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":" * Handles persistent storage operations for Duke application, including reading","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":" * from and writing tasks to disk.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":" * Supports operations such as checking for the existence of the storage file,","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":" * creating it if necessary, reading tasks from it, and saving current tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":" * back to it.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"public class PersistentStorageHandler {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"    private static final String TASKLIST_PATH \u003d \"./tasklist.dat\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"    public PersistentStorageHandler() {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"     * Ensures the existence of the task file and initializes it if not present.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"     * @return True if the file exists or was successfully created, false if the","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"     *         file did not exist and was created.","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If creating the file fails.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"    public boolean ensureTaskFileExists() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"        File file \u003d new File(TASKLIST_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"                return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"                throw new DukeException(\"Failed to create persistent task file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"     * Decodes the task list from an ObjectInputStream.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"     * @param ois The ObjectInputStream to read the task list from.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"     * @return The decoded task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If an error occurs during decoding.","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"    private TaskList decodeObjectInputStream(ObjectInputStream ois) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"            TaskList taskList \u003d (TaskList) ois.readObject();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"            return taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"        } catch (Exception e) { // todo: look into what exceptions can occur here","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Failed to decode: \" + TASKLIST_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"     * Reads the task list from disk.","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"     * @return The task list loaded from the file.","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the file does not exist or an error occurs during","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"     *                       reading.","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"minreiseah"},"content":"    public TaskList readTaskFileFromDisc() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"minreiseah"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(TASKLIST_PATH));","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"minreiseah"},"content":"            return decodeObjectInputStream(ois);","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"minreiseah"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"minreiseah"},"content":"            throw new TaskDataNotFoundException(","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"minreiseah"},"content":"                    \"File: \" + TASKLIST_PATH + \" not found.\\nWelcome to your new productivity journey.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"minreiseah"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Failed to read file: \" + TASKLIST_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"minreiseah"},"content":"     * Writes the current task list to disk.","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"minreiseah"},"content":"     * @param taskList The task list to be written to disk.","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If an error occurs during writing.","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"minreiseah"},"content":"    public void writeTaskFileToDisc(TaskList taskList) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"minreiseah"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"minreiseah"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(TASKLIST_PATH));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"minreiseah"},"content":"            oos.writeObject(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"minreiseah"},"content":"            oos.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"minreiseah"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"minreiseah"},"content":"            System.out.println(\"\u003e\u003e: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Failed to write to file: \" + TASKLIST_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"minreiseah":102}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":" * Represents a deadline-type task. It includes a description and a due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":" * This class extends the Task class, adding functionality specific to tasks that have a deadline.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"    private String due;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"     * Constructs a new Deadline instance with a specified description and due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"     * @param description The text description of the deadline task.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"     * @param due The due date of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"    public Deadline(String description, LocalDate due) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"        this.due \u003d due.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"    ","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"     * Generates a string representation of the deadline task, including its type indicator \"[D]\",","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"     * completion status, description, and due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"     * @return A string that represents the deadline task, showing its status, description, and due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.due + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"minreiseah":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":" * Represents a event-type task. It includes a description, start date, and end","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":" * date.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":" * This class extends the Task class, adding functionality specific to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":" * that have a start and end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"    private String start;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"    private String end;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"     * Constructs a new Event instance with a specified description, start date, and","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"     * end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"     * @param description The text description of the event task.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"     * @param start       The start date of the event.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"     * @param end         The end date of the event.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"        this.start \u003d start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"        this.end \u003d end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"     * Generates a string representation of the event task, including its type","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"     * indicator \"[E]\",","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"     * completion status, description, and the start and end dates.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"     * @return A string that represents the event task, showing its status,","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"     *         description, and the start and end dates.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"minreiseah":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":" * Represents a generic task, providing a common structure and functionality for","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":" * tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"     * Constructs a new Task instance with a specified description. The task is","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"     * initially marked as not done.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"     * @param description The text description of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"     * Marks the task as done. Sets the task\u0027s completion status to true.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"     * Marks the task as undone. Sets the task\u0027s completion status to false.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"        for (String word : description.split(\" \")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"            if (word.equals(keyword)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"                found \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"        return found;","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"     * Generates a string representation of the task, including its completion","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"     * status and description.","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"     * @return A string that represents the task, indicating whether it is done and","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"     *         describing the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"    public String getRepresentation() {","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"        return this.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"minreiseah":72}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":" * Represents a list of tasks; encapsulates operations such as adding, deleting,","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":" * and marking tasks as done or undone.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":" * It also provides functionality to print the list of tasks and query the","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":" * number of tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"    public static final String INDENT \u003d \"     \";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"     * Constructs a new, empty task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"     * @return String The string representation of the added task.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"        return task.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"     * Marks a specified task as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"     * @param idx The index of the task to mark as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"     * @return The string representation of the task marked as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the specified index is invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"    public String markTaskDone(int idx) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"        if (idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"            tasks.get(idx).markDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"            return tasks.get(idx).toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Invalid task index: \" + idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"     * Marks a specified task as undone.","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"     * @param idx The index of the task to mark as undone.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"     * @return The string representation of the task marked as undone.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the specified index is invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"    public String markTaskUndone(int idx) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"        if (idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"            tasks.get(idx).markUndone();","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"            return tasks.get(idx).toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Invalid task index: \" + idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"minreiseah"},"content":"     * Deletes a specified task from the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"minreiseah"},"content":"     * @param idx The index of the task to be deleted.","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"minreiseah"},"content":"     * @return The string representation of the deleted task.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"minreiseah"},"content":"     * @throws DukeException If the specified index is invalid.","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"minreiseah"},"content":"    public String deleteTask(int idx) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"minreiseah"},"content":"        if (idx \u003e\u003d 0 \u0026\u0026 idx \u003c tasks.size()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"minreiseah"},"content":"            String taskDescription \u003d tasks.get(idx).toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"minreiseah"},"content":"            tasks.remove(idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"minreiseah"},"content":"            return taskDescription;","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"minreiseah"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"minreiseah"},"content":"            throw new DukeException(\"Invalid task index: \" + idx);","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"minreiseah"},"content":"    public ArrayList\u003cInteger\u003e findTasksByKeywordsMatching(String[] keywords) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"minreiseah"},"content":"        ArrayList\u003cInteger\u003e matchingTaskIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"minreiseah"},"content":"        for (int i \u003d 0; i \u003c getNumberTasks(); i++) {","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"minreiseah"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"minreiseah"},"content":"                if (tasks.get(i).containsKeyword(keyword)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"minreiseah"},"content":"                    matchingTaskIndices.add(i);","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"minreiseah"},"content":"                    break;","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"minreiseah"},"content":"                }","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"minreiseah"},"content":"        return matchingTaskIndices;","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"minreiseah"},"content":"    public int getNumberTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"minreiseah"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"minreiseah"},"content":"    public ArrayList\u003cString\u003e getTaskRepresentationsByIndices(ArrayList\u003cInteger\u003e indices) {","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"minreiseah"},"content":"        ArrayList\u003cString\u003e taskRepresentations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"minreiseah"},"content":"        for (int i : indices) {","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"minreiseah"},"content":"            taskRepresentations.add(tasks.get(i).getRepresentation());","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"minreiseah"},"content":"        return taskRepresentations;","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"minreiseah"},"content":"     * Prints the list of tasks to the standard output, with indentation and line","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"minreiseah"},"content":"     * separators for readability.","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"minreiseah"},"content":"    public void printTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"minreiseah"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"minreiseah"},"content":"            System.out.println(INDENT + \"no tasks\");","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"minreiseah"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"minreiseah"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"minreiseah"},"content":"                System.out.println(\"     \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"minreiseah":132}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":" * Represents a todo-type task. It includes a description.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":" * This class extends the Task class, adding functionality specific to tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":" * that have a deadline.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"     * Constructs a new Todo instance with a specified description.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"     * @param description The text description of the todo task.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"     * Generates a string representation of the event task, including its type","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"     * indicator \"[E]\", completion status, and description.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"     * ","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"     * @return A string that represents the todo task, showing its status and","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"     *         description.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"minreiseah":30}},{"path":"src/main/java/duke/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"public class UserInterface {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"    public static final String INDENT \u003d \"     \";","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"    private static final String WELCOME_MESSAGE \u003d String.join(","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"            \"\\n\",","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"            \"Hello! I\u0027m DEREK\",","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"            INDENT + \"What can I do for you?\");","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"    public static String getUserInput() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"    public static void print(String msg) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"        String[] lines \u003d msg.split(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + lines[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"        for (int i \u003d 1; i \u003c lines.length; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"            System.out.println(INDENT + lines[i]);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"    public static void printWelcome() {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + WELCOME_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"    public static void printExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"        scanner.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + EXIT_MESSAGE);","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"    public static void printTaskAdded(String msg, int numTasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"Added Task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"  \" + msg);","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"    public static void printTaskDeleted(String msg, int numTasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"Deleted Task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"  \" + msg);","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"    public static void printTasksByIndices(ArrayList\u003cString\u003e taskRepresentations) {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"        if (taskRepresentations.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"            System.out.println(INDENT + \"No matching tasks found.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"            System.out.println(INDENT + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"            for (String t : taskRepresentations) {","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"                System.out.println(INDENT + t);","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"minreiseah"},"content":"    public static void showError(String error) {","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE);","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"minreiseah"},"content":"        String[] lines \u003d error.split(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + \"Error: \" + lines[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"minreiseah"},"content":"        for (int i \u003d 1; i \u003c lines.length; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"minreiseah"},"content":"            System.out.println(INDENT + lines[i]);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"minreiseah"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"minreiseah"},"content":"        System.out.println(INDENT + LINE + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"minreiseah":85}},{"path":"src/test/java/duke/command/CommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.command;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"import duke.commons.exceptions.DukeException;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":" * Provides test cases for the CommandParser class, ensuring that user input is","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":" * correctly parsed into commands, task indices, descriptions, and task details.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"public class CommandParserTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"    public void parseCommand_ValidCommand_ReturnsCommandType() throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"todo eat cake\";","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing valid command should return correct CommandType.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"minreiseah"},"content":"        assertEquals(CommandType.TODO, CommandParser.parseCommand(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"minreiseah"},"content":"    public void parseCommand_InvalidCommand_ThrowsDukeException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"invalid command here\";","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing invalid command should throw DukeException.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"minreiseah"},"content":"        assertThrows(DukeException.class, () -\u003e CommandParser.parseCommand(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"minreiseah"},"content":"    public void parseTaskIndex_ValidIndex_ReturnsIndex() throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"delete 1\";","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing valid task index should return correct index.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"minreiseah"},"content":"        assertEquals(0, CommandParser.parseTaskIndex(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"minreiseah"},"content":"    public void parseTaskIndex_NoIndex_ThrowsDukeException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"delete\";","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing no index should throw Duke Exception\";","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"minreiseah"},"content":"        assertThrows(DukeException.class, () -\u003e CommandParser.parseTaskIndex(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"minreiseah"},"content":"    public void parseTaskIndex_InvalidIndex_ThrowsDukeException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"delete -109120931\";","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing invalid index should throw Duke Exception\";","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"minreiseah"},"content":"        assertThrows(DukeException.class, () -\u003e CommandParser.parseTaskIndex(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"minreiseah"},"content":"    public void parseToDo_ValidInput_ReturnsDescription() throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"todo eat cake\";","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing valid todo should return correct description.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"minreiseah"},"content":"        assertEquals(\"eat cake\", CommandParser.parseToDo(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"minreiseah"},"content":"    public void parseToDo_NoDescription_ThrowsDukeException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"todo\";","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"No description should throw DukeException.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"minreiseah"},"content":"        assertThrows(DukeException.class, () -\u003e CommandParser.parseToDo(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"minreiseah"},"content":"    public void parseDeadline_ValidInput_ReturnsDetails() throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"deadline submit report /by 13-07-2025\";","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"minreiseah"},"content":"        String[] expected \u003d new String[] { \"submit report\", \"13-07-2025\" };","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing valid deadline should return correct details.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"minreiseah"},"content":"        assertArrayEquals(expected, CommandParser.parseDeadline(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"minreiseah"},"content":"    public void parseDeadline_InvalidFormat_ThrowsDukeException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"deadline submit report 13-07-2025\";","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Invalid format should throw DukeException.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"minreiseah"},"content":"        assertThrows(DukeException.class, () -\u003e CommandParser.parseDeadline(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"minreiseah"},"content":"    public void parseEvent_ValidInput_ReturnDetails() throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"event eat cake /from 01-12-2024 /to 2-12-2025\";","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"minreiseah"},"content":"        String[] expected \u003d new String[] { \"eat cake\", \"01-12-2024\", \"2-12-2025\" };","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Parsing valid event should return correct details.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"minreiseah"},"content":"        assertArrayEquals(expected, CommandParser.parseEvent(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"minreiseah"},"content":"    public void parseEvent_InvalidInput_ThrowsDukeException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"minreiseah"},"content":"        String userInput \u003d \"event eat cake 01-12-2024 2-12-2025\";","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"minreiseah"},"content":"        String msg \u003d \"Invalid format should throw DukeException.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"minreiseah"},"content":"        assertThrows(DukeException.class, () -\u003e CommandParser.parseEvent(userInput), msg);","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"minreiseah":95}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"package duke.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"    public void testToDoConstruction() {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"        String description \u003d \"Read book\";","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"        ToDo todo \u003d new ToDo(description);","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"        assertEquals(\"[T] [ ] \" + description, todo.toString(), \"ToDo.toString() should return the correct format.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"minreiseah":14}},{"path":"text-ui-test/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"# How to generate tests","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"To update test expected output, do:","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"```bash","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"cd ./text-ui-test","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"rm EXPECTED.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"cd ../src/main/java","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"java Duke \u003c ../../../text-ui-test/input.txt \u003e ../../../text-ui-test/EXPECTED.txt","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"```","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"minreiseah":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"minreiseah"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"minreiseah"},"content":"todo 1","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"minreiseah"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"minreiseah"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"minreiseah"},"content":"deadline 2 /by 2022-03-01","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"minreiseah"},"content":"unmark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"minreiseah"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"minreiseah"},"content":"event 3 /from 2022-03-01 /to 2024-03-03","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"minreiseah"},"content":"mark 3","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"minreiseah"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"minreiseah"},"content":"unmark 3","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"minreiseah"},"content":"event 3 asd asdf as fd","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"minreiseah"},"content":"deadline 3 123123 123","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"minreiseah"},"content":"todo","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"delete 3","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"delete 0","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"delete 12i391023","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"unmark 01923","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"unmark -123901i2","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"minreiseah":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"minreiseah"},"content":"# delete file persistence output from previous run","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"minreiseah"},"content":"if [ -e \"./tasklist.dat\" ]","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"minreiseah"},"content":"then","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"minreiseah"},"content":"    rm tasklist.dat","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"minreiseah"},"content":"fi","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"minreiseah"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"minreiseah":6,"-":38}}]
