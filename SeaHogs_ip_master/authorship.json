[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"# Duke.duke.Duke project template","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"3. After that, locate the `src/main/java/Duke.duke.Duke.java` file, right-click it, and choose `Run Duke.duke.Duke.duke()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"SeaHogs":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    //JavaFx dependencies","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"application {","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"    mainClass.set(\"Duke.duke\")","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    mainClass.set(\u0027Duke.duke.Duke\u0027);","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"SeaHogs":18}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"event ffff /from 2010-10-10 /to 2010-10-12 /isMarked 1","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"todo finish /isMarked 1","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"todo bug /isMarked 0","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"todo manybuggs /isMarked 0","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"todo manybgg /isMarked 0","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SeaHogs":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"# Chat User Guide","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"chat is a desktop application for managing tasks, optimized for use via a Command Line Interface (CLI). ","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"## Environment","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"1. ensure you have Java 11 installed on your computer","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"2. download the latest version of chat.jar from [here](","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"## All features","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"1. [Adding a task](#adding-a-task)","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"2. [Listing all tasks](#listing-all-tasks)","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"3. [Marking or unmarking a task as done](#marking-a-task-as-done)","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"4. [Deleting a task](#deleting-a-task)","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"5. [Finding tasks related to input](#finding-a-task)","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"6. [local storage](#local-storage)","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"## Adding a task","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"### Type of task","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"- Todo","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"- Deadline","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"- Event","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"### Prompt","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"- Todo: todo {task description}","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    _e.g. adding task todo `read book`_","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    todo read book","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"- Deadline: deadline {task description} /by {date}","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    _e.g. adding task deadline `return book` before `2021-09-17`_","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    deadline return book /by 2021-09-17","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"  ","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"- Event: event {task description} /from {date} /to {date}","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    _e.g. adding task event `project meeting` from `2021-09-17` to `2021-09-18`_","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    event project meeting /from 2021-09-17 /to 2021-09-18","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"  ### Expected output for all adding tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"    Got it. I\u0027ve added this task: {task name}","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"\u003e Note: the following eg for each command will be using the output of the above prompt","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"## Listing all tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"### Prompt","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"- list","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"    _e.g. listing all tasks_","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"    list","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"  ### Expected output","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"    1. [T][ ] read book","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"    2. [D][ ] return book (by: Sep 17 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"    3. [E][ ] project meeting (from: Sep 17 2021 to: Sep 18 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"## Deleting a task","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"### prompt","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"- delete {task number}","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"    _e.g. deleting task 3_","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"    delete 3","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"    ### Expected output","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"    Noted. I\u0027ve removed this task: {task number}","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"    this can be verified by listing all tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"    list","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"    1. [T][ ] read book","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"    2. [D][ ] return book (by: Sep 17 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"## Marking a task as done","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"### Prompt","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"- mark {task name}","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"    _e.g. marking task 1 as done_","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"    mark read book","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"    ### Expected output","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"    Nice! I\u0027ve marked this task as done: {task name}","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"    this can be verified by listing or finding tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"  list","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"  Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"  1. [T][X] read book","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"  2. [D][ ] return book (by: Sep 17 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"  3. [E][ ] project meeting (from: Sep 17 2021 to: Sep 18 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"SeaHogs"},"content":"- unmark {task name}","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"SeaHogs"},"content":"  _e.g. unmarking read book_","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"SeaHogs"},"content":"  unmark read book","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"SeaHogs"},"content":"  ## Expected output","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"SeaHogs"},"content":"  unmarked ","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"SeaHogs"},"content":"  I\u0027ve unmarked this task as done: {task name}","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"SeaHogs"},"content":"  this can be verified by listing all tasks:","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"SeaHogs"},"content":"  list","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"SeaHogs"},"content":"  Here are the tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"SeaHogs"},"content":"  1. [T][ ] read book","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"SeaHogs"},"content":"  2. [D][ ] return book (by: Sep 17 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"SeaHogs"},"content":"  3. [E][ ] project meeting (from: Sep 17 2021 to: Sep 18 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"SeaHogs"},"content":"  ```","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"SeaHogs"},"content":"## Finding a task","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"SeaHogs"},"content":"### prompt","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"SeaHogs"},"content":"- find {keyword}","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"SeaHogs"},"content":"    e.g. finding tasks related to `book`","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"SeaHogs"},"content":"    find book","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"SeaHogs"},"content":"    ### Expected output","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"SeaHogs"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"SeaHogs"},"content":"    1. [T][ ] read book","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"SeaHogs"},"content":"    2. [D][ ] return book (by: Sep 17 2021)","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"SeaHogs"},"content":"    ```","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":145,"author":{"gitId":"SeaHogs"},"content":"## Local storage","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"SeaHogs"},"content":"- chat stores all tasks in a local file, so that the tasks are not lost when the app is closed.","lastModifiedDate":"2024-02-22"},{"lineNumber":147,"author":{"gitId":"SeaHogs"},"content":"- the file is located at `data/tasks.txt` relative to the location of the jar file","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"SeaHogs"},"content":"- the file is created if it does not exist","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"SeaHogs"},"content":"- the file is updated every time a task is added, deleted, or marked as done","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"SeaHogs"},"content":"- the file is read every time the app is started, to load the tasks into the app","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"-":19,"SeaHogs":131}},{"path":"src/main/java/Duke/Activities/Activity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Activities;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":" * Represents an abstract class for various activities, such as Todos, Deadlines, and Events.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"public abstract class Activity {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"     * The name of the activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    private final String name;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     * Indicates whether the activity is marked as completed.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    boolean isMarked;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize an activity with a specified name.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    public Activity(String name) {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * Factory method to create a new Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"     * @return A new Todo activity instance.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    public static Activity of(String name) {","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"        return new Todo(name);","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     * Factory method to create a new Deadline activity with a specified date.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"     * @param date The deadline date.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"     * @return A new Deadline activity instance.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"    public static Activity of(String name, LocalDate date) {","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"        return new Deadline(name, date);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"     * Factory method to create a new Event activity with specified start and end dates.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"     * @param name  The name of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"     * @param end   The end date of the event.","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"     * @return A new Event activity instance.","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"    public static Activity of(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"        return new Event(name, start, end);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"     * Marks the activity as completed.","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"     * @return True if the activity was successfully marked, false if it was already marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"    public boolean mark() {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"        if (isMarked) {","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"            return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"            isMarked \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"            return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"     * Unmarks the activity as completed.","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"     * @return True if the activity was successfully unmarked, false if it was not marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"    public boolean unmark() {","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"        if (isMarked) {","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"            isMarked \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"            return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"            return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"     * Gets a string representation of the activity\u0027s completion state.","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"     * @return A string representing the completion state, \"[X]\" if marked, \"[ ]\" if unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"    public String getState() {","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"        return isMarked ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"     * Checks if the activity name contains a specified input string.","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string to check.","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"     * @return True if the name contains the input string, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"    public boolean checkName(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"        return name.contains(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"SeaHogs"},"content":"     * Checks if the activity name exactly matches a specified input string.","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string to check.","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"SeaHogs"},"content":"     * @return True if the name exactly matches the input string, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"SeaHogs"},"content":"    public boolean checkExactName(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"SeaHogs"},"content":"        return name.equals(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"SeaHogs"},"content":"     * Gets the name of the activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"SeaHogs"},"content":"     * @return The name of the activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"SeaHogs"},"content":"    public String getName() {","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"SeaHogs"},"content":"        return name;","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":130,"author":{"gitId":"SeaHogs"},"content":"     * Abstract method to convert the activity to a storage-friendly string representation.","lastModifiedDate":"2024-02-22"},{"lineNumber":131,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"SeaHogs"},"content":"     * @return A string representing the activity in a storage-friendly format.","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"SeaHogs"},"content":"    public abstract String toStorage();","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SeaHogs":136}},{"path":"src/main/java/Duke/Activities/ActivityList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Activities;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.LocalStorage.LocalList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" * Represents a list of activities managed by the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"public class ActivityList {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     * The local list handler for reading and writing activities to a file.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    private final LocalList localList;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     * The list of activities stored in memory.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    private final ArrayList\u003cActivity\u003e activities;","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the activity list with a specified file path.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"     * @param filePath The file path for reading and writing activities.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    public ActivityList(String filePath) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"        this.localList \u003d new LocalList(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"        activities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"        localList.read(this);","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     * Adds a Todo activity with the specified name to the list and updates the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"     * @return The added Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"    public Activity add(String name) {","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"        Activity activity \u003d Activity.of(name);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"        if (isDuplicate(name)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"        activities.add(activity);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"        localList.write(toStorageList());","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"        return activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"     * Adds a Deadline activity with the specified name and date to the list and updates the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"     * @param date The deadline date.","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"     * @return The added Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"    public Activity add(String name, LocalDate date) {","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"        Activity activity \u003d Activity.of(name, date);","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"        if (isDuplicate(name)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"        activities.add(activity);","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"        localList.write(toStorageList());","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"        return activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"     * Adds an Event activity with the specified name, start, and end dates to the list and updates the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"     * @param name  The name of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"     * @param end   The end date of the event.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"     * @return The added Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"    public Activity add(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"        Activity activity \u003d Activity.of(name, start, end);","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"        if (isDuplicate(name)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"            return null;","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"        activities.add(activity);","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"        localList.write(toStorageList());","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"        return activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"     * Marks the activity at the specified index as completed and updates the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"     * @param index The index of the activity to mark.","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the activity is already marked or the index is out of bounds.","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"    public void mark(int index) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"        boolean isMark \u003d activities.get(index).mark();","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"        if (isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"            localList.write(toStorageList());","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"activity already marked\");","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"     * Unmarks the activity at the specified index and updates the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"     * @param index The index of the activity to unmark.","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the activity is already marked or the index is out of bounds.","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"    public void unmark(int index) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"SeaHogs"},"content":"        boolean isMark \u003d activities.get(index).unmark();","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"SeaHogs"},"content":"        localList.write(toStorageList());","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"SeaHogs"},"content":"        if (isMark) {","lastModifiedDate":"2024-02-21"},{"lineNumber":111,"author":{"gitId":"SeaHogs"},"content":"            localList.write(toStorageList());","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"activity already marked\");","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"SeaHogs"},"content":"     * Deletes the activity at the specified index and updates the storage.","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"SeaHogs"},"content":"     * @param index The index of the activity to delete.","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the index is out of bounds.","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"SeaHogs"},"content":"    public void delete(int index) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"SeaHogs"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"SeaHogs"},"content":"            activities.remove(index - 1);","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"SeaHogs"},"content":"            localList.write(toStorageList());","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"SeaHogs"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"activity not found at index: \" + index);","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"SeaHogs"},"content":"     * Finds activities with names containing the specified string.","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"SeaHogs"},"content":"     * @param name The string to match against activity names.","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"SeaHogs"},"content":"     * @return A list of activities with names containing the specified string.","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"SeaHogs"},"content":"    public ArrayList\u003cActivity\u003e find(String name) {","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"SeaHogs"},"content":"        ArrayList\u003cActivity\u003e relevantAct \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"SeaHogs"},"content":"        for (Activity activity : activities) {","lastModifiedDate":"2024-02-20"},{"lineNumber":141,"author":{"gitId":"SeaHogs"},"content":"            if (activity.checkName(name)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":142,"author":{"gitId":"SeaHogs"},"content":"                relevantAct.add(activity);","lastModifiedDate":"2024-02-20"},{"lineNumber":143,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":144,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"SeaHogs"},"content":"        return relevantAct;","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":148,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":149,"author":{"gitId":"SeaHogs"},"content":"     * Finds the index of an activity with an exact name match.","lastModifiedDate":"2024-02-22"},{"lineNumber":150,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"SeaHogs"},"content":"     * @param name The exact name to match against activity names.","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"SeaHogs"},"content":"     * @return The index of the activity with an exact name match, or -1 if not found.","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"SeaHogs"},"content":"    public int findExact(String name) {","lastModifiedDate":"2024-02-20"},{"lineNumber":155,"author":{"gitId":"SeaHogs"},"content":"        int index \u003d -1;","lastModifiedDate":"2024-02-20"},{"lineNumber":156,"author":{"gitId":"SeaHogs"},"content":"        for (int i \u003d 0; i \u003c activities.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":157,"author":{"gitId":"SeaHogs"},"content":"            if (activities.get(i).checkExactName(name)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"SeaHogs"},"content":"                index \u003d i;","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"SeaHogs"},"content":"                break;","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"SeaHogs"},"content":"        return index;","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"SeaHogs"},"content":"     * Returns a formatted string representation of all activities in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"SeaHogs"},"content":"     * @return A formatted string containing details of all activities in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"SeaHogs"},"content":"    public String printActivities() {","lastModifiedDate":"2024-02-20"},{"lineNumber":171,"author":{"gitId":"SeaHogs"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-20"},{"lineNumber":172,"author":{"gitId":"SeaHogs"},"content":"        for (Activity act : activities) {","lastModifiedDate":"2024-02-20"},{"lineNumber":173,"author":{"gitId":"SeaHogs"},"content":"            result.append(act).append(\"\\n\");","lastModifiedDate":"2024-02-20"},{"lineNumber":174,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":175,"author":{"gitId":"SeaHogs"},"content":"        return result.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":176,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":177,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":178,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"SeaHogs"},"content":"     * Converts the list of activities to an array of storage-friendly strings.","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"SeaHogs"},"content":"     * @return An array of strings representing the activities in a storage-friendly format.","lastModifiedDate":"2024-02-22"},{"lineNumber":182,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":183,"author":{"gitId":"SeaHogs"},"content":"    public String[] toStorageList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":184,"author":{"gitId":"SeaHogs"},"content":"        String[] result \u003d new String[activities.size()];","lastModifiedDate":"2024-02-20"},{"lineNumber":185,"author":{"gitId":"SeaHogs"},"content":"        for (int i \u003d 0; i \u003c activities.size(); i++) {","lastModifiedDate":"2024-02-20"},{"lineNumber":186,"author":{"gitId":"SeaHogs"},"content":"            result[i] \u003d activities.get(i).toStorage();","lastModifiedDate":"2024-02-20"},{"lineNumber":187,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":188,"author":{"gitId":"SeaHogs"},"content":"        return result;","lastModifiedDate":"2024-02-20"},{"lineNumber":189,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":190,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":191,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"SeaHogs"},"content":"     * Check for new task added if there is a duplication.","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"SeaHogs"},"content":"     * @param name The exact name to match against activity names.","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"SeaHogs"},"content":"     * @return true if found duplicate, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"SeaHogs"},"content":"    public boolean isDuplicate(String name) {","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"SeaHogs"},"content":"        for (Activity activity : activities) {","lastModifiedDate":"2024-02-22"},{"lineNumber":199,"author":{"gitId":"SeaHogs"},"content":"            if (activity.checkExactName(name)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"SeaHogs"},"content":"                return true;","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":202,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"SeaHogs"},"content":"        return false;","lastModifiedDate":"2024-02-22"},{"lineNumber":204,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":205}},{"path":"src/main/java/Duke/Activities/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Activities;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Commands.DateFormat;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents a Deadline activity, which is a type of activity with a specific due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"public class Deadline extends Activity {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     * The due date of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    private final LocalDate date;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize a Deadline activity with a specified name and due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     * @param date The due date of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        super(name);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * Returns a formatted string representation of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @return A string containing details of the Deadline activity, including name, completion state,","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     *         and due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        return \"[D] \" + super.getState() + \" \" + super.getName() +","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"                \" (by: \" + DateFormat.reformatDate(date) + \")\";","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     * Converts the Deadline activity to a storage-friendly string format.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"     * @return A string representing the Deadline activity in a storage-friendly format.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"    public String toStorage() {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"        String str \u003d \"deadline \";","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"        str +\u003d super.getName() + \" /by \" + date;","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"        if (super.isMarked) {","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"            str +\u003d \" /isMarked 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"            str +\u003d \" /isMarked 0\";","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"        return str;","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SeaHogs":58}},{"path":"src/main/java/Duke/Activities/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Activities;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Commands.DateFormat;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents an Event activity, which is a type of activity with a specific start and end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"public class Event extends Activity {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     * The start date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    private final LocalDate start;","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     * The end date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"    private final LocalDate end;","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize an Event activity with a specified name, start date, and end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     * @param name  The name of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"     * @param start The start date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"     * @param end   The end date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"        super(name);","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     * Returns a formatted string representation of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     * @return A string containing details of the Event activity, including name, completion state,","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"     *         start date, and end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"        return \"[E] \" + super.getState() + \" \" + super.getName() +","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"                \" (from: \" + DateFormat.reformatDate(start) + \"  to: \" + DateFormat.reformatDate(end) + \")\";","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"     * Converts the Event activity to a storage-friendly string format.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"     * @return A string representing the Event activity in a storage-friendly format.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"    public String toStorage() {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"        String str \u003d \"event \";","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"        str +\u003d super.getName();","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"        str +\u003d \" /from \" + start + \" /to \" + end;","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"        if (super.isMarked) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"            str +\u003d \" /isMarked 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"            str +\u003d \" /isMarked 0\";","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"        return str;","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":64}},{"path":"src/main/java/Duke/Activities/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Activities;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":" * Represents a Todo activity, which is a type of activity without a specific date or duration.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"public class Todo extends Activity {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize a Todo activity with a specified name.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"     * @param name The name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"        super(name);","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     * Converts the Todo activity to a storage-friendly string format.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     * @return A string representing the Todo activity in a storage-friendly format.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    public String toStorage() {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        String str \u003d \"todo \";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        str +\u003d super.getName();","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"        if (super.isMarked) {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"            str +\u003d \" /isMarked 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"            str +\u003d \" /isMarked 0\";","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"        return str;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"     * Returns a formatted string representation of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     * @return A string containing details of the Todo activity, including name and completion state.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"        return \"[T] \" + super.getState() + \" \" + super.getName();","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":43}},{"path":"src/main/java/Duke/Commands/AddActivity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.Activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" * An interface representing the capability to add an activity to an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"public interface AddActivity {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     * Adds the implementing activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     * @return The added activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    Activity addToList(ActivityList list);","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":18}},{"path":"src/main/java/Duke/Commands/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.Activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to add a Deadline activity to an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class and implements the {@link AddActivity} interface.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"public class AddDeadline extends Command implements AddActivity {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * The name of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"    private final String NAME;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     * The due date of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    private final LocalDate DATE;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the AddDeadline command by parsing the input.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name and due date of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the input format is incorrect.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    public AddDeadline(String input) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        String[] phrased \u003d phrases(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"        NAME \u003d phrased[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"        DATE \u003d DateFormat.format(phrased[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     * Parses the input string to extract the name and due date of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name and due date.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"     * @return An array containing the name at index 0 and due date at index 1.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the input format is incorrect.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"    public String[] phrases(String input) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"        String patternRegex \u003d \"^[^/]+ /by \\\\d{4}-\\\\d{2}-\\\\d{2}$\";","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"        Pattern pattern \u003d Pattern.compile(patternRegex);","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"The input has to be in the format: \\nname /by yyyy-mm-dd\");","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"        return input.split(\" /by \");","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"     * Adds the Deadline activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the Deadline activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"     * @return The added Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"    public Activity addToList(ActivityList list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"        return list.add(NAME, DATE);","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by adding the Deadline activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the Deadline activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"        if (addToList(list) \u003d\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"The activity name of a deadline cannot be a duplicate.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the successful addition of the Deadline activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Got it. I\u0027ve added this task: \" + NAME + \".\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":94}},{"path":"src/main/java/Duke/Commands/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.Activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to add an Event activity to an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class and implements the {@link AddActivity} interface.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"public class AddEvent extends Command implements AddActivity {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * The name of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"    private final String NAME;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     * The start date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    private final LocalDate STARTDATE;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * The end date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    private final LocalDate ENDDATE;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the AddEvent command by parsing the input.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name, start date, and end date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the input format is incorrect or if the start date is after the end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    public AddEvent(String input) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"        String[] phrased \u003d phrases(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"        NAME \u003d phrased[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"        STARTDATE \u003d DateFormat.format(phrased[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"        ENDDATE \u003d DateFormat.format(phrased[2]);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"     * Parses the input string to extract the name, start date, and end date of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name, start date, and end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"     * @return An array containing the name at index 0, start date at index 1, and end date at index 2.","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If the input format is incorrect.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"    public String[] phrases(String input) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"        String patternRegex \u003d \"^[^/]+ /from \\\\d{4}-\\\\d{1,2}-\\\\d{1,2} /to \\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$\";","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"        Pattern pattern \u003d Pattern.compile(patternRegex);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"            String[] substr \u003d input.split(\" /from \");","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"            String name \u003d substr[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"            String[] dateStr \u003d substr[1].split(\" /to \");","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"            String fromDate \u003d dateStr[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"            String toDate \u003d dateStr[1];","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"            return new String[]{name, fromDate, toDate};","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"The input has to be in the format: \\nname /from yyyy-mm-dd /to yyyy-mm-dd\");","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"     * Adds the Event activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the Event activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"     * @return The added Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"    public Activity addToList(ActivityList list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"        return list.add(NAME, STARTDATE, ENDDATE);","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by adding the Event activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the Event activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution, such as the start date being after the end date.","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"        if (DateFormat.compareDate(STARTDATE, ENDDATE)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"            if(addToList(list) \u003d\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"                throw new CommandException(\"The activity name of an event cannot be a duplicate.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"Start date is after end date\");","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the successful addition of the Event activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Got it. I\u0027ve added this task: \" + NAME + \".\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":110}},{"path":"src/main/java/Duke/Commands/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.Activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to add a Todo activity to an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class and implements the {@link AddActivity} interface.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"public class AddTodo extends Command implements AddActivity {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     * The name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    private final String NAME;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the AddTodo command by parsing the input.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"    public AddTodo(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"        NAME \u003d phrases(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     * Returns the input string as the name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     * @return The name of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    public String phrases(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        return input;","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     * Adds the Todo activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the Todo activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"     * @return The added Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"    public Activity addToList(ActivityList list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"        return list.add(NAME);","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by adding the Todo activity to the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list to which the Todo activity should be added.","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution, such as an empty activity name.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"        if (NAME.isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"The activity name of a todo cannot be empty.\");","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"            if(addToList(list) \u003d\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"                throw new CommandException(\"The activity name of a todo cannot be a duplicate.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the successful addition of the Todo activity.","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Got it. I\u0027ve added this task: \" + NAME + \".\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":78}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" * Represents an abstract command that can be executed on an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     * The input string associated with the command.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"    final String input;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize a command with the given input.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string associated with the command.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"    Command(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command on the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list on which the command should be executed.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    public abstract void execute(ActivityList list) throws CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     * @return A string representing the result or output of the command execution.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    public abstract String toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":40}},{"path":"src/main/java/Duke/Commands/DateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" * A utility class for formatting and comparing LocalDate objects.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"public class DateFormat {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     * Formats a date string into a LocalDate object using the pattern \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * @param date The date string to be formatted.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     * @return The LocalDate object representing the formatted date.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    public static LocalDate format(String date) {","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     * Compares two LocalDate objects to check if the second date is after the first date.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     * @param d1 The first LocalDate object.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"     * @param d2 The second LocalDate object.","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"     * @return True if the second date is after the first date, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    public static boolean compareDate(LocalDate d1, LocalDate d2) {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"        return d2.isAfter(d1);","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"     * Reformats a LocalDate object into a string using the pattern \"MMM dd yyyy\".","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     * @param date The LocalDate object to be reformatted.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     * @return The string representation of the reformatted date.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    public static String reformatDate(LocalDate date) {","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"        return date.format(formatter);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":43}},{"path":"src/main/java/Duke/Commands/DeleteActivity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to delete an activity from an {@link ActivityList} based on its index.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"public class DeleteActivity extends Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * The index of the activity to be deleted.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    private final String INDEX;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the DeleteActivity command with the specified input.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the index of the activity to be deleted.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    public DeleteActivity(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        INDEX \u003d input;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * Checks if a given string represents an integer.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @param s The string to be checked.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     * @return True if the string represents an integer, false otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    private static boolean isInteger(String s) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"            return true;","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"            return false;","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by deleting the activity from the specified {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list from which the activity should be deleted.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution, such as the input not being a valid integer.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"        if (!isInteger(input)) {","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"Index to delete has to be an integer.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"            int deleteIndex \u003d Integer.parseInt(INDEX);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"            list.delete(deleteIndex);","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the successful deletion of the activity at the specified index.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Got it. I\u0027ve deleted activity number: \" + INDEX + \".\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":70}},{"path":"src/main/java/Duke/Commands/FindActivity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.Activity;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to find and display activities from an {@link ActivityList} based on a substring.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"public class FindActivity extends Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"     * The substring to search for in activity names.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"    private final String SUBSTR;","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     * A list to store the found activities.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"    private ArrayList\u003cActivity\u003e foundList;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the FindActivity command with the specified input.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the substring to search for.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    public FindActivity(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"        SUBSTR \u003d input;","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by finding and storing activities from the specified {@link ActivityList} based on a substring.","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list on which the command should be executed.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution, such as an empty search string.","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"        if (SUBSTR.isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"Empty search can\u0027t be done.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"            foundList \u003d list.find(SUBSTR);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the matching activities found or no matching activities.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"        if (foundList.isEmpty()) {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"            output +\u003d \"No matching activities found\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"            output +\u003d \"Here are the matching activities in your list:\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"            for (int i \u003d 0; i \u003c foundList.size(); i++) {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"                output +\u003d foundList.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":69}},{"path":"src/main/java/Duke/Commands/ListActivity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to list and display all activities from an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"public class ListActivity extends Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * The activity list to be listed and displayed.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    private ActivityList list;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the ListActivity command with the specified input.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string (not used in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    public ListActivity(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by setting the activity list to be listed and displayed.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list on which the command should be executed.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution (not expected for this command).","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     * @return A string listing and displaying all tasks in the specified activity list.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d list.printActivities() + \"\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":50}},{"path":"src/main/java/Duke/Commands/MarkActivity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to mark an activity as done in an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"public class MarkActivity extends Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * The name of the activity to be marked as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    private final String NAME;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the MarkActivity command with the specified input.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name of the activity to be marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    public MarkActivity(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        NAME \u003d input;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by marking the specified activity as done in the {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list on which the command should be executed.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution, such as the activity not being found.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        int index \u003d list.findExact(NAME);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"Activity to be marked not found.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"            list.mark(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the successful marking of the specified activity as done.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Nice! I\u0027ve marked this task as done: \" + NAME + \".\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":56}},{"path":"src/main/java/Duke/Commands/Terminate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to terminate the application and bid farewell to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"public class Terminate extends Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the Terminate command with the specified input.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string (not used in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    public Terminate(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by terminating the application (no specific action in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list (not used in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution (not expected for this command).","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"        // No specific action for termination","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"     * @return A farewell message to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        return Dialog.fairwellUser();","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":42}},{"path":"src/main/java/Duke/Commands/Unknown.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to handle unknown or unrecognized commands.","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"public class Unknown extends Command {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     * The error message indicating the unknown or unrecognized command.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    private final String ERROR_MESSAGE;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the Unknown command with the specified error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     * @param errorMessage The error message indicating the unknown or unrecognized command.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    public Unknown(String errorMessage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        ERROR_MESSAGE \u003d errorMessage;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command (no specific action for unknown commands).","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list (not used in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution (not expected for this command).","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        // No specific action for unknown commands","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     * @return The error message indicating the unknown or unrecognized command.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"        return ERROR_MESSAGE;","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SeaHogs":47}},{"path":"src/main/java/Duke/Commands/UnmarkActivity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Commands;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * Represents a command to unmark an activity as not done in an {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * Extends the {@link Command} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"public class UnmarkActivity extends Command {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * The name of the activity to be unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    private final String NAME;","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     * Constructor to initialize the UnmarkActivity command with the specified input.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input string containing the name of the activity to be unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    public UnmarkActivity(String input) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        super(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        NAME \u003d input;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * Executes the command by unmarking the specified activity as not done in the {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @param list The activity list on which the command should be executed.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during execution, such as the activity not being found.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    public void execute(ActivityList list) throws CommandException {","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        int index \u003d list.findExact(NAME);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"Activity to be unmarked not found.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"            list.unmark(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"     * Returns a string representation of the command\u0027s execution output.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"     * @return A string indicating the successful unmarking of the specified activity as not done.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"    public String toString() {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"I\u0027ve unmarked this task as not done: \" + NAME + \".\\n\";","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":56}},{"path":"src/main/java/Duke/Converstion/Dialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Converstion;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":" * Utility class for generating standard dialog messages.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"public class Dialog {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"     * Generates a greeting message for the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"     * @return A string containing a formatted greeting message.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    public static String greetUser() {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Hello! \\nWhat can I do for you?\";","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"     * Generates a farewell message for the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"     * @return A string containing a formatted farewell message.","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"    public static String fairwellUser() {","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"        output +\u003d \"Later\";","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"        return output;","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":29}},{"path":"src/main/java/Duke/Exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.Exception;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":" * Custom exception class for handling command-related exceptions in the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"public class CommandException extends Throwable {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"     * Constructs a new CommandException with the specified error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"     * @param msg The error message describing the command-related exception.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    public CommandException(String msg) {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"        super(msg);","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":16}},{"path":"src/main/java/Duke/LocalStorage/LocalList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.LocalStorage;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.Activity;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"import java.io.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"import static Duke.phrase.phrase.phraseCommand;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":" * The {@code LocalList} class is responsible for managing the persistence of {@link Activity} objects to a local file.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":" * It supports loading activities from a specified file and saving activities back to that file. This class enables","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":" * the application to maintain state across sessions by reading from and writing to a file system.","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":" * The {@code LocalList} class is responsible for managing the persistence of {@link Activity} objects to a local file.","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":" * It supports loading activities from a specified file and saving activities back to that file. This class enables","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":" * the application to maintain state across sessions by reading from and writing to a file system.","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"public class LocalList {","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"     * The file object representing the local file where activities are stored.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"    private final File FILE;","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     * Constructs a {@code LocalList} instance with the specified file path.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     * @param filePath The file path for the local file.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    public LocalList(String filePath) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        this.FILE \u003d new File(filePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        initializeFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     * Initializes the file, creating it and its parent directories if they do not exist.","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"    private void initializeFile() {","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"        if (!FILE.exists()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"            // If the file doesn\u0027t exist, create directory and file","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"            FILE.getParentFile().mkdirs(); // Create parent directories if not existing","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"            try {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"                FILE.createNewFile(); // Create the file","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"     * Writes the given list of activities to the local file.","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"     * @param list The array of strings representing the activities to be written.","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"    public void write(String[] list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE))) {","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"            for (String activity : list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"                writer.write(activity);","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"     * Reads activities from the local file and updates the provided {@link ActivityList}.","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"     * @param list The {@link ActivityList} to be updated based on the contents of the local file.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"    public void read(ActivityList list) {","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"        assert list !\u003d null : \"ActivityList should not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE))) {","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"            String line;","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"            ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"            int index \u003d 0;","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"                lines.add(line);","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"            if (lines.isEmpty() || lines.get(0).isEmpty()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"                return;","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"            for (String currentLine : lines) {","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"                String[] words \u003d currentLine.split(\" /isMarked \");","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"                assert words.length \u003d\u003d 2 : \"Unexpected format in file\";","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"                if (words.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"                    phraseCommand(words[0]).execute(list);","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"                    if (words[1].equals(\"1\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"                        list.mark(index);","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"                    }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"                    index++;","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"                } else {","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"                    throw new CommandException(\"Error reading from file\");","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"                }","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"        } catch (IOException | CommandException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":107}},{"path":"src/main/java/Duke/UI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.UI;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":" * The {@code DialogBox} class represents a graphical user interface element for displaying dialog messages.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":" * It extends the {@link HBox} class and includes a label for text and an image view for displaying a display picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"     * The label for displaying text content in the dialog box.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * The image view for displaying a display picture in the dialog box.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"    private static final String USER_DIALOG_STYLE \u003d \"user-dialog\";","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    private static final String DUKE_DIALOG_STYLE \u003d \"duke-dialog\";","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"     * Constructs a new {@code DialogBox} with the specified label and image view.","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"     * @param text The label for displaying text content.","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"     * @param img The image view for displaying a display picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    private DialogBox(String text, Image img, boolean isUserDialog) {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"        dialog.textProperty().addListener((observable, oldValue, newValue) -\u003e adjustHeight());","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"        // Set style class based on the type of dialog (user or Duke)","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"        String backgroundColor \u003d isUserDialog ? \"-fx-border-color: grey;\"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"                : \"-fx-background-color: lightyellow; -fx-border-color: grey;\";","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"        this.setStyle(backgroundColor);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"    private void adjustHeight() {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"        // Calculate the preferred height based on the number of lines","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"        double lineHeight \u003d dialog.getFont().getSize();","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"        int numLines \u003d dialog.getText().split(\"\\n\").length;","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"        double preferredHeight \u003d numLines * lineHeight;","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"        // Set the preferred height and update the layout","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"        setPrefHeight(preferredHeight);","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"        layout();","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"     * Flips the alignment of the dialog box, changing it to be aligned to the top left.","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"     * This is used to represent messages from the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"    private void flip() {","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"     * Creates a new {@code DialogBox} representing a user dialog.","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"     * @param text The label for displaying text content.","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"     * @param img The image view for displaying a display picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"     * @return A new {@code DialogBox} representing a user dialog.","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"     * Creates a new {@code DialogBox} representing a Duke dialog.","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"     * Flips the alignment to indicate messages from Duke.","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"     * @param text The label for displaying text content.","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"     * @param img The image view for displaying a display picture.","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"     * @return A new {@code DialogBox} representing a Duke dialog.","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"        db.flip();","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"SeaHogs"},"content":"        return db;","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":110,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"SeaHogs":110}},{"path":"src/main/java/Duke/UI/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.UI;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":" * The {@code Launcher} class is responsible for launching the JavaFX GUI for the user interface.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"public class Launcher {","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"     * The main method that launches the JavaFX GUI by starting the {@link MainWindow} class.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"     * @param args Command-line arguments (not used in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"        Application.launch(MainWindow.class, args);","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"SeaHogs":18}},{"path":"src/main/java/Duke/UI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.UI;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import Duke.Converstion.Dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"import Duke.phrase.phrase;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":" * The {@code MainWindow} class represents the main window of the Duke application using JavaFX and FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":" * It handles user input, displays a conversation dialog, and executes commands based on user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"public class MainWindow extends Application {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"    private static boolean isTerminated \u003d false;","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"    private final Image client \u003d new Image(this.getClass().getResourceAsStream(\"/image/user.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/image/client.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"    private final ActivityList activityList \u003d new ActivityList(\"data/duke.txt\");","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"     * The main entry point for JavaFX application. It loads the FXML layout, sets up the scene, and shows the stage.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"SeaHogs"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"SeaHogs"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"SeaHogs"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"SeaHogs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"SeaHogs"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"SeaHogs"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"SeaHogs"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"SeaHogs"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"SeaHogs"},"content":"            stage.show();","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"SeaHogs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"SeaHogs"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"SeaHogs"},"content":"     * Initializes the main window after the FXML layout has been loaded.","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"SeaHogs"},"content":"     * It binds the vertical value property of the scroll pane and displays an initial greeting message from Duke.","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"SeaHogs"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"SeaHogs"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"SeaHogs"},"content":"        String msg \u003d Dialog.greetUser();","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"SeaHogs"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"SeaHogs"},"content":"                DialogBox.getDukeDialog(msg, client)","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"SeaHogs"},"content":"        );","lastModifiedDate":"2024-02-21"},{"lineNumber":78,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":79,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":81,"author":{"gitId":"SeaHogs"},"content":"     * Handles user input by creating dialog boxes for the user and Duke\u0027s response.","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"SeaHogs"},"content":"     * Clears the user input after processing and terminates the application if the user enters \"bye\".","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs while processing the user command.","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":86,"author":{"gitId":"SeaHogs"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"SeaHogs"},"content":"    private void handleUserInput() throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"SeaHogs"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"SeaHogs"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"SeaHogs"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"SeaHogs"},"content":"                DialogBox.getUserDialog(input, user),","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"SeaHogs"},"content":"                DialogBox.getDukeDialog(response, client)","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"SeaHogs"},"content":"        );","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"SeaHogs"},"content":"        if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"SeaHogs"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"SeaHogs"},"content":"            pause.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"SeaHogs"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"SeaHogs"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"SeaHogs"},"content":"            });","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"SeaHogs"},"content":"            pause.play();","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"SeaHogs"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":106,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"SeaHogs"},"content":"     * Retrieves Duke\u0027s response for a given user input by executing the corresponding command.","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"SeaHogs"},"content":"     * @param input The user input to process.","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"SeaHogs"},"content":"     * @return Duke\u0027s response to the user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs while processing the user command.","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"SeaHogs"},"content":"    private String getResponse(String input) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":114,"author":{"gitId":"SeaHogs"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":115,"author":{"gitId":"SeaHogs"},"content":"            Command command \u003d phrase.phraseCommand(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":116,"author":{"gitId":"SeaHogs"},"content":"            command.execute(activityList);","lastModifiedDate":"2024-02-21"},{"lineNumber":117,"author":{"gitId":"SeaHogs"},"content":"            return command.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"SeaHogs"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"SeaHogs"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"SeaHogs"},"content":"     * Gets the termination status of the application.","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"SeaHogs"},"content":"     * @return {@code true} if the application is terminated, {@code false} otherwise.","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"SeaHogs"},"content":"    public static boolean isTerminated() {","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"SeaHogs"},"content":"        return isTerminated;","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"SeaHogs":131}},{"path":"src/main/java/Duke/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.duke;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.UI.MainWindow;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":" * The main class for the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"public class Duke {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"     * Default constructor for the Duke class.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    public Duke() {","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"    private void runApp() {","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"        boolean isTerminated \u003d false;","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"        // Continue running the application until termination signal is received","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"        while (!isTerminated) {","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"            isTerminated \u003d MainWindow.isTerminated();","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"     * The main method that initializes and runs the Duke application.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"     * @param args Command-line arguments (not used in this case).","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"        new Duke().runApp();","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":39}},{"path":"src/main/java/Duke/phrase/phrase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Duke.phrase;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Commands.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.Exception.CommandException;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":" * The {@code Phrase} class is a utility class that parses a given input phrase and returns the corresponding","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":" * {@link Command} object. It is designed to recognize specific keywords in the input and instantiate the","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":" * appropriate command class based on those keywords.","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"public class phrase {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"     * Parses the given input phrase and returns the corresponding command.","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"     * @param input The input phrase to be parsed into a command.","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"     * @return The command corresponding to the parsed input phrase.","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"     * @throws CommandException If an error occurs during command parsing.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"    public static Command phraseCommand(String input) throws CommandException {","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"            throw new CommandException(\"It\u0027s all space! Please enter a valid command.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"        int trimIndex \u003d firstWord.length();","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"        String remainingWord \u003d input.substring(trimIndex).trim();","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"        switch (firstWord) {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"                return new AddTodo(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"                return new AddDeadline(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"            case \"event\":","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"                return new AddEvent(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"            case \"list\":","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"                return new ListActivity(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"                return new MarkActivity(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"                return new UnmarkActivity(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"            case \"find\":","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"                return new FindActivity(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"                return new DeleteActivity(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"                return new Terminate(remainingWord);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"            default:","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"                return new Unknown(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SeaHogs":51}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" spacing\u003d\"1.0\" style\u003d\"-fx-border-color: grey; \" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: reflection;\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"        \u003cjavafx.geometry.Insets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"SeaHogs":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke.UI.MainWindow\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"SeaHogs":19}},{"path":"src/test/java/Commands/DateFormatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"import Duke.Commands.DateFormat;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"public class DateFormatTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"    public void testFormat() {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"        // Arrange","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"        String dateStr \u003d \"2022-02-22\";","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"        // Act","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"        LocalDate formattedDate \u003d DateFormat.format(dateStr);","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"        // Assert","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"        assertEquals(LocalDate.parse(dateStr, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")), formattedDate);","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"    public void testCompareDate() {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"        // Arrange","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"2022-02-22\");","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"2022-02-23\");","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"        // Act","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"        boolean result \u003d DateFormat.compareDate(date1, date2);","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"        // Assert","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        assertTrue(result);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"    public void testReformatDate() {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"        // Arrange","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"        LocalDate date \u003d LocalDate.parse(\"2022-02-22\");","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"        // Act","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"        String reformattedDate \u003d DateFormat.reformatDate(date);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"        // Assert","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"        assertEquals(date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")), reformattedDate);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SeaHogs":50}},{"path":"src/test/java/Commands/LocalListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeaHogs"},"content":"package Commands;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"SeaHogs"},"content":"import Duke.Activities.ActivityList;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"SeaHogs"},"content":"import Duke.LocalStorage.LocalList;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"SeaHogs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"SeaHogs"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"SeaHogs"},"content":"import java.io.File;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"SeaHogs"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"SeaHogs"},"content":"import java.io.StringReader;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"SeaHogs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"SeaHogs"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"SeaHogs"},"content":"public class LocalListTest {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"SeaHogs"},"content":"    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"    public void testWriteAndRead() throws IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"SeaHogs"},"content":"        // Arrange","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"SeaHogs"},"content":"        String tempFilePath \u003d \"temp_test_file.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"SeaHogs"},"content":"        LocalList localList \u003d new LocalList(tempFilePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"SeaHogs"},"content":"        ActivityList activityList \u003d new ActivityList(tempFilePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"SeaHogs"},"content":"        // Create sample activities","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"SeaHogs"},"content":"        activityList.add(\"Task1\");","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"SeaHogs"},"content":"        activityList.add(\"Task2\");","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"SeaHogs"},"content":"        // Act","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"SeaHogs"},"content":"        localList.write(activityList.toStorageList());","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"SeaHogs"},"content":"        // Assert","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"SeaHogs"},"content":"        assertTrue(new File(tempFilePath).exists()); // File should exist after write","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"SeaHogs"},"content":"        // Act (read from file)","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"SeaHogs"},"content":"        ActivityList readActivityList \u003d new ActivityList(tempFilePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"SeaHogs"},"content":"        String read \u003d readActivityList.printActivities();","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"SeaHogs"},"content":"        // Assert","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"SeaHogs"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new StringReader(read))) {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"SeaHogs"},"content":"            String line;","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"SeaHogs"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"SeaHogs"},"content":"                // Process each line here","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"SeaHogs"},"content":"                assertEquals(\"Task1\", line);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"SeaHogs"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"SeaHogs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"SeaHogs"},"content":"            fail(\"IOException should not have been thrown\");","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"SeaHogs"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"SeaHogs"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"SeaHogs"},"content":"        // Clean up: delete the temporary file","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"SeaHogs"},"content":"        Files.deleteIfExists(new File(tempFilePath).toPath());","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"SeaHogs"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"SeaHogs"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"SeaHogs":51}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SeaHogs"},"content":"java -classpath ..\\bin Duke.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"SeaHogs":1}}]
