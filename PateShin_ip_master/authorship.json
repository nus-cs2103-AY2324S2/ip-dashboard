[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PateShin":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"T | 0 | hi","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":1}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"  public void execute(TaskList taskList, Ui ui, String userInput) throws DukeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"      if (userInput.isBlank()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"          throw new DukeException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"      }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"      Task newTask \u003d Parser.parseTask(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"      if (newTask !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"          taskList.addTask(newTask); // Use duke.task.TaskList to add the task","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"          ui.showTaskAdded(newTask, taskList.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"      } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"          throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"      }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":23}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"  public abstract void execute(TaskList taskList, Ui ui, String userInput) throws DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PateShin":7}},{"path":"src/main/java/duke/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"public enum CommandType {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"  LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":5}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"  public void execute(TaskList taskList, Ui ui, String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    int taskIndex \u003d Parser.extractTaskIndex(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    Task removedTask \u003d taskList.deleteTask(taskIndex); // Use duke.task.TaskList to delete task","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    if (removedTask !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        ui.showTaskDeleted(removedTask, taskList.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        throw new DukeException(\"Invalid task number. Please try again.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"    private static TaskList taskList; // Using duke.task.TaskList to manage tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"        taskList \u003d new TaskList(); // Initialize the duke.task.TaskList","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"            taskList.getTasks().addAll(Storage.loadTasks()); // Load tasks from storage","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    public void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        String userInput;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        do {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"            userInput \u003d ui.readCommand(); // Use the duke.Ui class to get user input","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"                Parser.processCommand(userInput).execute(taskList, ui, userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"            ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        } while (!userInput.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"PateShin":31,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"  public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"      super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PateShin":7}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  public void execute(TaskList taskList, Ui ui, String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"    ui.showGoodbye(); // Use the duke.Ui class to display a farewell message","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    Storage.saveTasks(taskList.getTasks()); // Use duke.task.TaskList to get tasks for storage","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    ui.closeScanner(); // Close the Scanner when done","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":14}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"  public void execute(TaskList taskList, Ui ui, String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    List\u003cTask\u003e tasks \u003d taskList.getTasks(); // Use duke.task.TaskList to get the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":15}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"  public void execute(TaskList taskList, Ui ui, String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    int taskIndex \u003d Parser.extractTaskIndex(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    Task task \u003d taskList.markTaskAsDone(taskIndex); // Use duke.task.TaskList to mark task as done","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    if (task !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        ui.showTaskDone(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        throw new DukeException(\"Invalid task number. Please try again.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":19}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"public class Parser {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    public static CommandType parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        String[] parts \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"        String commandStr \u003d parts[0].toUpperCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"            return CommandType.valueOf(commandStr);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    public static Command processCommand(String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"            CommandType command \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"                case LIST:","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"                    return new ListCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"                case MARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"                    return new MarkCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"                    return new UnmarkCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"                case DELETE:","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"                    return new DeleteCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"                case BYE:","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"                    return new ExitCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"                case TODO:","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"                case DEADLINE:","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"                case EVENT:","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"                    return new AddCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"                default:","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"    public static Task parseTask(String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        String[] parts \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Description cannot be empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"        String taskType \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"        String taskDetails \u003d parts[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"                return new Todo(taskDetails);","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"                return parseDeadline(taskDetails);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"PateShin"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"                return parseEvent(taskDetails);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"PateShin"},"content":"    private static Deadline parseDeadline(String taskDetails) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        String[] parts \u003d taskDetails.split(\"/by\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Invalid deadline format. Please include \u0027/by\u0027 followed by the deadline.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"PateShin"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"        String by \u003d parts[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"PateShin"},"content":"        LocalDateTime dateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"PateShin"},"content":"        return new Deadline(description, dateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"    private static Event parseEvent(String taskDetails) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"        String[] parts \u003d taskDetails.split(\"/from\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Invalid event format. Please include \u0027/from\u0027 followed by start time and \u0027/to\u0027 followed by end time.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"PateShin"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"        String[] dateAndTime \u003d parts[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"        if (dateAndTime.length \u003c 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Invalid event format. Please include \u0027/from\u0027 followed by start time and \u0027/to\u0027 followed by end time.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"        String start \u003d dateAndTime[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"        String end \u003d dateAndTime[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"        LocalDateTime startTime \u003d parseDateTime(start);","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"        LocalDateTime endTime \u003d parseDateTime(end);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"        // Check if the start time is before the end time","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Invalid event times. The start time is after the end time.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"        return new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"    public static LocalDateTime parseDateTime(String dateTimeStr) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"            if (dateTimeStr.equalsIgnoreCase(\"today\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"                return LocalDateTime.now().with(LocalTime.MIN);","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"PateShin"},"content":"            } else if (dateTimeStr.equalsIgnoreCase(\"tomorrow\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"                return LocalDateTime.now().plusDays(1).with(LocalTime.MAX);","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"            } else if (dateTimeStr.contains(\" \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"                return LocalDateTime.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"PateShin"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeStr, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"PateShin"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"PateShin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Invalid date/time format. Please use \u0027yyyy/MM/dd HHmm\u0027, \u0027yyyy/MM/dd\u0027, \u0027today\u0027, or \u0027tomorrow\u0027.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"PateShin"},"content":"    public static int extractTaskIndex(String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"PateShin"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"PateShin"},"content":"            return Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"PateShin"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"PateShin"},"content":"            throw new DukeException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PateShin":137}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"import java.io.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    private static final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    public static void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"                writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"            System.err.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    public static List\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        createEmptyFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"            String line;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"                Task task \u003d createTaskFromLine(line);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"            System.err.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    private static void createEmptyFile() throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"        File directory \u003d new File(\"./data\");","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"            directory.mkdir();","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"                throw new DukeException(\"File Creation Failed\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    private static Task createTaskFromLine(String line) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"      String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"      if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"          String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"          String status \u003d parts[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"          String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"PateShin"},"content":"          ","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"          Task task;","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"          switch (taskType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"PateShin"},"content":"              case \"T\":","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"                  task \u003d new Todo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"                  break;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"PateShin"},"content":"              case \"D\":","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"                  if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"PateShin"},"content":"                      String dateTimeString \u003d parts[3].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"PateShin"},"content":"                      if (dateTimeString.contains(\" \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"PateShin"},"content":"                          LocalDateTime byDateTime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"PateShin"},"content":"                          task \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"PateShin"},"content":"                      } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"PateShin"},"content":"                          LocalDate byDate \u003d LocalDate.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"PateShin"},"content":"                          task \u003d new Deadline(description, byDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"PateShin"},"content":"                      }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"PateShin"},"content":"                  } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"PateShin"},"content":"                      task \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"PateShin"},"content":"                  }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"PateShin"},"content":"                  break;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"PateShin"},"content":"              case \"E\":","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"PateShin"},"content":"                  if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"PateShin"},"content":"                      String dateAndTime \u003d parts[3].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"PateShin"},"content":"                      String[] event \u003d dateAndTime.split(\"-\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"PateShin"},"content":"                      if (event.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"PateShin"},"content":"                          String start \u003d event[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"PateShin"},"content":"                          String end \u003d event[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"PateShin"},"content":"                          // Parse the event start and end times","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"PateShin"},"content":"                          LocalDateTime startTime \u003d LocalDateTime.parse(start, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"PateShin"},"content":"                          LocalDateTime endTime \u003d LocalDateTime.parse(end, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"PateShin"},"content":"                          task \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"PateShin"},"content":"                      } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"PateShin"},"content":"                          task \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"PateShin"},"content":"                      }","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"PateShin"},"content":"                  } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"PateShin"},"content":"                      task \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"PateShin"},"content":"                  }","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"PateShin"},"content":"                  break;","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"PateShin"},"content":"              default:","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"PateShin"},"content":"                  task \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"PateShin"},"content":"                  break;","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"PateShin"},"content":"          }","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"PateShin"},"content":"          if (task !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"PateShin"},"content":"              if (status.equals(\"1\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"PateShin"},"content":"                  task.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"PateShin"},"content":"              }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"PateShin"},"content":"              return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"PateShin"},"content":"          }","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"PateShin"},"content":"      }","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"PateShin"},"content":"      return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":126}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    public Ui() {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"        System.out.println(\"\\n Hello! I\u0027m FICIN!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" \\nBye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" OOPS!!! \" + message);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"    public void showTaskAdded(Task task, int numberOfTasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    public void showTaskDone(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"    public void showTaskUndone(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"PateShin"},"content":"    public void showTaskDeleted(Task task, int numberOfTasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"PateShin"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"PateShin"},"content":"    public void showTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"PateShin"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"PateShin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"PateShin"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"PateShin"},"content":"        showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"PateShin"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"PateShin"},"content":"        scanner.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":82}},{"path":"src/main/java/duke/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"  public void execute(TaskList taskList, Ui ui, String userInput) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"    int taskIndex \u003d Parser.extractTaskIndex(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    Task task \u003d taskList.unmarkTask(taskIndex); // Use duke.task.TaskList to unmark task","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"    if (task !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"        ui.showTaskUndone(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"    } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"        throw new DukeException(\"Invalid task number. Please try again.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":19}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  protected LocalDateTime byDateTime; // Store the deadline date and time","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"  public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"      super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"      this.byDateTime \u003d byDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"  public Deadline(String description, LocalDate byDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"      super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"      this.byDateTime \u003d byDate.atStartOfDay();","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"  public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"      // Format: D | [Status] | [Description] | [Due Date]","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"      return \"D | \" + getStatusnumber() + \" | \" + description + \" | \" + byDateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"  public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"      StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"      builder.append(\"[D]\").append(super.toString()).append(\" (by: \").append(byDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"      if (byDateTime.toLocalTime().getHour() !\u003d 0 || byDateTime.toLocalTime().getMinute() !\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"          builder.append(\" at \").append(byDateTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"      }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"      builder.append(\")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"      return builder.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"  protected LocalDateTime from;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  protected LocalDateTime to;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"  public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"      super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"      this.from \u003d from;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"      this.to \u003d to;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"  public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"      // Format: E | [Status] | [Description] | [Start Time] - [End Time]","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"      return \"E | \" + getStatusnumber() + \" | \" + description + \" | \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"              from.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")) +","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"              \" - \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"              to.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"  public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"      StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"      builder.append(\"[E]\").append(super.toString()).append(\" (from: \").append(from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"      if (from.toLocalTime().getHour() !\u003d 0 || from.toLocalTime().getMinute() !\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"          builder.append(\" at \").append(from.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"      }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"      builder.append(\" to: \").append(to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"      if (to.toLocalTime().getHour() !\u003d 0 || to.toLocalTime().getMinute() !\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"          builder.append(\" at \").append(to.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"      }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"      builder.append(\")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"      return builder.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"  }  ","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"public class Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"  protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"  protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"  public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"      this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"      this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"  public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"      this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"  public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"      this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"  public String getStatusnumber() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"      return (isDone ? \"1\" : \"0\"); // Use \"1\" for done, \"0\" for not done","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    return (isDone ? \"[X]\" : \"[ ]\"); ","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"  public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"      // Format: [TaskType] | [Status] | [Description]","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"      return \"\"; // Implement this in each subclass (duke.task.Todo, duke.task.Deadline, duke.task.Event)","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"  ","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"  public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"      return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":38}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"public class TaskList {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"PateShin"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"PateShin"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"PateShin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"PateShin"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"PateShin"},"content":"            return tasks.get(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"PateShin"},"content":"        return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"PateShin"},"content":"    public Task markTaskAsDone(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"PateShin"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"PateShin"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"PateShin"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"PateShin"},"content":"            return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"PateShin"},"content":"        return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"PateShin"},"content":"    public Task unmarkTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"PateShin"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"PateShin"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"PateShin"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"PateShin"},"content":"            return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"PateShin"},"content":"        return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"PateShin"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"PateShin"},"content":"        if (isValidIndex(index)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"PateShin"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"PateShin"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"PateShin"},"content":"        return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"PateShin"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"PateShin"},"content":"        return index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"PateShin"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"package duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"PateShin"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"PateShin"},"content":"  public Todo(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"PateShin"},"content":"      super(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"PateShin"},"content":"  public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"PateShin"},"content":"      // Format: T | [Status] | [Description]","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"PateShin"},"content":"      return \"T | \" + getStatusnumber() + \" | \" + description;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"PateShin"},"content":"  @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"PateShin"},"content":"  public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"PateShin"},"content":"      return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"PateShin"},"content":"  }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"PateShin"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"PateShin":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PateShin"},"content":"todo Coding","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"PateShin"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PateShin":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"PateShin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PateShin":1,"-":20}}]
