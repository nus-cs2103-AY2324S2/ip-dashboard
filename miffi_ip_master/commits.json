{"authorDailyContributionsMap":{"miffi":[{"date":"2024-01-21","commitResults":[{"hash":"64a7f1d1358501c04f45fecd0e2d6f81e7541f9e","isMergeCommit":false,"messageTitle":"Add greeting and exit messages","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}},{"hash":"94066ddc4919e108e16cb0b7d0235d3c37c91685","isMergeCommit":false,"messageTitle":"Introduce said cat","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5}}},{"hash":"93086b6c5bb44452649b18711504153a0debc85f","isMergeCommit":false,"messageTitle":"Echo input back to user","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"841bfaca6d36555906adeafa1390f193ff516f27","isMergeCommit":false,"messageTitle":"Extract I/O logic into Main file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":0}}},{"hash":"0e5bbea629e32eea8b81dba6ab36f92da2030bbe","isMergeCommit":false,"messageTitle":"Add Task with simple adding and listing","messageBody":"","tags":["Level-2","A-Collections","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":35}}},{"hash":"a9533a78d7c9364e71a73875883ab7668b424dec","isMergeCommit":false,"messageTitle":"Inline parseCommand","messageBody":"It makes more sense for the control flow to break rather than to\nreturn whether it should end.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":20}}},{"hash":"994d8c493f7cfd00f36da899c3258a46c23e4b50","isMergeCommit":false,"messageTitle":"Make bye into a command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"d74fc4324b4096f62e7f19339aafd89d7a33899e","isMergeCommit":false,"messageTitle":"Add index information into Duke\u0027s messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"1376ac00c0f4dbb4f73c4a116dcee91b3809fe35","isMergeCommit":false,"messageTitle":"Add Marking and Unmarking","messageBody":"","tags":["Level-3","A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":8}}},{"hash":"1a2d648d820e1a906e75a2c3e2ea3c634382e136","isMergeCommit":false,"messageTitle":"Add Task subclasses","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":0}}},{"hash":"6eae0ff6140de48aca91e0bd866cc338faf2f2d9","isMergeCommit":false,"messageTitle":"Typos","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"541cac3a7cfd4b0fb92f787473d87efd4afe4874","isMergeCommit":false,"messageTitle":"Make the absence of a command an error","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"a3143335073d7a144b03840e58d9bca6fa5289b5","isMergeCommit":false,"messageTitle":"Add I/O capabilities for Todos, Deadlines and Events","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":7}}},{"hash":"2e4f2bf4eb4308600e488a131c2d3c92e6d34d5d","isMergeCommit":false,"messageTitle":"refactor: move component handling entirely into Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":33}}},{"hash":"0c1c7eb6589e1de44b155a1af6101e9563d3c40c","isMergeCommit":false,"messageTitle":"refactor: Move task creation logic into a factory method for Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":67}}},{"hash":"af30d72783ba6d82c928cde670ecb069dbbff022","isMergeCommit":false,"messageTitle":"Make Task an abstract class","messageBody":"It is not going to be called by itself. It needs a category.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"e11a408da93ab5ca96f6468125123df88a5f6868","isMergeCommit":false,"messageTitle":"refactor: Change Main to Duke and Duke to TaskList","messageBody":"Some scripts are dependent on the main entrypoint being Duke\n","fileTypesAndContributionMap":{"java":{"insertions":108,"deletions":108}}},{"hash":"e1314e8e921831750c2bbc9504d80618cd3f23df","isMergeCommit":false,"messageTitle":"Add Automated Text UI Testing","messageBody":"","tags":["Level-5","A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0}}},{"hash":"c91d9b5f5ffe8217911afd2cd406ed4f86ab4b5b","isMergeCommit":false,"messageTitle":"Add deletion capabilities","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":14,"deletions":0}}},{"hash":"999982fd8a1b61690921727c534e6d1d8e7bbf3e","isMergeCommit":false,"messageTitle":"refactor: Make TaskNotFound synthesize message from index","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}}]},{"date":"2024-01-27","commitResults":[{"hash":"785654b229701a24efdd0757ef44e4a5ed3c9122","isMergeCommit":false,"messageTitle":"chore: formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":58}}},{"hash":"bb81fff487192333939f156e90e9a07e8ac75749","isMergeCommit":false,"messageTitle":"Add state saving and loading","messageBody":"This uses java\u0027s built in serialization as it\u0027s the easiest and most\nfault tolerant way to save the entire state.\n","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":3}}},{"hash":"37d081729eb32e922be6f1c563d7d1513e0ce62c","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"6a56c1ea0be4b327348437dab0b1576bd260c0d3","isMergeCommit":false,"messageTitle":"refactor: remove redundant `this`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"012b61662d4330b87e6fd79c6d096f4ba85865d5","isMergeCommit":false,"messageTitle":"refactor: Split code to packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":0}}},{"hash":"bc374eabcb64647a107e15e4357aa2cde18bdf6b","isMergeCommit":false,"messageTitle":"Use DateTime instead of strings for dates in Tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":7}}},{"hash":"2c0e65afaaa8391dfb2a23ccefa3c2448482c90e","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"de05f27b174de41b04b7490242d8a223c3d3f755","isMergeCommit":false,"messageTitle":"Abstract storage to a separate class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":15}}},{"hash":"07e235ce666eb8b15a3c77a0f52d2ff582237b37","isMergeCommit":false,"messageTitle":"Add final to methods that shouldn\u0027t be overridden","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"f831f61e0420fb06e50e27ae1fe7616ebe2083b9","isMergeCommit":false,"messageTitle":"Abstract Ui out into a separate class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":31}}},{"hash":"53f8acf564b7b1331f68ae1df1942c9f937cb610","isMergeCommit":false,"messageTitle":"Remove dead code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":16}}},{"hash":"7b15d37ecb4e15e9037296add93584a41d9715de","isMergeCommit":false,"messageTitle":"Move task component validation to subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":9}}},{"hash":"c9ed149f1a9810ab673f902021165fd2bd3f4fe0","isMergeCommit":false,"messageTitle":"Abstract commands into their respective classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":263,"deletions":103}}},{"hash":"1491b3c8cbbe1e9d42fdbd90ed14eb3a041461fb","isMergeCommit":false,"messageTitle":"Make storage in Duke final","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b71424662cc16e47ce26381383dd62da357b297a","isMergeCommit":true,"messageTitle":"Merge branch \u0027more-oop\u0027","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"eaacda8e33117815f6201e62f7d8c4474fd59cea","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"dcde93e64db3e8d28474cfe827443ef4ec23c509","isMergeCommit":false,"messageTitle":"Change class name in gradle","messageBody":"I don\u0027t have the same directory structure as they expect.\n","tags":["v0.1","A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"751f1672a3f050c310fa67d12728fc70390f7bac","isMergeCommit":false,"messageTitle":"refactor: Move Parser to top level package","messageBody":"Mistakenly created it in the Task package.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"349d6af61ac9e7a1b0d7c48ab6cd4a052ab2a70b","isMergeCommit":false,"messageTitle":"Fix and test edge cases of the parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":9}}},{"hash":"315a25b8305bdc71ad5bf170d8e9daa95c4473a9","isMergeCommit":false,"messageTitle":"Handle component validation edge case.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"23e7cbb7bcdfa9cce5168d97d66958fed15e886a","isMergeCommit":false,"messageTitle":"Remove ending newline from taskList toString","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"0d3eea0da364bab7056319e675dbfa1ba9bbcd16","isMergeCommit":false,"messageTitle":"Add more Task test cases","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"95aed7bb4334908b3afa47cffb6db8bd1e751161","isMergeCommit":false,"messageTitle":"Add docs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":211,"deletions":4}}},{"hash":"2f5236bceecc95efa3ec6ee3196922bd9870bd81","isMergeCommit":false,"messageTitle":"Follow coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":11}}},{"hash":"71d78cf47f30d9f2c493c1ee445fc339a48f17d8","isMergeCommit":false,"messageTitle":"Remove redundant parameter documentation","messageBody":"Looking at the coding standard, I realised that a lot of the\nparameter documentation isn\u0027t necessary as they are obvious.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":13}}},{"hash":"5a2732024d005dbd7d3eb087ca9ee5c4274d7c3f","isMergeCommit":false,"messageTitle":"fix: fixes list output regression","messageBody":"The change to the list output broke when there was zero elements.\nIt also showed the first element twice.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"96d56d553d0e541908970b80948cac466419309d","isMergeCommit":false,"messageTitle":"Add find command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":1}}},{"hash":"fcdf0c368c8de5c3cc3ba35245e5227adb47ad3d","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"846ccac67e72681e7a44f04191f8c73bba32ebf2","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"bf8fd877968742e3c94363426ff9c2c525ba6050","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","tags":["Level-9","A-JavaDoc","A-CodingStandard"],"fileTypesAndContributionMap":{}}]},{"date":"2024-01-28","commitResults":[{"hash":"533c17a40da3bd1474cff1fb813f33ed27ef2d67","isMergeCommit":false,"messageTitle":"Fix extra space at the start of task description","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"869821fcd283cb67ce44debb671d61d7552e28ac","isMergeCommit":false,"messageTitle":"Handle invalid date parameter","messageBody":"Previously it just unceremoniously crashed.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":2}}},{"hash":"2bda94b30484bd080d03d28e5c2d03e7ec357991","isMergeCommit":false,"messageTitle":"Add credit for inspiration","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}}]},{"date":"2024-02-01","commitResults":[{"hash":"9f30eb56be6f7ea1155220bde14c27f686863f05","isMergeCommit":false,"messageTitle":"style: use expression lambdas","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":12}}}]},{"date":"2024-02-02","commitResults":[{"hash":"3086a5b33610da438961b3f6a9e18520b389d917","isMergeCommit":false,"messageTitle":"Add test cases for valid Task components","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":5}}}]},{"date":"2024-02-03","commitResults":[{"hash":"e66b5e92bd6ce4a5948f19a2c727e86f58832c7e","isMergeCommit":false,"messageTitle":"Add checkstyle configuration","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"714bf4248ae8ce4adf9825de4a4b9e512370fa4a","isMergeCommit":false,"messageTitle":"style: fix checkstyle warnings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":34}}},{"hash":"ccdcc21fdae2a87c8bf9e727871b1a8fd6696776","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"84f025c8aa6ffa69a5f715e466cb834145cf8af9","isMergeCommit":false,"messageTitle":"Fix NullPointerException in empty component","messageBody":"There was a check to make sure that when no string without a / comes\nafter a component, it caused an exception. It did this by checking the\nlength, but the `StringBuilder` is null until after getting the first\npart of the component parameter. Therefore, the length check caused a\nNullPointerException.\n\nThe fix was to check if the builder is `null` instead.\n","tags":["A-Varargs"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2024-02-07","commitResults":[{"hash":"53ab845ad66105db6eedbd7c3652d6eed78bf9ab","isMergeCommit":false,"messageTitle":"Add preliminary GUI","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":149,"deletions":1}}}]},{"date":"2024-02-08","commitResults":[{"hash":"f6b61f36da62dc71622b24cdb8325ad1f08f014a","isMergeCommit":false,"messageTitle":"refactor: move GUI to a separate ui package","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":14,"deletions":11}}},{"hash":"a3854961f490bcee6420fb88afd6e4ae308fdee7","isMergeCommit":false,"messageTitle":"Save data on GUI close","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"f26c8f9746da18dd2c87a50dc5bcf1180ae4438d","isMergeCommit":false,"messageTitle":"Add missing javaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":12}}},{"hash":"723e1f3c93cf60a42db1b86328803f569abb1f70","isMergeCommit":false,"messageTitle":"Hook Duke to GUI","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":10}}}]},{"date":"2024-02-10","commitResults":[{"hash":"6b8d3f26765d6edc97c18b4390faece2bf0235bc","isMergeCommit":false,"messageTitle":"Change main class to Launcher","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"cb5d8da2105937326ff803f3b4161a20f7076aa7","isMergeCommit":false,"messageTitle":"Enable assertions in gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0}}},{"hash":"3de246bc04c68cf3d50676d4e3e09c59271457fb","isMergeCommit":false,"messageTitle":"Add null safety asserts","messageBody":"The code has too many implicit assumptions about null safety. The\nprogram can crash from a null pointer in some obscure place from a\nregression.\n\nThe assumptions are made explicit with non-null assertions to fix this.\n\nMaking all the non-null assumptions explicit stops null parameters at\nthe earliest possible point of execution. This will hopefully make the\nerror show nearer to the source of the null, so that they can be more\neasily debugged.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":1}}},{"hash":"8f3897f65b6109d0842d2e8446a9fa31709004ed","isMergeCommit":false,"messageTitle":"Replace for loops with streams","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":17}}},{"hash":"07ad5d138f357b6efe926a3c592098fe0d5f90ba","isMergeCommit":false,"messageTitle":"refactor: Extract methods and variables","messageBody":"A lot of the functions use a single level of abstraction. Therefore, the\ncode is hard to understand.\n\nThe fix was to extract out the mthods and variables to make the code\nstreamlined.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":22}}},{"hash":"3b663a40d48d965a0e2926d0012f01a936bf13f2","isMergeCommit":false,"messageTitle":"refactor: remove magic strings in the parser","messageBody":"The parser uses strings to match commands. This makes checking whether\nthe commands are valid to be error prone as a typo would mess it up. It\nalso makes it very inflexible as the string can only match one type.\n\nTo solution was to make an enum of the command type and moving command\ntype parsing logic to a static method in the enum.\n\nThis decouples checking the parsing to the enum, and it opens up to\nmore flexible parsing. This also means that we can write the parser and\nbe sure of exhaustiveness.\n","fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":27}}},{"hash":"57b219fa6030e109870883cc7d8d416d786b8655","isMergeCommit":false,"messageTitle":"refactor: extract more variables and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":13}}},{"hash":"7d2e792494ccf2ba231819c12fdb2a809ddf3746","isMergeCommit":false,"messageTitle":"refactor: remove dead code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":96}}},{"hash":"2d6a62233e180f0bb71d72ddd9b8026861e7ed90","isMergeCommit":false,"messageTitle":"refactor: extract parser empty builder check to method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":4}}},{"hash":"a58fdfd422d5449ca40ea86ecd1acd56c04a1c9e","isMergeCommit":false,"messageTitle":"refactor: remove dead exit check code","messageBody":"The code is not being used any more so it\u0027s time to remove it.\n\n`ExitCommand` can still be used for prompting during exit or something\nso that should remain.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":14}}},{"hash":"a1e1f67892498fefbdacb4dfbc1544161addb527","isMergeCommit":true,"messageTitle":"Merge pull request #1 from miffi/branch-A-CodeQuality","messageBody":"Branch for code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}},{"hash":"a97dac75402277ff9b6d23127536e9afb3d44af9","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-Assertions","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"1ea08a90dcef25d8cd24364528292eb02d992bba","isMergeCommit":true,"messageTitle":"Merge pull request #2 from miffi/branch-A-Assertions","messageBody":"Branch of assertions","tags":["A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"d05a3a60dc9d6f25333413c20b5b0b5e3aa3691a","isMergeCommit":true,"messageTitle":"Merge pull request #3 from miffi/branch-A-Streams","messageBody":"Replace for loops with streams","tags":["A-Streams"],"fileTypesAndContributionMap":{}},{"hash":"6dd453776ac97b68f32859563da5f5ffc6a9feb3","isMergeCommit":false,"messageTitle":"style: fix checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":2}}},{"hash":"ff5242ff03171ab25ffddf20381e3bfc40706584","isMergeCommit":false,"messageTitle":"Remove redirection test","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":17},"bat":{"insertions":0,"deletions":21},"sh":{"insertions":0,"deletions":38}}},{"hash":"d81bfdb58d40cd5364739cf83baae4655aac7a2f","isMergeCommit":false,"messageTitle":"Rename duke to cat","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":71,"deletions":71}}},{"hash":"b47929254749b4401078b34813f1ca6d45669530","isMergeCommit":false,"messageTitle":"Fix description not being detected","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":11,"deletions":4},"java":{"insertions":51,"deletions":52}}},{"hash":"46d0d6fd80b7e4a01ecd8d012dabb2b3bf0c4840","isMergeCommit":false,"messageTitle":"Add a help command","messageBody":"","tags":["C-Help"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":0}}}]},{"date":"2024-02-11","commitResults":[{"hash":"dde65999dc64f7d8fd504e0d9f4f179e3d5fd1b9","isMergeCommit":false,"messageTitle":"Handle multiple indices in completion and deletion","messageBody":"","tags":["C-MassOps","BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":28}}}]},{"date":"2024-02-17","commitResults":[{"hash":"ec570f0a128bddacec88c8f44632fadc36b25622","isMergeCommit":false,"messageTitle":"Add response classes and UI","messageBody":"Right now, as the week 6 better gui incentive outlined, the chat like Ui\nis not really that indicative of the interaction between the app and the\nuser.\n\nTherefore, I\u0027m refactoring some of the code to make the UI emit a\nResponse class for the app, and this respose will seem very different\nfrom the user\u0027s input.\n","fileTypesAndContributionMap":{"fxml":{"insertions":48,"deletions":17},"java":{"insertions":103,"deletions":89}}},{"hash":"54c3021c84323fbf2e7a09e3594b47213cdc5051","isMergeCommit":false,"messageTitle":"Finish UI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":120,"deletions":142}}},{"hash":"95f08d58e9dafc0a193215d7c11fe9d8c5a04a65","isMergeCommit":false,"messageTitle":"Make ErrorResponse able to construct from string","messageBody":"Some of the code makes Exceptions with a message string just to pass\nthem to ErrorResponse. This indirection makes no sense.\n\nTherefore, this commit adds an overloaded constructor to construct from\na String as well.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":2}}},{"hash":"3eaec8822abf602e47c1f4129682091f71fec00b","isMergeCommit":false,"messageTitle":"Fix checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":24,"deletions":6}}},{"hash":"a4dfe917b59643efc971f45a94e371c268632333","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-BetterGUI\u0027","messageBody":"","tags":["A-Personality","A-BetterGui","A-BetterGUI"],"fileTypesAndContributionMap":{}},{"hash":"8ddd1ff629d7140ee39c1c4d879aedc186d187f7","isMergeCommit":false,"messageTitle":"Add handling of invalid date time range","messageBody":"","tags":["A-MoreErrorHandling"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"6d70ae67cfd2dccd9a69aca1c2e7689bb00c2ead","isMergeCommit":false,"messageTitle":"Use getMessage instead of toString for errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"7d73994acfa92f35fead842e2613597064fbff0a","isMergeCommit":false,"messageTitle":"Remove redundant Pane in Response","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":5,"deletions":11},"java":{"insertions":1,"deletions":4}}},{"hash":"9368e9a8d586f657446cc25f279849382a584d76","isMergeCommit":false,"messageTitle":"Remove invalid help and images","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"0f8c952d08ca3a28cb929b1d02cbf7055bd9377b","isMergeCommit":false,"messageTitle":"Fix style warnings from SoC SE Bot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"07e4b1e54e9f471c3d17af810bc526708725b489","isMergeCommit":false,"messageTitle":"Fix javadoc style errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":28}}},{"hash":"999fa950bc8717112855d0bacb3dda1004c5d916","isMergeCommit":false,"messageTitle":"Add user guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":85,"deletions":14}}},{"hash":"60ebc78a0d949188de66080136c6d672559a34e3","isMergeCommit":false,"messageTitle":"Remove redundant Command storage parameter","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":10}}},{"hash":"e0924f8404c44660a0935bcb5b03599498a9265e","isMergeCommit":false,"messageTitle":"Fix branding","messageBody":"","tags":["v0.2"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":4},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":2,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"miffi":{"java":1358,"md":85,"fxml":67,"sh":0,"bat":0,"gradle":25,"txt":0}},"authorContributionVariance":{"miffi":104347.15},"authorDisplayNameMap":{"miffi":"CS2103T-W13-2 AHMA..AQUE"}}
