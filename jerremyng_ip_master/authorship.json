[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerremyng":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.StorageException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"//main class for the bot","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"            this.taskList \u003d this.storage.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"            this.ui.showError(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"            //todo: ask the user if want to create new datafile, possibly deleting old data","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        ui.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        ui.showList(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        ui.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"                String fullCommand \u003d this.ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"                isExit \u003d c instanceof ByeCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"                ui.showError(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"            } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"                ui.showLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jerremyng":47,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.MissingInfoException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.ParserException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"//converts the input string from user to a duke.command.Command object","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"public class Parser {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     * Parses user input and converts it to a duke. Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * The duke.Command object can then be executed to perform the duke.command.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     * @param input user input as a string","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     * @return a duke.command.Command object","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     * @throws DukeException specific exception class will depend on error encountered","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"     * @see Command","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        String clean \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        String[] tokens \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Master, please give me a duke.command!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        } else if (clean.equals(\"list\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        String command \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"        switch (command) {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"            return parseMarkCommand(tokens[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"            return parseUnmarkCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"            return parseDeleteCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"            return parseTodoCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"            return parseDeadlineCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        case \"event\":","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"            return parseEventCommand(tokens[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"        default:","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"I dont understand you!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"                    + \" Please be dont scold me and be gentle with me! Try again!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"    private static Command parseMarkCommand(String tokens) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"            return new MarkCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I dont know which duke.command.task you are trying to mark! Try a number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"    private static Command parseUnmarkCommand(String tokens) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"            return new UnmarkCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I dont know which duke.command.task you are trying to unmark! Try a number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"    private static Command parseDeleteCommand(String tokens) throws IllegalParamException{","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"            int taskId \u003d Integer.parseInt(tokens.trim());","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"            return new DeleteCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I dont know which duke.command.task you are trying to delete! Try a number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"    private static Command parseTodoCommand(String tokens) throws MissingInfoException {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"        if (tokens.trim().equals(\"\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Bro u gotta describe the duke.command.task!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"        String taskName \u003d tokens.trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"        return new ToDoCommand(taskName);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"    private static Command parseDeadlineCommand(String tokens) throws MissingInfoException,","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"                                                                      ParserException {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"        String[] parts \u003d tokens.split(\"/by\");","lastModifiedDate":"2024-01-21"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-21"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Looks like you are missing \u0027/by\u0027! Use \u0027/by\u0027 to tell me the deadline!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"        String task \u003d parts[0].trim();","lastModifiedDate":"2024-01-21"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"        String deadlineString \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"        //check if fields have values","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"You have to tell me the description too! Or I cant remember it!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"        } else if (deadlineString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"You need a deadline! Or you will never get to it!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"        //parse string","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"            LocalDate deadline \u003d LocalDate.parse(deadlineString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"            return new DeadlineCommand(task, deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Invalid date/time format for the deadline!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"                    + \"Please use a dd MMM yyyy format (e.g. 21 Jan 2000).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"    private static Command parseEventCommand(String tokens) throws DukeException {","lastModifiedDate":"2024-01-21"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"        String[] parts \u003d tokens.split(\"/from|/to\");","lastModifiedDate":"2024-01-21"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-01-21"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Missing /from or /to! Use those to indicate times!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"        String startString \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"        String endString \u003d parts[2].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"        if (tokens.indexOf(\"/from\") \u003e tokens.indexOf(\"/to\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"            String temp \u003d startString;","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"            startString \u003d endString;","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jerremyng"},"content":"            endString \u003d temp;","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":136,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":137,"author":{"gitId":"jerremyng"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Tasks needs a name! Or I cant remember it!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"jerremyng"},"content":"        } else if (startString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Please tell me when it starts!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"jerremyng"},"content":"        } else if (endString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"jerremyng"},"content":"            throw new MissingInfoException(\"Please tell me when it ends!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":144,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"jerremyng"},"content":"        //parse string","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jerremyng"},"content":"            LocalDate startDate \u003d LocalDate.parse(startString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jerremyng"},"content":"            LocalDate endDate \u003d LocalDate.parse(endString, Task.getDateFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jerremyng"},"content":"            return new EventCommand(description, startDate, endDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"jerremyng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"jerremyng"},"content":"            throw new ParserException(\"Invalid date/time format for the deadline!\"","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"jerremyng"},"content":"                    + \"Please use a dd MMM yyyy format (e.g. 21 Jan 2000).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":157,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"jerremyng":157}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.StorageException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"/** Helper class to manage all storage related methods of duke. */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    private File file;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"     * Constructs a duke.Storage object with the data file","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     * Verifies if this file exists, and will create a new file/directory if needed","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"            // Check if the parent directory exists; if not, create it","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"            File parentDir \u003d file.getParentFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"            if (!parentDir.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"                if (parentDir.mkdirs()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"                    System.out.println(\"Created parent directory at: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"                    throw new RuntimeException(\"Error creating parent directory at: \" + parentDir.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"            // Check if file exist, if not create","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"                System.out.println(\"Data not found, created new file at: \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"                System.out.println(\"Data found at: \" + filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(\"Error creating file: \" + e.getMessage(), e);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"     * Saves contents of taskList to memory","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"     * @param taskList duke.command.task.TaskList instance to save","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"     * @see TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"                fw.write(task.getTokens() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"     * Loads taskList from datafile and returns a duke.command.task.TaskList object","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"     * @return duke.command.task.TaskList object","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"     * @throws StorageException","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"     * @see TaskList","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"    public TaskList load() throws StorageException{","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"            Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"                Task next_task \u003d parseLineFromStorage(s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"                taskList.add(next_task);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"            throw new StorageException(\"File / Directory does not exist.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"        return taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"    private Task parseLineFromStorage(String tokens) throws StorageException {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"            String[] data \u003d tokens.split(\",\");","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"            switch (data[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"            case \"TODO\":","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"                return Task.createTask(TaskType.TODO, data[1], Boolean.parseBoolean(data[2]));","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"            case \"EVENT\":","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"                return Task.createTask(TaskType.EVENT, data[1], Boolean.parseBoolean(data[2]),","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"                        LocalDate.parse(data[3], Task.getDateFormat()),","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"                        LocalDate.parse(data[4], Task.getDateFormat()));","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"//                    return new Event(data[1], Boolean.parseBoolean(data[2]),","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"//                            LocalDate.parse(data[3], Task.getDateFormat()),","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"//                            LocalDate.parse(data[4], Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"                return Task.createTask(TaskType.DEADLINE, data[1], Boolean.parseBoolean(data[2]),","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"                        LocalDate.parse(data[3], Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"//                    return new Deadline(data[1], Boolean.parseBoolean(data[2]), LocalDate.parse(data[3], Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"                throw new StorageException(\"Data file is corrupted, task type does not exist\");","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException | IllegalArgumentException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"            throw new StorageException(\"Data file is corrupted, error parsing data: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jerremyng":117}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" * Class to deal with interactions with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":" * This class requests input from the user and also show the status of their transaction through messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        System.out.println(\"Hello and welcome! I\u0027m fakegpt!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        System.out.println(\"Bye bye! Thanks for using me! I will remember the tasks you have to do!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     * Displays the list to user","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    public void showList(TaskList list) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        System.out.println(list);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    public void showLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"        System.out.println(\"-----------------------------------------------\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"     * Returns next input from user","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"     * @return a string from user input in CLI","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"     * Prints out a message describing error encountered.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"     * @param e duke.exceptions.DukeException object","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jerremyng":58}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"        ui.showBye();","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":13}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":" * Commands are a family of classes that represent commands from the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":" *  defining execute method.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"     * Executes actions to complete the duke.command.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"     * @param list a duke.command.task.TaskList object containing current tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * @param ui a duke.Ui object. Receives instructions on how to update the user interface.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     * @param storage duke.Storage object. For saving changes to memory.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public abstract void execute(TaskList list, Ui ui, Storage storage) throws IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":23}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        Task newDeadline \u003d Task.createTask(TaskType.DEADLINE, description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        list.add(newDeadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"added new deadline: \" + newDeadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":28}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    private int id;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"        list.deleteTask(this.id);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":22}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    private String task;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public EventCommand(String task, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        Task newEvent \u003d Task.createTask(TaskType.EVENT, task, start, end);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        list.add(newEvent);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"added new event: \" + newEvent);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        ui.showList(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    private int id;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    public MarkCommand(int id) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"            Task done \u003d list.getTask(id);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"            done.setDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"            storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"Thats sick! Great work, marked as done!\\n\" + done);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        } catch (IllegalParamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(e.getMessage() + \" Unable to mark duke.command.task!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":25}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskType;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    public ToDoCommand(String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d name;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        Task newTask \u003d Task.createTask(TaskType.TODO, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"        list.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"added new ToDo: \" + newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        ui.showMessage(\"Looks like you have \" + list.countTasks() + \" things left to do!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":24}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private int id;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    public UnmarkCommand(int id) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    public void execute(TaskList list, Ui ui, Storage storage) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"            Task notDone \u003d list.getTask(this.id);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"            notDone.setNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"            storage.save(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"            ui.showMessage(\"Awh why uncheck me :( Its ok, it is what it is!\\n\" + notDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"        } catch (IllegalParamException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(e.getMessage() + \" Unable to unmark duke.command.task!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":27}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":9}},{"path":"src/main/java/duke/exceptions/IllegalParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public class IllegalParamException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    public IllegalParamException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":7}},{"path":"src/main/java/duke/exceptions/MissingInfoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public class MissingInfoException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    public MissingInfoException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":7}},{"path":"src/main/java/duke/exceptions/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public class ParserException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    public ParserException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":7}},{"path":"src/main/java/duke/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    public StorageException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"     * Contructs new deadlibe object with a description and a due date.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"     * @param description Brief description of duke.command.task.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"     * @param by LocalDateTine object","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    public Deadline(String name, boolean isDone, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(Task.getDateFormat()) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"     * @return description + isDone + from + to","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\",  TaskType.DEADLINE.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"                super.getTokens(), this.by.format(Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"    private LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    public Event(String name, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    public Event(String name, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(Task.getDateFormat())","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"                + \" to: \" + this.to.format(Task.getDateFormat()) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     * @return description + isDone + from + to","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", TaskType.EVENT.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"                super.getTokens(),","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"                this.from.format(Task.getDateFormat()),","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"                this.to.format(Task.getDateFormat()));","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":" * Task class represents a generic task with a description and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":" * Subclasses (ToDo, Event, Deadline) provide specific implementations.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"     * Description of duke.command.task as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    private String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    /** Boolean Flag of whether the duke.command.task is done.*/","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"    /** Format style for dates of Tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"     * Constructs duke.command.task with specified description.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"     * @param description Description of task","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"     * Constructs a task with isDone flag set explicitly.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"     * @param description Brief description of duke.command.task.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"     * @param isDone      String representing boolean value.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"     * Creates instances of Task subclasses.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"     * This factory method is used to create the appropriate subclass based on type, description, and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"     * @param type            The type of task to create (ToDo, Event, Deadline).","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"     * @param description     A brief description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"     * @param isDone          The completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"     * @param dates           Number of dates params are specific to the task type","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"     *                        For EVENTS: pass two LocalDate objects representing start and end dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"     *                        For DEADLINES: pass one LocalDate object","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"     *                        For TODOs, no additional data is needed.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"     * @return An instance of the specified Task subclass.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"     * @throws IllegalArgumentException If the provided task type is unsupported.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"jerremyng"},"content":"    public static Task createTask(TaskType type, String description, boolean isDone, LocalDate... dates) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"jerremyng"},"content":"        switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"jerremyng"},"content":"        case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"jerremyng"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"jerremyng"},"content":"        case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"jerremyng"},"content":"            return new Event(description, isDone, dates[0], dates[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"jerremyng"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jerremyng"},"content":"            return new Deadline(description, isDone, dates[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"jerremyng"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalArgumentException(\"Unsupported task type: \" + type);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"jerremyng"},"content":"        /**","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"jerremyng"},"content":"         * Creates instances of Task subclasses.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"jerremyng"},"content":"         * This overloaded factory method is used to create Tasks with false for the value of isDone","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"jerremyng"},"content":"         *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"jerremyng"},"content":"         * @param type            The type of task to create (ToDo, Event, Deadline).","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jerremyng"},"content":"         * @param description     A brief description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"jerremyng"},"content":"         * @param dates           Number of dates params are specific to the task type","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"jerremyng"},"content":"         *                        For EVENTS: pass two LocalDate objects representing start and end dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"jerremyng"},"content":"         *                        For DEADLINES: pass one LocalDate object","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"jerremyng"},"content":"         *                        For TODOs, no additional data is needed.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"jerremyng"},"content":"         * @return An instance of the specified Task subclass.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"jerremyng"},"content":"         * @throws IllegalArgumentException If the provided task type is unsupported.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"jerremyng"},"content":"         */","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"jerremyng"},"content":"        public static Task createTask(TaskType type, String description, LocalDate... dates) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jerremyng"},"content":"            switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"jerremyng"},"content":"                case TODO:","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"jerremyng"},"content":"                    return new ToDo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"jerremyng"},"content":"                case EVENT:","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"jerremyng"},"content":"                    return new Event(description, dates[0], dates[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"jerremyng"},"content":"                case DEADLINE:","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"jerremyng"},"content":"                    return new Deadline(description, dates[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"jerremyng"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"jerremyng"},"content":"                    throw new IllegalArgumentException(\"Unsupported task type: \" + type);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"jerremyng"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"jerremyng"},"content":"     * Sets this duke.command.task as done","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"jerremyng"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"jerremyng"},"content":"     * Sets this duke.command.task as not done","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"jerremyng"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"jerremyng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"jerremyng"},"content":"        String mark \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"jerremyng"},"content":"        return mark + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"jerremyng"},"content":"     * Gets the date format style from the class.","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"jerremyng"},"content":"     * @return DateTimeFormatter object.","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"jerremyng"},"content":"    public static DateTimeFormatter getDateFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"jerremyng"},"content":"        return Task.DATE_FORMATTER;","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"jerremyng"},"content":"     * Returns a string containing information of duke.command.task in a clean machine-readable format","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"jerremyng"},"content":"     * \"{description},{isDone}\"","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"jerremyng"},"content":"     * @return string with tokens separated by space","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", this.description, String.valueOf(this.isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":144}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"import duke.exceptions.IllegalParamException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"import java.util.List;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"public class TaskList implements Iterable\u003cTask\u003e{","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"        String out \u003d \"Here is the list of things I remember!\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"        for (Task currentItem : this.taskList) {","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"            out +\u003d count + \".\" + currentItem + \"\\n\";","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"            count++;","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"        return out.equals(\"\") ? \"Looks like you have nothing to do! Yay!\\n\" : out;","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jerremyng"},"content":"        return taskList.iterator();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jerremyng"},"content":"    public void add(Task taskName) {","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"jerremyng"},"content":"        this.taskList.add(taskName);","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"jerremyng"},"content":"    public Task getTask(int index) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"jerremyng"},"content":"            return this.taskList.get(index - 1);","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"jerremyng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I cant do that! The duke.command.task does not exist!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"jerremyng"},"content":"    public void deleteTask(int index) throws IllegalParamException {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"jerremyng"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"jerremyng"},"content":"            this.taskList.remove(index - 1);","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"jerremyng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"jerremyng"},"content":"            throw new IllegalParamException(\"I cant delete that duke.command.task! It does not exist!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"jerremyng"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jerremyng"},"content":"     * Returns count of number of tasks in list","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jerremyng"},"content":"     * @return int value","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jerremyng"},"content":"    public int countTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jerremyng"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":59}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    TODO,","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"    EVENT,","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    DEADLINE","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":7}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"     * @inheritDoc","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jerremyng"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"jerremyng"},"content":"     * @return description + isDone + from + to","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"jerremyng"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"jerremyng"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"jerremyng"},"content":"    public String getTokens() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"jerremyng"},"content":"        return String.join(\",\", TaskType.TODO.toString(), super.getTokens());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"jerremyng"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"jerremyng"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jerremyng":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"jerremyng"},"content":"todo dropout","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"jerremyng"},"content":"deadline have a breakdown /by Sunday","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"jerremyng"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"jerremyng"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"jerremyng"},"content":"mark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"jerremyng"},"content":"mark 4","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"jerremyng"},"content":"unmark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"jerremyng"},"content":"unmark 4","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"jerremyng"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"jerremyng"},"content":"delete 3","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"jerremyng"},"content":"delete 4","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"jerremyng"},"content":"mark iwenf","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"jerremyng"},"content":"bye","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"jerremyng":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jerremyng"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jerremyng":1,"-":20}}]
