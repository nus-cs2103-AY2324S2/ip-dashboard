[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.*;","lastModifiedDate":"2024-01-18"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"import java.time.*;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"        return \"Ummm, \" + getMessage();","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"enum TaskType {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    T, D, E","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    protected String description;","lastModifiedDate":"2024-01-19"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"    protected TaskType type;","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"    protected String statusIcon;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-19"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"        updateStatusIcon();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"        return this.type;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"    private void updateStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"        this.statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-19"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-19"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"        return this.description;","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"    private ArrayList \u003c Task \u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"    public TaskList(ArrayList \u003c Task \u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"    public void addToDoTask(ToDo task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"    public void addDeadlineTask(Deadline task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"    public void addEventTask(Event task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"    public int size() {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You have not created task \" + (index + 1) + \" for me to delete!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"        Ui.printDeletedTaskMessage(removedTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"    public void markStatus(Task job) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"        if (job.isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"This task is already marked as done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"        job.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"        Ui.markTask(job);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"    public void unmarkStatus(Task job) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"        if (!job.isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"This task is already marked as not done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"        job.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"        Ui.unmarkTask(job);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"    public static void getList(TaskList taskList) throws DukeException { //need to put in UI class?","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"            String taskDetails \u003d (i + 1) + \".[\" + task.type + \"][\" + (task !\u003d null ? task.getStatusIcon() : \"\") + \"] \" + task.description;","lastModifiedDate":"2024-01-20"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-01-20"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-20"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"                taskDetails +\u003d \" (by: \" + (deadlineTask.by \u003d\u003d null ? deadlineTask.byString : deadlineTask.by) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-20"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-20"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"                taskDetails +\u003d \" (from: \" + (eventTask.from \u003d\u003d null ? eventTask.fromString : eventTask.from) + \" to: \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"                        (eventTask.to \u003d\u003d null ? eventTask.toString : eventTask.to) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"            System.out.println(taskDetails);","lastModifiedDate":"2024-01-20"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"        super(TaskType.T, description);","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"        return \"Got it. I\u0027ve added this task: \\n [T][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-01-20"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"    protected String byString;","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"    public Deadline(String description, String byString) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"        super(TaskType.D, description);","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"        this.byString \u003d byString.trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"            this.by \u003d LocalDateTime.parse(byString, dateTimeFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"            this.by \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"        if (this.by \u003d\u003d null \u0026\u0026 this.byString.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"By when? You forgot to enter \\\"/by\\\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You forgot to enter the task for which you have to complete it by\");","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention the task or deadline! Please re-enter correctly!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"    public Object getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"        return (this.by !\u003d null) ? this.by : this.byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":177,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"        String byStringFormatted \u003d (by !\u003d null) ?","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"                \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\" :","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"Teee728"},"content":"                (this.byString !\u003d null ? \" (by: \" + this.byString + \")\" : \"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"Teee728"},"content":"        return \"Got it. I\u0027ve added this task:\\n [D][\" + getStatusIcon() + \"] \" + getDescription() + byStringFormatted; // + by.getClass();","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":184,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":185,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":186,"author":{"gitId":"Teee728"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":187,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"Teee728"},"content":"    protected String fromString;","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"Teee728"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"Teee728"},"content":"    protected String toString;","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":192,"author":{"gitId":"Teee728"},"content":"    public Event(String description, String fromString, String toString) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"Teee728"},"content":"        super(TaskType.E, description);","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":195,"author":{"gitId":"Teee728"},"content":"        this.fromString \u003d fromString.trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"Teee728"},"content":"        this.toString \u003d toString.trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"Teee728"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"Teee728"},"content":"            this.from \u003d LocalDateTime.parse(fromString, dateTimeFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"Teee728"},"content":"            this.to \u003d LocalDateTime.parse(toString, dateTimeFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"Teee728"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"Teee728"},"content":"            this.from \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"Teee728"},"content":"            this.to \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"Teee728"},"content":"        validateInputs();","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":210,"author":{"gitId":"Teee728"},"content":"    public Object getFrom() {","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"Teee728"},"content":"        return (this.from !\u003d null) ? this.from : this.fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"Teee728"},"content":"    public Object getTo() {","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"Teee728"},"content":"        return (this.to !\u003d null) ? this.to : this.toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"Teee728"},"content":"    private void validateInputs() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"Teee728"},"content":"        if ((from \u003d\u003d null \u0026\u0026 to \u003d\u003d null) \u0026\u0026 (fromString.isEmpty() \u0026\u0026 toString.isEmpty())) {","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention the duration! Please re-enter correctly!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"Teee728"},"content":"        } else if (from \u003d\u003d null \u0026\u0026 fromString.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention from when! Please re-enter correctly!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"Teee728"},"content":"        } else if (to \u003d\u003d null \u0026\u0026 toString.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention till when! Please re-enter correctly!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You didn\u0027t specify the event!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":228,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":229,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":231,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":232,"author":{"gitId":"Teee728"},"content":"        String fromStringFormatted \u003d (from !\u003d null) ?","lastModifiedDate":"2024-01-29"},{"lineNumber":233,"author":{"gitId":"Teee728"},"content":"                \" from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) :","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"Teee728"},"content":"                (this.fromString !\u003d null ? \" from: \" + this.fromString : \"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":235,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":236,"author":{"gitId":"Teee728"},"content":"        String toStringFormatted \u003d (to !\u003d null) ?","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"Teee728"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) :","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"Teee728"},"content":"                (this.toString !\u003d null ? \" to: \" + this.toString : \"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":240,"author":{"gitId":"Teee728"},"content":"        return \"Got it. I\u0027ve added this task:\\n [E][\" + getStatusIcon() + \"] \" + getDescription() +","lastModifiedDate":"2024-01-22"},{"lineNumber":241,"author":{"gitId":"Teee728"},"content":"                fromStringFormatted + toStringFormatted; //+ from.getClass() + to.getClass();","lastModifiedDate":"2024-01-29"},{"lineNumber":242,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":243,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-19"},{"lineNumber":244,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":246,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":247,"author":{"gitId":"Teee728"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"Teee728"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"Teee728"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"Teee728"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"Teee728"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"Teee728"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"Teee728"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"Teee728"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"Teee728"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":262,"author":{"gitId":"Teee728"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":263,"author":{"gitId":"Teee728"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":264,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":265,"author":{"gitId":"Teee728"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"Teee728"},"content":"        Parser parser \u003d new Parser(tasks, storage, scanner, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":268,"author":{"gitId":"Teee728"},"content":"        while (parser.getRunningStatus()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":269,"author":{"gitId":"Teee728"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":270,"author":{"gitId":"Teee728"},"content":"                String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"Teee728"},"content":"                parser.setCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":272,"author":{"gitId":"Teee728"},"content":"                parser.processCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":274,"author":{"gitId":"Teee728"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"Teee728"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":277,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException em) {","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"Teee728"},"content":"                    throw new RuntimeException(em);","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":280,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":281,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":282,"author":{"gitId":"Teee728"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":283,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":284,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":286,"author":{"gitId":"Teee728"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":287,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":288,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":289,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":290,"author":{"gitId":"Teee728"},"content":"class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":291,"author":{"gitId":"Teee728"},"content":"    ArrayList \u003c Task \u003e arr;","lastModifiedDate":"2024-01-31"},{"lineNumber":292,"author":{"gitId":"Teee728"},"content":"    public static void showLoadingError() {","lastModifiedDate":"2024-01-31"},{"lineNumber":293,"author":{"gitId":"Teee728"},"content":"        System.out.println(\"Error loading tasks. Initializing with an empty task list.\"); //fix?","lastModifiedDate":"2024-01-31"},{"lineNumber":294,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":295,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":296,"author":{"gitId":"Teee728"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello! I\u0027m Tango. \\nWhat can I do for you today?\");","lastModifiedDate":"2024-01-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":300,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-18"},{"lineNumber":302,"author":{"gitId":"Teee728"},"content":"    public static void printNumberOfTasks(TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":303,"author":{"gitId":"Teee728"},"content":"        System.out.println(tasks.size() \u003d\u003d 1 ? \" Now you have 1 task in the list.\" :","lastModifiedDate":"2024-01-31"},{"lineNumber":304,"author":{"gitId":"Teee728"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":305,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":306,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":307,"author":{"gitId":"Teee728"},"content":"    public static void printDeletedTaskMessage(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":308,"author":{"gitId":"Teee728"},"content":"        String taskDetails \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":309,"author":{"gitId":"Teee728"},"content":"                \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":310,"author":{"gitId":"Teee728"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":311,"author":{"gitId":"Teee728"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":312,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (by: \" + deadlineTask.getBy() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":313,"author":{"gitId":"Teee728"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":314,"author":{"gitId":"Teee728"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-31"},{"lineNumber":315,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (from: \" + eventTask.getFrom() + \" to: \" + eventTask.getTo() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":316,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":317,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":318,"author":{"gitId":"Teee728"},"content":"        System.out.println(taskDetails);","lastModifiedDate":"2024-01-31"},{"lineNumber":319,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-18"},{"lineNumber":321,"author":{"gitId":"Teee728"},"content":"    public static void showGoodbyeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":322,"author":{"gitId":"Teee728"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-19"},{"lineNumber":323,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":324,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":325,"author":{"gitId":"Teee728"},"content":"    public static void showError(String errorMessage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":326,"author":{"gitId":"Teee728"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":327,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":328,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":329,"author":{"gitId":"Teee728"},"content":"    public static void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":330,"author":{"gitId":"Teee728"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":331,"author":{"gitId":"Teee728"},"content":"            System.out.println(\"You have no tasks in your list!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":332,"author":{"gitId":"Teee728"},"content":"        } else {","lastModifiedDate":"2024-01-19"},{"lineNumber":333,"author":{"gitId":"Teee728"},"content":"            System.out.println(tasks.size() \u003d\u003d 1 ? \"Here is the task in your list:\" : \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":334,"author":{"gitId":"Teee728"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":335,"author":{"gitId":"Teee728"},"content":"                TaskList.getList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":336,"author":{"gitId":"Teee728"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":337,"author":{"gitId":"Teee728"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":338,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-18"},{"lineNumber":340,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":341,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":342,"author":{"gitId":"Teee728"},"content":"    public static void markTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":343,"author":{"gitId":"Teee728"},"content":"        System.out.println(\"Nice! I\u0027ve marked this as done: \\n \" + \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2024-01-31"},{"lineNumber":344,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":346,"author":{"gitId":"Teee728"},"content":"    public static void printDashes() {","lastModifiedDate":"2024-01-31"},{"lineNumber":347,"author":{"gitId":"Teee728"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":348,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":349,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":350,"author":{"gitId":"Teee728"},"content":"    public static void unmarkTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":351,"author":{"gitId":"Teee728"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n \" + \"[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2024-01-31"},{"lineNumber":352,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":353,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":354,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":355,"author":{"gitId":"Teee728"},"content":"class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":356,"author":{"gitId":"Teee728"},"content":"    private String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":357,"author":{"gitId":"Teee728"},"content":"    private boolean hasChanged \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":358,"author":{"gitId":"Teee728"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":359,"author":{"gitId":"Teee728"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":360,"author":{"gitId":"Teee728"},"content":"    protected Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":361,"author":{"gitId":"Teee728"},"content":"    protected Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":362,"author":{"gitId":"Teee728"},"content":"    protected boolean isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":363,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":364,"author":{"gitId":"Teee728"},"content":"    public Parser(TaskList tasks, Storage storage, Scanner scanner, boolean isRunning) {","lastModifiedDate":"2024-01-31"},{"lineNumber":365,"author":{"gitId":"Teee728"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":366,"author":{"gitId":"Teee728"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":367,"author":{"gitId":"Teee728"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":368,"author":{"gitId":"Teee728"},"content":"        this.isRunning \u003d isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":369,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":370,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":371,"author":{"gitId":"Teee728"},"content":"    public boolean getRunningStatus() {","lastModifiedDate":"2024-01-31"},{"lineNumber":372,"author":{"gitId":"Teee728"},"content":"        return this.isRunning;","lastModifiedDate":"2024-01-31"},{"lineNumber":373,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":374,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":375,"author":{"gitId":"Teee728"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":376,"author":{"gitId":"Teee728"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":377,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":378,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":379,"author":{"gitId":"Teee728"},"content":"    public void processCommand() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":380,"author":{"gitId":"Teee728"},"content":"        String[] words \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-01-31"},{"lineNumber":381,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":382,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":383,"author":{"gitId":"Teee728"},"content":"            ui.printDashes();","lastModifiedDate":"2024-01-31"},{"lineNumber":384,"author":{"gitId":"Teee728"},"content":"            switch (words[0].toLowerCase()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":385,"author":{"gitId":"Teee728"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":386,"author":{"gitId":"Teee728"},"content":"                    ui.showGoodbyeMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":387,"author":{"gitId":"Teee728"},"content":"                    this.isRunning \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":388,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":389,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":390,"author":{"gitId":"Teee728"},"content":"                case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":391,"author":{"gitId":"Teee728"},"content":"                    Ui.showTaskList(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":392,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":393,"author":{"gitId":"Teee728"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":394,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":395,"author":{"gitId":"Teee728"},"content":"                        int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-19"},{"lineNumber":396,"author":{"gitId":"Teee728"},"content":"                        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-19"},{"lineNumber":397,"author":{"gitId":"Teee728"},"content":"                            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":398,"author":{"gitId":"Teee728"},"content":"                            tasks.markStatus(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":399,"author":{"gitId":"Teee728"},"content":"                            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":400,"author":{"gitId":"Teee728"},"content":"                            hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-01-31"},{"lineNumber":401,"author":{"gitId":"Teee728"},"content":"                        } else {","lastModifiedDate":"2024-01-19"},{"lineNumber":402,"author":{"gitId":"Teee728"},"content":"                            Ui.showError(\"You have not created a task \" + words[1] + \" yet!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":403,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":404,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":405,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":406,"author":{"gitId":"Teee728"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-31"},{"lineNumber":407,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":408,"author":{"gitId":"Teee728"},"content":"                        int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":409,"author":{"gitId":"Teee728"},"content":"                        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":410,"author":{"gitId":"Teee728"},"content":"                            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":411,"author":{"gitId":"Teee728"},"content":"                            tasks.unmarkStatus(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":412,"author":{"gitId":"Teee728"},"content":"                            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":413,"author":{"gitId":"Teee728"},"content":"                            hasChanged \u003d true; //flag, no need to change","lastModifiedDate":"2024-01-31"},{"lineNumber":414,"author":{"gitId":"Teee728"},"content":"                        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":415,"author":{"gitId":"Teee728"},"content":"                            Ui.showError(\"You have not created a task \" + words[1] + \" yet!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":416,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":417,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":418,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":419,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":420,"author":{"gitId":"Teee728"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":421,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":422,"author":{"gitId":"Teee728"},"content":"                        tasks.deleteTask(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":423,"author":{"gitId":"Teee728"},"content":"                        Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":424,"author":{"gitId":"Teee728"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":425,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":426,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":427,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":428,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":429,"author":{"gitId":"Teee728"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":430,"author":{"gitId":"Teee728"},"content":"                    if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-31"},{"lineNumber":431,"author":{"gitId":"Teee728"},"content":"                        ui.showError(\"You gotta enter some task TO DO!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":432,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":433,"author":{"gitId":"Teee728"},"content":"                        tasks.addToDoTask(new ToDo(command.substring(5).trim()));","lastModifiedDate":"2024-01-31"},{"lineNumber":434,"author":{"gitId":"Teee728"},"content":"                        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":435,"author":{"gitId":"Teee728"},"content":"                        ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":436,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":437,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":438,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":439,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":440,"author":{"gitId":"Teee728"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":441,"author":{"gitId":"Teee728"},"content":"                      try {","lastModifiedDate":"2024-01-31"},{"lineNumber":442,"author":{"gitId":"Teee728"},"content":"                    int byIndex \u003d command.indexOf(\"/by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":443,"author":{"gitId":"Teee728"},"content":"                        if (byIndex !\u003d -1 \u0026\u0026 byIndex \u003c command.length() - 3) { // Check if \"/by\" is present","lastModifiedDate":"2024-01-31"},{"lineNumber":444,"author":{"gitId":"Teee728"},"content":"                    String description \u003d command.substring(9, byIndex).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":445,"author":{"gitId":"Teee728"},"content":"                    String by \u003d command.substring(byIndex + 3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":446,"author":{"gitId":"Teee728"},"content":"                    tasks.addDeadlineTask(new Deadline(description, by));","lastModifiedDate":"2024-01-31"},{"lineNumber":447,"author":{"gitId":"Teee728"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":448,"author":{"gitId":"Teee728"},"content":"                    ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":449,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":450,"author":{"gitId":"Teee728"},"content":"                        } else if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":451,"author":{"gitId":"Teee728"},"content":"                            throw new DukeException(\"You did not mention the deadline! Please re-enter correctly\");","lastModifiedDate":"2024-01-31"},{"lineNumber":452,"author":{"gitId":"Teee728"},"content":"                        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":453,"author":{"gitId":"Teee728"},"content":"                            throw new DukeException(\"Please include both task description and deadline correctly!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":454,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":455,"author":{"gitId":"Teee728"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":456,"author":{"gitId":"Teee728"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":457,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-20"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":459,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":460,"author":{"gitId":"Teee728"},"content":"                case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":461,"author":{"gitId":"Teee728"},"content":"                    Matcher fromMatcher \u003d Pattern.compile(\"/from\\\\s+(\\\\S+[^/]+)\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":462,"author":{"gitId":"Teee728"},"content":"                    Matcher toMatcher \u003d Pattern.compile(\"/to\\\\s+(\\\\S.+)\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":463,"author":{"gitId":"Teee728"},"content":"                    String eventDescription \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":464,"author":{"gitId":"Teee728"},"content":"                    Matcher descriptionMatcher \u003d Pattern.compile(\"event\\\\s+(.+?)\\\\s*/from\").matcher(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":465,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":466,"author":{"gitId":"Teee728"},"content":"                        if (descriptionMatcher.find()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":467,"author":{"gitId":"Teee728"},"content":"                            eventDescription \u003d descriptionMatcher.group(1).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":468,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":469,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":470,"author":{"gitId":"Teee728"},"content":"                        Ui.showError(\"You didn\u0027t enter the details or duration!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":471,"author":{"gitId":"Teee728"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":472,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-20"},{"lineNumber":473,"author":{"gitId":"Teee728"},"content":"                    String from \u003d fromMatcher.find() ? fromMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":474,"author":{"gitId":"Teee728"},"content":"                    String to \u003d toMatcher.find() ? toMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":475,"author":{"gitId":"Teee728"},"content":"                    tasks.addEventTask(new Event(eventDescription, from, to));","lastModifiedDate":"2024-01-31"},{"lineNumber":476,"author":{"gitId":"Teee728"},"content":"                    storage.saveTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":477,"author":{"gitId":"Teee728"},"content":"                    Ui.printNumberOfTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":478,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":479,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":480,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":481,"author":{"gitId":"Teee728"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":482,"author":{"gitId":"Teee728"},"content":"                    ui.showError(\"I don\u0027t know what you are saying :(\");","lastModifiedDate":"2024-01-31"},{"lineNumber":483,"author":{"gitId":"Teee728"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":485,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":486,"author":{"gitId":"Teee728"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":487,"author":{"gitId":"Teee728"},"content":"        } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":488,"author":{"gitId":"Teee728"},"content":"            ui.printDashes();","lastModifiedDate":"2024-01-31"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-18"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":491,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":492,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":493,"author":{"gitId":"Teee728"},"content":"class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":494,"author":{"gitId":"Teee728"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":495,"author":{"gitId":"Teee728"},"content":"    private TaskList taskList \u003d new TaskList(new ArrayList \u003c Task \u003e ());","lastModifiedDate":"2024-01-31"},{"lineNumber":496,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":497,"author":{"gitId":"Teee728"},"content":"    public void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":498,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":499,"author":{"gitId":"Teee728"},"content":"        File parentFolder \u003d file.getParentFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":500,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":501,"author":{"gitId":"Teee728"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":502,"author":{"gitId":"Teee728"},"content":"            if (!parentFolder.mkdirs()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":503,"author":{"gitId":"Teee728"},"content":"                throw new IOException(\"Failed to create the data folder.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":504,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":505,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":506,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":507,"author":{"gitId":"Teee728"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file, false)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":508,"author":{"gitId":"Teee728"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":509,"author":{"gitId":"Teee728"},"content":"                Task task \u003d tasks.getTask(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":510,"author":{"gitId":"Teee728"},"content":"                String text \u003d task.getType() + \" | \" + (task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":511,"author":{"gitId":"Teee728"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":512,"author":{"gitId":"Teee728"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-29"},{"lineNumber":513,"author":{"gitId":"Teee728"},"content":"                    if (deadline.by !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":514,"author":{"gitId":"Teee728"},"content":"                        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":515,"author":{"gitId":"Teee728"},"content":"                            String formattedDateTime \u003d deadline.by.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY HH:mm\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":516,"author":{"gitId":"Teee728"},"content":"                            text +\u003d \" | \" + formattedDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":517,"author":{"gitId":"Teee728"},"content":"                        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":518,"author":{"gitId":"Teee728"},"content":"                            text +\u003d \" | \" + deadline.byString;","lastModifiedDate":"2024-01-29"},{"lineNumber":519,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":520,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":521,"author":{"gitId":"Teee728"},"content":"                        text +\u003d \" | \" + deadline.byString;","lastModifiedDate":"2024-01-29"},{"lineNumber":522,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":523,"author":{"gitId":"Teee728"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-28"},{"lineNumber":524,"author":{"gitId":"Teee728"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2024-01-29"},{"lineNumber":525,"author":{"gitId":"Teee728"},"content":"                    String fromString \u003d (event.from !\u003d null) ?","lastModifiedDate":"2024-01-29"},{"lineNumber":526,"author":{"gitId":"Teee728"},"content":"                            event.from.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY HH:mm\")) :","lastModifiedDate":"2024-01-29"},{"lineNumber":527,"author":{"gitId":"Teee728"},"content":"                            (event.fromString !\u003d null ? event.fromString : \"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":529,"author":{"gitId":"Teee728"},"content":"                    String toString \u003d (event.to !\u003d null) ?","lastModifiedDate":"2024-01-29"},{"lineNumber":530,"author":{"gitId":"Teee728"},"content":"                            event.to.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY HH:mm\")) :","lastModifiedDate":"2024-01-29"},{"lineNumber":531,"author":{"gitId":"Teee728"},"content":"                            (event.toString !\u003d null ? event.toString : \"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":532,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":533,"author":{"gitId":"Teee728"},"content":"                    text +\u003d \" | \" + fromString + \" - \" + toString;","lastModifiedDate":"2024-01-29"},{"lineNumber":534,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":535,"author":{"gitId":"Teee728"},"content":"                fileWriter.write(text);","lastModifiedDate":"2024-01-28"},{"lineNumber":536,"author":{"gitId":"Teee728"},"content":"                fileWriter.append(\"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":538,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":540,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":541,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":542,"author":{"gitId":"Teee728"},"content":"    public ArrayList \u003c Task \u003e load() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":543,"author":{"gitId":"Teee728"},"content":"        ArrayList \u003c Task \u003e loadedTasks \u003d new ArrayList \u003c \u003e ();","lastModifiedDate":"2024-01-31"},{"lineNumber":544,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":545,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":546,"author":{"gitId":"Teee728"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":547,"author":{"gitId":"Teee728"},"content":"            System.out.println(\"\\nData file does not currently exist. However, as you add a task, it will save it to\\nthe \" +","lastModifiedDate":"2024-01-28"},{"lineNumber":548,"author":{"gitId":"Teee728"},"content":"                    \"path specified. You can view your task list after exiting the chatbot.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":549,"author":{"gitId":"Teee728"},"content":"            return loadedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":550,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":551,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":552,"author":{"gitId":"Teee728"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":553,"author":{"gitId":"Teee728"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":554,"author":{"gitId":"Teee728"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":555,"author":{"gitId":"Teee728"},"content":"                String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-28"},{"lineNumber":556,"author":{"gitId":"Teee728"},"content":"                TaskType taskType \u003d TaskType.valueOf(parts[0].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":557,"author":{"gitId":"Teee728"},"content":"                boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":558,"author":{"gitId":"Teee728"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":559,"author":{"gitId":"Teee728"},"content":"                String additionalInfo \u003d (parts.length \u003e 3) ? parts[3].trim() : null;","lastModifiedDate":"2024-01-28"},{"lineNumber":560,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":561,"author":{"gitId":"Teee728"},"content":"                Task task \u003d new Task(null, null);","lastModifiedDate":"2024-01-28"},{"lineNumber":562,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":563,"author":{"gitId":"Teee728"},"content":"                if (taskType \u003d\u003d TaskType.T) {","lastModifiedDate":"2024-01-28"},{"lineNumber":564,"author":{"gitId":"Teee728"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":565,"author":{"gitId":"Teee728"},"content":"                } else if (taskType \u003d\u003d TaskType.D) {","lastModifiedDate":"2024-01-28"},{"lineNumber":566,"author":{"gitId":"Teee728"},"content":"                    task \u003d new Deadline(description, additionalInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":567,"author":{"gitId":"Teee728"},"content":"                } else if (taskType \u003d\u003d TaskType.E) {","lastModifiedDate":"2024-01-28"},{"lineNumber":568,"author":{"gitId":"Teee728"},"content":"                    String[] p \u003d additionalInfo.split(\"-\");","lastModifiedDate":"2024-01-28"},{"lineNumber":569,"author":{"gitId":"Teee728"},"content":"                    task \u003d new Event(description, p[0].trim(), p[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":570,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":571,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":572,"author":{"gitId":"Teee728"},"content":"                loadedTasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":573,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":574,"author":{"gitId":"Teee728"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":575,"author":{"gitId":"Teee728"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-28"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":577,"author":{"gitId":"Teee728"},"content":"        return loadedTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":579,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-18"}],"authorContributionMap":{"Teee728":556,"-":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"java -classpath ..\\bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"java -classpath ../bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":37}}]
