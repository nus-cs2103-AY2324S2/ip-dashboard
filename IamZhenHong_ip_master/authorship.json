[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"setMainClassName(\u0027Duke\u0027)","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"    mainClass.set(\"Main\")","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"    destinationDirectory \u003d file(\"build/libs\")","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"checkstyle {","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"IamZhenHong":29,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke User Guide","lastModifiedDate":"2024-01-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"## Setup","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"### Adding todo to list","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"Adds a todo to the list","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"Format: todo DESCRIPTION","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"Example: \u0027todo read book\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"### Adding deadline to list","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"Adds deadline to the list","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"### Adding event to list","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"Addes event to the list","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"### Marking a task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"Marks a task as completed","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"### Unmarking a task ","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"Unmarks a task","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"### Deleting a task","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"Deletes a task with matching description","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"### Listing all tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"Lists all tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"### Finding tasks with matching description","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"Find tasks with matching description","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"### Edit description of a task","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"Edits description of a task","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"IamZhenHong":41,"-":30}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"T | 0 | a","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"D | 0 | a | 1100","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"T | 0 | a","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"T | 0 | a","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"IamZhenHong":4}},{"path":"src/main/java/duke/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.DeadlineTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.EventTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.ToDoTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     * Executes the add command.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"     * @param taskList the task list to add the task to","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"     * @param command the command string","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"     * @return the result message after adding the task","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException if there is an error executing the command","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"    public String execute(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Please provide a description for the task.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"        String taskDetails \u003d parts[1].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"        Task newTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"                newTask \u003d new ToDoTask(taskDetails);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"                String[] deadlineParts \u003d taskDetails.split(\"/by\");","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"                if (deadlineParts.length \u003c 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Please provide both description and deadline for the task in the format: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"                String deadlineDescription \u003d deadlineParts[0].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"                String deadlineTime \u003d deadlineParts[1].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"                    LocalTime deadline \u003d LocalTime.parse(deadlineTime, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"                    newTask \u003d new DeadlineTask(deadlineDescription, deadline);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Invalid deadline format. Please use HHmm format for the deadline.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"            case \"event\":","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"                String[] eventParts \u003d taskDetails.split(\"/at\");","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"                if (eventParts.length \u003c 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Please provide both description and time for the event in the format: event \u003cdescription\u003e /at \u003cstart time\u003e-\u003cend time\u003e(HHmm)\");","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"                String eventDescription \u003d eventParts[0].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"                String[] eventTimeParts \u003d eventParts[1].split(\"-\");","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"                if (eventTimeParts.length \u003c 2) {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Please provide both start and end times for the event in the format: event \u003cdescription\u003e /at \u003cstart time\u003e-\u003cend time\u003e(HHmm)\");","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"                String startTime \u003d eventTimeParts[0].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"                String endTime \u003d eventTimeParts[1].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"                    LocalTime eventStartTime \u003d LocalTime.parse(startTime, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"                    LocalTime eventEndTime \u003d LocalTime.parse(endTime, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"                    newTask \u003d new EventTask(eventDescription, eventStartTime, eventEndTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"IamZhenHong"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Invalid time format. Please use HHmm format for the time.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"IamZhenHong"},"content":"                break;","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"IamZhenHong"},"content":"            default:","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"IamZhenHong"},"content":"                throw new DukeException(\"Invalid task type.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"IamZhenHong"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"IamZhenHong"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newTask + \"\\nNow you have \" + taskList.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":81}},{"path":"src/main/java/duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":" * The Command class is an abstract class that represents a command in the Duke application.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":" * All commands in Duke should extend this class and implement the execute method.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * Executes the command based on the given task list and command string.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * @param taskList The task list to execute the command on.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @param command The command string representing the specific command.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * @return The result of executing the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    public abstract String execute(TaskList taskList, String command) throws DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":21}},{"path":"src/main/java/duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":" * Inherits from the Command class.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * Executes the delete command.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * Removes the task at the specified index from the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * Throws a DukeException if the index is invalid.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     * @param taskList the task list to delete the task from","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"     * @param command  the delete command","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"     * @return a string indicating the success of the delete operation","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException if the index is invalid","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    public String execute(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        int index \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"        Task removedTask \u003d taskList.removeTask(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + removedTask + \"\\nNow you have \" + taskList.getTasks().size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":34}},{"path":"src/main/java/duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"    public FindCommand() {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"       ","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    public String execute(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"        // Split the command string into parts using space as delimiter","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.split(\" \", 2); // Limit the split to 2 parts","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        // Check if the command is properly formatted","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        if (parts.length !\u003d 2 || !parts[0].equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Invalid find command format. Please use: find \u003cdescription\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        // Extract the description from the second part of the command","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        String description \u003d parts[1].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        // Perform the find operation using the extracted description","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"        for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"        // Build a string containing information about the found tasks","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        if (!foundTasks.isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"            result.append(\"Matching tasks:\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"            for (Task task : foundTasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"                result.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"            result.append(\"No matching tasks found.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"        return result.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":52}},{"path":"src/main/java/duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * Executes the list command and returns a string representation of the tasks in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * @param taskList the task list containing the tasks","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @param command  the command string","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * @return a string representation of the tasks in the task list","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    public String execute(TaskList taskList, String command) {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"        if (taskList.getTasks().isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"            return \"You have no tasks in your list.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        } else {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"            sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"            for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"                sb.append((i + 1) + \".\" + taskList.getTask(i) + \"\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":32}},{"path":"src/main/java/duke/Command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * Executes the mark command to mark a task as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * @param taskList the task list containing the tasks","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @param command  the command string","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * @return the message indicating the task has been marked as done","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException if the task number is invalid","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    public String execute(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        int index \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":32}},{"path":"src/main/java/duke/Command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * Executes the unmark command.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * @param taskList the task list containing the tasks","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @param command  the command string","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * @return the result message after executing the command","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException if the task number is invalid","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    public String execute(TaskList taskList, String command) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        int index \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.getTasks().size()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Invalid task number.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"        return \"Nice! I\u0027ve marked this task as not done:\\n\" + task;","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":31}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"    private void flip() {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"        db.flip();","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"        return db;","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"IamZhenHong":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import duke.Command.Command;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":" * The Duke class represents a task management application.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":" * It allows users to add, delete, and mark tasks as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"public class Duke extends Application{","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"     * Loads tasks from file and initializes the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"    public Duke() {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d Storage.loadTasksFromFile();","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"        taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"        stage.show();","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"IamZhenHong"},"content":"        //More code to be added here later","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"IamZhenHong"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"IamZhenHong"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"IamZhenHong"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"IamZhenHong"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"IamZhenHong"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"IamZhenHong"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"IamZhenHong"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"IamZhenHong"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"IamZhenHong"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"IamZhenHong"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"IamZhenHong"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"IamZhenHong"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"IamZhenHong"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"IamZhenHong"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"IamZhenHong"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"IamZhenHong"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"IamZhenHong"},"content":"        });","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"IamZhenHong"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"IamZhenHong"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"IamZhenHong"},"content":"        });","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"IamZhenHong"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"IamZhenHong"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"IamZhenHong"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"IamZhenHong"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"IamZhenHong"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"IamZhenHong"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"IamZhenHong"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"IamZhenHong"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"IamZhenHong"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"IamZhenHong"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"IamZhenHong"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"IamZhenHong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"IamZhenHong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"IamZhenHong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"IamZhenHong"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"IamZhenHong"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"IamZhenHong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"IamZhenHong"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"IamZhenHong"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"IamZhenHong"},"content":"        );","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"IamZhenHong"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"IamZhenHong"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"IamZhenHong"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"IamZhenHong"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"IamZhenHong"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"IamZhenHong"},"content":"            Storage.saveTasksToFile(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"IamZhenHong"},"content":"            return \"Goodbye!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"IamZhenHong"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"IamZhenHong"},"content":"            Command cmd \u003d Parser.parseCommand(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"IamZhenHong"},"content":"            return cmd.execute(taskList, input);","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"IamZhenHong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"IamZhenHong"},"content":"            return \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"IamZhenHong"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"IamZhenHong"},"content":"     * Prompts the user for commands and executes them until the user enters \"bye\".","lastModifiedDate":"2024-02-14"},{"lineNumber":165,"author":{"gitId":"IamZhenHong"},"content":"     * Saves tasks to file before exiting.","lastModifiedDate":"2024-02-14"},{"lineNumber":166,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"IamZhenHong"},"content":"    void run() {","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printLogo();","lastModifiedDate":"2024-02-14"},{"lineNumber":169,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2024-02-14"},{"lineNumber":170,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":171,"author":{"gitId":"IamZhenHong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-14"},{"lineNumber":172,"author":{"gitId":"IamZhenHong"},"content":"        String command \u003d Ui.getUserCommand(scanner);","lastModifiedDate":"2024-02-14"},{"lineNumber":173,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":174,"author":{"gitId":"IamZhenHong"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"IamZhenHong"},"content":"            try {","lastModifiedDate":"2024-02-14"},{"lineNumber":176,"author":{"gitId":"IamZhenHong"},"content":"                Command cmd \u003d Parser.parseCommand(command);","lastModifiedDate":"2024-02-14"},{"lineNumber":177,"author":{"gitId":"IamZhenHong"},"content":"                Ui.printMessage(cmd.execute(taskList, command));","lastModifiedDate":"2024-02-14"},{"lineNumber":178,"author":{"gitId":"IamZhenHong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":179,"author":{"gitId":"IamZhenHong"},"content":"                Ui.printMessage(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"IamZhenHong"},"content":"            command \u003d Ui.getUserCommand(scanner);","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"IamZhenHong"},"content":"        Storage.saveTasksToFile(taskList.getTasks());","lastModifiedDate":"2024-02-14"},{"lineNumber":185,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2024-02-14"},{"lineNumber":186,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":187,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":188,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":189,"author":{"gitId":"IamZhenHong"},"content":"     * The entry point of the Duke application.","lastModifiedDate":"2024-02-14"},{"lineNumber":190,"author":{"gitId":"IamZhenHong"},"content":"     * Creates a Duke object and runs the application.","lastModifiedDate":"2024-02-14"},{"lineNumber":191,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"IamZhenHong"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"IamZhenHong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"IamZhenHong"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-14"},{"lineNumber":196,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":197}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"        super(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":15}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"public class Launcher {","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"IamZhenHong":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"            stage.show();","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"IamZhenHong":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"        );","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"IamZhenHong":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import duke.Command.*;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.*;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":" * The Parser class is responsible for parsing user commands and task strings.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":" * It provides methods to parse commands and tasks from string inputs.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"class Parser {","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * Parses the user command from the given string input.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * @param command The string input representing the user command.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @return The corresponding Command object based on the user command.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException If the command is empty or not recognized.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"    static Command parseCommand(String command) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"        assert parts.length \u003e 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        // Ensure there\u0027s at least one part","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        if (parts.length \u003c 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Command is empty.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"        String keyword \u003d parts[0].toLowerCase(); // Convert to lowercase for case-insensitive comparison","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"        switch (keyword) {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"            case \"list\":","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"            case \"event\":","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"                if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"The description of a \" + keyword + \" cannot be empty.\");","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"                return new AddCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"                return new DeleteCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"                return new MarkCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"                return new UnmarkCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"            case \"find\":","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"                return new FindCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"            default:","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"     * Parses the task from the given string input.","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"     * @param line The string input representing the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"     * @return The corresponding Task object based on the task string.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"     * @throws DukeException If the task format is invalid.","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"    static Task parseTaskFromString(String line) throws DukeException {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"            throw new DukeException(\"Invalid task format: \" + line);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\"); // \"1\" represents task is done","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"IamZhenHong"},"content":"        switch (type) {","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"IamZhenHong"},"content":"            case \"D\":","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"IamZhenHong"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Invalid deadline task format: \" + line);","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"IamZhenHong"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"IamZhenHong"},"content":"                LocalTime byTime \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"IamZhenHong"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(description, byTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"IamZhenHong"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"IamZhenHong"},"content":"                    deadlineTask.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"IamZhenHong"},"content":"                return deadlineTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"IamZhenHong"},"content":"            case \"E\":","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"IamZhenHong"},"content":"                if (parts.length \u003c 5) {","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"IamZhenHong"},"content":"                    throw new DukeException(\"Invalid event task format: \" + line);","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"IamZhenHong"},"content":"                String from \u003d parts[3].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"IamZhenHong"},"content":"                String to \u003d parts[4].trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"IamZhenHong"},"content":"                LocalTime startTime \u003d LocalTime.parse(from, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"IamZhenHong"},"content":"                LocalTime endTime \u003d LocalTime.parse(to, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"IamZhenHong"},"content":"                EventTask eventTask \u003d new EventTask(description, startTime, endTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"IamZhenHong"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"IamZhenHong"},"content":"                    eventTask.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"IamZhenHong"},"content":"                return eventTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"IamZhenHong"},"content":"            default:","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"IamZhenHong"},"content":"                ToDoTask toDoTask \u003d new ToDoTask(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"IamZhenHong"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"IamZhenHong"},"content":"                    toDoTask.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"IamZhenHong"},"content":"                return toDoTask;","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":104}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import java.io.File;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":" * The Storage class handles the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"public class Storage {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"    private static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     * @return The ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"                try {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"                    tasks.add(Parser.parseTaskFromString(line));","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"                    System.out.println(\"Error parsing task from file: \" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"                }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"        return tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"     * Saves the given tasks to the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"     * @param tasks The ArrayList of tasks to be saved.","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"    static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"        try (PrintWriter writer \u003d new PrintWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":56}},{"path":"src/main/java/duke/Task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"    private LocalTime deadline;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs a DeadlineTask object with the given description and deadline.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    public DeadlineTask(String description, LocalTime by) {","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"     * Converts the DeadlineTask object to a string representation for saving to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the DeadlineTask object.","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadline.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"     * Converts the DeadlineTask object to a string representation for displaying to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the DeadlineTask object.","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" +deadline + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":42}},{"path":"src/main/java/duke/Task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":" * Represents an event task that has a start time and an end time.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"    private LocalTime startTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"    private LocalTime endTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs an EventTask object with the given description, start time, and end time.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"     * @param startTime The start time of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     * @param endTime The end time of the event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    public EventTask(String description, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"     * Converts the event task to a string representation for saving to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the event task for saving to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + startTime.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \" | \" + endTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"     * Converts the event task to a string representation for displaying to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the event task for displaying to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (from: \" + startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to: \" + endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":45}},{"path":"src/main/java/duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":" * Represents a task in the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"public class Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"    protected String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"        return description;","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":56}},{"path":"src/main/java/duke/Task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":" * Represents a ToDo task.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":" * Inherits from the Task class.","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs a ToDoTask object with the given description.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"        super(description);","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     * Converts the ToDoTask object to a string representation for saving to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the ToDoTask object for saving to a file.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"     * Converts the ToDoTask object to a string representation for displaying to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"     * @return The string representation of the ToDoTask object for displaying to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"    public String toString() {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":37}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import duke.Task.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"public class TaskList {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"        return tasks;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"     * Removes a task from the list at the specified index.","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"     * Retrieves a task from the list at the specified index.","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"     * @return The retrieved task.","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":57}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":" * The Ui class handles the user interface of the Duke application.","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"public class Ui {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"     * The logo of the Duke application.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"    public static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"     * Prints the Duke logo.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    static void printLogo() {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"     * Prints the welcome message when the Duke application starts.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"    static void printWelcomeMessage() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Hello! I\u0027m CharmBot \");","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"     * Prints the goodbye message when the Duke application exits.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"    static void printGoodbyeMessage() {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"     * Retrieves the user command from the scanner.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"     * @param scanner The scanner used to read user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"     * @return The user command.","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"    static String getUserCommand(Scanner scanner) {","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"    ","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"     * Prints a message to the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"    static void printMessage(String message) {","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"IamZhenHong":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"IamZhenHong":20}},{"path":"src/test/java/duke/Task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"   ","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"    void testMarkAsDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"        Task t \u003d new Task(\"read book\");","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"        t.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"        assertTrue(t.isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    void testMarkAsNotDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"        Task t \u003d new Task(\"read book\");","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"        t.markAsDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"        t.markAsNotDone();","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"        assertFalse(t.isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":23}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IamZhenHong"},"content":"package duke;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"IamZhenHong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"IamZhenHong"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"IamZhenHong"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"IamZhenHong"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"IamZhenHong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"IamZhenHong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"IamZhenHong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"IamZhenHong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"IamZhenHong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"IamZhenHong"},"content":"class UiTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"IamZhenHong"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"IamZhenHong"},"content":"    private final ByteArrayInputStream inputStreamCaptor \u003d new ByteArrayInputStream(\"test command\".getBytes());","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"IamZhenHong"},"content":"    private final InputStream originalInputStream \u003d System.in;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"IamZhenHong"},"content":"    private final PrintStream originalOutputStream \u003d System.out;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"IamZhenHong"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"IamZhenHong"},"content":"    void setUp() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"IamZhenHong"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"IamZhenHong"},"content":"        System.setIn(inputStreamCaptor);","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"IamZhenHong"},"content":"    @AfterEach","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"IamZhenHong"},"content":"    void tearDown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"IamZhenHong"},"content":"        System.setOut(originalOutputStream);","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"IamZhenHong"},"content":"        System.setIn(originalInputStream);","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"IamZhenHong"},"content":"    void testPrintLogo() {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printLogo();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"IamZhenHong"},"content":"        assertEquals(\"Hello from\\n\" + Ui.logo + \"\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"IamZhenHong"},"content":"    void testPrintWelcomeMessage() {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"IamZhenHong"},"content":"        assertEquals(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"IamZhenHong"},"content":"                \"Hello! I\u0027m CharmBot \\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"IamZhenHong"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"IamZhenHong"},"content":"                \"____________________________________________________________\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"IamZhenHong"},"content":"    void testPrintGoodbyeMessage() {","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"IamZhenHong"},"content":"        assertEquals(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"IamZhenHong"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"IamZhenHong"},"content":"                \"____________________________________________________________\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"IamZhenHong"},"content":"    void testGetUserCommand() {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"IamZhenHong"},"content":"        assertEquals(\"test command\", Ui.getUserCommand(new Scanner(System.in)));","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"IamZhenHong"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"IamZhenHong"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"IamZhenHong"},"content":"    void testPrintMessage() {","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"IamZhenHong"},"content":"        String testMessage \u003d \"This is a test message\";","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"IamZhenHong"},"content":"        Ui.printMessage(testMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"IamZhenHong"},"content":"        assertEquals(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"IamZhenHong"},"content":"                \"This is a test message\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"IamZhenHong"},"content":"                \"____________________________________________________________\\n\", outputStreamCaptor.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"IamZhenHong"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"IamZhenHong"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"IamZhenHong":68}}]
