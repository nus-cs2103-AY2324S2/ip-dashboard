{"authorDailyContributionsMap":{"Murugan-Maniish":[{"date":"2024-01-25","commitResults":[{"hash":"f8ac20393181febfb050643ca3a4227563cb89d4","isMergeCommit":false,"messageTitle":"Level 0. Rename, Greet, Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"506669edadfece6c96c5b386762842d98b63bbcf","isMergeCommit":false,"messageTitle":"Level 1. Echo","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"5b353ab6ecd9fa543987c0c99f409ed54cd58ca7","isMergeCommit":false,"messageTitle":"Level 2. Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":2}}},{"hash":"6385362cb43ac7e38a795fd8d5d18d612711b0aa","isMergeCommit":false,"messageTitle":"add Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"2d0e78103f6e6d5c18ad728a9cec0cd09c7358d6","isMergeCommit":false,"messageTitle":"Level 3. Mark as Done","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":9}}},{"hash":"16a0ae6f6f0113a2d57fb8061c735f6e3193f400","isMergeCommit":false,"messageTitle":"Level 3. Mark as Done (fixed - string split)","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"901ea606e043a7792ed268dfcc240611e2e72d69","isMergeCommit":false,"messageTitle":"add ToDo.java, Deadline.java, Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":0}}},{"hash":"023dddb02ae720a95ccbc9d81e1cd0ee645c0d1e","isMergeCommit":false,"messageTitle":"Level 4. ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":1}}}]},{"date":"2024-01-27","commitResults":[{"hash":"666f5c8c3307478a68f2b877e8516d1764609410","isMergeCommit":false,"messageTitle":"A-TextUiTesting: Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"sh":{"insertions":0,"deletions":0}}},{"hash":"d862bf7ad50d10972c5943c6f451ecb7844855a4","isMergeCommit":false,"messageTitle":"add DukeException.class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"7a4539c3a56a5208bb12e9a0884f540edba69710","isMergeCommit":false,"messageTitle":"Level 5. Handle Errors (\u0026 write methods to reorganise code)","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":52}}},{"hash":"ee56b4f63e7ab1a5b01820421a08a34d35edb51c","isMergeCommit":false,"messageTitle":"Level-6: Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":2}}}]},{"date":"2024-02-03","commitResults":[{"hash":"08b8d617b2debff0c021287e6e94e511278ccee4","isMergeCommit":false,"messageTitle":"Fix bug in Event.java which caused from and to to have the same values","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"b2eb13627c517f0b43cd1fdbffb0dc34b5804ac6","isMergeCommit":false,"messageTitle":"Add Level-7: Save and Rewrite to abide by coding standards","messageBody":"For Level-7,\n*Add initialise function to read tasks from file to chabot once its opened.\n*Modify added function to enable appending of new tasks into file.\n*Add editWrite function to replace the tasks in the file with those active in the list in the chatbot as it is hard to edit the file to mark/unmark/delete tasks.\n\nFor Coding Standards,\n*Rewrite imports by replacing wildcard import with specific ones.\n*As horizontalLine is a constant replace it with HORIZONTAL_LINE.\n","fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":23}}},{"hash":"eeae48ca01664b58a4f37650000c0ed75120daf0","isMergeCommit":false,"messageTitle":"Update Exception Handling for initialise","messageBody":"Creates ./data dir and tasks.txt file if they are not present.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":10}}}]},{"date":"2024-02-04","commitResults":[{"hash":"b3a3ec6920faeea14436e35387e6655eac80f330","isMergeCommit":false,"messageTitle":"Add Level 8. Dates and Times","messageBody":"Updated Duke.java deadline and event function to create LocalDateTime object of by, from and to variables in a \"dd-MM-yyyy HH:mm\" from input date/time string. Added error handling for when date/time format in input string is incorrect.\n\nUpdated Deadline.java and Event.java to take LocalDateTime for variables by, from and to instead of String. Additionally updated their toString method to print out date/time in a different format from what was given by user as required.\n","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":15}}},{"hash":"a85bbfa3810d53e112bce424e6064a242c121097","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"* branch-Level-7:\n  Update Exception Handling for initialise\n  Add Level-7: Save and Rewrite to abide by coding standards\n","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"0be5d8b79813ea7b07c971b3aa4ae7d0990dccd1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"* branch-Level-8:\n  Add Level 8. Dates and Times\n\n# Conflicts:\n#\tsrc/main/java/Duke.java\n\nResolution:\n*fix import conflicts\n*add error handling in initialise to deal with wrong date/time input, also enable skipping of lines so that it can read file without error\n*add stringToDate function thats converts date/time String to LocalDateTime to avoid repeating code\n","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-06","commitResults":[{"hash":"2496487661396112fca0423bc4266390338a72f7","isMergeCommit":false,"messageTitle":"Add toFile() function to Task, ToDo, Deadline and Event Classes","messageBody":"Add this function to make it easier to write to the file later on, instead of using additional arguments or instanceof.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":6}}},{"hash":"d95cf1bb1530ccd3915a00be0bc6d4d4aa9f35c9","isMergeCommit":false,"messageTitle":"Add minimal classes required for A-MoreOOP","messageBody":"Ui\n*opens scanner and uses it to read commands from user in readCommand().\n*All other methods are used to print responses to commands to user.\n\nStorage\n*load(): reads tasks from given file when chatbot is opened and returns a ArrayList\u003cTask\u003e.\n*saveAdd(): adds tasks to file for todo/deadline/event commands.\n*saveRewrite: rewrites entire file using TaskList for mark/unmark/delete commands.\n\nTaskList\n*encapsulates a ArrayList\u003cTask\u003e which can be initialised using two constuctors one which creates a new list and another that references a existing list.\n*get(), size(), add() and delete() methods to use for commands.\n\nParser\n*parseFile(): to read from File and add corresponding Task object to a TaskList.\n*parseCommand(): to read commands from user and create corresponding Command Object.\n","fileTypesAndContributionMap":{"java":{"insertions":250,"deletions":0}}},{"hash":"41d5a71964d3a44e73ba26aa60298f89946b2b9b","isMergeCommit":false,"messageTitle":"Add *Command Classes and a abstract Command Class","messageBody":"Classes:\n*Command {abstract}\n*AddCommand for todo/deadline/event, takes in a Task object\n*ListCommand for list\n*MarkCommand for mark and unmark takes in a int index for task in list\n*DeleteCommand for delete takes in a int index for task in list\n*ExitCommand for bye\n*InvalidCommand for non-existent commands throws exception\n\nEach Class has 2 methods\n*execute(): implements command using TaskList, Ui and Storage\n*isExit(): tells whether it is a ExitCommand object\n","fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":0}}},{"hash":"76080c6611dfd0016a410b8e731bc5c93f4ce250","isMergeCommit":false,"messageTitle":"Update Duke.java for A-MoreOOP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":272}}},{"hash":"64cef241aa743e29f6c8f6cf7a884319ae0b7b16","isMergeCommit":true,"messageTitle":"Merge branch \u0027A-MoreOOP\u0027","messageBody":"* A-MoreOOP:\n  Update Duke.java for A-MoreOOP\n  Add *Command Classes and a abstract Command Class\n  Add minimal classes required for A-MoreOOP\n  Add toFile() function to Task, ToDo, Deadline and Event Classes\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"2ecdfeaaccc4160012fbaaf5392a5cafae9db007","isMergeCommit":false,"messageTitle":"Organise into packages and Rename","messageBody":"Organise into a alastor package where all Command classes are in a sub-package called command and all Task classes are in a sub-package called task.\n\nRename \"Duke\" Duke.java and DukeException.java(and all instances of DukeException) to \"Alastor\" as Rename in level-0 was only done to strings.\nDeleted Duke.java and DukeException.java to do so and created corresponding replacements. For unknown reason staged files show deletion of only DukeException of the two.\nIt also shows Command.java and InvalidCommand.java being deleted and new ones being created even though they were not deleted.\n","fileTypesAndContributionMap":{"java":{"insertions":131,"deletions":50}}},{"hash":"3980a29001f28ae1ea02c0735c9925971084ccac","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Packages\u0027","messageBody":"* branch-A-Packages:\n  Organise into packages and Rename\n","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"2c902123713bbe9acd3247e2ea0a5c00c42270a9","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"* add-gradle-support:\n  Bump gradle and lib version\n  Add Gradle support\n  docs/README.md: Tweak document template\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-07","commitResults":[{"hash":"9cd57c417b93e68392900554a17746b3b64192e1","isMergeCommit":false,"messageTitle":"Override equals() for relevant Task Classes","messageBody":"This is done so that assertEquals can use it to check whether two Task objects are equal.\nDid not need to do so for ToDo as the one in Task is sufficient but the other two types require overriding.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"81a68137e55c6c917c8516a57f8cdab3ef550263","isMergeCommit":false,"messageTitle":"Update Parser.java","messageBody":"*Introduce enum ParseType to distinguish parsing file and parsing commands from using and giving corresponding error message.\n*Add parameter to stringToDate() to account for ParseType.\n*Rename checkForEmpty() to checkParameter() and Add parameter to account for ParseType. Additionally now it checks whether there is a missing or extra parameters.\n*Update error messages\n*Add checkParameter() in parseFile() to check whether file is corrupted. Also added Default in switch statement and check for marking value(either 0 or 1) in case file is corrupted.\n","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":33}}},{"hash":"1aae544e71be8a9ef0e66f487d22bd43d4de49a3","isMergeCommit":false,"messageTitle":"Add ParserTest.java","messageBody":"Tests parserFile() function in 2 scenarios, one where the file in intact and the other where it is corrupted.\n","fileTypesAndContributionMap":{"java":{"insertions":134,"deletions":0}}},{"hash":"d82e49b325ac4be880d7ab696464d4dbb1b24e9d","isMergeCommit":false,"messageTitle":"Add StorageTest.java","messageBody":"Tests load() method in 3 scenarios:\n* where file exists\n* where file does not exist\n* where the directory the file is expected to be in (and the file) do not exist.\n","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":0}}},{"hash":"15fe1685f610d7e4baa4e2e7a5e444f7a34837e2","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JUnit\u0027","messageBody":"* branch-A-JUnit:\n  Add StorageTest.java\n  Add ParserTest.java\n  Update Parser.java\n  Override equals() for relevant Task Classes\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"3fa0c8a576a813d3b695e0632df0fbecec7d80bf","isMergeCommit":false,"messageTitle":"Edit build.gradle for A-Jar","messageBody":"","tags":["v0.1","A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}}]},{"date":"2024-02-08","commitResults":[{"hash":"9ac14dd62f2004b5c9d4e9bac97be41d211f32dc","isMergeCommit":false,"messageTitle":"Tweak the code to comply with a coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":82}}},{"hash":"96adc632f7c7be73a54a3b345a891dfd800ae222","isMergeCommit":false,"messageTitle":"Add JavaDoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":282,"deletions":8}}},{"hash":"bd983275605d3e21a79578de2c87838350bcd941","isMergeCommit":false,"messageTitle":"Give users a way to find a task by searching for a keyword.","messageBody":"Made corresponding changes\n*Parser.java: add case for find in parseCommand method to read find command form user\n*TaskList.java: add find method to return matching list of tasks for Ui\n*Ui.java: add showFind method to print out results for find using a TaskList (similar to list so maybe can simplify code)\n*add FindCommand.java whose constructer takes in keyword for find\n*Task.java: add isMatchingKeyword to check whether keyword can be found in task description\n","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":0}}},{"hash":"6f5fda9ba47be0cecd8c5ca2f8b52cc11a0c64ba","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"* branch-Level-9:\n  Give users a way to find a task by searching for a keyword.\n","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"2e64fa0446ea90c412fe4efc7b2d88b3a0adf679","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"* branch-A-JavaDoc:\n  Add JavaDoc comments\n\n# Conflicts:\n#\tsrc/main/java/alastor/TaskList.java\n#\tsrc/main/java/alastor/Ui.java\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"9b09a33aef87f5c0adcfe812c63bf287254698b6","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"* branch-A-CodingStandard:\n  Tweak the code to comply with a coding standard\n\n# Conflicts:\n#\tsrc/main/java/alastor/AlastorException.java\n#\tsrc/main/java/alastor/Parser.java\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-10","commitResults":[{"hash":"f3d7cb0bb51cf654522cd3163f2c9a7027ce6ef5","isMergeCommit":false,"messageTitle":"Use CheckStyle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}},{"hash":"98064341040c30f2e45e6efb3e13bbda91c75559","isMergeCommit":false,"messageTitle":"Rectify CheckStyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":23}}},{"hash":"3d9752d1b516a0dba17b4530d79e8041af2bf477","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"* branch-A-CheckStyle:\n  Rectify CheckStyle errors\n  Use CheckStyle\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-16","commitResults":[{"hash":"d4d5501f846de169abef164d588c126110b7e0d2","isMergeCommit":false,"messageTitle":"Update build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"2c0e2523a2103f60a2791faa2ecbfc2ecf5bc956","isMergeCommit":false,"messageTitle":"Update Command classes","messageBody":"They will return String when execute is called.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":14}}},{"hash":"78297c1c6d610a00bf1a47016e4c53344a703cd9","isMergeCommit":false,"messageTitle":"Update Ui to return String instead of print","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":26}}},{"hash":"14fe8377270046e7e0e7cac35f72a8939554d908","isMergeCommit":false,"messageTitle":"Implement JavaFX","messageBody":"Followed tutorial.\nDifferences:\n* Added greetings() in Alastor.java and called in Main.java to enable showing greeting in app.\n* removed prefHeight in VBox in MainWindow.fxml to stop lists from being truncated.\n","fileTypesAndContributionMap":{"fxml":{"insertions":36,"deletions":0},"java":{"insertions":174,"deletions":0}}},{"hash":"a685eb305b7f473a3d0dd1151c6c4566cce6601d","isMergeCommit":false,"messageTitle":"Update Alastor.java","messageBody":"*change constructor to not have to arguments\n*remove run() and main(String[] args)\n*add getResponse(String input) and greeting() to enable app to show text/dialog\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":24}}},{"hash":"4535525ad8bc6576d362580d4ecc62fdebdea5b7","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"* branch-Level-10:\n  Update Alastor.java\n  Implement JavaFX\n  Update Ui to return String instead of print\n  Update Command classes\n  Add images for user and chatbot\n  Update build.gradle\n","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-21","commitResults":[{"hash":"825d5fdf84f31e9c64db53a7562417f4a2566e3e","isMergeCommit":false,"messageTitle":"Update build.gradle","messageBody":"So that jar file can create the application\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"7f8a526b1c067662798b03783cd0a2f7a2df8bda","isMergeCommit":false,"messageTitle":"Add JavaDoc for MainWindow.java showGreet method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"54484321a8a4c90084203bfe1d5fd772b23a1a5b","isMergeCommit":false,"messageTitle":"Add assertions for A-Assertions","messageBody":"Let\u0027s,\n*check that message in AlastorException is never null\n*check that tasks are marked correctly in Storage.java load() method\n*check line read from file is not null\n*check command read from user is not null\n*check task being written to file is not null\n*check task list being rewritten to file is not null\n*check that task is added/deleted from list in TaskList.java\n*check that task marking are updated correctly in MarkCommand\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"56d858adf569fe1c803ec9eb24602d6d675bf029","isMergeCommit":false,"messageTitle":"Remove isExit() method from Command classes","messageBody":"The reason for this is because the method has become redundant.\nThe reason for this is that the exit command \"bye\" is dealt with in the\nhandleUserInput() method in MainWindow.java.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":37}}},{"hash":"56278c8a02ddaa1c58fd5b38909c6b94fb51d62d","isMergeCommit":false,"messageTitle":"Remove isExit() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":5}}},{"hash":"31d131931c00c6734f1a482836d58fbb2d8e120b","isMergeCommit":false,"messageTitle":"Remove redundant methods and comment","messageBody":"The comment no longer serves any purpose.\n\nFor method in Ui.java\n*showLine() is no longer need needed\n*readCommand() is no longer used to read commands\n*showError() is no longer used after aforementioned comment removed\n\nThese became redundant with the implementation of JavaFX.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":26}}},{"hash":"d695b0f25a0d2bb75ae7d1837db9b7328f94fc6c","isMergeCommit":false,"messageTitle":"Updated JavaDoc for getResponse method in Alastor.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"f9ca262293779a281f59dd5a6fdaa7386280c08f","isMergeCommit":true,"messageTitle":"Merge pull request #2 from Murugan-Maniish/branch-A-Assertions","messageBody":"Branch A-Assertions","tags":["A-Assertions"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-22","commitResults":[{"hash":"29c5a600709a7dc2ff7cfb001e804fa0fa4b10de","isMergeCommit":false,"messageTitle":"Update so that user knows directory or file created","messageBody":"Before JavaFX was implemented, System.out.print() was used to tell\nusers when a directory or file was created but this has become\nredundant now.\n\nTwo class attributes is added to Ui.java so that they can be updated\nin Storage.java load() method so that the showGreet() method in\nUi.java can be modified to tell the user if any directory or file was\ncreated. The two attributes will be made false again in the showGreet()\nmethod so that it does not repeat the same message to the user even if\nthe relevant directory or file has been created previously and exists.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"928c9fd0e5c2d77a13ac4d0f392ec84664beff10","isMergeCommit":true,"messageTitle":"Merge branch \u0027master\u0027 into branch-A-CodeQuality","messageBody":"* master:\n  Add assertions for A-Assertions\n  Add JavaDoc for MainWindow.java showGreet method\n","fileTypesAndContributionMap":{}},{"hash":"22b865b8061f363de3fedd7d9630936758f4976a","isMergeCommit":true,"messageTitle":"Merge pull request #3 from Murugan-Maniish/branch-A-CodeQuality","messageBody":"Branch a code quality","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-23","commitResults":[{"hash":"3b12f12b1012d294dfa5aaa341ca6edd94c546ab","isMergeCommit":false,"messageTitle":"Add help command","messageBody":"Let\u0027s\n*create a HelpCommand class\n*create a method in Ui to give a response\n*let parser recognise help command\n","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"c6dd15b634e66e16306a80faef38d57f8cb31fe5","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-BCD-Extension\u0027","messageBody":"* branch-BCD-Extension:\n  Add help command\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{}},{"hash":"e72a53dff2b61530128a032cba1c9516c5074e84","isMergeCommit":false,"messageTitle":"Improve the GUI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":13,"deletions":1}}},{"hash":"af26baf705b0c2bc3fe7d1fb6dc1381f5a06e86d","isMergeCommit":false,"messageTitle":"Give a unique personality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":20}}},{"hash":"357b22386d49e4f167740c47afdcc1533ec464ac","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-BetterGui\u0027","messageBody":"* branch-A-BetterGui:\n  Improve the GUI\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{}},{"hash":"e8133359ae3c74256d0db4656c451dc965d4ceac","isMergeCommit":false,"messageTitle":"Fix error in help response","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fee0cae6459aa810561d2de1878945904d2eebf1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Personality\u0027","messageBody":"* branch-A-Personality:\n  Fix error in help response\n  Give a unique personality\n","tags":["A-Personality"],"fileTypesAndContributionMap":{}},{"hash":"1b1097f1a59d356ec9142adf89b5af2319a0f8aa","isMergeCommit":false,"messageTitle":"More error handling","messageBody":"Data is not as expected:\n*Start date/time is later (or same as) than end/time\n*A value that should be unique is duplicated\n (e.g., two tasks with the same exact details)\n","tags":["A-MoreErrorHandling"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}}]}]},"authorFileTypeContributionMap":{"Murugan-Maniish":{"java":1406,"md":0,"fxml":36,"sh":0,"bat":0,"gradle":22,"txt":8}},"authorContributionVariance":{"Murugan-Maniish":32793.918},"authorDisplayNameMap":{"Murugan-Maniish":"CS2103T-F12-2 MURU..IISH"}}
