[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"H4mes"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"H4mes"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"H4mes"},"content":"        String logo \u003d \" _  _   __    ____  ____ \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"H4mes"},"content":"                \"( \\\\/ ) /__\\\\  (  _ \\\\(  _ \\\\\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"H4mes"},"content":"                \" \\\\  / /(__)\\\\  )   / )   /\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"H4mes"},"content":"                \" (__)(__)(__)(_)\\\\_)(_)\\\\_)\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"H4mes"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"H4mes"},"content":"        printDivider(90);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"H4mes"},"content":"        System.out.println(\"Ahoy! I be Yarr \\nWhat be yer command, me heartie?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"H4mes"},"content":"        printDivider(90);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"H4mes"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"H4mes"},"content":"        while (true) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"H4mes"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"H4mes"},"content":"                echoInput(scanner);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"H4mes"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"H4mes"},"content":"                printDivider(90);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"H4mes"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"H4mes"},"content":"                printDivider(90);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"H4mes"},"content":"            } catch (ExitProgramException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"H4mes"},"content":"                printDivider(90);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"H4mes"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"H4mes"},"content":"                printDivider(90);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"H4mes"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"H4mes"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"H4mes"},"content":"    private static void printDivider(int length){","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"H4mes"},"content":"        char divider \u003d 0x2500 ;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"H4mes"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"H4mes"},"content":"            System.out.print(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"H4mes"},"content":"        System.out.println();","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"H4mes"},"content":"    // Solution below adapted from https://www.geeksforgeeks.org/ways-to-read-input-from-console-in-java/","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"H4mes"},"content":"    private static void echoInput(Scanner scanner) {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"H4mes"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"H4mes"},"content":"        // Handle inputs","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"H4mes"},"content":"        if (input.equals(\"list\") || input.equals(\"blah\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"H4mes"},"content":"            printDivider(90);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"H4mes"},"content":"            System.out.println(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"H4mes"},"content":"            printDivider(90);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"H4mes"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"H4mes"},"content":"            throw new ExitProgramException(\"Fair winds to ye, me hearty! May the tide carry ye safely until our paths cross again.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"H4mes"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"H4mes"},"content":"            throw new IllegalArgumentException(\"Invalid input. Expected: \u0027list\u0027, \u0027blah\u0027 or \u0027bye\u0027\");","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"H4mes"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"H4mes"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"H4mes"},"content":"// Custom Exit Loop Exception class","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"H4mes"},"content":"class ExitProgramException extends RuntimeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"H4mes"},"content":"    public ExitProgramException(String message) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"H4mes"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"H4mes"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"H4mes":57,"-":6}}]
