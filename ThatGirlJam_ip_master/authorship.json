[{"path":".history/src/main/java/duchess/Duchess_20240204011802.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":" * Duchess class represents the main class of the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":" * It initializes the necessary components and runs the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"public class Duchess {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String FILE_PATH \u003d \"./data/duchess.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Duchess object.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes storage, task list, and user interface components.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during initialization","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    public Duchess() throws DuchessException {","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        ArrayList\u003cTask\u003e tasksStored \u003d storage.loadData();","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        if (!tasksStored.isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"            taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     * Main method to start the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            new Duchess().run();","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"     * Runs the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays opening greeting, interacts with user, and handles exceptions.","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"    public void run() {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        ui.printOpeningGreeting();","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"            ui.printEcho(taskList, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        } finally {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"            //Close scanner","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"            ui.closeScanner();","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ThatGirlJam":65}},{"path":".history/src/main/java/duchess/Duchess_20240208233658.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":" * Duchess class represents the main class of the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":" * It initializes the necessary components and runs the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"public class Duchess {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String FILE_PATH \u003d \"./data/duchess.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Duchess object.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes storage, task list, and user interface components.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during initialization","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public Duchess() throws DuchessException {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        ArrayList\u003cTask\u003e tasksStored \u003d storage.loadData();","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        if (!tasksStored.isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     * Main method to start the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            new Duchess().run();","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     * Runs the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays opening greeting, interacts with user, and handles exceptions.","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    public void run() {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        ui.printOpeningGreeting();","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            ui.printEcho(taskList, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        } finally {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"            //Close scanner","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"            ui.closeScanner();","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ThatGirlJam":67}},{"path":".history/src/main/java/duchess/Duchess_20240208233802.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":" * Duchess class represents the main class of the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":" * It initializes the necessary components and runs the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"public class Duchess {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String FILE_PATH \u003d \"./data/duchess.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Duchess object.","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes storage, task list, and user interface components.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during initialization","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public Duchess() throws DuchessException {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        ArrayList\u003cTask\u003e tasksStored \u003d storage.loadData();","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        if (!tasksStored.isEmpty()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     * Main method to start the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            new Duchess().run();","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     * Runs the Duchess program.","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays opening greeting, interacts with user, and handles exceptions.","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    public void run() {","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        ui.printOpeningGreeting();","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            ui.printEcho(taskList, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        } finally {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"            //Close scanner","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"            ui.closeScanner();","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ThatGirlJam":67}},{"path":".history/src/main/java/duchess/storage/Storage_20240204011802.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" * Storage class manages the loading and saving of tasks from/to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":" * It handles file I/O operations and utilizes a Parser to convert file data into Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes the file path and creates a Parser instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * @param filePath the file path to store tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses each line of the file into Task objects and returns them as a list.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the list of tasks loaded from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during file reading or parsing","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DuchessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"                file.createNewFile(); // Create file if it doesn\u0027t exist","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"                Task task \u003d this.parser.parseTaskFromFileString(line); // Parse task from file line","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.getTasks().add(task); // Add task to the list","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"            fileScanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        return taskList.getTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"     * Saves the given list of tasks to the file specified in the constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * Each task is written as a line in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskList the list of tasks to be saved","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    public void saveData(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"                writer.write(task.toFileString() + \"\\n\"); // Write each task to file","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":79}},{"path":".history/src/main/java/duchess/storage/Storage_20240208233723.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" * Storage class manages the loading and saving of tasks from/to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":" * It handles file I/O operations and utilizes a Parser to convert file data into Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes the file path and creates a Parser instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * @param filePath the file path to store tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses each line of the file into Task objects and returns them as a list.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the list of tasks loaded from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during file reading or parsing","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DuchessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"                file.createNewFile(); // Create file if it doesn\u0027t exist","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"                Task task \u003d this.parser.parseTaskFromFileString(line); // Parse task from file line","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.getTasks().add(task); // Add task to the list","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"            fileScanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        return taskList.getTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"     * Saves the given list of tasks to the file specified in the constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * Each task is written as a line in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskList the list of tasks to be saved","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    public void saveData(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"                writer.write(task.toFileString() + \"\\n\"); // Write each task to file","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":79}},{"path":".history/src/main/java/duchess/ui/Ui_20240204012421.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * Ui class handles user interface interactions in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" * It provides methods for printing greetings, messages, and reading user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    // Declare the scanner as a static field in the class","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the opening greeting message when the program starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    public void printOpeningGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"        String logo \u003d \" ____            __\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|  _ \\\\ _   ______| |      ___  ___  ___\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| | | | | | |  __| |__  /  _ \\\\/ __|/ __|\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| |_| | |_| | |__| ___ |   __/\\\\__ \\\\\\\\__ \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|____/ \\\\__,_|____|_| |_|\\\\ ___||___/|___/\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Hello! I\u0027m Duchess.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the closing farewell message when the program ends.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"    public void printClosingGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Farewell. Hope to see you again soon, my dear!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints a horizontal line of dashes as a visual separator.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"        int lineLength \u003d 50; // Specify the length of the line","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        // Print the horizontal line","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        for (int i \u003d 0; i \u003c lineLength; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"     * Reads user input, processes commands, and interacts with the TaskList and Storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskList the TaskList object containing the list of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"     * @param storage the Storage object for saving tasks to file","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during command processing","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"    public void printEcho(TaskList taskList, Storage storage) throws DuchessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        // Loop to read user input","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        while (true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"            // Split user input into tokens","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"            // Based on user input, change output","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"            switch (tokens[0].toLowerCase()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"                printClosingGreeting();","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.printTaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"                    int taskIndexToMark \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.markTaskAsDone(taskIndexToMark);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! That is an invalid command. Try: mark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"                    int taskIndexToUnmark \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.unmarkTaskAsDone(taskIndexToUnmark);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! That is an invalid command. Try: unmark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.addToDo(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"                storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.addDeadline(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"                storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.addEvent(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"                storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"                    int taskIndexToDelete \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.deleteTask(taskIndexToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! That is an invalid command. Try: unmark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"            case \"find\":","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"                    String keyword \u003d tokens[1].toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"                    ArrayList\u003cPair\u003cInteger, Task\u003e\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"                    if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"                        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"                        for (Pair\u003cInteger, Task\u003e pair : matchingTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"                            int originalIndex \u003d pair.getKey() + 1; // Add 1 to match the original index","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"                            Task task \u003d pair.getValue();","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"                            System.out.println(\" \" + originalIndex + \".\" + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"                        System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! Please provide a keyword to search for.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear, I can\u0027t make out what that is.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"        scanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":171}},{"path":".history/src/main/java/duchess/ui/Ui_20240208233740.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * Ui class handles user interface interactions in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" * It provides methods for printing greetings, messages, and reading user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    // Declare the scanner as a static field in the class","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the opening greeting message when the program starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    public void printOpeningGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"        String logo \u003d \" ____            __\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|  _ \\\\ _   ______| |      ___  ___  ___\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| | | | | | |  __| |__  /  _ \\\\/ __|/ __|\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| |_| | |_| | |__| ___ |   __/\\\\__ \\\\\\\\__ \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|____/ \\\\__,_|____|_| |_|\\\\ ___||___/|___/\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Hello! I\u0027m Duchess.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the closing farewell message when the program ends.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"    public void printClosingGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Farewell. Hope to see you again soon, my dear!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints a horizontal line of dashes as a visual separator.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"        int lineLength \u003d 50; // Specify the length of the line","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        // Print the horizontal line","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        for (int i \u003d 0; i \u003c lineLength; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"     * Reads user input, processes commands, and interacts with the TaskList and Storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskList the TaskList object containing the list of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"     * @param storage the Storage object for saving tasks to file","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during command processing","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"    public void printEcho(TaskList taskList, Storage storage) throws DuchessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        // Loop to read user input","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        while (true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"            // Split user input into tokens","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"            // Based on user input, change output","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"            switch (tokens[0].toLowerCase()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"                printClosingGreeting();","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"                return;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.printTaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"                    int taskIndexToMark \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.markTaskAsDone(taskIndexToMark);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! That is an invalid command. Try: mark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"                    int taskIndexToUnmark \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.unmarkTaskAsDone(taskIndexToUnmark);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! That is an invalid command. Try: unmark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.addToDo(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"                storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.addDeadline(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"                storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"                taskList.addEvent(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"                storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"                    int taskIndexToDelete \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.deleteTask(taskIndexToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! That is an invalid command. Try: unmark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"            case \"find\":","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"                printHorizontalLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"                if (tokens.length \u003e 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"                    String keyword \u003d tokens[1].toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"                    ArrayList\u003cPair\u003cInteger, Task\u003e\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"                    if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"                        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"                        for (Pair\u003cInteger, Task\u003e pair : matchingTasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"                            int originalIndex \u003d pair.getKey() + 1; // Add 1 to match the original index","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"                            Task task \u003d pair.getValue();","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"                            System.out.println(\" \" + originalIndex + \".\" + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"                        System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"                } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear! Please provide a keyword to search for.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear, I can\u0027t make out what that is.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"        scanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":171}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    toolVersion \u003d \u00278.1\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    archiveBaseName \u003d \"duchessFX\"","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ThatGirlJam":21,"-":41}},{"path":"src/main/java/duchess/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":" * CommandType enum represents the types of commands available in the Duchess program.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":" * It defines 9 command types: BYE, LIST, TODO, EVENT, DEADLINE, DELETE, FIND, MARK, UNMARK.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"public enum CommandType {","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    BYE, LIST, TODO, EVENT, DEADLINE, DELETE, FIND, MARK, UNMARK, UNKNOWN","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ThatGirlJam":9}},{"path":"src/main/java/duchess/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"    public static DialogBox getDuchessDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ThatGirlJam":62}},{"path":"src/main/java/duchess/Duchess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.parser.Parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" * Duchess class represents the main class of the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" * It initializes the necessary components and runs the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"public class Duchess {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String FILE_PATH \u003d \"./data/duchess.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    private boolean isRunning;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Duchess object.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes storage, task list, and user interface components.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during initialization","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    public Duchess() throws DuchessException {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        ArrayList\u003cTask\u003e tasksStored \u003d this.storage.loadData();","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        if (!tasksStored.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"            this.taskList \u003d new TaskList(this.storage.loadData());","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    protected String getResponse(String input) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            switch (Parser.parseCommand(input)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"            case BYE:","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"                this.exit();","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showClosingGreeting();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            case LIST:","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showList(this.taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"            case TODO:","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"                Task toDoTask \u003d this.taskList.addToDo(Parser.parseArgs(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showAdd(toDoTask, this.taskList.getTaskCount(), \"TODO\");","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"            case EVENT:","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"                Task eventTask \u003d this.taskList.addEvent(Parser.parseArgs(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showAdd(eventTask, this.taskList.getTaskCount(), \"EVENT\");","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"                Task deadlineTask \u003d this.taskList.addDeadline(Parser.parseArgs(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showAdd(deadlineTask, this.taskList.getTaskCount(), \"DEADLINE\");","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"            case DELETE:","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"                int taskIndexToDelete \u003d Integer.parseInt(Parser.parseArgs(input)) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"                Task deletedTask \u003d this.taskList.deleteTask(taskIndexToDelete);","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showDelete(deletedTask, this.taskList.getTaskCount());","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"            case FIND:","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"                String keywords \u003d Parser.parseArgs(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"                ArrayList\u003cPair\u003cInteger, Task\u003e\u003e matchingTasks \u003d taskList.findTasksByKeyword(keywords);","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showFind(matchingTasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"            case MARK:","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"                int taskIndexToMark \u003d Integer.parseInt(Parser.parseArgs(input)) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"                Task markedTask \u003d this.taskList.markTaskAsDone(taskIndexToMark);","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showMarked(markedTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"                int taskIndexToUnmark \u003d Integer.parseInt(Parser.parseArgs(input)) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"                Task unmarkedTask \u003d this.taskList.unmarkTaskAsDone(taskIndexToUnmark);","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"                return this.ui.showUnmarked(unmarkedTask);","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"            default:","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"                throw new DuchessException(\"Oh dear, I can\u0027t make out what that is.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"     * Main method to start the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"     * @param args command-line arguments (not used)","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"            new Duchess().run();","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"     * Runs the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays opening greeting, interacts with user, and handles exceptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"            ui.printOpeningGreeting();","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"            while (this.isRunning) {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"                String input \u003d this.ui.nextLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"                System.out.println(this.getResponse(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"     * Exits the Duchess program.","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"     * Closes the scanner used for user input, saves the task list data, and sets the program state to not running.","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"    public void exit() {","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"        assert this.isRunning;","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"        this.ui.closeScanner();","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"        this.storage.saveData(this.taskList);","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ThatGirlJam":118,"-":2}},{"path":"src/main/java/duchess/DuchessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":" * DuchessException is a custom exception class specific to the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":" * It extends the Exception class to represent exceptions that occur within Duchess.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"public class DuchessException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a DuchessException with the specified detail message.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"     * @param message the detail message","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    public DuchessException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThatGirlJam":16}},{"path":"src/main/java/duchess/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private Duchess duchess;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    public Main() {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"            duchess \u003d new Duchess();","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"            //fxmlLoader.\u003cMainWindow\u003egetController().setDuchess(duchess);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            mainWindow.setDuchess(duchess);","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"            // Add event handler to prevent closing unless user input is \"bye\"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"                if (!mainWindow.canClose()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"                    event.consume();","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"                    Alert alert \u003d new Alert(Alert.AlertType.WARNING);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"                    alert.setTitle(\"Warning\");","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"                    alert.setHeaderText(null);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"                    alert.setContentText(\"To close the application, please say \u0027bye\u0027 to Duchess. It\u0027s only polite!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"                    alert.showAndWait();","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"            });","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"            stage.show();","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ThatGirlJam":58}},{"path":"src/main/java/duchess/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    private Duchess duchess;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    private boolean canClose \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    private Image duchessImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuchess.jpeg\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    public void setDuchess(Duchess d) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"        duchess \u003d d;","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            String response \u003d duchess.getResponse(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"                    DialogBox.getDuchessDialog(response, duchessImage)","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"            );","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"                setCanClose(true); // Set canClose to true if user input is \"bye\"","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"                setCanClose(false); // Set canClose to false for any other input","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * Sets the flag indicating whether the window can be closed.","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"     * @param value true if the window can be closed, false otherwise","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    public void setCanClose(boolean value) {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        canClose \u003d value;","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean canClose() {","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"        return canClose;","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ThatGirlJam":76}},{"path":"src/main/java/duchess/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.TaskType;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":" * TaskList class represents a list of tasks in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":" * It provides methods to add, delete, and manipulate tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    private int taskCount;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a TaskList object with the given list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * @param tasks the list of tasks to initialize the TaskList with","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"        this.taskCount \u003d this.tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"     * Adds a ToDo task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the task details","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs while adding the task","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    public Task addToDo(String description) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"        if (description.length() \u003e 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"            ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"            return addTask(newToDo, TaskType.TODO);","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! That is an invalid command. Try: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"     * @param userInput the user input containing task details","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs while adding the task","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    public Task addDeadline(String userInput) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        String[] deadlineTokens \u003d userInput.split(\"/by\");","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        if (deadlineTokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"            String description \u003d deadlineTokens[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"            String by \u003d deadlineTokens[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"            Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"            return addTask(newDeadline, TaskType.DEADLINE);","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! That is an invalid command. Try: deadline \u003cdescription\u003e \"","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"                    + \"/by \u003cdeadline\u003e\");","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"     * Adds an Event task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"     * @param userInput the user input containing task details","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs while adding the task","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"    public Task addEvent(String userInput) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"        String[] eventTokens \u003d userInput.split(\"/from | /to\");","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        if (eventTokens.length \u003e 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"            String description \u003d eventTokens[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"            String from \u003d eventTokens[1].trim(); // from is everything after","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"            String to \u003d eventTokens[2].trim(); // to is everything after","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"            Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"            return addTask(newEvent, TaskType.EVENT);","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! That is an invalid command. Try: event \u003cdescription\u003e \"","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"                    + \"/from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"        if (this.taskCount \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"            sb.append(\"No tasks have been added yet.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"            sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"            for (int i \u003d 0; i \u003c this.taskCount; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"                sb.append(\" \").append(i + 1).append(\". \").append(this.tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskType the type of the task (ToDo, Deadline, or Event)","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs while adding the task","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"    private Task addTask(Task task, TaskType taskType) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"        if (this.taskCount \u003c MAX_TASKS) {","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"            this.tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"            this.taskCount++;","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Understood. I\u0027ve added this \" + taskType + \" task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Now you have \" + this.taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"            return task;","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"The task list is full. I cannot add more tasks.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if the task index is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"    public Task deleteTask(int taskIndex) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"            Task deletedTask \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"            this.taskCount--;","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"            return deletedTask;","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Invalid task index.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if the task index is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"    public Task markTaskAsDone(int taskIndex) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Perfect! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(this.tasks.get(taskIndex).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"            return task;","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Invalid task index.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"ThatGirlJam"},"content":"     * Unmarks a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskIndex the index of the task to be unmarked","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if the task index is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"ThatGirlJam"},"content":"    public Task unmarkTaskAsDone(int taskIndex) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"ThatGirlJam"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"ThatGirlJam"},"content":"            Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":181,"author":{"gitId":"ThatGirlJam"},"content":"            task.unmarkAsDone();","lastModifiedDate":"2024-02-13"},{"lineNumber":182,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":183,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Understood, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(this.tasks.get(taskIndex).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"ThatGirlJam"},"content":"            return task;","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Invalid task index.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"ThatGirlJam"},"content":"     * Checks if the task index is valid.","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskIndex the index of the task to be checked","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"ThatGirlJam"},"content":"     * @return true if the task index is valid, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"ThatGirlJam"},"content":"    private boolean isValidTaskIndex(int taskIndex) {","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"ThatGirlJam"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.taskCount;","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"ThatGirlJam"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the list of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"ThatGirlJam"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"ThatGirlJam"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"ThatGirlJam"},"content":"     * Finds tasks containing the specified keyword in their descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"ThatGirlJam"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"ThatGirlJam"},"content":"     * @return an ArrayList of Pair objects containing the index of the matching task in the original list and the","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"ThatGirlJam"},"content":"     * matching task itself","lastModifiedDate":"2024-02-09"},{"lineNumber":215,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"ThatGirlJam"},"content":"    public ArrayList\u003cPair\u003cInteger, Task\u003e\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"ThatGirlJam"},"content":"        ArrayList\u003cPair\u003cInteger, Task\u003e\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":218,"author":{"gitId":"ThatGirlJam"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":219,"author":{"gitId":"ThatGirlJam"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-04"},{"lineNumber":220,"author":{"gitId":"ThatGirlJam"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"ThatGirlJam"},"content":"                matchingTasks.add(new Pair\u003c\u003e(i, task));","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":223,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"ThatGirlJam"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":226,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":227,"author":{"gitId":"ThatGirlJam"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-02-13"},{"lineNumber":228,"author":{"gitId":"ThatGirlJam"},"content":"        return this.taskCount;","lastModifiedDate":"2024-02-13"},{"lineNumber":229,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":230,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":231}},{"path":"src/main/java/duchess/launcher/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.launcher;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.Main;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":" * This package provides a launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"     * The main entry point for launching the Duchess application.","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"ThatGirlJam":19}},{"path":"src/main/java/duchess/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.CommandType;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.DuchessException;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * Parser class provides methods to parse input strings into Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" * It is responsible for parsing task information from file format strings.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses a task from a line read from a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"     * @param line the line read from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the Task object parsed from the line","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during parsing","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    public static Task parseTaskFromFileString(String line) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"        // Parse the line and create task objects accordingly","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        // Example line format: \"T | 1 | read book\"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        switch (type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"            task \u003d new ToDo(description, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            task \u003d new Deadline(description, isDone, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            String from \u003d parts[3].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"            String to \u003d parts[4].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            task \u003d new Event(description, isDone, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Unknown task type: \" + type);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"        return task;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses the user\u0027s input command to determine the command type.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"     * @param input the user\u0027s input command","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the CommandType enum value representing the command type","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if the input command is not recognized","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    public static CommandType parseCommand(String input) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        // Normalize input (convert to lowercase and remove leading/trailing whitespace)","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        input \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.BYE;","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.LIST;","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.TODO;","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.FIND;","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.MARK;","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.UNMARK;","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"            // Unknown command","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"            return CommandType.UNKNOWN;","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses the arguments from the user\u0027s input command.","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"     * @param input the user\u0027s input command","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the argument fields of the input command","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if the command requires argument(s) and it is missing","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"    public static String parseArgs(String input) throws DuchessException {","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"            // Split the input command at the first space character and return the second part","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"            return input.split(\" \", 2)[1];","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"No arguments found.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":101}},{"path":"src/main/java/duchess/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.DuchessException;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.parser.Parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":" * Storage class manages the loading and saving of tasks from/to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":" * It handles file I/O operations and utilizes a Parser to convert file data into Task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * Initializes the file path and creates a Parser instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"     * @param filePath the file path to store tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * Loads tasks from the file specified in the constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses each line of the file into Task objects and returns them as a list.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     * @return the list of tasks loaded from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if an error occurs during file reading or parsing","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DuchessException {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"                file.createNewFile(); // Create file if it doesn\u0027t exist","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"                String line \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"                Task task \u003d Parser.parseTaskFromFileString(line); // Parse task from file line","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"                    taskList.getTasks().add(task); // Add task to the list","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"            fileScanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"        return taskList.getTasks();","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * Saves the given list of tasks to the file specified in the constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     * Each task is written as a line in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskList the list of tasks to be saved","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"    public void saveData(TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"                writer.write(task.toFileString() + \"\\n\"); // Write each task to file","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":80}},{"path":"src/main/java/duchess/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.DuchessException;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":" * Deadline class represents a task with a specific deadline in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * It extends the Task class and provides methods to manipulate Deadline tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     * @param by the deadline of the task in the format \"dd-MM-yyyy HHmm\"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if there is an error parsing the deadline string","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    public Deadline(String description, String by) throws DuchessException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! Your deadline format is wrong, try something like DD-MM-YYYY 1800.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Deadline object with the given description, completion status, and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the deadline task","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     * @param isDone true if the task is completed, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     * @param by the deadline of the task in the format \"MMM dd yyyy hh:mm a\"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws DuchessException if there is an error parsing the deadline string","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"    public Deadline(String description, boolean isDone, String by) throws DuchessException {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! Your deadline format is wrong, try something like 10-01-2023 1800.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representing the Deadline task including its type, completion status, description, and deadline","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the Deadline task in file format.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representing the Deadline task including its type, completion status, description,","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"     * and deadline for file storage","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":70}},{"path":"src/main/java/duchess/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":" * Event class represents an event task with a start and end time or date in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":" * It currently supports a String as a start and end.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" * It extends the Task class and provides methods to manipulate Event tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    protected String start; //Date or time, but just generic for now","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs an Event object with the given description, start, and end.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the event task","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"     * @param start the start time or date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"     * @param end the end time or date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs an Event object with the given description, completion status, start, and end.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the event task","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"     * @param isDone true if the task is completed, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"     * @param start the start time or date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"     * @param end the end time or date of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    public Event(String description, boolean isDone, String start, String end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representing the Event task including its type, completion status, description, start, and end","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the Event task in file format.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representing the Event task including its type, completion status, description,","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"     * start, and end for file storage","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + start + \" | \" + end;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":59}},{"path":"src/main/java/duchess/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":" * Task class represents a generic task in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":" * It provides methods to manipulate tasks, such as marking them as done and converting them to string format.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Task object with the given description and sets its completion status to false.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a Task object with the given description and completion status.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     * @param isDone true if the task is completed, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns the status icon representing whether the task is done or not.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     * @return \"X\" if the task is done, \" \" (space) otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representing the task\u0027s completion status and description","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the task in file format.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representing the task\u0027s type, completion status, and description for file storage","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        return \"duchess.task.Task |\" + (isDone ? \"1\" : \"0\")","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"                + \" | \" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":74}},{"path":"src/main/java/duchess/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":" * TaskType enum represents the types of tasks available in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":" * It defines three task types: TODO, DEADLINE, and EVENT.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"     * Represents a ToDo task type.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ThatGirlJam":12}},{"path":"src/main/java/duchess/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":" * ToDo class represents a task without any specific deadline or time.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":" * It extends the Task class and provides methods to manipulate ToDo tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a ToDo object with the given description.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the ToDo task","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a ToDo object with the given description and completion status.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     * @param description the description of the ToDo task","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * @param isDone true if the task is completed, false otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representation of the ToDo task","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns a string representation of the ToDo task in file format.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"     * @return a string representation of the ToDo task for file storage","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":46}},{"path":"src/main/java/duchess/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" * Ui class handles user interface interactions in the Duchess program.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":" * It provides methods for printing greetings, messages, and reading user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    public String nextLine() {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     * Closes the scanner used for reading user input.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        scanner.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the opening greeting message when the program starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    public void printOpeningGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        String logo \u003d \" ____            __\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|  _ \\\\ _   ______| |      ___  ___  ___\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| | | | | | |  __| |__  /  _ \\\\/ __|/ __|\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| |_| | |_| | |__| ___ |   __/\\\\__ \\\\\\\\__ \\\\\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|____/ \\\\__,_|____|_| |_|\\\\ ___||___/|___/\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Hello! I\u0027m Duchess.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints the closing farewell message when the program ends.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    public void printClosingGreeting() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Farewell. Hope to see you again soon, my dear!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"     * Prints a horizontal line of dashes as a visual separator.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        int lineLength \u003d 50; // Specify the length of the line","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        // Print the horizontal line","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        for (int i \u003d 0; i \u003c lineLength; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println();","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays the opening greeting message.","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The opening greeting message.","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"    public String showOpeningGreeting() {","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"        return \"Hello, I\u0027m Duchess. What can I do for you today?\";","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays the closing farewell message.","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The closing farewell message.","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"    public String showClosingGreeting() {","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"        return \"Farewell. Hope to see you again soon, my dear!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays a confirmation message after adding a task.","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"     * @param task The task that was added.","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskCount The total number of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskType The type of task added (e.g., todo, deadline, event).","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"    public String showAdd(Task task, int taskCount, String taskType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"        return String.format(","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"                \"Understood. I\u0027ve added this \" + taskType + \" task:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"                        + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"                        + \"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskList The list of tasks to display.","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The list of tasks as a formatted String.","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"        return taskList.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays a confirmation message after deleting a task.","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"     * @param taskCount The total number of tasks after deletion.","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"    public String showDelete(Task task, int taskCount) {","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"        return String.format(","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"                \"Understood. I\u0027ve deleted this task:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"                        + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"                        + \"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays a confirmation message after marking a task as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"    public String showMarked(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"        return String.format(","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"                \"Perfect! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"                        + task.toString() + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays a confirmation message after marking a task as not done yet.","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"     * @param task The task that was marked as not done yet.","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The confirmation message.","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"    public String showUnmarked(Task task) {","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"        return String.format(","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"                \"Understood, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"                        + task.toString() + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"     * Displays the list of matching tasks found after a search.","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"     * @param matchingTasks The list of matching tasks found.","lastModifiedDate":"2024-02-13"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The list of matching tasks as a formatted String.","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"    public String showFind(ArrayList\u003cPair\u003cInteger, Task\u003e\u003e matchingTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"        if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"            for (Pair\u003cInteger, Task\u003e pair : matchingTasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"                int originalIndex \u003d pair.getKey() + 1; // Add 1 to match the original index","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"                Task task \u003d pair.getValue();","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"                sb.append(\" \").append(originalIndex).append(\". \").append(task.toString()).append(\"\\n\");;","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"            sb.append(\"No matching tasks found.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ThatGirlJam":171}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ThatGirlJam":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duchess.MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"ThatGirlJam":19}},{"path":"src/test/java/duchess/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":" * TaskListTest class contains JUnit tests for the TaskList class.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"     * Tests the addToDo method of the TaskList class.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"     * It checks if a ToDo task is correctly added to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    public void addToDoTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"            taskList.addToDo(\"buy groceries\");","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(\"[T][ ] buy groceries\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"     * Tests the deleteTask method of the TaskList class.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"     * It checks if a task is correctly deleted from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            taskList.addToDo(\"buy groceries\");","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            assertEquals(1, taskList.getTasks().size());","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"            assertEquals(\"[T][ ] buy groceries\", taskList.getTasks().get(0).toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"            taskList.deleteTask(0);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ThatGirlJam":47}},{"path":"src/test/java/duchess/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package duchess.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import duchess.DuchessException;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * DeadlineTest class contains JUnit tests for the Deadline class.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"     * Tests the toString method of the Deadline class.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"     * It checks if the string representation of a deadline task is correct.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"            Deadline deadline \u003d new Deadline(\"buy book\", \"18-01-2003 1800\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"            assertEquals(deadline.toString(), \"[D][ ] buy book (by: Jan 18 2003 06:00 PM)\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ThatGirlJam":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"deadline return book /by 12-01-2023 1800","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"java -classpath ..\\bin duchess.duchess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ThatGirlJam":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"java -classpath ../bin Duchess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ThatGirlJam":1,"-":37}}]
