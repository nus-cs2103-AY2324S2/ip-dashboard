[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"miffi":20,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":" * The main class of the Duke program.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    private static final String FILE_NAME \u003d \"duke.state\";","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"     * The constructor for the Duke class.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"     * @param fileName file to store state to","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"            tasks \u003d storage.readTaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"     * Default constructor to launch from JavaFX.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    public Duke() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        this(FILE_NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        } catch (Parser.InvalidCommandType e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"            ui.showCommandNotFound(e.getCommand());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        } catch (Parser.InvalidCommandData e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"            ui.showError(e);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        return ui.flush();","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"     * The read-eval-print loop of the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"    // Solution below adapted from https://nus-cs2103-ay2324s2.github.io/website/schedule/week3/project.html#a-moreoop","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"    public void repl() {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"                ui.showLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"            } catch (Parser.InvalidCommandType e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"                ui.showCommandNotFound(e.getCommand());","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"            } catch (Parser.InvalidCommandData e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"                ui.showError(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"            } finally {","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"                ui.showLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"     * Saves the state to storage.","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"    public void save() {","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"            storage.writeTaskList(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"            System.out.println(\"Cannot find state file \\\"\" + FILE_NAME + \"\\\"\");","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"            System.out.println(\"Cannot write to state file \\\"\" + FILE_NAME + \"\\\"\");","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"     * The main loop.","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"     * @param args program parameters","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-21"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"        boolean successful \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"            duke.tasks \u003d duke.storage.readTaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"            successful \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"            System.out.println(\"Cannot find state file \\\"\" + FILE_NAME + \"\\\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"            System.out.println(\"Cannot read from state file \\\"\" + FILE_NAME + \"\\\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"            System.out.println(\"The data has been corrupted\");","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"        } finally {","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"            if (!successful) {","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"                System.out.println(\"Continuing with no saved state.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"miffi"},"content":"        duke.repl();","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"miffi"},"content":"            duke.storage.writeTaskList(duke.tasks);","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"miffi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"miffi"},"content":"            System.out.println(\"Cannot find state file \\\"\" + FILE_NAME + \"\\\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"miffi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"miffi"},"content":"            System.out.println(\"Cannot write to state file \\\"\" + FILE_NAME + \"\\\"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"miffi":120,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":" * A launcher class to work around classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"miffi":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":" * This is the main entrypoint of the program.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":" * This sets up the main GUI window and hooks up a Duke instance to it.","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    public void stop() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"        duke.save();","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"miffi":37}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import duke.command.CompleteCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":" * Used to parse user commands.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"     * Parse one user command.","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"     * The user command is parsed from a string into a subclass of {@link Command} which can be then executed.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"     * @throws InvalidCommandType when the given command (first word) is unknown","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"     * @throws InvalidCommandData when the inputs of the command aren\u0027t as expected","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    public static Command parse(String commandText) throws InvalidCommandType, InvalidCommandData {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        Scanner scanner \u003d new Scanner(commandText);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        String type \u003d scanner.next();","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"        if (Objects.equals(type, \"bye\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        } else if (Objects.equals(type, \"list\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"        if (!scanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"            throw new InvalidCommandData();","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        String parameter \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"        Command command;","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"        switch (type) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"            command \u003d new AddCommand(AddCommand.Type.Todo, parseComponents(parameter));","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"            command \u003d new AddCommand(AddCommand.Type.Deadline, parseComponents(parameter));","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"        case \"event\":","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"            command \u003d new AddCommand(AddCommand.Type.Event, parseComponents(parameter));","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"            command \u003d new CompleteCommand(parseIndex(parameter), true);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"            command \u003d new CompleteCommand(parseIndex(parameter), false);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"            command \u003d new DeleteCommand(parseIndex(parameter));","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"        case \"find\":","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"            command \u003d new FindCommand(parameter);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"        default:","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"            throw new InvalidCommandType(type);","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        return command;","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"    private static int parseIndex(String input) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"        return Integer.parseInt(input.trim()) - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"    private static HashMap\u003cString, String\u003e parseComponents(String data) throws InvalidCommandData {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        HashMap\u003cString, StringBuilder\u003e builders \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"        String key \u003d \"DESCRIPTION\";","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"        String[] words \u003d data.split(\" +\");","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"        for (String word : words) {","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"            if (word.startsWith(\"/\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"                // Check if the previous key had any data given to it","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"                if (builders.get(key) \u003d\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"                    throw new InvalidCommandData(key);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"                key \u003d word;","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"                builders.compute(key, (k, v) -\u003e (v \u003d\u003d null) ? new StringBuilder(word) : v.append(\" \").append(word));","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"        HashMap\u003cString, String\u003e components \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"        builders.forEach((k, v) -\u003e components.put(k, v.toString()));","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"        return components;","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"     * Exception when the command is unknown.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"    public static class InvalidCommandType extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"        private final String command;","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"        /**","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"         * Creates an exception about an unknown command string.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"         * @param command The name of the unknown command","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"         */","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"        public InvalidCommandType(String command) {","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"            super(\"Command \\\"\" + command + \"\\\" is invalid or not yet implemented.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"            this.command \u003d command;","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"miffi"},"content":"        public String getCommand() {","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"miffi"},"content":"            return command;","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"miffi"},"content":"     * Exception when the data given to a particular","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"miffi"},"content":"     * command doesn\u0027t match what is expected. The problem","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"miffi"},"content":"     * can either be that no parameters are given, or that","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"miffi"},"content":"     * a parameter is missing.","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"miffi"},"content":"    public static class InvalidCommandData extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"miffi"},"content":"        public InvalidCommandData() {","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"miffi"},"content":"            super(\"Parameters to command not given.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"miffi"},"content":"        public InvalidCommandData(String key) {","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"miffi"},"content":"            super(\"No value given to \" + key);","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":131}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":" * A class used to save and load the state of the program to and from the disk.","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"// Serializing the state was inspired by https://www.baeldung.com/java-serialization","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    private final File file;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"     * Makes a new {@link Storage} instance. This sets up the file for input and output.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"     * @param filePath location of the state file","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"     * Writes a given list of tasks to the state file. This overwrites the previous data in the state file.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"     * @param taskList list of tasks to write to the file","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"     * @throws IOException when writing to the file fails","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    public void writeTaskList(TaskList taskList) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        var output \u003d new FileOutputStream(file);","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"        try (ObjectOutputStream stream \u003d new ObjectOutputStream(output)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"            stream.writeObject(taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"     * Reads a list of tasks from the state file.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"     * @return the read list of tasks from the file","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"     * @throws IOException when reading from the file fails","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"     * @throws ClassNotFoundException when the class read is not a {@link TaskList}","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"    public TaskList readTaskList() throws IOException, ClassNotFoundException {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"        var input \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        try (ObjectInputStream stream \u003d new ObjectInputStream(input)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"            return (TaskList) stream.readObject();","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":49}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" * The list of tasks in the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     * The constructor for TaskList. It initializes as empty.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"     * Gets the tasks at the given index.","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"     * @return the requested task","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"     * @throws TaskNotFound if the task with the given index doesn\u0027t exist","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"    public Task getTask(int index) throws TaskNotFound {","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"            throw new TaskNotFound(index, e);","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"     * @throws TaskNotFound if the task with the given index doesn\u0027t exist","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"    public void deleteTask(int index) throws TaskNotFound {","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"            throw new TaskNotFound(index, e);","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"     * Finds all tasks containing the given query string.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"    public TaskList find(String query) {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"            if (task.inDescription(query)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"                tasks.addTask(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"        return tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"            return \"\";","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"        s.append(\"1\").append(\". \").append(tasks.get(0));","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        for (int i \u003d 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"            s.append(\"\\n\").append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"        return s.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"     * An exception used to signal that a task from a given request doesn\u0027t exist.","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"    public static class TaskNotFound extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"        public TaskNotFound(int index, Throwable cause) {","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"            super(\"Could not find task \" + (index + 1), cause);","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"miffi":88}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":" * A command to add a task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    private final Type type;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    private final HashMap\u003cString, String\u003e components;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"     * The possible types of tasks.","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    public enum Type {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"        Todo,","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        Deadline,","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        Event,","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"     * Constructs a command that adds a task to the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"     * @param type       the type of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"     * @param components the components parsed from the user command","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"    public AddCommand(Type type, HashMap\u003cString, String\u003e components) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"        this.components \u003d components;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"            Task task;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"            switch (type) {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"            case Todo:","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"                task \u003d new Todo(components);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"            case Deadline:","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"                task \u003d new Deadline(components);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"            case Event:","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"                task \u003d new Event(components);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"                break;","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"            default:","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"            ui.showAddedTask(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"        } catch (Task.InvalidComponents e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"            ui.showError(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":63}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * An abstraction for the commands of the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"     * Executes the command. The parameters are used depending on the particular subclass.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     * @param tasks list of tasks to execute on","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     * @param ui ui to input/output to","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"     * @param storage file storage interface","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    protected final void setExit() {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        isExit \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"     * Returns whether the program should exit.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"    public final boolean isExit() {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"        return isExit;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":31}},{"path":"src/main/java/duke/command/CompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" * A command to change the completion status of a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"public class CompleteCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    private final int index;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    private final boolean isComplete;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     * Constructs a command that changes the completion status of a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"     * @param index      the index of the task to change","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"     * @param isComplete whether to change the task to completed leave it as pending","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public CompleteCommand(int index, boolean isComplete) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"            if (isComplete) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"                task.setComplete();","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"                task.setPending();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"            ui.showNote(\"Set task to \" + task.status() + \":\\n  \" + task + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        } catch (TaskList.TaskNotFound e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"            ui.showError(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":40}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * A command that deletes a task from the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    private final int index;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"     * Construct a command that deletes a task at the given index.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"        } catch (TaskList.TaskNotFound e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"            ui.showError(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":28}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * A command to exit the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"        ui.showBye();","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"        super.setExit();","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":17}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * A command to find the tasks matching a certain query.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    private final String query;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"     * Construct a task that filters the list of tasks that contain the string query.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"        this.query \u003d query;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        ui.showNote(\"Found tasks:\\n\" + tasks.find(query));","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.command;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * A command to list all the tasks in the task list.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"        ui.showNote(\"Your tasks:\\n\" + tasks.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":" * A task with a deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"     * Construct a task with a deadline.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     * @param by the deadline date and time for the task","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"     * Construct a task with a deadline from parsed components. The expected components are DESCRIPTION and /by.","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"     * @throws InvalidComponents when the parsed components don\u0027t match the expected components","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    public Deadline(Map\u003cString, String\u003e components) throws InvalidComponents {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        super(components.get(\"DESCRIPTION\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        validateComponentKeys(keys(\"/by\"), components.keySet());","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"        by \u003d parseDateTime(components.get(\"/by\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"    public String describe() {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"        return super.describe() + \"; due by \" + by.format(describeTimeFormat);","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"miffi":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":" * A task that has a start and an end.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"     * Constructs a task with a start and an end.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     * @param from the date and time the task starts","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"     * @param to the date and time the task ends","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"     * Construct a task with a start and an end from parsed components.","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"     * The expected components are DESCRIPTION, /from and /to.","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"     * @throws InvalidComponents when the parsed components don\u0027t match the expected components","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    public Event(Map\u003cString, String\u003e components) throws InvalidComponents {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        super(components.get(\"DESCRIPTION\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"        validateComponentKeys(keys(\"/from\", \"/to\"), components.keySet());","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"        from \u003d parseDateTime(components.get(\"/from\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"        to \u003d parseDateTime(components.get(\"/to\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"    public String describe() {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"        return super.describe() + \"; starts from \"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"                + from.format(describeTimeFormat) + \" and ends at \" + to.format(describeTimeFormat);","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"miffi":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import java.util.Set;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":" * Represents one task. The task can either be completed or pending.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    protected static DateTimeFormatter describeTimeFormat \u003d","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"            DateTimeFormatter.ofPattern(\"EE\u0027,\u0027 dd MMMM yy \u0027at\u0027 hh:mma\");","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    private final String description;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    private Status status;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"     * The completion status of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    private enum Status {","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        Complete(\"completed\", \u0027X\u0027), Incomplete(\"pending\", \u0027 \u0027);","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        private final char icon;","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        private final String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"        Status(String description, char icon) {","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"            this.icon \u003d icon;","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"     * The constructor of a task.","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"    protected Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"        status \u003d Status.Incomplete;","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"     * Sets the task to complete.","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"    public final void setComplete() {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"        status \u003d Status.Complete;","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"     * Sets the task to pending.","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"    public final void setPending() {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        status \u003d Status.Incomplete;","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"     * Returns a description of the status of the Task","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"     * @return the status description","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"    public final String status() {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        return status.description;","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"     * Checks if the given query string is in the task description.","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"    public final boolean inDescription(String query) {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"        return description.contains(query);","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"     * A more verbose english explanation of the task.","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"     * @return description of the task","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-21"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"    public String describe() {","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"        return description;","lastModifiedDate":"2024-01-21"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"     * Helper function to generate the expected set of {@link #validateComponentKeys}","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"     * @param keys the expected components","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"     * @return the components as a set","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"    protected static Set\u003cString\u003e keys(String... keys) {","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"        return new HashSet\u003c\u003e(List.of(keys));","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"     * Used to validate the components of a command.","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"     * It checks whether the components are the same and that it has the default component (DESCRIPTION).","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"miffi"},"content":"     * @param expected the set of expected components","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"miffi"},"content":"     * @param actual   the set of actual components","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"miffi"},"content":"     * @throws InvalidComponents if expected !\u003d actual","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"miffi"},"content":"    protected static void validateComponentKeys(","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"miffi"},"content":"            Set\u003cString\u003e expected, Set\u003cString\u003e actual) throws InvalidComponents {","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"miffi"},"content":"        // DESCRIPTION is assumed to be implicit","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"miffi"},"content":"        if (!actual.remove(\"DESCRIPTION\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"miffi"},"content":"            throw new InvalidComponents();","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"miffi"},"content":"        if (expected.size() !\u003d actual.size()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"miffi"},"content":"            throw new InvalidComponents(actual, expected);","lastModifiedDate":"2024-01-21"},{"lineNumber":112,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":113,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":114,"author":{"gitId":"miffi"},"content":"        for (String component : expected) {","lastModifiedDate":"2024-01-21"},{"lineNumber":115,"author":{"gitId":"miffi"},"content":"            if (!actual.contains(component)) {","lastModifiedDate":"2024-01-21"},{"lineNumber":116,"author":{"gitId":"miffi"},"content":"                throw new InvalidComponents(actual, expected);","lastModifiedDate":"2024-01-21"},{"lineNumber":117,"author":{"gitId":"miffi"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":118,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":119,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":120,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":121,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"miffi"},"content":"     * Parses the local date time of a task component. Right now the format is fixed to \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"miffi"},"content":"     * @param input string with a date and time in the given format.","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"miffi"},"content":"     * @return the parsed LocalDateTime","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"miffi"},"content":"     * @throws DateTimeParseException if the string doesn\u0027t match the pattern.","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"miffi"},"content":"    protected static LocalDateTime parseDateTime(String input) throws InvalidComponents {","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"miffi"},"content":"        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"miffi"},"content":"            return LocalDateTime.from(f.parse(input));","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"miffi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"miffi"},"content":"            throw new InvalidComponents(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"miffi"},"content":"     * Error when the components parsed don\u0027t match the expected components.","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"miffi"},"content":"     * This includes checking the default parameter (called DESCRIPTION).","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":141,"author":{"gitId":"miffi"},"content":"    public static class InvalidComponents extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":142,"author":{"gitId":"miffi"},"content":"        public InvalidComponents(Set\u003cString\u003e actual, Set\u003cString\u003e expected) {","lastModifiedDate":"2024-01-21"},{"lineNumber":143,"author":{"gitId":"miffi"},"content":"            super(\"Invalid task components: \" + actual + \"; expected: \" + expected);","lastModifiedDate":"2024-01-21"},{"lineNumber":144,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":145,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"miffi"},"content":"        public InvalidComponents() {","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"miffi"},"content":"            super(\"No description given\");","lastModifiedDate":"2024-01-27"},{"lineNumber":148,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":149,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"miffi"},"content":"        public InvalidComponents(String date) {","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"miffi"},"content":"            super(\"Value cannot be parsed to date and time: \" + date);","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":154,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":155,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":156,"author":{"gitId":"miffi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":157,"author":{"gitId":"miffi"},"content":"        return \"[\" + status.icon + \"] \" + description;","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":159,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"miffi":159}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":" * A task with no extra information.","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"     * Constructs a task","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"     * @param description description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"     * Construct a task with a start and an end from parsed components. The expected components are only DESCRIPTION.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"     * @throws InvalidComponents when the parsed components don\u0027t match the expected components","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    public Todo(Map\u003cString, String\u003e components) throws InvalidComponents {","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"        this(components.get(\"DESCRIPTION\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"        validateComponentKeys(keys(), components.keySet());","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"miffi":30}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":" * A dialogue box of the conversation between the bot and the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"     * A constructor for a dialog box.","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"     * @param text The dialogue text.","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"     * @param img The image of the person saying the dialogue","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"miffi":60}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":" * The main window of the GUI.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"public class MainWindow {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"miffi":49}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":" * The user interface management class. This class is the centralized interface for input and output to the program.","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"public class Ui {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    private StringBuilder outputBuffer;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"     * The constructor of the user interface.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"    public Ui() {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"        outputBuffer \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"     * Flushes the output of the program at that state as a String.","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"    public String flush() {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"        var out \u003d outputBuffer.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"        outputBuffer \u003d new StringBuilder();","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        return out;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"     * Prints the mascot.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"    public void showCat() {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"        System.out.println(\" |\\\\ /| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"        System.out.println(\"\u003d(O O)\u003d\");","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"        System.out.println(\" /   \\\\ \");","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"     * Shows the greeting message.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"        showLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"        showCat();","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        System.out.println(\"The cat that lives in your walls pokes its head out.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"        System.out.println(\"Its waiting for you to ask something.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"        showLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"     * Shows the ending message.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"        System.out.println(\"The cat recedes into the wall with a bored look on its face\");","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"     * Prints a horizontal line on the screen. Used to visually separate sections apart.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"    public void showLine() {","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"miffi"},"content":"        outputBuffer.append(\"─\".repeat(72)).append(\u0027\\n\u0027);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"miffi"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"miffi"},"content":"        outputBuffer.append(\"The cat tilts its head and hands you an error report:\\n\").append(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"miffi"},"content":"    public void showNote(String str) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"miffi"},"content":"        outputBuffer.append(\"The cat hands a note to you, it reads:\\n\").append(str);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"miffi"},"content":"    public void showCommandNotFound(String command) {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"miffi"},"content":"        outputBuffer.append(\"The cat tilts its head. It doesn\u0027t know what command \\\"\").append(command).append(\"\\\" is.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"miffi"},"content":"     * Shows an added task.","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"miffi"},"content":"     * @param task task that was added","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"miffi"},"content":"    public void showAddedTask(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"miffi"},"content":"        outputBuffer.append(\"The cat scratches a mark on the wall and then hands you a receipt:\\nAdded task \")","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"miffi"},"content":"                .append(task.describe());","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"miffi"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"miffi"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"miffi"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"miffi"},"content":"     * @return a string with a line of the user\u0027s input, or \"bye\" if input is empty","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"miffi"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"miffi"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"miffi"},"content":"        if (!scanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"miffi"},"content":"            return \"bye\";","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"miffi"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":98}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"miffi":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"miffi":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"class ParserTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"    public void parse_onlyCommandName_invalidCommandDataThrown() {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"        Parser.InvalidCommandData thrown \u003d","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"                Assertions.assertThrows(Parser.InvalidCommandData.class, () -\u003e Parser.parse(\"event\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"        Assertions.assertEquals(\"Parameters to command not given.\", thrown.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    public void parse_noDescription_invalidCommandDataThrown() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"        Parser.InvalidCommandData thrown \u003d","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"                Assertions.assertThrows(Parser.InvalidCommandData.class, ()","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"                        -\u003e Parser.parse(\"deadline /by 12/12/2023 1200\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"        Assertions.assertEquals(\"No value given to DESCRIPTION\", thrown.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"miffi":23}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"package duke.task;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"import java.util.List;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"class TaskTest {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"    public void validateComponentKeys_noDescription_invalidComponentsThrown() {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"        Task.InvalidComponents e \u003d Assertions.assertThrows(Task.InvalidComponents.class, ()","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"                -\u003e Task.validateComponentKeys(new HashSet\u003c\u003e(), new HashSet\u003c\u003e()));","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"        Assertions.assertEquals(\"No description given\", e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"miffi"},"content":"    public void validateComponentKeys_notMatch_invalidComponentsThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"miffi"},"content":"        List\u003cHashSet\u003cString\u003e\u003e expecteds \u003d List.of(","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(List.of(\"/by\", \"/from\"))","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"miffi"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"miffi"},"content":"        List\u003cHashSet\u003cString\u003e\u003e actuals \u003d List.of(","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(List.of(\"DESCRIPTION\", \"/by\", \"/from\")),","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(List.of(\"DESCRIPTION\", \"/by\"))","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"miffi"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"miffi"},"content":"        for (int i \u003d 0; i \u003c expecteds.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"miffi"},"content":"            var expected \u003d expecteds.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"miffi"},"content":"            var actual \u003d actuals.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"miffi"},"content":"            Task.InvalidComponents e \u003d Assertions.assertThrows(Task.InvalidComponents.class, ()","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"miffi"},"content":"                    -\u003e Task.validateComponentKeys(expected, actual));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"miffi"},"content":"            Assertions.assertEquals(\"Invalid task components: \" + actual + \"; expected: \" + expected, e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"miffi"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"miffi"},"content":"    public void validateComponentKeys_edgeCaseInputs_nothingThrown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"miffi"},"content":"        List\u003cHashSet\u003cString\u003e\u003e expecteds \u003d List.of(","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(List.of(\"/from\", \"/to\", \"/from\"))","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"miffi"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"miffi"},"content":"        List\u003cHashSet\u003cString\u003e\u003e actuals \u003d List.of(","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(List.of(\"DESCRIPTION\")),","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"miffi"},"content":"                new HashSet\u003c\u003e(List.of(\"DESCRIPTION\", \"/from\", \"/to\"))","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"miffi"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"miffi"},"content":"        for (int i \u003d 0; i \u003c expecteds.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"miffi"},"content":"            var expected \u003d expecteds.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"miffi"},"content":"            var actual \u003d actuals.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"miffi"},"content":"            Assertions.assertDoesNotThrow(() -\u003e Task.validateComponentKeys(expected, actual));","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"miffi"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"miffi"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"miffi"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"miffi"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"miffi":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"miffi"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"miffi"},"content":"mark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"miffi"},"content":"add something","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"miffi"},"content":"unmark 91","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"miffi"},"content":"todo Do the dishes","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"miffi"},"content":"deadline Find a good place to eat /by tomorrow","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"miffi"},"content":"event exams /from today /to forever","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"miffi"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"miffi"},"content":"mark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"miffi"},"content":"mark 3","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"miffi"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"miffi"},"content":"unmark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"miffi"},"content":"unmark 2","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"miffi"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"miffi"},"content":"delete 3","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"miffi"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"miffi"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"miffi":17}}]
