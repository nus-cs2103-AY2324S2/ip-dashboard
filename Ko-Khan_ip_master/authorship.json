[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"import com.sun.tools.javac.Main","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"    mainClass.set(\"bit.Launcher\")","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"    archiveFileName \u003d \u0027bit.jar\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"    archiveBaseName \u003d \"bit\"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ko-Khan":24,"-":40}},{"path":"data/bit.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"T/iP/U","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"D/x /2020-03-03/U","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"E/z / 1 / 2/U","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"Ko-Khan":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"# Bit User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"![Ui.png](Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"### Bit is a **chat bot made to manage your tasks, made simple with a Command Line Interface (CLI)**, while retaining benefits of GUI","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"## Adding todos `todo`","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"Add a todo to be managed by Bit.","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"Format: `todo TASK`","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"- `todo finish reading`","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"- `todo sleep early`","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"- `todo run`","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"```\"I have added this todo: 1.[T][] Task\"```","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"## Adding deadlines `deadline`","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"Add a deadline to be managed by Bit. Format: `deadline Task /by yyyy-MM-dd`","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"**The date format must be adhered to.**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"- `deadline iP /by 2024-02-23`","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"- `deadline OP1 /by 2024-02-22`","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"```Done! I have added this deadline: [D][] Task (By yyyy-MM-dd)```","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"## Adding Events `event`","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"Add an event to be managed by Bit. Format : `event Task /from start /to end`","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"There are no limits to what you may set for start and end.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"- `event hackathon /from Thursday /to Saturday`","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"- `event family dinner /from 1900 /to 2130`","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"```I have added this event: Task from start to end```","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"## Listing `list`","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"list out all tasks you have entered in your tasklist. Format: `list`","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"Example: ","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"- `list`","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"Sure! Here is the list: ","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"1. [T][] Task","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"## Marking a task `mark`","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"Mark a task as complete! Format `mark index`","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"- `mark 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"- `mark 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"```Done and dusted! [T][X] Task```","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"## Unmarking a task `unmark`","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"Unmark a previously completed task as incomplete. Format: `unmark index`","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"- `unmark 1`","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"- `unmark 2`","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"```Alright. Let me uncheck that for you. [T][] Task```","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"## Deleting a task `delete`","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"Delete a task Format: `delete index`","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"- `delete 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"- `delete 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"Ko-Khan"},"content":"```Got it! I have deleted this item: [T][] Task```","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"Ko-Khan"},"content":"## Finding a task `find`","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"Find a task using a keyword. Format: `find keyword`","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"Ko-Khan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"Ko-Khan"},"content":"- `find catch`","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"Ko-Khan"},"content":"- `find i`","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"Ko-Khan"},"content":"Note:","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"Ko-Khan"},"content":"- It is ok if you do not remember the whole word, a part of the word will do.","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"Ko-Khan"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"Ko-Khan"},"content":"Sure! Here are the matches: ","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"Ko-Khan"},"content":"1. [T][] Task","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"Ko-Khan"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"Ko-Khan"},"content":"## Reminders `remind`","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"Ko-Khan"},"content":"Bit can remind you of deadlines approaching in a few days or overdue! Format: `remind index`","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"Ko-Khan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"Ko-Khan"},"content":"- `remind 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"Ko-Khan"},"content":"- `remind 3`","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"Ko-Khan"},"content":"Note:","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"Ko-Khan"},"content":"- The current day is counted as a day. So if you wish to find assignments due tomorrow, `remind 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"Ko-Khan"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"Ko-Khan"},"content":"Hmm... This tasks are due soon: ","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"Ko-Khan"},"content":"1. [T][] Task","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"Ko-Khan"},"content":" ```","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"Ko-Khan"},"content":"## Bye `bye`","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"Ko-Khan"},"content":"This can be used to close the program safely.","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"Ko-Khan"},"content":"Example: ","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"Ko-Khan"},"content":"- `bye`","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":123,"author":{"gitId":"Ko-Khan"},"content":"Expected output:","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"Ko-Khan"},"content":"- The program should close.","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"Ko-Khan":107,"-":17}},{"path":"src/main/java/bit/Bit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":" * Bit, the chatbot to handle all your tasks!","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"public class Bit {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"    private static final Ui UI \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"    private Tasklist tasklist;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"    private Storage store;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"     * Constructor for bit","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    public Bit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"        tasklist \u003d new Tasklist();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"        store \u003d new Storage();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"        store.loadFile(tasklist);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"        UI.greet();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        Storage store \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"        store.loadFile(tasklist);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"        store.cleanList();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"            String s \u003d parser.parse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"            if (s.equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"            } else if (s.equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"                UI.listOut(tasklist);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"            } else if (s.equals(\"mark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"                tasklist.mark(parser.getIndex());","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"            } else if (s.equals(\"unmark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"                tasklist.unmark(parser.getIndex());","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"            } else if (s.equals(\"delete\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"                tasklist.delete(parser.getIndex());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"            } else if (s.equals(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"                UI.listHits(parser.getWord(), tasklist);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"            } else if (s.equals(\"add\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"                    tasklist.addTo(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"        store.saveAll(tasklist);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"        UI.sayBye();","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"        String addInput \u003d input;","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"        input \u003d parser.parse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"            return UI.listOut(tasklist);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"mark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"            return tasklist.mark(parser.getIndex());","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"unmark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"            return tasklist.unmark(parser.getIndex());","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"delete\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"            return tasklist.delete(parser.getIndex());","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"find\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"            return UI.listHits(parser.getWord(), tasklist);","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"remind\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"            return UI.listDueSoon(parser.getIndex(), tasklist);","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"add\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"                return tasklist.addTo(addInput);","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Ko-Khan"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"        return \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ko-Khan":84,"-":2}},{"path":"src/main/java/bit/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import java.time.ZoneId;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":" * A task that has a deadline, which is represented with a LocalDate object","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    private boolean isValid \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"     * Initializes a deadline task. If timing does not follow YYYY-mm-dd format,","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"     * will print out an error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"     * @param timing the deadline of the task","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    public Deadline(String description, String timing) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"            timing \u003d timing.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(timing);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"            this.deadline \u003d LocalDate.parse(timing);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"            deadline \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"            isValid \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"        assert isValid : \"The deadline being printed is invalid!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"            return \"[D][X] \" + description + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"        return \"[D][ ] \" + description + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"    public String getDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"        return deadline.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"    public String getFormatDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"        return deadline.format(format);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"    public boolean getValid() {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"        return isValid;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"     * returns whether or not the deadline is due in i days","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"     * @param i number of days tasks due in.","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"     * @return true or false depending on whether it is due in i days.","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"    public boolean isDueIn(int i) {","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"        ZoneId singaporeZoneId \u003d ZoneId.of(\"Asia/Singapore\");","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"        LocalDate current \u003d LocalDate.now(singaporeZoneId);","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"        LocalDate dueDate \u003d current.plusDays(i);","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"        return deadline.isBefore(dueDate);","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Ko-Khan":73}},{"path":"src/main/java/bit/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Ko-Khan":62}},{"path":"src/main/java/bit/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":" * Special exception thrown for chatbot","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"     * Gets thrown when appropriate","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"     * @param errorMessage message to be printed.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Ko-Khan":16}},{"path":"src/main/java/bit/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":" * A task with a start and end time","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"    private final String start;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"    private final String end;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"     * Initialises an event","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"     * @param description the description of an task","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"     * @param start a string that gives start of event.","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"     * @param end a string that gives end of event.","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"            return \"[E][X] \" + description + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"            return \"[E][ ] \" + description + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"     * returns start time of event","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"     * @return start time.","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"    public String getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"        return this.start;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"     * returns end time of event","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"     * @return end time.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"    public String getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"        return this.end;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Ko-Khan":50}},{"path":"src/main/java/bit/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Ko-Khan":13}},{"path":"src/main/java/bit/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    private Bit bit \u003d new Bit();","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"            stage.setTitle(\"Bit\");","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBit(bit);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Ko-Khan":33}},{"path":"src/main/java/bit/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    private Bit bit;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/matpat.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bit.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    public void setBit(Bit d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"        bit \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"        String response \u003d bit.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Ko-Khan":52}},{"path":"src/main/java/bit/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":" * Parses through inputs of users and","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":" * translate them to string instructions for chatbot","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    private int index \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    private String word \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    public Parser() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"     * Returns index number stored in this object","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"     * This is usually index of Task you wish to access","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"     * @return index number stored.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    public int getIndex() {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        return index;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"     * Returns user\u0027s command in string format","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"     * If there is an error,","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"     * it will be funneled towards add method,","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"     * which will handle them","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"     * @param input the input to be parsed.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"     * @return command to be executed.","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    public String parse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"            return \"bye\";","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"            return \"list\";","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.contains(\"mark \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"            return parseForMark(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"            return parseForDelete(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"            return parseForFind(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.startsWith(\"remind \")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"            return parseForRemind(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"            return \"add\";","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"     * Gets string stored in this object.","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"     * This is used with find command.","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"     * @return string stored in object.","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"    public String getWord() {","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"        return word;","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"    private String parseForMark(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"            int i \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"            if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"                index \u003d i;","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"                return \"mark\";","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"            } else if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"                index \u003d i;","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"                return \"unmark\";","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Ko-Khan"},"content":"                return \"add\";","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"            return \"add\";","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Ko-Khan"},"content":"    private String parseForDelete(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Ko-Khan"},"content":"            String[] strings \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Ko-Khan"},"content":"            int i \u003d Integer.parseInt(strings[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Ko-Khan"},"content":"            index \u003d i;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Ko-Khan"},"content":"            return \"delete\";","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Ko-Khan"},"content":"        } catch (NumberFormatException x) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Ko-Khan"},"content":"            ui.handleErrorMessage(\"Not a number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"Ko-Khan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Ko-Khan"},"content":"            ui.handleErrorMessage(\"forget\");","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Ko-Khan"},"content":"        return \"add\";","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"Ko-Khan"},"content":"    private String parseForFind(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"Ko-Khan"},"content":"        if (input.trim().equals(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Ko-Khan"},"content":"            ui.handleErrorMessage(\"forget\");","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Ko-Khan"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Ko-Khan"},"content":"            word \u003d parts[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Ko-Khan"},"content":"            return \"find\";","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Ko-Khan"},"content":"        return \"add\";","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Ko-Khan"},"content":"    private String parseForRemind(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"Ko-Khan"},"content":"        if (!input.trim().equals(\"remind\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"Ko-Khan"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"Ko-Khan"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"Ko-Khan"},"content":"                index \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"Ko-Khan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"Ko-Khan"},"content":"                ui.handleErrorMessage(\"Not a number\");","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"Ko-Khan"},"content":"                return \"add\";","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"Ko-Khan"},"content":"            return \"remind\";","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"Ko-Khan"},"content":"            ui.handleErrorMessage(\"forget\");","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"Ko-Khan"},"content":"            return \"add\";","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Ko-Khan":127}},{"path":"src/main/java/bit/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":" * This class handles the storage of tasks to files in harddisk","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"    private final String filePath \u003d \"./data/bit.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    private final File file \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"     * Initializes storage according to file path","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"    public Storage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"        boolean isCreated \u003d createFile(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"     * Creates a file myFile if it does not exist.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"     * If file exists after this method, return true.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"     * Otherwise, return false.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"     * @param myFile file to be created","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"     * @return true or false based on whether file exists after method is run.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"    public boolean createFile(File myFile) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"            if (!myFile.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"                myFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"                myFile.createNewFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"            assert myFile.exists() : \"The file couldn\u0027t be created!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"            return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"     * Loads all tasks stored in text file to Tasklist.","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"     * @param list list of tasks to be loaded","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"    public void loadFile(Tasklist list) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"        assert file.exists() : \"The file being loaded from doesn\u0027t exist!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"            String next;","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"            while ((next \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"                String[] parts \u003d next.split(\"/\");","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"                if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"                    break;","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"                if (parts[0].equals(\"T\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"                    loadTask(list, parts);","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"                } else if (parts[0].equals(\"D\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"                    loadDeadline(list, parts);","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"                } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"                    loadEvent(list, parts);","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"                }","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"            assert false : e.toString();","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(\"Errorrrr...\");","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"     * Loads a task into the list","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"     * @param list The tasklist used by the program.","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"     * @param parts The parsed input.","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":82,"author":{"gitId":"Ko-Khan"},"content":"    private void loadTask(Tasklist list, String[] parts) {","lastModifiedDate":"2024-02-21"},{"lineNumber":83,"author":{"gitId":"Ko-Khan"},"content":"        Task t \u003d new Todo(parts[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"        if (parts[2].equals(\"M\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"            t.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Ko-Khan"},"content":"        list.addFromStorage(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":89,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":91,"author":{"gitId":"Ko-Khan"},"content":"     * Loads a deadline into the list.","lastModifiedDate":"2024-02-24"},{"lineNumber":92,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":93,"author":{"gitId":"Ko-Khan"},"content":"     * @param list The tasklist used by the program.","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"Ko-Khan"},"content":"     * @param parts The parsed input.","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"Ko-Khan"},"content":"    private void loadDeadline(Tasklist list, String[] parts) {","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"Ko-Khan"},"content":"        Task d \u003d new Deadline(parts[1], parts[2]);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Ko-Khan"},"content":"        if (parts[3].equals(\"M\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Ko-Khan"},"content":"            d.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Ko-Khan"},"content":"        list.addFromStorage(d);","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":103,"author":{"gitId":"Ko-Khan"},"content":"    private void loadEvent(Tasklist list, String[] parts) {","lastModifiedDate":"2024-02-21"},{"lineNumber":104,"author":{"gitId":"Ko-Khan"},"content":"        Task e \u003d new Event(parts[1], parts[2], parts[3]);","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Ko-Khan"},"content":"        if (parts[4].equals(\"M\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Ko-Khan"},"content":"            e.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Ko-Khan"},"content":"        list.addFromStorage(e);","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Ko-Khan"},"content":"     * Saves all tasks in the list to a text file.","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"Ko-Khan"},"content":"     * @param tasklist the tasks to be stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Ko-Khan"},"content":"    public void saveAll(Tasklist tasklist) {","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Ko-Khan"},"content":"        assert file.exists() : \"File being saved to does not exist!\";","lastModifiedDate":"2024-02-21"},{"lineNumber":118,"author":{"gitId":"Ko-Khan"},"content":"        for (int i \u003d 0; i \u003c tasklist.getSize(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"Ko-Khan"},"content":"            Task t \u003d tasklist.getTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Ko-Khan"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Ko-Khan"},"content":"                saveToFile(t.isDone, t.description);","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"Ko-Khan"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Ko-Khan"},"content":"                saveToFile(t.isDone, t.description, ((Deadline) t).getDeadline());","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"Ko-Khan"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Ko-Khan"},"content":"                saveToFile(t.isDone, t.description, ((Event) t).getStart(), ((Event) t).getEnd());","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Ko-Khan"},"content":"     * Saves a todo to text file.","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"Ko-Khan"},"content":"     * @param marked completion status of todo","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Ko-Khan"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Ko-Khan"},"content":"    public void saveToFile(boolean marked, String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Ko-Khan"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Ko-Khan"},"content":"            myWriter.write(\"T/\" + description);","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Ko-Khan"},"content":"            if (marked) {","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Ko-Khan"},"content":"                myWriter.write(\"/M\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"Ko-Khan"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Ko-Khan"},"content":"                myWriter.write(\"/U\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Ko-Khan"},"content":"            myWriter.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(\"I was unable to add that to the list!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"Ko-Khan"},"content":"     * Saves a deadline to text file.","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"Ko-Khan"},"content":"     * @param marked completion status of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"Ko-Khan"},"content":"     * @param description body of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"Ko-Khan"},"content":"     * @param deadline deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"Ko-Khan"},"content":"    public void saveToFile(boolean marked, String description, String deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"Ko-Khan"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"Ko-Khan"},"content":"            myWriter.write((\"D/\" + description + \"/\" + deadline));","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Ko-Khan"},"content":"            if (marked) {","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Ko-Khan"},"content":"                myWriter.write(\"/M\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Ko-Khan"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Ko-Khan"},"content":"                myWriter.write(\"/U\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"Ko-Khan"},"content":"            myWriter.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(\"I was unable to add that to the list!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Ko-Khan"},"content":"     * Saves an event to textfile.","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"Ko-Khan"},"content":"     * @param marked Completion status of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"Ko-Khan"},"content":"     * @param description Body of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"Ko-Khan"},"content":"     * @param start Start time of event","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"Ko-Khan"},"content":"     * @param end Ending time of event","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"Ko-Khan"},"content":"    public void saveToFile(boolean marked, String description, String start, String end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"Ko-Khan"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"Ko-Khan"},"content":"            myWriter.write(\"E/\" + description + \"/\" + start + \"/\" + end);","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"Ko-Khan"},"content":"            if (marked) {","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Ko-Khan"},"content":"                myWriter.write(\"/M\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"Ko-Khan"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"Ko-Khan"},"content":"                myWriter.write(\"/U\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"Ko-Khan"},"content":"            myWriter.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"Ko-Khan"},"content":"            System.out.println(\"I was unable to add that to the list!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"Ko-Khan"},"content":"     * Clears file after extracting tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"Ko-Khan"},"content":"    public void cleanList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"Ko-Khan"},"content":"            FileWriter myCleaner \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":203,"author":{"gitId":"Ko-Khan"},"content":"            myCleaner.write(\"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"Ko-Khan"},"content":"            myCleaner.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"Ko-Khan"},"content":"            return;","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Ko-Khan":210}},{"path":"src/main/java/bit/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":" * The parent class for todos, deadlines and events","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"    protected final String description;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"     * Initializes a task.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"     * @param description description of task","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"     * Marks task as complete","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    public void complete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"     * Unchecks task as incomplete.","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"    public void incomplete() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"     * Returns String format of task.","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"     * @return task in string format.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"            return \"[ ] \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"    public boolean containsKeyword(String key) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"        return description.contains(key);","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Ko-Khan":53}},{"path":"src/main/java/bit/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":" * The list containing all tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"public class Tasklist {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"     * Initializes a tasklist","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"    public Tasklist() {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"     * Returns current size of taskList","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"     * @return size of tasklist.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"     * Returns task stored at index i of list","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"     * @param i the index of the task to be retrieved.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"     * @return task stored at i.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"        return taskList.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"     * Adds tasks to the list. Takes in String that it parses. Will throw various errors based on input.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"     * It accepts todos, deadlines and events.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"     * @param input String command from user.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"    public String addTo(String input) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"            return addTodo(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.contains(\"event \")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"            return addEvent(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"            return addDeadline(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"            return ui.handleErrorMessage(\"\");","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"    private String addTodo(String input) throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"            if (!parts[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"                throw new DukeException(\"I have no idea what that means!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"            if (parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"                throw new DukeException(\"Hmmm, that todo is empty!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"            taskList.add(new Todo(parts[1]));","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"            int i \u003d taskList.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"            Task t \u003d taskList.get(i - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"            storage.cleanList();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"            storage.saveAll(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"            return ui.sayAdded(i, \"todo\", t);","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"            throw new DukeException(\"Hmmm, that todo is empty!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"    private String addEvent(String input) throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"            if (!parts[0].equals(\"event\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Ko-Khan"},"content":"                throw new DukeException(\"What is that?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Ko-Khan"},"content":"            String[] components \u003d parts[1].split(\"/to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"            String end \u003d components[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"            String[] compo \u003d components[0].split(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Ko-Khan"},"content":"            String start \u003d compo[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Ko-Khan"},"content":"            if (compo[0].trim().isEmpty() || compo[1].trim().isEmpty() || end.trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Ko-Khan"},"content":"                throw new DukeException(\"Missing something?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Ko-Khan"},"content":"            taskList.add(new Event(compo[0], start, end));","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Ko-Khan"},"content":"            int i \u003d taskList.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Ko-Khan"},"content":"            Event e \u003d (Event) taskList.get(i - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Ko-Khan"},"content":"            storage.cleanList();","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Ko-Khan"},"content":"            storage.saveAll(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Ko-Khan"},"content":"            return ui.sayAdded(i, \"event\", taskList.get(i - 1));","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"Ko-Khan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Ko-Khan"},"content":"            throw new DukeException(\"Did you make a mistake?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"Ko-Khan"},"content":"    private String addDeadline(String input) throws DukeException {","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Ko-Khan"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Ko-Khan"},"content":"            if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Ko-Khan"},"content":"                String[] compo \u003d parts[1].split(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Ko-Khan"},"content":"                if (compo[0].trim().isEmpty() || compo[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Ko-Khan"},"content":"                    throw new DukeException(\"Did you miss something?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Ko-Khan"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Ko-Khan"},"content":"                Deadline d \u003d new Deadline(compo[0], compo[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Ko-Khan"},"content":"                if (!d.getValid()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Ko-Khan"},"content":"                    return ui.handleErrorMessage(\"NotaDate\");","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"Ko-Khan"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Ko-Khan"},"content":"                taskList.add(d);","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Ko-Khan"},"content":"                int i \u003d taskList.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Ko-Khan"},"content":"                storage.cleanList();","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"Ko-Khan"},"content":"                storage.saveAll(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"Ko-Khan"},"content":"                return ui.sayAdded(i, \"deadline\", taskList.get(i - 1));","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"Ko-Khan"},"content":"        } catch (ArrayIndexOutOfBoundsException x) {","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"Ko-Khan"},"content":"            throw new DukeException(\"Did you miss something?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Ko-Khan"},"content":"        throw new DukeException(\"Is that a typo I see?\");","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Ko-Khan"},"content":"     * Deletes task found at i - 1. This means the very first task is deleted when i \u003d 1.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"Ko-Khan"},"content":"     * @param i index number of task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Ko-Khan"},"content":"    public String delete(int i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Ko-Khan"},"content":"            i -\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Ko-Khan"},"content":"            String s \u003d taskList.get(i).toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Ko-Khan"},"content":"            taskList.remove(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Ko-Khan"},"content":"            storage.cleanList();","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"Ko-Khan"},"content":"            storage.saveAll(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"Ko-Khan"},"content":"            return ui.sayDeleted(s);","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IndexOutOfBoundsException x) {","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Ko-Khan"},"content":"            return ui.handleErrorMessage(\"absent\");","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Ko-Khan"},"content":"     * Marks task found at i - 1 as complete.","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"Ko-Khan"},"content":"     * @param i index of task to be marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Ko-Khan"},"content":"    public String mark(int i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"Ko-Khan"},"content":"        i -\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"Ko-Khan"},"content":"            taskList.get(i).complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"Ko-Khan"},"content":"            storage.cleanList();","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"Ko-Khan"},"content":"            storage.saveAll(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"Ko-Khan"},"content":"            return ui.sayMarked(taskList.get(i));","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IndexOutOfBoundsException x) {","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"Ko-Khan"},"content":"            return ui.handleErrorMessage(\"absent\");","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"Ko-Khan"},"content":"     * Removes mark from task found at i - 1","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"Ko-Khan"},"content":"     * @param i index of task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Ko-Khan"},"content":"    public String unmark(int i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"Ko-Khan"},"content":"        i -\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Ko-Khan"},"content":"            taskList.get(i).incomplete();","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Ko-Khan"},"content":"            storage.cleanList();","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"Ko-Khan"},"content":"            storage.saveAll(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"Ko-Khan"},"content":"            return ui.sayUnmarked(taskList.get(i));","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IndexOutOfBoundsException x) {","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"Ko-Khan"},"content":"            return ui.handleErrorMessage(\"absent\");","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"Ko-Khan"},"content":"     *  Adds tasks from harddisk to this list","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"Ko-Khan"},"content":"     * @param task The task being added from harddisk.","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"Ko-Khan"},"content":"    public void addFromStorage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Ko-Khan"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Ko-Khan":183}},{"path":"src/main/java/bit/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":" * A basic task containing only a description of the task","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"            return \"[T][X] \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"            return \"[T][ ] \" + description;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Ko-Khan":20}},{"path":"src/main/java/bit/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":" * This class deals with returning strings to user","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"    private String greetingMessage \u003d \"Hi! This is Bit!\\nWhat shall we do today?\";","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"    public String greet() {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"        return \"Hi! This is Bit!\\nWhat shall we do today?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"    public String sayBye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"        return \"Alright. See you soon!!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    public String fileError() {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"        return \"Error! Something went wrong while creating your file!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"     * Prints out all tasks in task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"     * @param tasklist list to be printed out.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    public String listOut(Tasklist tasklist) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"        String s;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d \"Sure! Here is the list:\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"        for (int i \u003d 0; i \u003c tasklist.getSize(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"            assert !(tasklist.getTask(i) \u003d\u003d null) : \"The task in task list should not be null\";","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"            s +\u003d (i + 1) + \".\" + tasklist.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"        return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"     * Returns string that acknowledges that mark command was successful.","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"     * @param task task that was marked.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"    public String sayMarked(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"        return \"Done and dusted: \" + task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"     * Returns string that acknowledges that unmark command was successful.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"     * @param task task that was unmarked.","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"    public String sayUnmarked(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"        return \"Alright, let me uncheck that for you: \" + task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"     * returns string that acknowledges to user that task was successfully added","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"     * @param i index of added task.","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"     * @param string type of task.","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"     * @param task the task itself.","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"    public String sayAdded(int i, String string, Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"        switch (string) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"            return \"I have added this todo: \" + i + \u0027.\u0027 + task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"            return \"I have added this event: \" + (i) + \" \" + task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"            return \"Done! I have added this deadline\" + task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"            return \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"     * Acknowledge that task was deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"     * @param s Deleted task in string format.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"    public String sayDeleted(String s) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"        return \"Got it! I have deleted this item: \" + s;","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Ko-Khan"},"content":"     * Print out error messages for error handling.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Ko-Khan"},"content":"     * @param string Type of error to be handled.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"    public String handleErrorMessage(String string) {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Ko-Khan"},"content":"        switch (string) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Ko-Khan"},"content":"        case \"absent\":","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Ko-Khan"},"content":"            return \"Hey, I don\u0027t think you have added that yet!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Ko-Khan"},"content":"        case \"Not a number\":","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Ko-Khan"},"content":"            return \"Woah! That is not a number!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Ko-Khan"},"content":"        case \"forget\":","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Ko-Khan"},"content":"            return \"Did you forget something?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Ko-Khan"},"content":"        case \"NotaDate\":","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Ko-Khan"},"content":"            return \"The date you entered is invalid.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Ko-Khan"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Ko-Khan"},"content":"            return \"Sorry, I don\u0027t understand what you mean\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Ko-Khan"},"content":"    public String printException(Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Ko-Khan"},"content":"        return e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Ko-Khan"},"content":"     * Lists all items in tasklist containing the keyword.","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"Ko-Khan"},"content":"     * @param key the keyword for the search.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Ko-Khan"},"content":"     * @param tasklist the tasklist being searched.","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Ko-Khan"},"content":"    public String listHits(String key, Tasklist tasklist) {","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Ko-Khan"},"content":"        String s \u003d \"Sure! Here are the matches:\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Ko-Khan"},"content":"        int j \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Ko-Khan"},"content":"        for (int i \u003d 0; i \u003c tasklist.getSize(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Ko-Khan"},"content":"            assert !(tasklist.getTask(i) \u003d\u003d null) : \"The task should not be null!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"Ko-Khan"},"content":"            Task task \u003d tasklist.getTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Ko-Khan"},"content":"            boolean hasKeyWord \u003d task.containsKeyword(key);","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"Ko-Khan"},"content":"            s \u003d addToStringIf(hasKeyWord, s, j, task);","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"Ko-Khan"},"content":"            j \u003d increaseIndexIf(hasKeyWord, j);","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Ko-Khan"},"content":"        return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":125,"author":{"gitId":"Ko-Khan"},"content":"     *  returns a list of all deadlines due in the specified amount","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"Ko-Khan"},"content":"     *  of days as a string.","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"Ko-Khan"},"content":"     * @param daysLeft the number of days the deadlines we are looking for are due in at max.","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"Ko-Khan"},"content":"     * @param tasklist the list we are searching.","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"Ko-Khan"},"content":"     * @return the list of deadlines due in specified number of days.","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"Ko-Khan"},"content":"    public String listDueSoon(int daysLeft, Tasklist tasklist) {","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"Ko-Khan"},"content":"        String dueMessage \u003d \"Hmmm, this tasks are due soon:\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"Ko-Khan"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":135,"author":{"gitId":"Ko-Khan"},"content":"        for (int i \u003d 0; i \u003c tasklist.getSize(); i++) {","lastModifiedDate":"2024-02-22"},{"lineNumber":136,"author":{"gitId":"Ko-Khan"},"content":"            Task task \u003d tasklist.getTask(i);","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"Ko-Khan"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"Ko-Khan"},"content":"                Boolean isDue \u003d (((Deadline) task).isDueIn(daysLeft));","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"Ko-Khan"},"content":"                dueMessage \u003d addToStringIf(isDue, dueMessage, index, task);","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"Ko-Khan"},"content":"                index \u003d increaseIndexIf(isDue, index);","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"Ko-Khan"},"content":"        return dueMessage;","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":145,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"Ko-Khan"},"content":"     * adds to string represenation of list if isAdd is true","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"Ko-Khan"},"content":"     * @param isAdd Should the task be added to the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"Ko-Khan"},"content":"     * @param s The string being added to.","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"Ko-Khan"},"content":"     * @param index index number of task should it be added.","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"Ko-Khan"},"content":"     * @param task the task in question.","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"Ko-Khan"},"content":"     * @return updated string if predicate is true, if not return s.","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"Ko-Khan"},"content":"    private String addToStringIf(boolean isAdd, String s, int index, Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"Ko-Khan"},"content":"        if (isAdd) {","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"Ko-Khan"},"content":"            s +\u003d index + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"Ko-Khan"},"content":"        return s;","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"Ko-Khan"},"content":"    private int increaseIndexIf(boolean isIncreased, int index) {","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"Ko-Khan"},"content":"        if (isIncreased) {","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"Ko-Khan"},"content":"            index++;","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"Ko-Khan"},"content":"        return index;","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Ko-Khan":167}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textOverrun\u003d\"CLIP\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"            \u003cFont name\u003d\"Corbel Italic\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"103.0\" fitWidth\u003d\"71.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Ko-Khan":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bit.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Ko-Khan":19}},{"path":"src/test/java/bit/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"    public void testParse() {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"bye\", parser.parse(\"bye\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"list\", parser.parse(\"list\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"add\", parser.parse(\"mark\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"add\", parser.parse(\"marky\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"mark\", parser.parse(\"mark 2\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"add\", parser.parse(\"unmark\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"add\", parser.parse(\"unmarko\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"unmark\", parser.parse(\"unmark 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"delete\", parser.parse(\"delete 1\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"add\", parser.parse(\"delete\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Ko-Khan":22}},{"path":"src/test/java/bit/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package bit;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"public class TasklistTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"    public void testAddTo() {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingException(tasklist, \"todon\");","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(s, \"I have no idea what that means!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(0, tasklist.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingException(tasklist, \"todo\");","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"Hmmm, that todo is empty!\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(0, tasklist.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingNoException(tasklist, \"todo iP\");","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"[T][ ] iP\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingNoException(tasklist, \" 1 todo\");","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"[T][ ] iP\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingNoException(tasklist, \"deadline x /by 2020-03-03\");","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"[D][ ] x  (by: 03 March 2020)\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingException(tasklist, \"deadline /by 2020-03-04\");","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"Did you miss something?\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingException(tasklist, \"deadline x 2020-03-05\");","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"Did you miss something?\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingNoException(tasklist, \"deadline y /by Tuesday\");","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"[D][ ] x  (by: 03 March 2020)\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingNoException(tasklist, \"event z /from 1 /to 2\");","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"[E][ ] z  (from:  1  to:  2)\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"        s \u003d attemptExpectingException(tasklist, \"event /from 3 /to 4\");","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"        assertEquals(\"Missing something?\", s);","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"    private String attemptExpectingException(Tasklist tasklist, String input) {","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"            tasklist.addTo(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"            return \"No exception was thrown\";","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"    private String attemptExpectingNoException(Tasklist tasklist, String input) {","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"            tasklist.addTo(input);","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"            int size \u003d tasklist.getSize();","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"            int index \u003d size - 1;","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"            return tasklist.getTask(index).toString();","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"            return \"An Exception was thrown\";","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Ko-Khan":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"blah","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"todo x","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"todo","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"todon","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"event y /from 1 /to 2","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"event   /from 2 /to 3","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"event i /from  /to 4","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"event j /fron 4 /to 5","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"deadline a /by 7","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"deadliner","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"deadline /by 7","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"deadline b /by","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"deadline c /by 2024-01-31","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"mark 4","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"unmark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"mark","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"mark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"todo m","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"delete 4","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"delete 7","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"delete a","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"list","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Ko-Khan":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ko-Khan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bit/Bit.java","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"java -classpath ../bin Bit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ko-Khan":2,"-":36}}]
