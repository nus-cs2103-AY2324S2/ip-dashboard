[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"# iggly.Duke project template","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"3. After that, locate the `src/main/java/iggly.Duke.java` file, right-click it, and choose `Run iggly.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yiwern5":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"checkstyle {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    mainClass.set(\"iggly.Duke\")","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"    archiveFileName \u003d \u0027Iggly.jar\u0027","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yiwern5":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"# Iggly User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003cimg src\u003d\"Icon.png\" alt\u003d\"Icon\" width\u003d\"150\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"\u003e This is Iggly, your personal assistant chatbot! 🐧","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003cimg src\u003d\"Ui.png\" alt\u003d\"Screenshot\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"\u003cbr/\u003e Colour scheme: `#CFDDD9` `#B7CDC7` `#F3EEC3` `#FFC099`","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"## How to use Iggly?","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"1. Download Iggly [here](https://github.com/yiwern5/ip/releases/download/v0.2/Iggly.jar).","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"2. Navigate to your Downloads folder using the terminal.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"3. Type `java -jar Iggly.jar` in your terminal.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"4. Press enter.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"5. Give it a try now!","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"## Adding todo: `todo`","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"Adds a todo task in your task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"Example: `todo Laundry`","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"   [T][ ] Laundry","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"   Now you have 1 tasks in the list. 🐧","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"## Adding event: `event`","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"Adds an event task in your task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"Example: `event Pizza party /from 17-02-2024 1800 /to 2000`","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"   [E][ ] Pizza party (on: 17 Feb 2024 6:00PM to 8:00PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"   Now you have 2 tasks in the list. 🐧","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"## Adding deadline: `deadline`","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"Adds a deadline task in your task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"Example: `deadline iP submission /by 23-02-2024 2359`","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"   [D][ ] iP submission (on: 23 Feb 2024 11:59PM, FRIDAY)","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"   Now you have 3 tasks in the list. 🐧","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"## Adding schedule: `schedule`","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"Adds a schedule task in your task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"Example: `schedule Orientation camp /from 18-02-2024 /to 22-02-2024`","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"   [S][ ] Orientation camp (from: 18 Feb 2024, SUNDAY to: 22 Feb 2024, THURSDAY)","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"   Now you have 4 tasks in the list. 🐧","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"## Display task list: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"Displays all the tasks in your task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"Example: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"🐧 Here are the tasks in your task list:","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"   1. [T][ ] Laundry","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"   2. [E][ ] Pizza party (on: 17 Feb 2024 6:00PM to 8:00PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"   3. [D][ ] iP submission (on: 23 Feb 2024 11:59PM, FRIDAY)","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"   4. [S][ ] Orientation camp (from: 18 Feb 2024, SUNDAY to: 22 Feb 2024, THURSDAY)","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"## Mark a task: `mark`","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"Marks a task as done by specifying the task index.","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"- The index **MUST be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"🐧 Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"   [T][X] Laundry","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"## Unmark a task: `unmark`","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"Marks a task as not done by specifying the task index.","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"- The index **MUST be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"🐧 OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"   [T][ ] Laundry","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"## Delete a task: `delete`","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"Deletes a task by specifying the task index.","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"- The index **MUST be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"   [T][ ] Laundry","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"   Now you have 3 tasks in the list. 🐧","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"## Find: `find`","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"Finds a task using keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"- The search is case-insensitive. (e.g. `pizza` will match `Pizza`)","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"- Only the task title is searched.","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"Example: `find pizza`","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"Expected output:","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"🐧 Here are the matching tasks in your list:","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"   1. [E][ ] Pizza party (on: 17 Feb 2024 6:00PM to 8:00PM)","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"```","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"## Bye: `bye`","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"Exit the program. The window will be close automatically.","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"## Saving the data","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"Iggly\u0027s data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-02-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"## Command summary","lastModifiedDate":"2024-02-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"| Action   | Format, Examples                                                                                                                       |","lastModifiedDate":"2024-02-18"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"|----------|----------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-18"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"| Todo     | `todo \u003ctodo title\u003e` \u003cbr/\u003e e.g. `todo Laundry`                                                                                          |","lastModifiedDate":"2024-02-18"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"| Event    | `event \u003cevent title\u003e /from \u003cdd-mm-yyyy HHmm\u003e /to \u003cHHmm\u003e`\u003cbr/\u003e e.g. `event Pizza party /from 17-02-2024 1800 /to 2000`                  |","lastModifiedDate":"2024-02-18"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"| Deadline | `deadline \u003cdeadline title\u003e /by \u003cdd-mm-yyyy HHmm\u003e` \u003cbr/\u003e e.g. `deadline iP submission /by 23-02-2024 2359`                              |","lastModifiedDate":"2024-02-18"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"| Schedule | `schedule \u003cschedule title\u003e /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e` \u003cbr/\u003e e.g. `schedule Orientation camp /from 18-02-2024 /to 22-02-2024` |","lastModifiedDate":"2024-02-18"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"| List     | `list`                                                                                                                                 |","lastModifiedDate":"2024-02-18"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"| Mark     | `mark \u003ctask number\u003e` \u003cbr/\u003e e.g. `mark 1`                                                                                               |","lastModifiedDate":"2024-02-18"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"| Unmark   | `unmark \u003ctask number\u003e` \u003cbr/\u003e e.g. `unmark 1`                                                                                           |","lastModifiedDate":"2024-02-18"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"| Delete   | `delete \u003ctask number\u003e` \u003cbr/\u003e e.g. `delete 1`                                                                                           |","lastModifiedDate":"2024-02-18"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"| Find     | `find \u003ckeyword\u003e` \u003cbr/\u003e e.g. `find homework`                                                                                            |","lastModifiedDate":"2024-02-18"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"| Bye      | `bye`                                                                                                                                  |","lastModifiedDate":"2024-02-18"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"| Help     | `help`                                                                                                                                 |","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"yiwern5":157,"-":16}},{"path":"src/main/java/iggly/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.command.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.command.ExitCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import iggly.javafx.Launcher;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":" * {@link Duke} is the main class of this program.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":" * @author Tsui Yi Wern (yiwern5)","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"public class Duke {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * Constructor for {@link Duke} to initialize the storage or","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * get task list from the storage.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * @param filePath the file path of the storage.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        if (storage.isExistingFile()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"            storage.createNewFile();","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"            storage.updateFile(taskList.getTaskList());","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"     * Starts the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"     * @param args the arguments passed into the application.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        Launcher.main(args);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"     * Generates a response based on the user input. Processes the input by checking for specific commands,","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"     * parsing the input using a parser, and executing the corresponding command.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"     * @return A string representing the response generated based on the input.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        String response \u003d null;","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        if (input.equals(ExitCommand.COMMAND_WORD)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"            response \u003d new ExitCommand().execute(storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"            this.isExit \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"                Command c \u003d new Parser(input, taskList).parse();","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"                response \u003d c.execute(storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"                assert e.getMessage() !\u003d null \u0026\u0026 !e.getMessage().isEmpty();","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        return response;","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        return this.isExit;","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":76}},{"path":"src/main/java/iggly/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import iggly.view.AddTaskView;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to add a {@link Task} to the {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public static final String SCHEDULE \u003d \"schedule\";","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link AddTaskCommand} object with the specified {@link Task} and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * This command is used to add a new task to the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be added, in the form of {@code ToDo}, {@code Event} or {@code Deadline}.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    public AddTaskCommand(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link AddTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * related to adding a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * This method adds the given task to the task list, update the storage and display the add task message by","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     * initialising the add task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        storage.updateFile(taskList.getTaskList());","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        AddTaskView addTaskView \u003d new AddTaskView(this.task, this.taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        return addTaskView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":48}},{"path":"src/main/java/iggly/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link Command} class is an abstract base class representing a generic command in a","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * command-pattern-based design. Subclasses of this class provide concrete implementations","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * for the {@code execute} method to define specific behaviors.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link Command}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * related to the command implementation.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public abstract String execute(Storage storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":19}},{"path":"src/main/java/iggly/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import iggly.view.DeleteTaskView;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to delete a {@link Task} from the {@link TaskList} using the task index.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link DeleteTaskCommand} object with the specified {@link Task} index and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * This command is used to delete a task from the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public DeleteTaskCommand(int index, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d taskList.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link DeleteTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * related to deleting a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * This method deletes the given task index from the task list, update the storage and display the delete task","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * message by initialising the delete task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        taskList.remove(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        storage.updateFile(taskList.getTaskList());","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        DeleteTaskView deleteTaskView \u003d new DeleteTaskView(this.task, this.taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        return deleteTaskView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":45}},{"path":"src/main/java/iggly/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.view.ExitView;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * Command to terminate the program.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final ExitView exitView;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@code ExitCommand}.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.exitView \u003d new ExitView();","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link ExitCommand}, print exit message when the program is terminated.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * This method display the exit message by initialising the exit view.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link ExitCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        return exitView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":31}},{"path":"src/main/java/iggly/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.view.FindTaskView;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * Command to list out filtered tasks in the {@link TaskList} based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final String title;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link FindTaskCommand} object using user\u0027s input and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * This command is used to list filtered tasks in the given task list based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * @param title The user\u0027s desired find task keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list which requires filtering.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    public FindTaskCommand(String title, TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link FindTaskCommand}, filter a {@link TaskList} based on user\u0027s input and","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * prints a filtered {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link FindTaskCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        TaskList filteredTaskList \u003d taskList.find(title);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        FindTaskView findTaskView \u003d new FindTaskView(filteredTaskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        return findTaskView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"yiwern5":39}},{"path":"src/main/java/iggly/command/GreetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.view.GreetView;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * Command to greet user when program is started.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final GreetView greetView;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@code GreetCommand}.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public GreetCommand() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        this.greetView \u003d new GreetView();","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link GreetCommand}, print a welcome message greeting the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * This method display the exit message by initialising the exit view.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link GreetCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        return greetView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":30}},{"path":"src/main/java/iggly/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.view.HelpView;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * Command to list out all commands supported by Iggly.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final HelpView helpView;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link HelpCommand}.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * This command is used to list all commands supported by Iggly.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public HelpCommand() {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.helpView \u003d new HelpView();","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link HelpCommand}, prints the lists of {@link Command}.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * This method display the list of commands available.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link HelpCommand}","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        return helpView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":34}},{"path":"src/main/java/iggly/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link InvalidCommand} class represents a command to handle invalid user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final String exception;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link InvalidCommand} with a default exception message.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public InvalidCommand() {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        this.exception \u003d new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\").getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link InvalidCommand}, print the error message when user input is invalid.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * This method display the error message by printing out the exception message.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link ExitCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        return exception;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":30}},{"path":"src/main/java/iggly/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.view.TaskListView;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * Command to list out all tasks in the {@code TaskList}.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final TaskListView taskListView;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link ListTaskCommand} object using {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * This command is used to list all tasks in the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to be listed .","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public ListTaskCommand(TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        this.taskListView \u003d new TaskListView(taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link ListTaskCommand}, prints {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * This method display the task list using the task list view.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link ListTaskCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        return taskListView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":36}},{"path":"src/main/java/iggly/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import iggly.view.MarkTaskView;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to mark a {@link Task} as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link MarkTaskCommand} object with the specified {@link Task} index and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * This command is used to mark a task as done from the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be marked.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public MarkTaskCommand(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link MarkTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * related to marking a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * This method marks the given task as done from the task list, update the storage and display the mark task","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * message by initialising the mark task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        this.task.mark();","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        storage.updateFile(taskList.getTaskList());","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        MarkTaskView markTaskView \u003d new MarkTaskView(this.task);","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        return markTaskView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":46}},{"path":"src/main/java/iggly/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import iggly.view.UnmarkTaskView;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to mark a {@link Task} as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link UnmarkTaskCommand} object with the specified {@link Task} index and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * This command is used to mark a task as not done from the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be marked.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public UnmarkTaskCommand(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link UnmarkTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * related to marking a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * This method marks the given task as not done from the task list, update the storage and display the unmark task","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * message by initialising the unmark task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    public String execute(Storage storage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        this.task.unmark();","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        storage.updateFile(taskList.getTaskList());","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        UnmarkTaskView unmarkTaskView \u003d new UnmarkTaskView(this.task);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        return unmarkTaskView.display();","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":45}},{"path":"src/main/java/iggly/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link DukeException} class represents a custom exception specific to the iggly.Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" * It extends the standard {@link Exception} class and provides a constructor to initialize the","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * exception message in a stylized format.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link DukeException} with a formatted exception message.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * @param exception The specific error message associated with the exception.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    public DukeException(String exception) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"        super(","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"            \"OOPS!!! \" + exception + \" \\uD83D\\uDC27\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":19}},{"path":"src/main/java/iggly/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import iggly.command.AddTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import iggly.command.Command;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import iggly.command.DeleteTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import iggly.command.FindTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import iggly.command.HelpCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import iggly.command.InvalidCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import iggly.command.ListTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import iggly.command.MarkTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import iggly.command.UnmarkTaskCommand;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Schedule;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":" * The {@link Parser} class is responsible for parsing user input and extracting relevant information","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":" * to perform actions within the program.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"public class Parser {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    private final String command;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Parser} with the specified command string and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * @param command The raw command string provided by the user for parsing.","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The {@code TaskList} associated with the parser, providing context for command execution.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    public Parser(String command, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"     * Parses user input and return the corresponding command based on user\u0027s input.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Command} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user enters an invalid input.","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        String[] splitTask \u003d command.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        switch(splitTask[0]) {","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"            command \u003d new ListTaskCommand(taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseMark(splitTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseUnmark(splitTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.TODO:","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseToDo(splitTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.EVENT:","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseEvent(splitTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.DEADLINE:","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseDeadline(splitTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.SCHEDULE:","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseSchedule(splitTask);","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseDelete(splitTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseFind(splitTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"            command \u003d new HelpCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"        default:","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"        return command;","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"     * Parses a todo input.","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code ToDo} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty.","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"    private static ToDo parseToDo(String[] todo) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"        if (todo.length !\u003d 2 || todo[1].isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"        return new ToDo(todo[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"     * Parses an event input.","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Event} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"    private static Event parseEvent(String[] event) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"        if (event.length !\u003d 2 || event[1].isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"        String[] splitEvent \u003d event[1].split(\" /from \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"        if (splitEvent.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: event event_title /from dd-mm-yyyy HHmm /to HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"        String[] splitDuration \u003d splitEvent[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"        if (splitDuration.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: event event_title /from dd-mm-yyyy HHmm /to HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"        String title \u003d splitEvent[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"        String from \u003d splitDuration[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"        String to \u003d splitDuration[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"        String temp \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"            temp \u003d fromDateTime.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy\")) + \" \" + to;","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"            LocalDateTime toTime \u003d LocalDateTime.parse(temp, formatter);","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"            return new Event(title, fromDateTime, toTime);","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid date \u0026 time input. Use /from dd-mm-yyyy HHmm /to HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"     * Parses a deadline input.","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Deadline} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"    private static Deadline parseDeadline(String[] deadline) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"        if (deadline.length !\u003d 2 || deadline[1].isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"        String[] splitDeadline \u003d deadline[1].split(\" /by \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"        if (splitDeadline.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: deadline deadline_title /by dd-mm-yyyy HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"        String title \u003d splitDeadline[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"        String time \u003d splitDeadline[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"            return new Deadline(title, dateTime);","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Use dd-mm-yyyy HHmm as the date format.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"     * Parses a schedule input.","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Schedule} based on user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"    private static Schedule parseSchedule(String[] schedule) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"        if (schedule.length !\u003d 2 || schedule[1].isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of a schedule cannot be empty.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"        String[] splitSchedule \u003d schedule[1].split(\" /from \", 2);","lastModifiedDate":"2024-02-17"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"        if (splitSchedule.length !\u003d 2) {","lastModifiedDate":"2024-02-17"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: schedule schedule_title /from dd-mm-yyyy /to dd-mm-yyyy\");","lastModifiedDate":"2024-02-17"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"        String[] splitDuration \u003d splitSchedule[1].split(\" /to \", 2);","lastModifiedDate":"2024-02-17"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"        if (splitDuration.length !\u003d 2) {","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: schedule schedule_title /from dd-mm-yyyy /to dd-mm-yyyy\");","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"        String title \u003d splitSchedule[0];","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"        String from \u003d splitDuration[0];","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"        String to \u003d splitDuration[1];","lastModifiedDate":"2024-02-17"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy\");","lastModifiedDate":"2024-02-17"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from, formatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"            LocalDate toDate \u003d LocalDate.parse(to, formatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"            return new Schedule(title, fromDate, toDate);","lastModifiedDate":"2024-02-17"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid date input. Use /from dd-mm-yyyy /to dd-mm-yyyy\");","lastModifiedDate":"2024-02-17"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"     * Parses a mark task input.","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code MarkTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user entered invalid index.","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"    private MarkTaskCommand parseMark(String[] command) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"            int markIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"                Task task \u003d this.taskList.get(markIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"                if (task.isDone()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"                    throw new DukeException(\"This task is already marked as done.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"                } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"                    return new MarkTaskCommand(task, taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"                throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index of task cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index you\u0027ve input is not an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":231,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":232,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":233,"author":{"gitId":"yiwern5"},"content":"     * Parses an unmark task input.","lastModifiedDate":"2024-02-05"},{"lineNumber":234,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":235,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code UnmarkTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":236,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user entered invalid index.","lastModifiedDate":"2024-01-25"},{"lineNumber":237,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":238,"author":{"gitId":"yiwern5"},"content":"    private UnmarkTaskCommand parseUnmark(String[] command) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":239,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":240,"author":{"gitId":"yiwern5"},"content":"            int unmarkIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":241,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":242,"author":{"gitId":"yiwern5"},"content":"                Task task \u003d this.taskList.get(unmarkIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":243,"author":{"gitId":"yiwern5"},"content":"                if (!task.isDone()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":244,"author":{"gitId":"yiwern5"},"content":"                    throw new DukeException(\"This task is already marked as not done.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":245,"author":{"gitId":"yiwern5"},"content":"                } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":246,"author":{"gitId":"yiwern5"},"content":"                    return new UnmarkTaskCommand(task, taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":247,"author":{"gitId":"yiwern5"},"content":"                }","lastModifiedDate":"2024-02-15"},{"lineNumber":248,"author":{"gitId":"yiwern5"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":249,"author":{"gitId":"yiwern5"},"content":"                throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":250,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":251,"author":{"gitId":"yiwern5"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":252,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index of task cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":253,"author":{"gitId":"yiwern5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":254,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index you\u0027ve input is not an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":255,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":256,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":257,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":258,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"yiwern5"},"content":"     * Parses a delete task input.","lastModifiedDate":"2024-02-05"},{"lineNumber":260,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":261,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code DeleteTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user entered invalid index.","lastModifiedDate":"2024-01-25"},{"lineNumber":263,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":264,"author":{"gitId":"yiwern5"},"content":"    private DeleteTaskCommand parseDelete(String[] command) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":265,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":266,"author":{"gitId":"yiwern5"},"content":"            int deleteIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":267,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":268,"author":{"gitId":"yiwern5"},"content":"                return new DeleteTaskCommand(deleteIndex, this.taskList);","lastModifiedDate":"2024-01-23"},{"lineNumber":269,"author":{"gitId":"yiwern5"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"                throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":271,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":272,"author":{"gitId":"yiwern5"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":273,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index of task cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":274,"author":{"gitId":"yiwern5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":275,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index you\u0027ve input is not an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":276,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":277,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":278,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":279,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":280,"author":{"gitId":"yiwern5"},"content":"     * Parses a find task input.","lastModifiedDate":"2024-02-05"},{"lineNumber":281,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":282,"author":{"gitId":"yiwern5"},"content":"     * @return a {@link FindTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":283,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty.","lastModifiedDate":"2024-01-29"},{"lineNumber":284,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":285,"author":{"gitId":"yiwern5"},"content":"    private FindTaskCommand parseFind(String[] input) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":286,"author":{"gitId":"yiwern5"},"content":"        if (input.length !\u003d 2 || input[1].isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of find cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":288,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"yiwern5"},"content":"        return new FindTaskCommand(input[1], this.taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":290,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":291,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":291}},{"path":"src/main/java/iggly/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" * The {@link Storage} class is responsible for handling the reading, writing and saving task data to a file.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"public class Storage {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final File file;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Storage} instance with the specified file path.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * @param filePath The file path where task data is stored or will be stored.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * Checks if the file associated with this storage exists.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * @return {@code true} if the file exists, {@code false} otherwise.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    public boolean isExistingFile() {","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(file)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"            return true;","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"            System.out.println(\"Error checking file existence: \" + e);","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     * Creates a new file at the specified file path.","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"    public void createNewFile() {","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"            this.file.createNewFile();","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"            System.out.println(\"Unable to create new file.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     * Updates the file with the provided task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The list of tasks to be written to the file.","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    public void updateFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        try (FileOutputStream fileOutputStream \u003d new FileOutputStream(this.file);","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"             ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"            objectOutputStream.writeObject(taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"     * Loads tasks from the file and returns the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"     * @return The list of tasks loaded from the file. If an error occurs during loading,","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"     *         an empty list is returned.","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"             ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"            ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) objectInputStream.readObject();","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"            return taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":87}},{"path":"src/main/java/iggly/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.javafx;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    private FXMLLoader fxmlLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * Private constructor for creating a custom dialog box. It initializes the","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * dialog box with the specified text, image, and user status.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * @param text     The text content to be displayed in the dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * @param img      The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * @param isUser   A boolean flag indicating whether the dialog box belongs to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"            if (isUser) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"                fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox2.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        Circle clip \u003d new Circle(50, 50, 40);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        dialog.setWrappingWidth(330);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"     * Creates and returns a dialog box representing a user\u0027s message with the","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     * specified text content and image.","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"     * @param text The text content to be displayed in the user\u0027s dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"     * @param img  The image to be associated with the user in the dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"     * @return A new instance of DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"     * Creates and returns a dialog box representing Iggly\u0027s message with the","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"     * specified text content and image.","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"     * @param text The text content to be displayed in Iggly\u0027s dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"     * @param img  The image to be associated with Iggly in the dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"     * @return A new instance of DialogBox representing Iggly\u0027s dialog.","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        return new DialogBox(text, img, false);","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":78}},{"path":"src/main/java/iggly/javafx/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.javafx;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     * Serves as the entry point for the Java application.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"     * It launches the JavaFX application specified by the Main class.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * @param args Command-line arguments passed to the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":18}},{"path":"src/main/java/iggly/javafx/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.javafx;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import iggly.Duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":" * A GUI for Iggly using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final Duke duke \u003d new Duke(\"./data.dat\");","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    private final Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/Icon.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * Override of the start method in the Application class. This method is called","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * when the JavaFX application is launched. It sets up the main stage, loads the","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * main FXML file, initializes the scene, and displays the primary stage.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * @param stage The primary stage of the JavaFX application.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"            stage.setTitle(\"Iggly\");","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":45}},{"path":"src/main/java/iggly/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.javafx;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.Duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.view.GreetView;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Iggly.png\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    private final String greetMessage \u003d new GreetView().display();","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * Initializes the controller, binding the vertical scroll property of the scrollPane to","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * the height property of the dialogContainer.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"                DialogBox.getDukeDialog(greetMessage, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     * Sets the chatbot to be associated with this controller.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"     * @param d The chatbot to be set.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Iggly\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"            new Thread(() -\u003e {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"                try {","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"                    Thread.sleep(1500);","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"            }).start();","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":80}},{"path":"src/main/java/iggly/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.model;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static iggly.util.DateTimeUtil.formatDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * The {@link Deadline} class represents a task with a specific deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Deadline} instance with the specified title and deadline date.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param date The deadline date and time.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public Deadline(String title, LocalDateTime date) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the deadline task, including its type, title, and deadline details.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        return \"[D]\"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"                + super.toString()","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                + \" (by: \" + formatDateTime(date)","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"                + \", \" + date.getDayOfWeek() + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":38}},{"path":"src/main/java/iggly/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.model;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static iggly.util.DateTimeUtil.formatDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static iggly.util.DateTimeUtil.formatTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * The {@link Event} class represents a task with a specific time range.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link Event} instance with the specified title, start time, and end time.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    public Event(String title, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the event task, including its type, title, and event details.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        return \"[E]\"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"                + super.toString()","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"                + \" (on: \" + formatDateTime(from)","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"                + \" to \" + formatTime(to) + \")\";","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":40}},{"path":"src/main/java/iggly/model/Schedule.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.model;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static iggly.util.DateTimeUtil.formatDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * The {@link Schedule} class represents a task with a specific date range.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class Schedule extends Task {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link Schedule} instance with the specified title, start time, and end time.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the schedule task.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * @param from The start date of the schedule.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * @param to The end date of the schedule.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public Schedule(String title, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the schedule task, including its type, title, and schedule details.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the schedule task.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        return \"[S]\"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"                + super.toString()","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"                + \" (from: \" + formatDate(from)","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"                + \" to: \" + formatDate(to) + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yiwern5":39}},{"path":"src/main/java/iggly/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.model;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link Task} class is an abstract base class representing a generic task in the iggly.Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * It implements the {@link Serializable} interface to support object serialization.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final String title;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Task} instance with the specified title. By default, the task is marked as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public Task(String title) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the task, including its status (done or not) and title.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            return \"[X] \" + this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            return \"[ ] \" + this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public void mark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"     * Checks whether the task associated with this object has been completed.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"     * Returns the title of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"     * @return the title of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    public String getTitle() {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        return this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":68}},{"path":"src/main/java/iggly/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.model;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link TaskList} class encapsulates a task list and provides methods to","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * manipulate and retrieve tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs an empty {@link TaskList} with an initial capacity of 100.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link TaskList} with the specified list of tasks loaded from storage.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The list of tasks to be initialized with.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     * Returns the task at the specified index in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    public void remove(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        this.taskList.remove(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    public int size() {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"     * Returns the filtered task list based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"     * @param input user\u0027s desired find task keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"     * @return the filtered task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"    public TaskList find(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"        String lowerInput \u003d input.toLowerCase();","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"            if (task.getTitle().toLowerCase().contains(lowerInput)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"                filteredTaskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        return new TaskList(filteredTaskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yiwern5":92}},{"path":"src/main/java/iggly/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.model;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link ToDo} class represents a todo task.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link ToDo} instance with the specified title.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the ToDo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    public ToDo(String title) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the ToDo task, including its type and title.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":26}},{"path":"src/main/java/iggly/util/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.util;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * The {@link DateTimeUtil} class consists the method which formats the time.","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class DateTimeUtil {","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Format LocalDateTime using a specific DateTimeFormatter.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param dateTime The LocalDateTime to format.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representation of the LocalDateTime.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public static String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\");","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * Format LocalDateTime using a specific DateTimeFormatter.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * @param dateTime The LocalDateTime to format.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representation of the LocalDateTime.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public static String formatTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * Format LocalDateTime using a specific DateTimeFormatter.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     * @param dateTime The LocalDateTime to format.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representation of the LocalDateTime.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    public static String formatDate(LocalDate dateTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        return dateTime.format(formatter) + \", \" + dateTime.getDayOfWeek();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"yiwern5":44}},{"path":"src/main/java/iggly/view/AddTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link AddTaskView} class represents a view for displaying information after adding a {@link Task}.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class AddTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final String size;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link AddTaskView} with the specified {@link Task} and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task has been added.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public AddTaskView(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        this.size \u003d String.valueOf(taskList.size());","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the added task, including its details and the updated task list size.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"            \"   Got it! I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            + \"   Now you have \" + this.size + \" tasks in the list. \\uD83D\\uDC27\");","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":34}},{"path":"src/main/java/iggly/view/DeleteTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link DeleteTaskView} class represents a view for displaying information after deleting a {@link Task}.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class DeleteTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final String size;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link DeleteTaskView} with the specified {@link Task} and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task has been deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public DeleteTaskView(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        this.size \u003d String.valueOf(taskList.size());","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the deleted task, including its details and the updated task list size.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"            \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            + \"   Now you have \" + this.size + \" tasks in the list. \\uD83D\\uDC27\");","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":34}},{"path":"src/main/java/iggly/view/ExitView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link ExitView} class represents a view for displaying a farewell message upon exiting the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class ExitView extends Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays a farewell message when the program is terminated.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"            \" Bye. Hope to see you again soon! \\uD83D\\uDC27\");","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":16}},{"path":"src/main/java/iggly/view/FindTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link FindTaskView} class represents a view for displaying the list of filtered tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class FindTaskView extends Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link FindTaskView} with the specified task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The {@link TaskList} containing the filtered tasks to be displayed.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public FindTaskView(TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays the list of filtered tasks along with an introductory message and a formatted task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            return \"There are no matching task in your task list. \\uD83D\\uDC27\";","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"            String list \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"                list +\u003d (\"    \" + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            return (","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                    \"\\uD83D\\uDC27 Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"                            + list);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yiwern5":37}},{"path":"src/main/java/iggly/view/GreetView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link GreetView} class represents a view for displaying a welcome message upon starting the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class GreetView extends Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays a welcome message when the program is started.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"                \"   Hello! I\u0027m Iggly, your personal assistant chatbot.\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"                + \"   What can I do for you? \\uD83D\\uDC27\\n\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"                + \"   Enter \u0027help\u0027 to view all the available commands!\");","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":18}},{"path":"src/main/java/iggly/view/HelpView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link HelpView} class represents a view for list of commands supported by Iggly.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class HelpView extends Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays a list of commands supported by Iggly.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"                \"Here is the list of available commands:\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"                + \"   1. todo \u003ctodo title\u003e (e.g. todo Todo)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"                + \"   2. event \u003cevent title\u003e /from \u003cdd-mm-yyyy HHmm\u003e\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"                + \"      /to \u003cHHmm\u003e\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"                + \"      (e.g. event Event /from 05-05-2024 1300 /to 2359)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"                + \"   3. deadline \u003cdeadline title\u003e /by \u003cdd-mm-yyyy HHmm\u003e\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"                + \"      (e.g. deadline Deadline /by 05-05-2024 2359)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"                + \"   4. schedule \u003cschedule title\u003e /from \u003cdd-mm-yyyy\u003e\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"                + \"      /to \u003cdd-mm-yyyy\u003e\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"                + \"      (e.g. schedule Schedule /from 05-05-2024 /to 06-05-2024)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"                + \"   5. list\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"                + \"   6. mark \u003ctask number\u003e (e.g. mark 1)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"                + \"   7. unmark \u003ctask number\u003e (e.g. unmark 1)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"                + \"   8. delete \u003ctask number\u003e (e.g. delete 1)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"                + \"   9. find \u003ckeyword\u003e (e.g. find homework)\\n\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"                + \"   10. bye\");","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":31}},{"path":"src/main/java/iggly/view/MarkTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link MarkTaskView} class represents a view for displaying information after marking a task as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class MarkTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link MarkTaskView} with the specified task.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public MarkTaskView(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the marked task, including its details and the updated status.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            \"\\uD83D\\uDC27 Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":29}},{"path":"src/main/java/iggly/view/TaskListView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link TaskListView} class represents a view for displaying the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class TaskListView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link TaskListView} with the specified task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The {@link TaskList} containing the tasks to be displayed.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public TaskListView(TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays the list of tasks along with an introductory message and a formatted task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            return \"There are no task in your task list. \\uD83D\\uDC27\";","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"            String list \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"                list +\u003d (\"    \" + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            return (","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                    \"\\uD83D\\uDC27 Here are the tasks in your task list:\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"                            + list);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"yiwern5":37}},{"path":"src/main/java/iggly/view/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link Ui} class is an abstract base class representing the user interface in the iggly.Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public abstract class Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays information or messages to the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    public abstract String display();","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":12}},{"path":"src/main/java/iggly/view/UnmarkTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package iggly.view;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link UnmarkTaskView} class represents a view for displaying information after marking a task as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class UnmarkTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link UnmarkTaskView} with the specified task.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public UnmarkTaskView(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the unmarked task, including its details and the updated status.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public String display() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        return (","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            \"\\uD83D\\uDC27 OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.effect.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.paint.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"\u003cfx:root style\u003d\"-fx-padding: 10px;\" type\u003d\"Pane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"      \u003cjavafx.scene.layout.HBox alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"484.0\" style\u003d\"-fx-background-color: #CFDDD9; -fx-background-radius: 10px;\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"              \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"                  \u003cFont name\u003d\"Book Antiqua\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"               \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"              \u003c/Text\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"          \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"              \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"            \u003cInnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"                  \u003cColor red\u003d\"0.6823529601097107\" green\u003d\"0.6823529601097107\" blue\u003d\"0.6823529601097107\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"               \u003c/color\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"         \u003c/effect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"      \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":33}},{"path":"src/main/resources/view/DialogBox2.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.effect.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.paint.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"\u003cfx:root style\u003d\"-fx-padding: 10px;\" type\u003d\"Pane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"      \u003cjavafx.scene.layout.HBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"484.0\" style\u003d\"-fx-background-color: #B7CDC7; -fx-background-radius: 10px; -fx-spacing: 10px; -fx-padding: 10px;\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"              \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"                      \u003cFont name\u003d\"Book Antiqua\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"          \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"              \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"            \u003cInnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"                  \u003cColor red\u003d\"0.6823529601097107\" green\u003d\"0.6823529601097107\" blue\u003d\"0.6823529601097107\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"               \u003c/color\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"         \u003c/effect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"      \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"   \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.effect.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.paint.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"iggly.javafx.MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"            \u003cInnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"                  \u003cColor red\u003d\"0.6823529601097107\" green\u003d\"0.6823529601097107\" blue\u003d\"0.6823529601097107\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"               \u003c/color\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"         \u003c/effect\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #FFC099;\" text\u003d\"Send\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"            \u003cFont name\u003d\"Berlin Sans FB\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"         \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"            \u003cInnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"                  \u003cColor red\u003d\"0.6823529601097107\" green\u003d\"0.6823529601097107\" blue\u003d\"0.6823529601097107\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"               \u003c/color\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" style\u003d\"-fx-background-color: #F3EEC3;\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"            \u003cInnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"               \u003ccolor\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"                  \u003cColor red\u003d\"0.3960784375667572\" green\u003d\"0.3960784375667572\" blue\u003d\"0.3960784375667572\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"               \u003c/color\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"            \u003c/InnerShadow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"         \u003c/effect\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yiwern5":43}},{"path":"src/test/java/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import iggly.command.AddTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    public void executeAddTodoTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(todo, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        assertEquals(todo, updatedTaskList.get(0));","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    public void executeAddEventTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        String from \u003d \"01-01-2024 0000\";","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        String to \u003d \"01-01-2024 2359\";","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        Event event \u003d new Event(\"event\", startTime, endTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(event, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        assertEquals(event, updatedTaskList.get(0));","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"    public void executeAddDeadlineTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        String by \u003d \"01-01-2024 0000\";","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", time);","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(deadline, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        assertEquals(deadline, updatedTaskList.get(0));","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":79}},{"path":"src/test/java/command/DeleteTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import iggly.command.AddTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import iggly.command.DeleteTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    static void setUp() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(todo, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    public void executeDeleteTaskTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(0, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        deleteTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        assertEquals(0, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":50}},{"path":"src/test/java/command/MarkTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import iggly.command.AddTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import iggly.command.MarkTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import iggly.command.UnmarkTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public void executeMarkTaskCommandTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(todo, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        Task task \u003d taskList.get(0);","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(task, taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        markTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(task, taskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        unmarkTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":46}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"class DukeExceptionTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    void dukeExceptionTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"        String errorMessage \u003d \"Test error message\";","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"        DukeException dukeException \u003d new DukeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        assertEquals(\"OOPS!!! \" + errorMessage + \" \\uD83D\\uDC27\\n\", dukeException.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":18}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import iggly.command.AddTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import iggly.command.Command;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import iggly.command.DeleteTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import iggly.command.InvalidCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import iggly.command.ListTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"import iggly.command.MarkTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"import iggly.command.UnmarkTaskCommand;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"import iggly.model.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    private Command command;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    static void setUp() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"01-01-2024 0000\", formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", time);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        new AddTaskCommand(todo, taskList).execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        new AddTaskCommand(deadline, taskList).execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(ListTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(ListTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" 1\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(MarkTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(ListTaskCommand.COMMAND_WORD + \" 9\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! Invalid index. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" 9\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! Invalid index. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" 9\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! Invalid index. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(ListTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index of task cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index of task cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index of task cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(ListTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index you\u0027ve input is not an integer. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index you\u0027ve input is not an integer. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index you\u0027ve input is not an integer. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_todo_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(AddTaskCommand.TODO + \" test\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_event_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(AddTaskCommand.EVENT + \" test /from 01-01-2024 0000 /to 2359\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadline_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(AddTaskCommand.DEADLINE + \" test /by 01-01-2024 0000\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_todoEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.TODO, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_eventEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The description of an event cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadlineEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The description of a deadline cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_eventNoTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT + \"test\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"                    \"OOPS!!! Invalid input. Use: event event_title /from dd-mm-yyyy HHmm /to HHmm \\uD83D\\uDC27\\n\",","lastModifiedDate":"2024-02-15"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadlineNoTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE + \"test\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"                    \"OOPS!!! Invalid input. Use: deadline deadline_title /by dd-mm-yyyy HHmm \\uD83D\\uDC27\\n\",","lastModifiedDate":"2024-02-15"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":231,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":232,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":233,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":234,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":235,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_eventEmptyTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":236,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT + \"test /from\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":238,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":240,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":241,"author":{"gitId":"yiwern5"},"content":"                    \"OOPS!!! Invalid date \u0026 time input. Use /from dd-mm-yyyy HHmm /to HHmm \\uD83D\\uDC27\\n\",","lastModifiedDate":"2024-02-15"},{"lineNumber":242,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":243,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":244,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":245,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":246,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":247,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadlineEmptyTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":248,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":249,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE + \"test /by\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":250,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":251,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":252,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! Use dd-mm-yyyy HHmm as the date format. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":253,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":254,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":255,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":256,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":257,"author":{"gitId":"yiwern5"},"content":"    public void deleteTaskCommandTest_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":258,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" 1\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":259,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":260,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(DeleteTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":261,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":263,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":264,"author":{"gitId":"yiwern5"},"content":"    public void deleteTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":266,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":267,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":269,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index you\u0027ve input is not an integer. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":271,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":272,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":273,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":274,"author":{"gitId":"yiwern5"},"content":"    public void deleteTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":275,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":276,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":277,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":278,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":279,"author":{"gitId":"yiwern5"},"content":"            assertEquals(\"OOPS!!! The index of task cannot be empty. \\uD83D\\uDC27\\n\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":280,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":281,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":282,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":283,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":284,"author":{"gitId":"yiwern5"},"content":"    public void invalidCommandTest() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":285,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(\"blah\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":286,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":287,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(InvalidCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":288,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":289,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":289}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import iggly.duke.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    void isFileExistsTest_returnsTrue() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        storage.createNewFile();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        assertTrue(storage.isExistingFile());","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    void isFileExistsTest_returnsFalse() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        assertFalse(storage.isExistingFile());","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    void createNewFileTest_returnsTrue() {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        storage.createNewFile();","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        assertTrue(storage.isExistingFile());","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    void updateAndLoadTest_returnsTrue() {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e originalTaskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        originalTaskList.add(new ToDo(\"todo\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        storage.updateFile(originalTaskList);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e loadedTaskList \u003d storage.load();","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"        assertEquals(originalTaskList.size(), loadedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":66}},{"path":"src/test/java/model/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import iggly.model.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import iggly.model.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    private static ToDo todo;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    private static Event event;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private static Deadline deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    static void setUp() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        event \u003d new Event(\"event\", LocalDateTime.of(2024, 1, 1, 0, 0),","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        deadline \u003d new Deadline(\"deadline\", LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    public void todoTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        String expectedToString \u003d \"[T][ ] todo\";","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        String actualToString \u003d todo.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(ToDo.class, todo);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedToString, actualToString);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    public void eventTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        String expectedToString \u003d \"[E][ ] event (on: 01 Jan 2024 12:00AM to 12:00PM)\";","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        String actualToString \u003d event.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(Event.class, event);","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedToString, actualToString);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    public void deadlineTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        String expectedToString \u003d \"[D][ ] deadline (by: 01 Jan 2024 12:00PM, MONDAY)\";","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        String actualToString \u003d deadline.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(Deadline.class, deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedToString, actualToString);","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"deadline assignment /by 06-04-2024 2359","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"event ST2132 exam /from 07-05-2024 1600 /to 1800","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"unmark 8","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"event go library","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"deadline","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"blah","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"delete 1","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"java -classpath ..\\bin iggly.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yiwern5":1,"-":20}}]
