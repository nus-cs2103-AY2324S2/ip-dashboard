[{"path":"data/chronos.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"        1. [D][ ] return library book (by: 22 Sep 2024 15:00)","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":3}},{"path":"src/main/java/Chronos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":" * Represents the main class of the Chronos Task Management System.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"public class Chronos {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    private static final String DIVIDER \u003d \"        ------------------------------------------------------------\";","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    private static final String POSSIBLE_COMMANDS \u003d \"        TODO     --- todo [task name]\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"                                                    \"        DEADLINE --- deadline [task name] /by [yyyy-mm-dd HH:MM]\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"                                                    \"        EVENT    --- event [task name] /from [yyyy-mm-dd HH:MM] /to [yyyy-mm-dd HH:MM]\" ;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    private static String filePath \u003d \"./data/chronos.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    private static int noOfTasks \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     * Prints greetings to user.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    public static void greetUser() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Hello! I\u0027m Chronos.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * Prints goodbye to user.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"    public static void bidGoodbye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * Prints task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"    public static void printTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Here are the tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"        for (int i \u003d 1; i \u003c noOfTasks + 1; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"            Task currentTask \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"            System.out.println(\"        \" + i + \". \" + currentTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Prints help list.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        There are no outstanding tasks in your list.\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        You may add various tasks with the commands below:\\n\" + POSSIBLE_COMMANDS);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"     * Saves task list to text file upon each change.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"     * @param fw Filewriter object.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"    public static void saveTasks(FileWriter fw) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"        fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"        fw.write(DIVIDER + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"        for (int j \u003d 1; j \u003c noOfTasks + 1; j++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"            Task currentTask \u003d tasks.get(j - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"            fw.write(\"        \" + j + \". \" + currentTask.toString() + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"        fw.write(DIVIDER + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"        fw.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"     * Adds amd prints a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"    public static void addToDo(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"        noOfTasks++;","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + todo);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints a task with a deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the task with deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"     * @param dueDate Deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"    public static void addDeadline(String description, String dueDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"        noOfTasks++;","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints an event.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"     * @param from Start date and time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"     * @param to End date and time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"    public static void addEvent(String description, String from, String to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"        noOfTasks++;","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + event);","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeMarked Task number to be marked as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"    public static void markTask(int selectedTaskNumberToBeMarked) {","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"        Task selectedTaskToBeMarked \u003d tasks.get(selectedTaskNumberToBeMarked - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"        selectedTaskToBeMarked.setMarked();","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"triciiaaa"},"content":"        tasks.set(selectedTaskNumberToBeMarked - 1, selectedTaskToBeMarked);","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + selectedTaskToBeMarked);","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"     * Unmarks a task as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeUnmarked Task number to be unmarked as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"    public static void unMarkTask(int selectedTaskNumberToBeUnmarked) {","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"        Task selectedTaskToBeUnmarked \u003d tasks.get(selectedTaskNumberToBeUnmarked - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"        selectedTaskToBeUnmarked.setUnmarked();","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"        tasks.set(selectedTaskNumberToBeUnmarked - 1, selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"     * Deletes a task from task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeDeleted Task number to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"    public static void deleteTask(int selectedTaskNumberToBeDeleted) {","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"        Task deletedTask \u003d tasks.get(selectedTaskNumberToBeDeleted - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"        noOfTasks--;","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + deletedTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"        tasks.remove(selectedTaskNumberToBeDeleted - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"triciiaaa"},"content":"     * Changes the format the date specified for a deadline or an event.","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"triciiaaa"},"content":"     * @param dateTime Date and time of a deadline or an event in the format yyyy-mm-dd HH:MM.","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"triciiaaa"},"content":"     * @return Formatted date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"triciiaaa"},"content":"    public static String formatDateTime(String dateTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"triciiaaa"},"content":"        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"triciiaaa"},"content":"        String date \u003d dateTimeArray[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"triciiaaa"},"content":"        String time \u003d dateTimeArray[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"triciiaaa"},"content":"        String combinedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"triciiaaa"},"content":"        return LocalDateTime.parse(combinedDateTime).format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":202,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"triciiaaa"},"content":"     * Initialises text file to store task list and processes user commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"triciiaaa"},"content":"     * @throws @IOException If directory or file is not found.","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":207,"author":{"gitId":"triciiaaa"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":208,"author":{"gitId":"triciiaaa"},"content":"        String dirName \u003d \"data\";","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"triciiaaa"},"content":"        Path dirPath \u003d Paths.get(dirName);","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"triciiaaa"},"content":"        if (!Files.exists(dirPath)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"triciiaaa"},"content":"            Files.createDirectory(dirPath);","lastModifiedDate":"2024-02-03"},{"lineNumber":212,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":213,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":214,"author":{"gitId":"triciiaaa"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"triciiaaa"},"content":"        fw.write(\"There are no outstanding tasks in your list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":216,"author":{"gitId":"triciiaaa"},"content":"        fw.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":217,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":218,"author":{"gitId":"triciiaaa"},"content":"        Chronos.greetUser();","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"triciiaaa"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":221,"author":{"gitId":"triciiaaa"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":222,"author":{"gitId":"triciiaaa"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":223,"author":{"gitId":"triciiaaa"},"content":"            String[] token \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":224,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":225,"author":{"gitId":"triciiaaa"},"content":"            if (token[0].equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":226,"author":{"gitId":"triciiaaa"},"content":"                Chronos.bidGoodbye();","lastModifiedDate":"2024-02-03"},{"lineNumber":227,"author":{"gitId":"triciiaaa"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":228,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"triciiaaa"},"content":"                switch(token[0]) {","lastModifiedDate":"2024-02-03"},{"lineNumber":230,"author":{"gitId":"triciiaaa"},"content":"                    case \"list\":","lastModifiedDate":"2024-02-03"},{"lineNumber":231,"author":{"gitId":"triciiaaa"},"content":"                        if (token.length !\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":232,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":233,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Invalid command. To print the list of tasks, please use list only.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":234,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":235,"author":{"gitId":"triciiaaa"},"content":"                        } else if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":236,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.printHelp();","lastModifiedDate":"2024-02-03"},{"lineNumber":237,"author":{"gitId":"triciiaaa"},"content":"                        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":238,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.printTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":239,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":240,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":241,"author":{"gitId":"triciiaaa"},"content":"                    case \"mark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":242,"author":{"gitId":"triciiaaa"},"content":"                        if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":243,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":244,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Missing task number. Please include the task number to be marked.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":245,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":246,"author":{"gitId":"triciiaaa"},"content":"                        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":247,"author":{"gitId":"triciiaaa"},"content":"                            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":248,"author":{"gitId":"triciiaaa"},"content":"                                int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":249,"author":{"gitId":"triciiaaa"},"content":"                                Chronos.markTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":250,"author":{"gitId":"triciiaaa"},"content":"                                Chronos.saveTasks(fw);","lastModifiedDate":"2024-02-03"},{"lineNumber":251,"author":{"gitId":"triciiaaa"},"content":"                            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":252,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":253,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(\"        Task number is not an integer. Please include a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":254,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":255,"author":{"gitId":"triciiaaa"},"content":"                            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":256,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":257,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(\"        Task number out of range. Please include a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":258,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":259,"author":{"gitId":"triciiaaa"},"content":"                            }","lastModifiedDate":"2024-02-03"},{"lineNumber":260,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":261,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":262,"author":{"gitId":"triciiaaa"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":263,"author":{"gitId":"triciiaaa"},"content":"                        if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":264,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":265,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Missing task number. Please include the task number to be unmarked.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":266,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":267,"author":{"gitId":"triciiaaa"},"content":"                        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":268,"author":{"gitId":"triciiaaa"},"content":"                            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":269,"author":{"gitId":"triciiaaa"},"content":"                                int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":270,"author":{"gitId":"triciiaaa"},"content":"                                Chronos.unMarkTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":271,"author":{"gitId":"triciiaaa"},"content":"                                Chronos.saveTasks(fw);","lastModifiedDate":"2024-02-03"},{"lineNumber":272,"author":{"gitId":"triciiaaa"},"content":"                            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":273,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":274,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(\"        Task number is not an integer. Please include a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":275,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":276,"author":{"gitId":"triciiaaa"},"content":"                            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":277,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":278,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(\"        Task number out of range. Please include a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":279,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":280,"author":{"gitId":"triciiaaa"},"content":"                            }","lastModifiedDate":"2024-02-03"},{"lineNumber":281,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":282,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":283,"author":{"gitId":"triciiaaa"},"content":"                    case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":284,"author":{"gitId":"triciiaaa"},"content":"                        if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":285,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":286,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Missing description. Please include a description of your todo.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":287,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":288,"author":{"gitId":"triciiaaa"},"content":"                        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":289,"author":{"gitId":"triciiaaa"},"content":"                            String description \u003d token[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":290,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.addToDo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":291,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.saveTasks(fw);","lastModifiedDate":"2024-02-03"},{"lineNumber":292,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":293,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":294,"author":{"gitId":"triciiaaa"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":295,"author":{"gitId":"triciiaaa"},"content":"                        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":296,"author":{"gitId":"triciiaaa"},"content":"                            String[] descriptionAndBy \u003d token[1].split(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":297,"author":{"gitId":"triciiaaa"},"content":"                            String description \u003d descriptionAndBy[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":298,"author":{"gitId":"triciiaaa"},"content":"                            String dueDate \u003d Chronos.formatDateTime(descriptionAndBy[1].trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":299,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.addDeadline(description, dueDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":300,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.saveTasks(fw);","lastModifiedDate":"2024-02-03"},{"lineNumber":301,"author":{"gitId":"triciiaaa"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":302,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":303,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Invalid command. Please include a task name and a valid due date following the syntax of the example below:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":304,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        e.g. deadline return library book /by 2024-09-22 15:00\");","lastModifiedDate":"2024-02-03"},{"lineNumber":305,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":306,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":307,"author":{"gitId":"triciiaaa"},"content":"                    case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":308,"author":{"gitId":"triciiaaa"},"content":"                        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":309,"author":{"gitId":"triciiaaa"},"content":"                            String[] descriptionAndDate \u003d token[1].split(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":310,"author":{"gitId":"triciiaaa"},"content":"                            String description \u003d descriptionAndDate[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":311,"author":{"gitId":"triciiaaa"},"content":"                            String[] fromAndTo \u003d descriptionAndDate[1].split(\"/to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":312,"author":{"gitId":"triciiaaa"},"content":"                            String fromDateAndTime \u003d Chronos.formatDateTime(fromAndTo[0].trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":313,"author":{"gitId":"triciiaaa"},"content":"                            String toDateAndTime \u003d Chronos.formatDateTime(fromAndTo[1].trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":314,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.addEvent(description, fromDateAndTime, toDateAndTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":315,"author":{"gitId":"triciiaaa"},"content":"                            Chronos.saveTasks(fw);","lastModifiedDate":"2024-02-03"},{"lineNumber":316,"author":{"gitId":"triciiaaa"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":317,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":318,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Invalid command. Please include a task name and a valid due date following the syntax of the example below:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":319,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        e.g. event concert /from 2024-02-16 18:00 /to 2024-02-16 20:00\");","lastModifiedDate":"2024-02-03"},{"lineNumber":320,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":321,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":322,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":323,"author":{"gitId":"triciiaaa"},"content":"                    case \"delete\":","lastModifiedDate":"2024-02-03"},{"lineNumber":324,"author":{"gitId":"triciiaaa"},"content":"                        if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":325,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":326,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(\"        Missing task number. Please include the task number to be deleted.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":327,"author":{"gitId":"triciiaaa"},"content":"                            System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":328,"author":{"gitId":"triciiaaa"},"content":"                        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":329,"author":{"gitId":"triciiaaa"},"content":"                            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":330,"author":{"gitId":"triciiaaa"},"content":"                                int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":331,"author":{"gitId":"triciiaaa"},"content":"                                Chronos.deleteTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":332,"author":{"gitId":"triciiaaa"},"content":"                                Chronos.saveTasks(fw);","lastModifiedDate":"2024-02-03"},{"lineNumber":333,"author":{"gitId":"triciiaaa"},"content":"                            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":334,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":335,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(\"        Task number is not an integer. Please include a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":336,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":337,"author":{"gitId":"triciiaaa"},"content":"                            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":338,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":339,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(\"        Task number out of range. Please include a valid task number.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":340,"author":{"gitId":"triciiaaa"},"content":"                                System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":341,"author":{"gitId":"triciiaaa"},"content":"                            }","lastModifiedDate":"2024-02-03"},{"lineNumber":342,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":343,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":344,"author":{"gitId":"triciiaaa"},"content":"                    default:","lastModifiedDate":"2024-02-03"},{"lineNumber":345,"author":{"gitId":"triciiaaa"},"content":"                        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":346,"author":{"gitId":"triciiaaa"},"content":"                        System.out.println(\"        Invalid command. Please try again.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":347,"author":{"gitId":"triciiaaa"},"content":"                        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":348,"author":{"gitId":"triciiaaa"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":349,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":350,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":351,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":352,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":353,"author":{"gitId":"triciiaaa"},"content":"        sc.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":354,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":355,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":355}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents a task with a specified deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * @param by Deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":32}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents an event with a start and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an Event object with the given description, start and end date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * @param from Start date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * @param to End date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * Returns the status icon based on isDone.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @return Status icon of isDone.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     * Sets the task to be marked as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    public void setMarked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * Sets the task to be unmarked as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public void setUnmarked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":51}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"deadline return book /by 1st Mar","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"event project meeting /from 29th Mar 8pm /to 29th Mar 10pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"triciiaaa":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"java -classpath ..\\bin Chronos \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"triciiaaa":1,"-":20}}]
