[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"# academicweapon.Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"3. After that, locate the `src/main/java/academicweapon.Duke.java` file, right-click it, and choose `Run academicweapon.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SherwynNg":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"    mainClass.set(\"src/main/java/academicweapon/Duke.java\")","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"    archiveBaseName \u003d \"academicweapon\"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"SherwynNg":8,"-":40}},{"path":"src/main/data/acadList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"D | 1 | return boook | 2024-01-01 1900","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"T | 0 | sleep","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"D | 0 | testing deadline | 2024-02-21 0800","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"T | 0 | study book","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"SherwynNg":6}},{"path":"src/main/java/academicweapon/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.action.Action;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":" * Duke is a task management application that allows users to interact with tasks through a command-line interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":" * It supports various command for managing tasks such as adding, listing, marking and deleting tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"     * Constructs a Duke object with the specified file path for storage","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"     * @param filePath The file path for task storage","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"     * Runs the duke application, handling user interactions through a command-line interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"     * It processes user commands, updates tasks, and performs necessary  actions based on the commands.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"    public void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"            String fullCommand \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"                fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"                continue;","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"                continue;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"            ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"            ArrayList\u003cString\u003e actions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"                actions \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"            } catch (DukeExceptions e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"                continue;","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"            Action action \u003d Action.valueOf(actions.get(0));","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"            switch (action) {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"                case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"                    ArrayList\u003cString\u003e strLst \u003d this.tasks.findKeyword(actions.get(1));","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"                    if (strLst.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"                        System.out.println(\"No tasks containing this keyword\");","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"                        for (String str: strLst) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"                            System.out.println(str);","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"                        }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"                case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"                    this.tasks.showList();","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"                case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"SherwynNg"},"content":"                    int indexToMark \u003d Integer.parseInt(actions.get(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"SherwynNg"},"content":"                    Task taskToMark \u003d this.tasks.getTask(indexToMark);","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"SherwynNg"},"content":"                    taskToMark.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.printMarkDone(taskToMark);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"SherwynNg"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"SherwynNg"},"content":"                    int indexToUnmark \u003d Integer.parseInt(actions.get(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"SherwynNg"},"content":"                    Task taskToUnmark \u003d this.tasks.getTask(indexToUnmark);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"SherwynNg"},"content":"                    taskToUnmark.markAsNotDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.printUnmark(taskToUnmark);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"SherwynNg"},"content":"                case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"SherwynNg"},"content":"                    Todo addTodo \u003d new Todo(actions.get(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"SherwynNg"},"content":"                    this.tasks.addTask(addTodo);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.printAddSuccessful(addTodo, this.tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"SherwynNg"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"SherwynNg"},"content":"                    Deadline addDeadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"SherwynNg"},"content":"                    try {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"SherwynNg"},"content":"                        addDeadline \u003d new Deadline(actions.get(1), actions.get(2));","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"SherwynNg"},"content":"                    } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"SherwynNg"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"SherwynNg"},"content":"                        continue;","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"SherwynNg"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"SherwynNg"},"content":"                    this.tasks.addTask(addDeadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.printAddSuccessful(addDeadline, this.tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"SherwynNg"},"content":"                case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"SherwynNg"},"content":"                    Event addEvent \u003d new Event(actions.get(1), actions.get(2), actions.get(3));","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"SherwynNg"},"content":"                    this.tasks.addTask(addEvent);","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.printAddSuccessful(addEvent, this.tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"SherwynNg"},"content":"                case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"SherwynNg"},"content":"                    int index \u003d Integer.parseInt(actions.get(1));","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"SherwynNg"},"content":"                    Task toBeRemoved \u003d this.tasks.removeTask(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.removeSuccessful(toBeRemoved, this.tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"SherwynNg"},"content":"                case BYE:","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"SherwynNg"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"SherwynNg"},"content":"                    this.storage.saveFile(this.tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"SherwynNg"},"content":"                    this.ui.showBye();","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"SherwynNg"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"SherwynNg"},"content":"                default:","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"SherwynNg"},"content":"                    System.out.println(\"Sorry. I dont understand your command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"SherwynNg"},"content":"     * Main method to start the Duke application","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"SherwynNg"},"content":"     * @param args Command-line arguments (not used)","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"SherwynNg"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"SherwynNg"},"content":"        new Duke(\"./src/main/data/acadList.txt\").run();","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SherwynNg":139,"-":3}},{"path":"src/main/java/academicweapon/action/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.action;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":" * Enumeration representing various actions that can be performed in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":" * Each action corresponds to a specific command or user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"public enum Action {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, BYE, DELETE, FIND","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"SherwynNg":9}},{"path":"src/main/java/academicweapon/exceptions/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.Duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":" * Custom exception class for handling Duke application-specific exceptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":" * Provides various static methods for checking and validating different conditions in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"public class DukeExceptions extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"     * Constructs a new DukeExceptions with the specified detail message","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"     * @param msg The detail message","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"    public DukeExceptions(String msg) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"        super(msg);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     * Checks if the provided task list is not empty.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"     * @param lst The task list to check","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If the task list is empty","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"    public static void checkListNotEmpty (ArrayList\u003cTask\u003e lst) throws DukeExceptions {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"        if (lst.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(\"OOPS!!! The list is empty.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"     * Checks if a line from a file representing a task is corrupted.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"     * @param line The line from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If the file is corrupted","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"    public static void checkCorruptedFile(String line) throws DukeExceptions {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"        String[] splittedLine \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"        String action \u003d splittedLine[0].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"        switch (action) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"                if (splittedLine.length !\u003d 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"File is corrupted\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"                if (splittedLine.length !\u003d 4) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"File is corrupted\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"                if (splittedLine.length !\u003d 4) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"File is corrupted\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"                throw new DukeExceptions(\"File is corrupted\");","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"     * Validates user input based on the specified action and parameters.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"     * @param action The action to be performed","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"     * @param parameters The parameters associated with the action","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If the input is invalid","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"    public static void validateInput(String action, String parameters) throws DukeExceptions{","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"        switch(action) {","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"            case \"FIND\":","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"Please enter the keyword\");","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"            case \"TODO\":","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"SherwynNg"},"content":"                String[] deadlineInputs \u003d parameters.split(\"/by \");","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"SherwynNg"},"content":"                String dueDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"SherwynNg"},"content":"                if (deadlineInputs.length !\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! The due date of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"SherwynNg"},"content":"            case \"EVENT\":","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"SherwynNg"},"content":"                String[] eventInputs \u003d parameters.split(\"/from \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"SherwynNg"},"content":"                if (eventInputs.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"SherwynNg"},"content":"                    String[] splitFromAndTo \u003d eventInputs[1].split(\"/to \");","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"SherwynNg"},"content":"                    if (splitFromAndTo.length !\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"SherwynNg"},"content":"                        throw new DukeExceptions(\"OOPS!!! Please include when does the event start and ends.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"SherwynNg"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"SherwynNg"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! The period of an event cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"SherwynNg"},"content":"            case \"MARK\":","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"Please include the index to mark.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"SherwynNg"},"content":"            case \"UNMARK\":","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"Please include the index to unmark.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"SherwynNg"},"content":"            case \"LIST\":","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"SherwynNg"},"content":"                if (!parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! You have included extra information, which I cannot read\");","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"SherwynNg"},"content":"            case \"BYE\":","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"SherwynNg"},"content":"                if (!parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! You have included extra information, which I cannot read\");","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"SherwynNg"},"content":"            case \"DELETE\":","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"SherwynNg"},"content":"                if (parameters.equals(\" \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"SherwynNg"},"content":"                    throw new DukeExceptions(\"OOPS!!! You have to include which number to delete.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"SherwynNg"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"SherwynNg"},"content":"            default:","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"SherwynNg"},"content":"                throw new DukeExceptions(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherwynNg":137}},{"path":"src/main/java/academicweapon/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":" * Utility class for parsing and formatting date-time in the Duke application","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"     * Private constructor to prevent instantiation of the DateTimeParser utility class.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"    private DateTimeParser() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"     * Parses the input string to create a LocalDateTime object.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"     * @param by The string containing date and time to be parsed","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     * @return LocalDateTime object representing the parsed date and time","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If the input string is not in the expected format","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"    public static LocalDateTime parseDateTime(String by) throws DukeExceptions {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"        String[] splitBy \u003d by.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"        if (splitBy.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(\"Please include date and time, in this format, yyyy-mm-dd and hhmm.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"        String[] splitDayMonthYear \u003d new String[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"        int day \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"        int month \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"        int year \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"        if (splitBy[0].contains(\"/\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"            splitDayMonthYear \u003d splitBy[0].split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"        } else if (splitBy[0].contains(\"-\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"            splitDayMonthYear \u003d splitBy[0].split(\"-\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"        } else if (splitBy[1].contains(\"/\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"            splitDayMonthYear \u003d splitBy[1].split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"        } else if (splitBy[1].contains(\"-\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"            splitDayMonthYear \u003d splitBy[1].split(\"-\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(\"Please include date and time, in thi format, yyyy-mm-dd hhmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"        month \u003d Integer.parseInt(splitDayMonthYear[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"        if (splitDayMonthYear[0].length() \u003c\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"            day \u003d Integer.parseInt(splitDayMonthYear[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"            year \u003d Integer.parseInt(splitDayMonthYear[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"            day \u003d Integer.parseInt(splitDayMonthYear[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"            year \u003d Integer.parseInt(splitDayMonthYear[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"        int hour \u003d Integer.parseInt(splitBy[1])/100;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"        int min \u003d Integer.parseInt(splitBy[1]) % 100;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"        LocalDateTime ldt \u003d LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"        return ldt;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"     * Formats the provided LocalDateTime object as a string.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"     * @param ldt The LocalDateTime object to be formatted","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"     * @return Formatted string representing the date and the time","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"    public static String toString(LocalDateTime ldt) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hhmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"        return ldt.format(dtf);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"SherwynNg":76}},{"path":"src/main/java/academicweapon/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.action.Action;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":" * Utility class for parsing user commands in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":" * The Parser class extracts the action and parameters from the user inputs.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"     * Parses the full command provided by the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"     * @param fullCommand The complete user input command","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"     * @return An Arraylist containing the action and parameters","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If there is an error in parsing or validating the input","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"    public static ArrayList\u003cString\u003e parse(String fullCommand) throws DukeExceptions {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"        Action action;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"        String parameters;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"        String[] inputParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"            String str \u003d inputParts[0].toUpperCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"            action \u003d Action.valueOf(str);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"            lst.add(str);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(\"Invalid AcademicWeapon.Action. Please enter a valid command.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"        if (inputParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"            parameters \u003d inputParts[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"            parameters \u003d \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"            DukeExceptions.validateInput(action.toString(), parameters);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"        switch (action) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"    case FIND:","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"        String keyword \u003d inputParts[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"        lst.add(keyword);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"    case LIST:","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"    case BYE:","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"    case MARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"        String indexToMark \u003d String.valueOf(Integer.parseInt(inputParts[1]) - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"        lst.add(indexToMark);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"    case UNMARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"        String indexToUnmark \u003d String.valueOf(Integer.parseInt(inputParts[1]) - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"        lst.add(indexToUnmark);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"    case TODO:","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"        String description \u003d inputParts[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"        lst.add(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"    case DEADLINE:","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"        String[] splitAgain \u003d inputParts[1].split(\" /by \");","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"        lst.add(splitAgain[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"        lst.add(splitAgain[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"    case EVENT:","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"        String[] splitOnce \u003d inputParts[1].split(\"/from \");","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"        String[] splitTwice \u003d splitOnce[1].split(\"/to \");","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"        lst.add(splitOnce[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"        lst.add(splitTwice[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"        lst.add(splitTwice[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"    case DELETE:","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"        String index \u003d String.valueOf(Integer.parseInt(inputParts[1]) - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"        lst.add(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"    default:","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"SherwynNg"},"content":"        throw new DukeExceptions(\"Invalid AcademicWeapon.Action. Please enter a valid command.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"SherwynNg"},"content":"        return lst;","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"SherwynNg":90}},{"path":"src/main/java/academicweapon/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":" * Utility class for managing file operations related to the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":" * The FileManager class provides methods for loading, reading and saving.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"public class FileManager {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     * File route for storing the task list data file.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"    private static final String fileRoute \u003d \"./src/main/data/acadList.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"     * Private constructor to prevent instantiation of the FileManager class.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"    private FileManager() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"     * Reads the contents of the file and returns a list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"     * @param readFile The file containing the task list data","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"     * @return An ArrayList containing tasks read from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"    public static ArrayList\u003cTask\u003e getList(File readFile) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"            Scanner sc \u003d new Scanner(readFile);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"                String[] lineSplit \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"                String action \u003d lineSplit[0].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"                String description \u003d lineSplit[2].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"                String isDone \u003d lineSplit[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"                if (action.equals(\"T\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"                    Todo addTask \u003d new Todo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"                    checkIfDone(addTask, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"                    lst.add(addTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"                } else if (action.equals(\"D\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"                    Deadline addTask \u003d new Deadline(description, lineSplit[3].trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"                    checkIfDone(addTask, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"                    lst.add(addTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"                } else if (action.equals(\"E\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"                    String[] splitFromAndTo \u003d lineSplit[3].trim().split(\"-\");","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"                    Event addTask \u003d new Event(description, splitFromAndTo[0], splitFromAndTo[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"                    checkIfDone(addTask, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"                    lst.add(addTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"        } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"            return lst;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"     * Checks if a task is done based on the input value and updates it","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"     * @param t Task to check and update","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"     * @param val Value representing the task status (0 for not done, 1 for done)","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"    public static void checkIfDone(Task t, String val) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"        if (val.equals(\"0\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"            t.markAsNotDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"            t.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"SherwynNg"},"content":"     * Loads the task list data file. Creates a new file if it does not exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"SherwynNg"},"content":"     * @return The loaded or newly created file","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"SherwynNg"},"content":"    public static File load() {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"SherwynNg"},"content":"        File file \u003d new File(fileRoute);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"SherwynNg"},"content":"            if (file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"SherwynNg"},"content":"                return file;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"SherwynNg"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"SherwynNg"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"SherwynNg"},"content":"                return file;","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"SherwynNg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"SherwynNg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"SherwynNg"},"content":"            return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"SherwynNg"},"content":"     * Reads and displays the contents of the file to the console.","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"SherwynNg"},"content":"     * @param fileToRead The file to read","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"SherwynNg"},"content":"    public static void readFile(File fileToRead) {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"SherwynNg"},"content":"            Scanner sc \u003d new Scanner(fileToRead);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(\"This is retrieved from the file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"SherwynNg"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"SherwynNg"},"content":"                String currentLine \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"SherwynNg"},"content":"                DukeExceptions.checkCorruptedFile(currentLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"SherwynNg"},"content":"                System.out.println(currentLine);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"SherwynNg"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(\"Sorry, I can\u0027t seem to find the file that you want.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"SherwynNg"},"content":"     * Saves the task list data to the specified file.","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"SherwynNg"},"content":"     * @param fileToSave The file to save the task list data","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"SherwynNg"},"content":"     * @param lst The list of tasks to be saved","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"SherwynNg"},"content":"    public static void saveFile(File fileToSave, ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"SherwynNg"},"content":"            FileWriter writer \u003d new FileWriter(fileToSave);","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"SherwynNg"},"content":"            for (Task task : lst) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"SherwynNg"},"content":"                writer.write(task.fileToString() + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"SherwynNg"},"content":"            writer.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"SherwynNg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"SherwynNg"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"SherwynNg":145}},{"path":"src/main/java/academicweapon/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":" * Utility class for handling storage-related operations in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":" * The Storage class is responsible for loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"    private String filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"    private File file;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"     * Constructor for creating a Storage instance with a specified file path.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"     * @param filePath The file path for the task list data file","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"            if (file.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"                this.file \u003d file;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"                this.file \u003d file;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"     * Loads tasks from the file and returns them as a list of strings.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"     * @return ArrayList containing tasks read from the file","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If there is an error in loading or parsing the file","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"    public ArrayList\u003cString\u003e load() throws DukeExceptions {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(\"This is retrieved from the file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"                String currentLine \u003d sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"                DukeExceptions.checkCorruptedFile(currentLine);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"                System.out.println(currentLine);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"                lst.add(currentLine);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(\"Sorry, I can\u0027t seem to find the file that you want.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"        return lst;","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"     * Saves the provided list of tasks to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"            FileWriter writer \u003d new FileWriter(this.file);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"            for (Task t: tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"                writer.write(t.fileToString() + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"            writer.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"SherwynNg":84}},{"path":"src/main/java/academicweapon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.parser.DateTimeParser;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":" * Represents a task with a deadline in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":" * The Deadline class extends the Task class and includes a deadline specified by a date and time.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"    private String by;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"    private LocalDateTime ldt \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"     * Constructs a Deadline task with the given description and deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"     * @param description The description of the deadlline task","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"     * @param by The deadline specified by date and time","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If there is an error in parsing the deadline format","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"    public Deadline(String description, String by) throws DukeExceptions {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"            ldt \u003d DateTimeParser.parseDateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"            throw new DukeExceptions(\"Please enter in the correct format.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"     * Returns a string representation of the Deadline task","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"     * Overrides the toString method in the Task class","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"     * @return String representation of the Deadline task","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.toString(this.ldt) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"     * Returns a formatted string suitable for storing the Deadline task in a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"     * Overrides the fileToString method in the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"     * @return Formatted string for storing the Deadline task in a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"    public String fileToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"        return \"D | \" + super.fileToString() + \" | \" + this.by;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherwynNg":56}},{"path":"src/main/java/academicweapon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":" * The Event class extends the Task class and includes a start and end time for the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"     * Constructs an Event task with the given description, start time, and end time.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"     * @param description The description of the event task","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"     * @param from The start time of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"     * @param to The end time of the event","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"     * Overrides the toString method in the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"     * @return String representation of the Event task","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"     * Returns a formatted string suitable for storing the Event task in a file","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"     * Overrides the fileToString method in the Task class","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"     * @return Formatted string for storing the Event task in a file","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"    public String fileToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"        return \"E | \" + super.fileToString() + \"| \" + this.from.trim() + \"-\" + this.to;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherwynNg":48}},{"path":"src/main/java/academicweapon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":" * Represents a generic task in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":" * The Task class serves as the base class for various types of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"     * Constructs a Task with the given description and initialises the isDone flag to false","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"     * Returns an icon representing the status of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"     * @return \"X\" if the task id done, \" \" (whitespace) otherwise","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"     * Marks the task as done by setting the \u0027isDone\u0027 flag to true.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"     * Marks the task as not done by setting the \u0027isDone\u0027 flag to false.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"     * @return The description of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"        return this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"     * Returns a string representation of the task for display purposes.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"     * @return String representation of the task","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"     * Returns a formatted string suitable for storing the task in a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"     * @return Formatted string for storing the task in a file","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"    public String fileToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"        return (this.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"SherwynNg":70}},{"path":"src/main/java/academicweapon/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":" * The TaskList class provides methods to manipulate and display a list.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"public class TaskList {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"     * Consturcts a TaskList based on the provided list of string representations of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"     * @param strLst List of string representations of tasks","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"    public TaskList(ArrayList\u003cString\u003e strLst) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"        for (int i \u003d 0; i \u003c strLst.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"            String line \u003d strLst.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"            String[] lineSplit \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"            String action \u003d lineSplit[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"            String description \u003d lineSplit[2].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"            String isDone \u003d lineSplit[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"            if (action.equals(\"T\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"                Todo addToDoTask \u003d new Todo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"                checkIfDone(addToDoTask, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"                tasks.add(addToDoTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"            } else if (action.equals(\"D\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"                    Deadline addDeadlineTask \u003d new Deadline(description, lineSplit[3].trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"                    checkIfDone(addDeadlineTask, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"                    tasks.add(addDeadlineTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"                } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"                    System.out.println(\"Corrupted file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"            } else if (action.equals(\"E\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"                String[] splitFromAndTo \u003d lineSplit[3].trim().split(\"-\");","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"                Event addEventTask \u003d new Event(description, splitFromAndTo[0], splitFromAndTo[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"                checkIfDone(addEventTask, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"                tasks.add(addEventTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"     * Checks if a task is done based on the input value and updates its status.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"     * @param t Task to check and update","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"     * @param val Value representing the task status","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"    public static void checkIfDone(Task t, String val) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"        if (val.equals(\"0\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"            t.markAsNotDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"            t.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"     * @param task Task to be added to the list","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"SherwynNg"},"content":"     * Displays the list of tasks in a formatted manner.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"SherwynNg"},"content":"     * If the list is empty, it shows an appropriate message.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"SherwynNg"},"content":"    public void showList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"SherwynNg"},"content":"            DukeExceptions.checkListNotEmpty(this.tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"SherwynNg"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"SherwynNg"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"SherwynNg"},"content":"            System.out.println((i + 1) + \".\" + t.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"SherwynNg"},"content":"     * Retrieves a task at the specified index in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"SherwynNg"},"content":"     * @param index Index of the task to retrieve","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"SherwynNg"},"content":"     * @return The task at the specified index","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"SherwynNg"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"SherwynNg"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"SherwynNg"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"SherwynNg"},"content":"     * @return Number of tasks in the task list","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"SherwynNg"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"SherwynNg"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"SherwynNg"},"content":"     * Removes a task at the specified index from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"SherwynNg"},"content":"     * @param index Index of the task to be removed","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"SherwynNg"},"content":"     * @return The removed task","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"SherwynNg"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"SherwynNg"},"content":"        Task toBeRemoved \u003d this.tasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"SherwynNg"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"SherwynNg"},"content":"        return toBeRemoved;","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"SherwynNg"},"content":"     * Returns the list of tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"SherwynNg"},"content":"     * @return ArrayList containing tasks in the task list","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"SherwynNg"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"SherwynNg"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"SherwynNg"},"content":"     * Finds tasks containing a specified keyword in their description.","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"SherwynNg"},"content":"     * @param keyword The keyword to search for in task descriptions","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"SherwynNg"},"content":"     * @return An ArrayList of strings representing tasks that contain the keyword","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"SherwynNg"},"content":"    public ArrayList\u003cString\u003e findKeyword(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"SherwynNg"},"content":"        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"SherwynNg"},"content":"        for(Task task: this.tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"SherwynNg"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"SherwynNg"},"content":"                lst.add(task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"SherwynNg"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"SherwynNg"},"content":"        return lst;","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"SherwynNg":162}},{"path":"src/main/java/academicweapon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":" * Represents a Todo task in the Duke application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":" * The Todo class extends the Task class and does not have a specific deadline or event time.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"     * @param description The description of the todo task","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"     * Returns a string representation of the Todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"     * Overrides the toString ethod in the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"     * @return String representation of the Todo task","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"     * Returns a formatted string suitable for storing the Todo task in a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"     * Overrides the fileToString method in the Task class.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"     * @return Formatted string for storing the Todo task in a file","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"    public String fileToString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"        return \"T | \" + super.fileToString();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherwynNg":39}},{"path":"src/main/java/academicweapon/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":" * The Ui class handles the user interface","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"     * Displays a welcome message when the application starts.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Hello! I\u0027m AcademicWeapon\");","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"SherwynNg"},"content":"     * Displays a horizontal line as a separator in the console.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"SherwynNg"},"content":"    public static void showLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"SherwynNg"},"content":"     * Displays an error message when there is an issue loading a file.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"SherwynNg"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Error loading file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"SherwynNg"},"content":"     * Reads a user command from the console.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"SherwynNg"},"content":"     * @return The user command as a string","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"SherwynNg"},"content":"     * @throws IOException If an I/O error occurs while reading the command","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"SherwynNg"},"content":"     * @throws DukeExceptions If there is an issue with the command","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"SherwynNg"},"content":"    public String readCommand() throws IOException, DukeExceptions {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"SherwynNg"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"SherwynNg"},"content":"        String input \u003d br.readLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"SherwynNg"},"content":"        return input;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"SherwynNg"},"content":"     * Prints a message indicating that a task has been marks as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"SherwynNg"},"content":"     * @param markTask The task that has been marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"SherwynNg"},"content":"    public void printMarkDone(Task markTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(markTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"SherwynNg"},"content":"     * Prints a message indicating that a task has been masked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"SherwynNg"},"content":"     * @param unmarkTask The task that has been marks as not done","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"SherwynNg"},"content":"    public void printUnmark(Task unmarkTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(unmarkTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"SherwynNg"},"content":"     * Prints a message indicating that a task has been successfully added","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"SherwynNg"},"content":"     * @param addTask The task that has been added","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"SherwynNg"},"content":"     * @param size The current size of the task list","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"SherwynNg"},"content":"    public void printAddSuccessful(Task addTask, int size) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(addTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"SherwynNg"},"content":"     * Prints a message indicating that a task has been successfully removed.","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"SherwynNg"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"SherwynNg"},"content":"     * @param toBeRemoved The task that has been removed","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"SherwynNg"},"content":"     * @param size The current size of the task list","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"SherwynNg"},"content":"    public void removeSuccessful(Task toBeRemoved, int size) {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(toBeRemoved.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"SherwynNg"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"SherwynNg"},"content":"     * Displays a goodbye message when the application is about to exit.","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"SherwynNg"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"SherwynNg"},"content":"    public void showBye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"SherwynNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"SherwynNg"},"content":"        Ui.showLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"SherwynNg":113}},{"path":"src/test/java/academicweapon/task/AddTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"public class AddTaskTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"        Task task \u003d new Todo(\"Testing\");","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"        assertEquals(task, taskList.getTask(0));","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"SherwynNg":16}},{"path":"src/test/java/academicweapon/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"package academicweapon.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"import academicweapon.exceptions.DukeExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"        Deadline task \u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"            task \u003d new Deadline(\"Testing deadline\", \"2024-02-21 0800\");","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"        } catch (DukeExceptions e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"        String expectedOutput \u003d \"[D][ ] Testing deadline (by: Feb 21 2024 0800)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"        assertEquals(expectedOutput, task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"SherwynNg":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SherwynNg"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"SherwynNg"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"SherwynNg"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"SherwynNg"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"SherwynNg"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"SherwynNg"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"SherwynNg"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"SherwynNg"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"SherwynNg"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"SherwynNg"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"SherwynNg"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"SherwynNg"},"content":"deadline return book","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"SherwynNg"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"SherwynNg"},"content":"event return book","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"SherwynNg"},"content":"event return book /from tmr","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"SherwynNg"},"content":"blah","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"SherwynNg"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"delete","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"SherwynNg"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"SherwynNg":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SherwynNg"},"content":"java -classpath ..\\bin academicweapon.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SherwynNg":1,"-":20}}]
