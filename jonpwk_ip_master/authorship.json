[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"    mainClass.set(\"cro.Cro\")","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"    archiveBaseName \u003d \"Cro\"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonpwk":2,"-":40}},{"path":"saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"T 1 run","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"E 0 visit family /from 2024-02-07T15:00 /to 2024-02-08T16:00","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"D 0 finish ip /by 2024-02-07T23:59","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"D 1 fnns /by 2024-02-07T23:59","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"E 0 sadad /from 2024-02-07T16:32 /to 2024-02-07T16:48","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"T 1 dance","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jonpwk":6}},{"path":"src/main/java/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import cro.Cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import cro.CroException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":" * Representation of a Parser to handle user input in the program.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"    Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"    DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy M d HH mm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"     * Constructor for a Parser object.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"    public Parser() {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"     * Returns a List that specifies a Deadline task. This function parses the deadline in user","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"     * input from [yyyy MM dd hh mm] to a common format for saving and reading within the","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"     * program.","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr A list of strings from the user\u0027s inputs that describes a Deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"     * @return A list of strings that describes a Deadline with standardised time format.","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the deadline is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"    public List\u003cString\u003e convertDateDeadline(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"        int byIndex \u003d splitStr.indexOf(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"        if (byIndex \u003c 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"deadline not found, please include with \u0027/by\u0027 as an indicator.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e dateSplitStr \u003d splitStr.subList(byIndex + 1, splitStr.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(String.join(\" \", dateSplitStr), inputFormat);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"        splitStr.subList(byIndex + 1, splitStr.size()).clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"        splitStr.add(time.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"        return splitStr;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"     * Returns a List that specifies an Event task. This function parses the deadline in user","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"     * input from [yyyy MM dd hh mm] to a common format for saving and reading within the","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"     * program.","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr A list of strings from the user\u0027s inputs that describes an Event.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"     * @return A list of strings that describes a Deadline with standardised time format.","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the event is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"    public List\u003cString\u003e convertDateEvent(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"        int fromIndex \u003d splitStr.indexOf(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"        int toIndex \u003d splitStr.indexOf(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"        if (fromIndex \u003c 0 || toIndex \u003c 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"event timings not found, please use /from and /to to indicate.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e fromSplitStr \u003d splitStr.subList(fromIndex + 1, toIndex);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e toSplitStr \u003d splitStr.subList(toIndex + 1, splitStr.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jonpwk"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(String.join(\" \", fromSplitStr), inputFormat);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"jonpwk"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(String.join(\" \", toSplitStr), inputFormat);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jonpwk"},"content":"        splitStr.subList(toIndex + 1, splitStr.size()).clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jonpwk"},"content":"        splitStr.add(to.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"jonpwk"},"content":"        splitStr.subList(fromIndex + 1, toIndex).clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jonpwk"},"content":"        splitStr.add(fromIndex + 1, from.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"jonpwk"},"content":"        return splitStr;","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"jonpwk"},"content":"     * Returns a boolean to indicate if the program is still accepting inputs.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"jonpwk"},"content":"     * @param cro The chatbot that the Parser is parsing from.","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"jonpwk"},"content":"     * @return True if continuing to accept input, else False.","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"    public boolean handleInput(Cro cro) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"jonpwk"},"content":"        String inText \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e splitStr \u003d new ArrayList\u003c\u003e(Arrays.asList(inText.trim().split(\"\\\\s+\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"jonpwk"},"content":"        String command \u003d splitStr.remove(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"jonpwk"},"content":"            switch (command) {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"jonpwk"},"content":"                case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"jonpwk"},"content":"                    System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"jonpwk"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"jonpwk"},"content":"                    System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"jonpwk"},"content":"                    return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"jonpwk"},"content":"                case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.displayTasks();","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"jonpwk"},"content":"                case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.markTaskAsDone(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"jonpwk"},"content":"                case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.markTaskAsUndone(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"jonpwk"},"content":"                case \"todo\": {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"jonpwk"},"content":"                    List\u003cString\u003e res \u003d new ArrayList\u003c\u003e(Arrays.asList(\"T\", \"0\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"jonpwk"},"content":"                    res.addAll(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.addToDo(res);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"                case \"deadline\": {","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"                    List\u003cString\u003e res \u003d new ArrayList\u003c\u003e(Arrays.asList(\"D\", \"0\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"jonpwk"},"content":"                    splitStr \u003d convertDateDeadline(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"jonpwk"},"content":"                    res.addAll(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.addDeadline(res);","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"jonpwk"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"jonpwk"},"content":"                case \"event\": {","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"jonpwk"},"content":"                    List\u003cString\u003e res \u003d new ArrayList\u003c\u003e(Arrays.asList(\"E\", \"0\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"jonpwk"},"content":"                    splitStr \u003d convertDateEvent(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"jonpwk"},"content":"                    res.addAll(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.addEvent(res);","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"jonpwk"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"jonpwk"},"content":"                case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"jonpwk"},"content":"                    cro.taskList.deleteEvent(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"jonpwk"},"content":"                    break;","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"jonpwk"},"content":"                default:","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"jonpwk"},"content":"                    throw new CroException(\"Unknown command. Please try again.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"jonpwk"},"content":"        } catch (Exception e){","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"jonpwk"},"content":"        return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jonpwk":129}},{"path":"src/main/java/cro/Cro.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":" * Represents the chatbot, Cro. Cro consists of a task list, a storage, and an ui to help you track your tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"public class Cro {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"    public Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"    public Cro(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"        ui \u003d new Ui(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"        } catch (CroException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"            e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Continuously reads the input from the user and parses it through the UI.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"        while (ui.reading()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"        storage.updateSave(taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"    public static void main(String[] args){","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"        new Cro(\"saveFile.txt\").run();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":36}},{"path":"src/main/java/cro/CroException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"public class CroException extends Exception{","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"    public CroException(String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"        super(\"-----------------------------------\\n\" + errorMessage + \"\\n\" + \"-----------------------------------\");","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":6}},{"path":"src/main/java/cro/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import tasks.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"import java.util.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":" * Represents a Storage in the program.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    private String filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"     * Constructor for a Storage object.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"     * @param filePath Absolute file path that leads to the save file.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Saves the current tasks in the taskList into a simple text file.","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"     * @param taskList A TaskList that contains all the tasks to be saved.","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"    public void updateSave(TaskList taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"            FileWriter saveWriter \u003d new FileWriter(\"saveFile.txt\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"            for (int i \u003d 0; i \u003c taskList.taskList.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"                saveWriter.write(taskList.taskList.get(i).getSaveLine());","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"            saveWriter.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"Failed to save.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"     * Returns a list of Task objects from the save file specified in the constructor.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"     * @return A List of Task objects to be passed into the program for use.","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"            File saveData \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"            if (saveData.createNewFile()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"                System.out.println(\"New save file created\");","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"                System.out.println(\"Save file exists. Loading...\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"            Scanner saveReader \u003d new Scanner(saveData);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"            while (saveReader.hasNextLine()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"                String data \u003d saveReader.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"                List\u003cString\u003e splitStr \u003d new LinkedList\u003c\u003e(Arrays.asList(data.trim().split(\"\\\\s+\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"                String type \u003d splitStr.get(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"                switch (type) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"jonpwk"},"content":"                        ToDo newToDo \u003d new ToDo(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"jonpwk"},"content":"                        loadedTasks.add(newToDo);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"                        break;","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jonpwk"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"jonpwk"},"content":"                        Deadline newDeadline \u003d new Deadline(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"jonpwk"},"content":"                        loadedTasks.add(newDeadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jonpwk"},"content":"                        break;","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"jonpwk"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"jonpwk"},"content":"                        Event newEvent \u003d new Event(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"jonpwk"},"content":"                        loadedTasks.add(newEvent);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"jonpwk"},"content":"                        break;","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"jonpwk"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"jonpwk"},"content":"        } catch (IOException | CroException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"An error occurred while loading...\");","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"jonpwk"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jonpwk":81}},{"path":"src/main/java/cro/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import tasks.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":" * Represents a TaskList in the chat-bot. A TaskList object is responsible for keeping track of the tasks currently","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":" * in the system.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"    public List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"    static boolean isLoading \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    public TaskList(List\u003cTask\u003e loadedTasks) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"        taskList \u003d loadedTasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Adds a new task, newTask into the taskList. Displays a string output upon successful addition of","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"     * the task into taskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"     * @param newTask","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"    public void addToTaskList(Task newTask) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"        taskList.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        if (!isLoading) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"added: \" + newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Adds a new ToDo into the taskList, as specified by the input of splitStr.","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr List that describes a new ToDo task.","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If description of the task is empty.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"    public void addToDo(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"        ToDo newToDo \u003d new ToDo(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"        addToTaskList(newToDo);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Adds a new Deadline into the taskList, as specified by the input of splitStr.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr List that describes a new Deadline task.","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the deadline is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"    public void addDeadline(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"        Deadline newDeadline \u003d new Deadline(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"        addToTaskList(newDeadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Adds a new Event into the taskList, as specified by the input of splitStr.","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr List that describes a new Event task.","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the event is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"jonpwk"},"content":"    public void addEvent(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"jonpwk"},"content":"        Event newEvent \u003d new Event(splitStr);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"jonpwk"},"content":"        addToTaskList(newEvent);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Displays all the current tasks in the tasklist.","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"jonpwk"},"content":"    public void displayTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"jonpwk"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"jonpwk"},"content":"            String output \u003d String.format(\"%d. %s\", i+1, taskList.get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"jonpwk"},"content":"            System.out.println(output);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"jonpwk"},"content":"        System.out.printf(\"Now you have %d tasks in the list%n\", taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Marks the specified task as done as per the index in taskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr Input list that specifies which task to mark as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If index out of range or index not an integer.","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"jonpwk"},"content":"    public void markTaskAsDone(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"jonpwk"},"content":"        int taskNo;","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"jonpwk"},"content":"            taskNo \u003d Integer.parseInt(splitStr.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"jonpwk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"index must be a number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"jonpwk"},"content":"        if (taskNo \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"Task not found!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"jonpwk"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"jonpwk"},"content":"            taskList.get(taskNo - 1).markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"jonpwk"},"content":"            System.out.println(taskList.get(taskNo - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Marks the specified task as undone as per the index in taskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr Input list that specifies which task to mark as undone.","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If index out of range or index not an integer.","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"jonpwk"},"content":"    public void markTaskAsUndone(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"jonpwk"},"content":"        int taskNo;","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"jonpwk"},"content":"            taskNo \u003d Integer.parseInt(splitStr.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"jonpwk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"index must be a number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"jonpwk"},"content":"        if (taskNo \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"Task not found!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"jonpwk"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"jonpwk"},"content":"            taskList.get(taskNo - 1).markAsUndone();","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"jonpwk"},"content":"            System.out.println(taskList.get(taskNo - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"jonpwk"},"content":"     * Returns nothing. Deletes the specified task from the taskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":127,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr Input list that specifies which task to delete.","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If index out of range or index not an integer.","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"jonpwk"},"content":"    public void deleteEvent(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"jonpwk"},"content":"        int taskNo;","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"jonpwk"},"content":"            taskNo \u003d Integer.parseInt(splitStr.get(0));","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"jonpwk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"index must be a number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"jonpwk"},"content":"        if (taskNo \u003e taskList.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"Task not found!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"jonpwk"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"jonpwk"},"content":"            Task removedTask \u003d taskList.remove(taskNo - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"OK, I\u0027ve removed this task.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"jonpwk"},"content":"            System.out.println(removedTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"jonpwk"},"content":"            System.out.printf(\"Now you have %d tasks in the list%n\", taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"jonpwk"},"content":"            System.out.println(\"-----------------------------------\");","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jonpwk":148}},{"path":"src/main/java/cro/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import command.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":" * Represents a UI object in the program.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"    private String welcomeMessage \u003d \"-----------------------------------\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"            + \"Hello! I\u0027m Cro!\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"            + \"-----------------------------------\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    private Cro myCro;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"    public Ui(Cro cro) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"        myCro \u003d cro;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"    public boolean reading() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"        return parser.handleInput(myCro);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jonpwk":26}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import cro.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":" * Represents a Deadline task in the program. A Deadline task consists of a description","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":" * and a deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr List that describes a new Deadline task.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the deadline is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    public Deadline(List\u003cString\u003e splitStr) throws CroException{","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"        int isDone \u003d Integer.parseInt(splitStr.get(1));","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"        int byIndex \u003d splitStr.indexOf(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"        String description \u003d String.join(\" \", splitStr.subList(2, byIndex));","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"            this.deadline \u003d LocalDateTime.parse(splitStr.get(byIndex + 1));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"deadline must be in the format YYYY MM DD HH MM\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"description or deadline cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"            this.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"     * Returns a String that describes the deadline task for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"     * @return Descriptive string of the deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), this.description, this.deadline.format(dateFormat));","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"     * Returns a String that describes the deadline task for saving.","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"     * @return Descriptive string of the deadline for saving.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"    public String getSaveLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"        return \"D \" + (this.isDone ? \"1 \" : \"0 \") + this.description + \" /by \" + this.deadline.toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":56}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import cro.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":" * Represents an Event task in the program.","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"    private LocalDateTime fromTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"    private LocalDateTime toTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"     * Constructor for an Event task.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr List that describes a new Event task.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the Event is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"    public Event(List\u003cString\u003e splitStr) throws CroException {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"        int isDone \u003d Integer.parseInt(splitStr.get(1));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"        int fromIndex \u003d splitStr.indexOf(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"        int toIndex \u003d splitStr.indexOf(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"        String description \u003d String.join(\" \", splitStr.subList(2, fromIndex));","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"            this.fromTime \u003d LocalDateTime.parse(splitStr.get(fromIndex + 1));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"            this.toTime \u003d LocalDateTime.parse(splitStr.get(toIndex + 1));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"start or end time must be in the format YYYY MM DD HH MM\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"description, start or end cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"            this.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"     * Returns a String that describes the Event task for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"     * @return Descriptive string of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\", getStatusIcon(),","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"                this.description, this.fromTime.format(dateFormat), this.toTime.format(dateFormat));","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"     * Returns a String that describes the Event task for saving.","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"     * @return Descriptive string of the event for saving.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"    public String getSaveLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"        return \"E \" + (this.isDone ? \"1 \" : \"0 \")","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"                + this.description + \" /from \"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"                + this.fromTime.toString() + \" /to \"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"                + this.toTime.toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":60}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"    protected DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"    public Task(String description){","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    public Task() {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"    public String getSaveLine() { return \"Unknown Task Type\";}","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":37}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import cro.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":" * Represents a ToDo task in the program. A ToDo task consists of a description.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"     * Constructor for a ToDo task.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"     * @param splitStr List that describes a new ToDo task.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"     * @throws CroException If any specifications of the todo is missing.","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"    public ToDo(List\u003cString\u003e splitStr) throws CroException{","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"        int isDone \u003d Integer.parseInt(splitStr.get(1));","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"        String description \u003d String.join(\" \", splitStr.subList(2, splitStr.size()));","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"            throw new CroException(\"description of todo cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"            this.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"     * Returns a String that describes the todo task for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"     * @return Descriptive string of the todo.","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"     * Returns a String that describes the todo task for saving.","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"     * @return Descriptive string of the todo for saving.","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"    public String getSaveLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"        return \"T \" + (this.isDone ? \"1 \" : \"0 \") + this.description + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":42}},{"path":"src/test/java/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"package command;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"import cro.CroException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"    public void convertDateDeadline_emptyInput_exceptionThrown(){","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e res \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"            res \u003d parser.convertDateDeadline(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"        } catch (CroException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"jonpwk"},"content":"        assertEquals(res, null);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"jonpwk"},"content":"    public void convertDateDeadline_incorrectFormat_exceptionThrown(){","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"jonpwk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e res \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"jonpwk"},"content":"            res \u003d parser.convertDateDeadline(new ArrayList\u003c\u003e(Arrays.asList(\"test deadline\", \"2\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"jonpwk"},"content":"        } catch (CroException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"jonpwk"},"content":"        assertEquals(res, null);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"jonpwk"},"content":"    public void convertDateEvent_emptyInput_exceptionThrown(){","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"jonpwk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e res \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"jonpwk"},"content":"            res \u003d parser.convertDateEvent(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"jonpwk"},"content":"        } catch (CroException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"jonpwk"},"content":"        assertEquals(res, null);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"jonpwk"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"jonpwk"},"content":"    public void convertDateEvent_incorrectFormat_exceptionThrown(){","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"jonpwk"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"jonpwk"},"content":"        List\u003cString\u003e res \u003d null;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"jonpwk"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"jonpwk"},"content":"            res \u003d parser.convertDateEvent(new ArrayList\u003c\u003e(Arrays.asList(\"test deadline\", \"2\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"jonpwk"},"content":"        } catch (CroException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"jonpwk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"jonpwk"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"jonpwk"},"content":"        assertEquals(res, null);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"jonpwk"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"jonpwk"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"jonpwk"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"jonpwk":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"todo","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"todo read book","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"deadline /by","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"deadline buy lunch /by","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"deadline /by 2pm","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"jonpwk"},"content":"deadline buy lunch /by 12pm","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"jonpwk"},"content":"event","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"jonpwk"},"content":"event /from /to","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"jonpwk"},"content":"event party /from /to","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"jonpwk"},"content":"event party /from 2pm /to","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"jonpwk"},"content":"event party /from /to 3pm","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"jonpwk"},"content":"event party /from 2pm /to 3pm","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"jonpwk"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"jonpwk"},"content":"unmark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"jonpwk"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"jonpwk"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"jonpwk"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"jonpwk"},"content":"unmark 4","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"jonpwk"},"content":"list","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"jonpwk":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jonpwk"},"content":"java -classpath ../bin Cro \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonpwk":1,"-":37}},{"path":"text-ui-test/saveBackup.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonpwk"},"content":"T 1 read book","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"jonpwk"},"content":"T 0 buy lunch","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"jonpwk"},"content":"D 1 eat dinner /by 7pm tonight","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"jonpwk"},"content":"D 0 meet haris /by 3pm today","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"jonpwk"},"content":"E 1 meet RF /from 630pm /to 7pm","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"jonpwk"},"content":"E 0 go sleep /from 121 /to 213","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"jonpwk":6}}]
