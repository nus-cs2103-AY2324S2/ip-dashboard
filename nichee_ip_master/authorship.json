[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"    protected String by;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"    protected String from;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"    protected String to;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":15}},{"path":"src/main/java/Shirmin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"public class Shirmin {","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    public static void displayLine() {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"        System.out.println(gap() + \"_\".repeat(50));","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"    public static String gap() {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"        return \"    \";","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"    public static void wrapInLines(String line){","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"        displayLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"        displayLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    public static void echo(String line) {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"        wrapInLines(line);","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"        wrapInLines(gap() + \"Hello! I\u0027m Shirmin\" + \"\\n\"","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"                + gap() + \"What can I do for you?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"        wrapInLines(gap() +\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    //static Task[] taskList \u003d new Task[100];","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"    static int currIndex \u003d 0;","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"    enum CommandType {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, INVALID;","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"        static CommandType getCommandType(String command) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"                return valueOf(command.toUpperCase());","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"                return INVALID;","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"    public static void listFunction(String line){","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"        String[] command \u003d line.split(\" \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"        CommandType commandType \u003d CommandType.getCommandType(command[0]);","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"        switch (commandType) {","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"            case LIST:","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"                displayList(taskList);","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"            case MARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"                    int taskIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"                    if (taskIndex \u003c currIndex) {","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"                        taskList.get(taskIndex).markDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"                        // displayLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + gap() + taskList.get(taskIndex));","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"nichee"},"content":"                        displayLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"                    } else { // out of range","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"                        System.out.println(\"invalid, out of range\");","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"                    }","lastModifiedDate":"2024-01-21"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"Invalid task number: \" + command[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"There are \" + currIndex + \"numbers, please enter a number from 1 to \" + currIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"nichee"},"content":"                    int taskIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"nichee"},"content":"                    if (taskIndex \u003c currIndex) {","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"nichee"},"content":"                        taskList.get(taskIndex).markUndone();","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"nichee"},"content":"                        displayLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + gap() + taskList.get(taskIndex));","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"nichee"},"content":"                        displayLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"nichee"},"content":"                    } else { // out of range","lastModifiedDate":"2024-01-21"},{"lineNumber":77,"author":{"gitId":"nichee"},"content":"                        System.out.println(\"invalid, out of range\");","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"nichee"},"content":"                    }","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"nichee"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"Invalid task number: \" + command[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":81,"author":{"gitId":"nichee"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"There are \" + currIndex + \" items, please enter a number from 1 to \" + currIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-21"},{"lineNumber":84,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"nichee"},"content":"            case TODO:","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"nichee"},"content":"                    Task newTodo \u003d new Todo(command[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"                    taskList.add(newTodo);","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"                    // taskList[currIndex] \u003d newTodo;","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"                    currIndex++;","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"                    addMessage(newTodo, currIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"nichee"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"oopsy doopsy you made a -ucky wucky! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"nichee"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"                    String[] details \u003d command[1].split(\" /by \");","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"nichee"},"content":"                    String description \u003d details[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"nichee"},"content":"                    String by \u003d details[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"nichee"},"content":"                    Task newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"nichee"},"content":"                    taskList.add(newDeadline);","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"nichee"},"content":"                    currIndex++;","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"nichee"},"content":"                    addMessage(newDeadline, currIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"nichee"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"oopsy doopsy you made a -ucky wucky! The description of a deadline\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"nichee"},"content":"                            \" must be in the format \u0027deadline [task] /by [time]\u0027.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"nichee"},"content":"            case EVENT:","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"nichee"},"content":"                    String[] details \u003d command[1].split(\" /from \");","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"nichee"},"content":"                    String description \u003d details[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"nichee"},"content":"                    String[] fromTo \u003d details[1].split(\" /to \");","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"nichee"},"content":"                    String from \u003d fromTo[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"nichee"},"content":"                    String to \u003d fromTo[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"nichee"},"content":"                    Task newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"nichee"},"content":"                    taskList.add(newEvent);","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"nichee"},"content":"                    currIndex++;","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"nichee"},"content":"                    addMessage(newEvent, currIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"nichee"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"oopsy doopsy you made a -ucky wucky! The description of a deadline\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"nichee"},"content":"                            \" must be in the format \u0027deadline [task] /from [time]\u0027 /to [time].\");","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"nichee"},"content":"            case DELETE:","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"nichee"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"nichee"},"content":"                    int taskIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"nichee"},"content":"                    if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskList.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"nichee"},"content":"                        Task removedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"nichee"},"content":"                        displayLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + \"Ok, I\u0027ve removed the task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + gap() + removedTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"nichee"},"content":"                        System.out.println(gap() + \"You have \" + taskList.size() + \" tasks remaining in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"nichee"},"content":"                        displayLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"nichee"},"content":"                    } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"nichee"},"content":"                        System.out.println(\"Invalid task number: \" + (taskIndex + 1));","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"nichee"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"nichee"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"nichee"},"content":"                    System.out.println(\"Invalid task number: \" + command[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"nichee"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":144,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":145,"author":{"gitId":"nichee"},"content":"            default:","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"nichee"},"content":"                System.out.println(\"OH NO I\u0027m not sure what that command is. You may use the commands \" +","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"nichee"},"content":"                        \"todo, deadline, list, event, mark and unmark\");","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"nichee"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":150,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":151,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"nichee"},"content":"    public static \u003cT extends Task\u003e void addMessage(T task, Integer number){","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"nichee"},"content":"        displayLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"nichee"},"content":"        System.out.println(gap() + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"nichee"},"content":"        System.out.println(gap() + gap() + task.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"nichee"},"content":"        System.out.println(gap() + \"Now you have \" + number.toString() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"nichee"},"content":"        displayLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"nichee"},"content":"    public static void displayList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"nichee"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"nichee"},"content":"            System.out.println(gap() + \"There are no tasks in your list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"nichee"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"nichee"},"content":"            System.out.println(gap() + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"nichee"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":166,"author":{"gitId":"nichee"},"content":"            for (Task t : list) {","lastModifiedDate":"2024-01-21"},{"lineNumber":167,"author":{"gitId":"nichee"},"content":"                System.out.println(gap() + i + \".\" + t.toString());","lastModifiedDate":"2024-01-21"},{"lineNumber":168,"author":{"gitId":"nichee"},"content":"                i++;","lastModifiedDate":"2024-01-21"},{"lineNumber":169,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":170,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":171,"author":{"gitId":"nichee"},"content":"        displayLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":172,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":173,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":174,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":175,"author":{"gitId":"nichee"},"content":"    public static void main(String[] args){","lastModifiedDate":"2024-01-21"},{"lineNumber":176,"author":{"gitId":"nichee"},"content":"        greet();","lastModifiedDate":"2024-01-21"},{"lineNumber":177,"author":{"gitId":"nichee"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-21"},{"lineNumber":178,"author":{"gitId":"nichee"},"content":"        String currLine \u003d scanner.nextLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":179,"author":{"gitId":"nichee"},"content":"        while(!currLine.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":180,"author":{"gitId":"nichee"},"content":"            listFunction(currLine);","lastModifiedDate":"2024-01-21"},{"lineNumber":181,"author":{"gitId":"nichee"},"content":"            currLine \u003d scanner.nextLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":182,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":183,"author":{"gitId":"nichee"},"content":"        exit();","lastModifiedDate":"2024-01-21"},{"lineNumber":184,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":185,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"nichee":185}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"        return description;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    //...","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"nichee":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"mark 3","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"list","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"javac -cp \"..\\src\\main\\java\\Shirmin.java\" -Xlint:none -d ..\\bin \"..\\src\\main\\java\\*.java\"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"java -classpath ..\\bin Shirmin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"nichee":6,"-":19}}]
