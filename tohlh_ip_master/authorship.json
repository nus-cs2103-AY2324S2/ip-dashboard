[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"# Henry project template","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"3. After that, locate the `src/main/java/Henry.java` file, right-click it, and choose `Run Henry.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"tohlh":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"    public Deadline(String description, String date) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No due date specified!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"        this.date \u003d LocalDateTime.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), date.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"        return String.format(\"D | %s | %s\", super.toFileString(), date.format(INPUT_FORMATTER));","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":26}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    public Event(String description, String from, String to) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        if (from.isEmpty() || from.equals(\" \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing time !!!\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"        } else if (to.isEmpty() || to.equals(\" \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"Missing time!!!\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"        this.from \u003d LocalDateTime.parse(from, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"        this.to \u003d LocalDateTime.parse(to, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[E]%s (from: %s to: %s\", super.toString(), from.format(OUTPUT_FORMATTER), to.format(OUTPUT_FORMATTER));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"        return String.format(\"E | %s | %s | %s\", super.toFileString(), from.format(INPUT_FORMATTER), to.format(INPUT_FORMATTER));","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":32}},{"path":"src/main/java/Henry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"public class Henry {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    private enum CommandType {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"        LIST, UNMARK, MARK, DELETE, TODO, DEADLINE, EVENT, BYE, UNKNOWN","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    private static ArrayList\u003cTask\u003e items \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"        String logo \u003d \"  _    _                       \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"                \" | |  | |                      \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"                \" | |__| | ___ _ __  _ __ _   _ \\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"                \" |  __  |/ _ \\\\ \u0027_ \\\\| \u0027__| | | |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"                \" | |  | |  __/ | | | |  | |_| |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"                \" |_|  |_|\\\\___|_| |_|_|   \\\\__, |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"                \"                          __/ |\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"                \"                         |___/ \\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        String greetMessage \u003d \"Hello! I\u0027m Henry\\nWhat can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        System.out.println(greetMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"    public static void bye() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"        System.out.println(\"See you again bro!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"    public static void loadTaskFromFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"        Path path \u003d Paths.get(\"data\", \"henry.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"        File file \u003d path.toFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"tohlh"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"tohlh"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"tohlh"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"tohlh"},"content":"                String[] currLine \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"tohlh"},"content":"                switch (currLine[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"tohlh"},"content":"                case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"tohlh"},"content":"                    items.add(new Todo(currLine[2]));","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"tohlh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"tohlh"},"content":"                case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"tohlh"},"content":"                    items.add(new Deadline(currLine[2], currLine[3]));","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"tohlh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"tohlh"},"content":"                case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"tohlh"},"content":"                    items.add(new Event(currLine[2], currLine[3], currLine[4]));","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"tohlh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"tohlh"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"tohlh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"tohlh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"tohlh"},"content":"                if (currLine[1].equals(\"1\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"tohlh"},"content":"                    items.get(items.size() - 1).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"tohlh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"tohlh"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"tohlh"},"content":"        } catch (IOException | HenryException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"tohlh"},"content":"            System.err.println(e);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"tohlh"},"content":"    public static void saveTasksToFile() {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"tohlh"},"content":"        Path path \u003d Paths.get(\"data\", \"henry.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"tohlh"},"content":"        File file \u003d path.toFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"tohlh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"tohlh"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"tohlh"},"content":"            for (Task item : items) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"tohlh"},"content":"                fw.write(item.toFileString() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"tohlh"},"content":"            fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"tohlh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"tohlh"},"content":"            System.err.println(e);","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"tohlh"},"content":"    public static void addTask(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"tohlh"},"content":"        items.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"tohlh"},"content":"        System.out.println(\"Added this task\");","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"tohlh"},"content":"        System.out.println(items.get(items.size() - 1));","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"tohlh"},"content":"        System.out.printf(\"Now you have %d tasks in the list :(\\n\", items.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"tohlh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"tohlh"},"content":"    public static void markTask(int index) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"tohlh"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"The index is out of bounds!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"tohlh"},"content":"        items.get(index).markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"tohlh"},"content":"        System.out.println(\"This task is marked as done XD\");","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"tohlh"},"content":"        System.out.println(items.get(index));","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"tohlh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"tohlh"},"content":"    public static void unmarkTask(int index) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"tohlh"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"The index is out of bounds!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"tohlh"},"content":"        items.get(index).unmarkAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"tohlh"},"content":"        System.out.println(\"This task is marked as undone :(\");","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"tohlh"},"content":"        System.out.println(items.get(index));","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"tohlh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"tohlh"},"content":"    public static void deleteTask(int index) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"tohlh"},"content":"        if (index \u003c 0 || index \u003e\u003d items.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"The index is out of bounds!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"tohlh"},"content":"        System.out.println(\"This task is deleted :)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"tohlh"},"content":"        System.out.println(items.get(index));","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"tohlh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"tohlh"},"content":"        items.remove(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"tohlh"},"content":"    private static void handleCommand(CommandType commandType, String params) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"tohlh"},"content":"        switch (commandType) {","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"tohlh"},"content":"        case LIST:","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"tohlh"},"content":"            System.out.println(\"Here is a list of tasks:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"tohlh"},"content":"            for (int i \u003d 0; i \u003c items.size(); i \u003d i + 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"tohlh"},"content":"                System.out.printf(\"%d. %s\\n\", i + 1, items.get(i));","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"tohlh"},"content":"            System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"tohlh"},"content":"        case MARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"tohlh"},"content":"            if (params.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"No index provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"tohlh"},"content":"            markTask(Integer.parseInt(params) - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"tohlh"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"tohlh"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"tohlh"},"content":"            if (params.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"No index provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"tohlh"},"content":"            unmarkTask(Integer.parseInt(params) - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"tohlh"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"tohlh"},"content":"        case TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"tohlh"},"content":"            if (params.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"No description provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"tohlh"},"content":"            addTask(new Todo(params));","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"tohlh"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"tohlh"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"tohlh"},"content":"            if (params.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"No description and /by provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"tohlh"},"content":"            if (!params.contains(\"/by\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"When this has to be done by?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"tohlh"},"content":"            String[] deadlineParams \u003d params.split(\" /by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"tohlh"},"content":"            addTask(new Deadline(deadlineParams[0], deadlineParams[1]));","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"tohlh"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"tohlh"},"content":"        case EVENT:","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"tohlh"},"content":"            if (params.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"No description, /from and /to provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"tohlh"},"content":"            if (!params.contains(\"/from\") || !params.contains(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"Please provide /from and /to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"tohlh"},"content":"            String[] eventParams \u003d params.split(\" /from | /to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"tohlh"},"content":"            addTask(new Event(eventParams[0], eventParams[1], eventParams[2]));","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"tohlh"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"tohlh"},"content":"        case DELETE:","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"tohlh"},"content":"            if (params.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"No index provided\");","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"tohlh"},"content":"            deleteTask(Integer.parseInt(params) - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"tohlh"},"content":"            saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"tohlh"},"content":"        default:","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"tohlh"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"tohlh"},"content":"                throw new HenryException(\"I don\u0027t understand this command...\");","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"tohlh"},"content":"            } catch (HenryException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"tohlh"},"content":"                System.err.println(e);","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"tohlh"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"tohlh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"tohlh"},"content":"        loadTaskFromFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"tohlh"},"content":"        greet();","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"tohlh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"tohlh"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"tohlh"},"content":"            String currentLine \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"tohlh"},"content":"            String[] command \u003d currentLine.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"tohlh"},"content":"            CommandType commandType;","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"tohlh"},"content":"            String params \u003d command.length \u003c 2 ? \"\" : command[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"tohlh"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"tohlh"},"content":"                commandType \u003d CommandType.valueOf(command[0].toUpperCase());","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"tohlh"},"content":"                if (commandType.equals(CommandType.BYE)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"tohlh"},"content":"                    saveTasksToFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"tohlh"},"content":"                    bye();","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"tohlh"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"tohlh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"tohlh"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"tohlh"},"content":"                commandType \u003d CommandType.UNKNOWN;","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":203,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":204,"author":{"gitId":"tohlh"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":205,"author":{"gitId":"tohlh"},"content":"                handleCommand(commandType, params);","lastModifiedDate":"2024-01-25"},{"lineNumber":206,"author":{"gitId":"tohlh"},"content":"            } catch(HenryException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"tohlh"},"content":"                System.err.println(e);","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"tohlh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":209,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":211}},{"path":"src/main/java/HenryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"public class HenryException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    HenryException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"        return \"Whoops... \" + this.getMessage();","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    public Task(String description) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"No description of task!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tohlh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tohlh"},"content":"    public void markAsDone() throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"This was already marked.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tohlh"},"content":"    public void unmarkAsDone() throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tohlh"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tohlh"},"content":"            throw new HenryException(\"This was already unmarked.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tohlh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tohlh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"tohlh"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"tohlh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"tohlh"},"content":"        return String.format(\"%s | %s\", isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":39}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"    public Todo(String description) throws HenryException {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"tohlh"},"content":"        return String.format(\"T | %s\", super.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"tohlh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"tohlh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohlh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"tohlh"},"content":"deadline return book /by Thurs 1000","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tohlh"},"content":"event CS3230 exam /from 1300 /to 1500","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"tohlh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tohlh"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tohlh"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"tohlh"},"content":"unmark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"tohlh"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tohlh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tohlh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tohlh":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tohlh"},"content":"java -classpath ..\\bin Henry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"tohlh":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tohlh"},"content":"java -classpath ../bin Henry \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"tohlh":1}}]
