[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    ","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    mainClass.set(\"sylvia.Launcher\")","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    archiveBaseName \u003d \"sylvia\"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bachletuankhai":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"# Sylvia User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"## Overview","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"Having a lot of things to do? Feeling frustrated because you cannot track all of them? Worry not, Sylvia is here to save the day!","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"Sylvia is a **chatbot app for managing tasks and reminders**, designed for use via **Command Line Interface (CLI)**. If you prefer typing over using a mouse, you have come to the right place.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"## Table of Contents","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"- [Installation](#installation)","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"- [Features](#features)","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"  - [Command summary](#command-summary)","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"  - [Listing all tasks: `list`](#1-listing-all-tasks-list)","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"  - [Adding a simple task: `todo`](#2-adding-a-simple-task-todo)","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"  - [Adding a deadline task: `deadline`](#3-adding-a-deadline-task-deadline)","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"  - [Adding an event task: `event`](#4-adding-an-event-task-event)","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"  - [Marking a task as done: `mark`](#5-marking-a-task-as-done-mark)","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"  - [Unmarking a task as done: `unmark`](#6-unmarking-a-task-as-done-unmark)","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"  - [Deleting a task: `delete`](#7-deleting-a-task-delete)","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"  - [Finding tasks by keyword: `find`](#8-finding-tasks-by-keyword-find)","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"  - [Undoing the last command: `undo`](#9-undoing-the-last-command-undo)","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"  - [Redoing the last undone command: `redo`](#10-redoing-the-last-undone-command-redo)","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"  - [Showing manual: `help`](#11-showing-manual-help)","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"  - [Exiting the chatbot: `bye`](#12-exiting-the-chatbot-bye)","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"  - [Naviagating through the chat history](#13-naviagating-through-the-chat-history)","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"## Installation","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"1. Download the latest release (`sylvia.jar`) of Sylvia from [here](https://github.com/bachletuankhai/ip/releases).","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"2. Ensure that you have Java 11 or higher installed on your PC.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"3. Open the jar file by open up terminal, navigate to the folder containing `sylvia.jar` and type:","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"```bash","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"java -jar sylvia.jar","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"4. A window similar to this should show up with Sylvia\u0027s greetings.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"![screenshot](./Ui.png)","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"## Quick start","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"Interact with Sylvia by typing in the chat box and press Enter to send it.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"Some examples:","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"- To add a task, type in the chat `todo Groceries` and hit \u0027Enter\u0027. This will add a task with description \"Groceries\" to your task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"- To view all task, send `list` to the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"- Delete the first task of the task list by typing `delete 1`.","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"- Undo the most recent command by using `undo` command.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"## Features","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"#### How to read this manual","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"- Words in `monospace` are commands that you should type in the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"- Words between `\u003c` and `\u003e` are placeholders for **required** arguments that you should replace with actual values. For example, `\u003ctask\u003e` should be replaced with the actual task description.","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"- Words between `[` and `]` are placeholders for **optional** arguments that you may include or omit. For example, `[command]` means that the command name is optional.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"- Aliases can be used to refer to the same command. For example, \"Aliases: `list`, `ls`\" means that you can use either `list` or `ls` to list all tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"#### Command summary","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"- [`list`](#1-listing-all-tasks-list): List all tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"- [`todo \u003ctask\u003e`](#2-adding-a-simple-task-todo): Add a new to-do task.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"- [`deadline \u003ctask\u003e /by \u003ctime\u003e`](#3-adding-a-deadline-task-deadline): Add a new deadline task. The time should be in the format `yyyy-mm-dd HH:mm`.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"- [`event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e`](#4-adding-an-event-task-event): Add a new event task. The date should be in the format `yyyy-mm-dd HH:mm`.","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"- [`mark \u003ctask_number\u003e`](#5-marking-a-task-as-done-mark): Mark the specified task as done. The task number is the number of the task in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"- [`unmark \u003ctask number\u003e`](#6-unmarking-a-task-as-done-unmark): Mark the specified task as not done. The task number is the number of the task in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"- [`delete \u003ctask_number\u003e`](#7-deleting-a-task-delete): Delete the specified task. The task number is the number of the task in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"- [`find \u003ckeyword\u003e`](#8-finding-tasks-by-keyword-find): Find tasks that contain the specified keyword.","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"- [`undo`](#9-undoing-the-last-command-undo): Undo the last command.","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"- [`redo`](#10-redoing-the-last-undone-command-redo): Redo the last undone command.","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"- [`help [command]`](#11-showing-manual-help): Show manual on a certain command. If no command is provided, show manual for all commands.","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"- [`bye`](#12-exiting-the-chatbot-bye): Exit the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"### 1. Listing all tasks: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"List all tasks in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `list`, `ls`","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"### 2. Adding a simple task: `todo`","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"Add a simple to-do task to the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `todo \u003ctask\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `todo`, `td`","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `todo Buy milk`","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"### 3. Adding a deadline task: `deadline`","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"Add a task with a deadline (due) to the task list. The time should be in the format `yyyy-mm-dd HH:mm`.","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `deadline \u003ctask\u003e /by \u003ctime\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `deadline`, `dl`","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `deadline Finish report /by 2022-12-31 23:59`","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"### 4. Adding an event task: `event`","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"Add a task with a specific time period to the task list. The time should be in the format `yyyy-mm-dd HH:mm`.","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `event`, `ev`","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `event Meeting /at 2022-12-01 14:00 /to 2022-12-01 16:00`","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"### 5. Marking a task as done: `mark`","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"Mark a task as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `mark \u003ctask_number\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `mark`, `mk`","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `mark 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"### 6. Unmarking a task as done: `unmark`","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"Mark a task as not done.","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `unmark \u003ctask_number\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `unmark`, `umk`","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `unmark 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"bachletuankhai"},"content":"### 7. Deleting a task: `delete`","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"Delete a task from the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `delete \u003ctask_number\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `delete`, `d`","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `delete 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"### 8. Finding tasks by keyword: `find`","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"Find tasks that contain the specified keyword.","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `find`, `f`","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `find book`","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"### 9. Undoing the last command: `undo`","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"Undo the last command.","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `undo`","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `undo`, `ud`","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"### 10. Redoing the last undone command: `redo`","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"Redo the last undone command.","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `redo`","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `redo`, `rd`","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"### 11. Showing manual: `help`","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"Show manual on a certain command. If no command is in the input, show manual for all commands.","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `help [command]`","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `help`, `h`","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"bachletuankhai"},"content":"**Example**: `help todo`, `help`","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":206,"author":{"gitId":"bachletuankhai"},"content":"### 12. Exiting the chatbot: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":208,"author":{"gitId":"bachletuankhai"},"content":"Exit the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":210,"author":{"gitId":"bachletuankhai"},"content":"**Usage**: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":212,"author":{"gitId":"bachletuankhai"},"content":"**Aliases**: `bye`, `exit`, `ex`","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"bachletuankhai"},"content":"### 13. Naviagating through the chat history","lastModifiedDate":"2024-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":218,"author":{"gitId":"bachletuankhai"},"content":"You can navigate through the chat history by using the up and down arrow keys, similar to how you would in a terminal. Use the **up arrow** key to go _back_ (to older messages) and the down **arrow key** to go _forward_ (to newer messages).","lastModifiedDate":"2024-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":220,"author":{"gitId":"bachletuankhai"},"content":"## Acknowledgements","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"bachletuankhai"},"content":"Sylvia is an adaptation of the Duke chatbot project from the [NUS CS2103T](https://nus-cs2103-ay2324s2.github.io/website/se-book-adapted/projectDuke/index.html) module. The original project was created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"bachletuankhai"},"content":"This user guide was adapted from the [AB3 user guide](https://se-education.org/addressbook-level3/UserGuide.html) by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"bachletuankhai":206,"-":18}},{"path":"src/main/java/sylvia/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * A launcher class to launch the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class Launcher {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":12}},{"path":"src/main/java/sylvia/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.configuration.Info;","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.UserChatHistory;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.ui.MainWindow;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.ui.UI;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":" * The main class to start the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    private UI ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    private Sylvia sylvia;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    private UserChatHistory chatHistory;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    private void setUpStage(Stage stage, FXMLLoader fxmlLoader) throws IOException {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        stage.setTitle(Info.CHATBOT_NAME);","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/image/icon.png\")));","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        stage.show();","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    private void setUpBot(MainWindow mw) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        chatHistory \u003d new UserChatHistory();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        ui \u003d new UI(mw);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        sylvia \u003d new Sylvia(ui);","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        // set up action handlers","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        mw.setInputHandler((String s) -\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            chatHistory.addChatToHistory(s);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            return sylvia.runCommand(s);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        });","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        mw.setChatHistorySuppliers(chatHistory::getPreviousChat, chatHistory::getNextChat);","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"            // set up the stage","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"            setUpStage(stage, fxmlLoader);","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"            // set up the UI controller and start the bot","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"            setUpBot(fxmlLoader.\u003cMainWindow\u003egetController());","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"            ui.showWelcomeMessage();","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    public void stop() {","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        sylvia.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":70}},{"path":"src/main/java/sylvia/Sylvia.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.command.Command;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.command.CommandParser;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.configuration.Info;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.storage.Storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.storage.StorageLoadException;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.storage.StorageSaveException;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.ui.ErrorResponse;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.ui.Response;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.ui.UI;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":" * Represents the main class of the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"public class Sylvia {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    private static final String DATA_FILE_PATH \u003d Info.DATA_FILE_PATH;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    private TaskList list;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    private UI ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    private ProgramState state;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    private CommandParser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new chatbot instance. The chatbot will load data from the","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * default data file. If the data file does not exist, a new data file will be","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * created.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param ui The user interface controller of the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    public Sylvia(UI ui) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        this.parser \u003d new CommandParser();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        this.state \u003d new ProgramState();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"            list \u003d storage.load();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        } catch (StorageLoadException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            ui.showBotError(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * Runs a command and returns the response from the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandString The command to run.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response from the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public Response runCommand(String commandString) {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        Command command;","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"            command \u003d Command.parse(commandString, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"            String response \u003d command.execute(list, state);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"            if (state.isExit()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"                ui.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"            return new Response(response);","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        } catch (SylviaException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"            return new ErrorResponse(e.getBotMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"     * Exits the bot. The data will be saved to the data file.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    public void exit() {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        assert state.isExit() : \"The bot should be in the exit state.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"            storage.save(list);","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        } catch (StorageSaveException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"            ui.showBotError(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bachletuankhai":76,"-":2}},{"path":"src/main/java/sylvia/SylviaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception thrown by the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class SylviaException extends Exception {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    private String botMessage;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new exception with the given message and bot message.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * @param message    The message of the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * @param botMessage The message to be shown to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public SylviaException(String message, String botMessage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        this.botMessage \u003d botMessage;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public String getBotMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        return botMessage;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":23}},{"path":"src/main/java/sylvia/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to add a task.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"public abstract class AddTaskCommand extends Command implements Undoable {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    private Task task;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new add task command.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public AddTaskCommand(String body) {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a task from the description and sets it as the task of the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * This method is to be called in the execute method of the subclass.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private void setTaskFromDescription() throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        this.task \u003d getTaskFromDescription(getBody());","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    };","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a task from the description. This method is to be overridden by the","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * subclasses.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * @param description","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * @return The task created from the description.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    protected abstract Task getTaskFromDescription(String description) throws SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command adds a task to the task list. The program","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * state is set to normal after the command is executed, even if the command","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the command fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        this.setTaskFromDescription();","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        list.addTask(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        state.addCommandToHistory(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        assert state.isRedoable() \u003d\u003d false","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"                : \"There should be no redoable commands after a Undoable command is executed.\";","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        return \"Added: \" + task + \"\\nYou now have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    public String undo(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        list.removeTask(this.task);","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        return \"Task removed: \" + task;","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"    public String redo(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        list.addTask(this.task);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        return \"Task added: \" + task;","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":77}},{"path":"src/main/java/sylvia/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command that can be executed by the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private String body;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    protected Command(String body) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"        this.body \u003d body;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    protected String getBody() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        return body;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * Parses the input and returns a command.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * @param input  The input to parse.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * @param parser The parser to use.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @return The parsed command.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the input is invalid.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    public static Command parse(String input, CommandParser parser) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        return parser.parse(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the command fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public abstract String execute(TaskList list, ProgramState state) throws SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":42}},{"path":"src/main/java/sylvia/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command parser that can parse user input into a command.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class CommandParser {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Parses the given input into a command.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * @param input The input to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * @return The parsed command.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the input is invalid.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public Command parse(String input) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        String name \u003d tokens[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d tokens.length \u003e 1 ? tokens[1] : \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        // both main command and aliases go here","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        switch (name) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        case \"ls\":","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        case \"mk\":","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            return new MarkCommand(body);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        case \"umk\":","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"            return new UnmarkCommand(body);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        case \"exit\":","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        case \"ex\":","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        case \"td\":","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            return new TodoCommand(body);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        case \"dl\":","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            return new DeadlineCommand(body);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        case \"ev\":","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            return new EventCommand(body);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        case \"d\":","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"            return new DeleteCommand(body);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        case \"f\":","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            return new FindCommand(body);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        case \"ud\":","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        case \"undo\":","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"            return new UndoCommand(body);","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        case \"rd\":","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        case \"redo\":","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"            return new RedoCommand(body);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        case \"h\":","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        case \"help\":","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"            return new HelpCommand(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"            throw new UnknownCommandException(\"Unknown command: \" + name + \" \" + body,","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"                    \"I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bachletuankhai":66}},{"path":"src/main/java/sylvia/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to add a task with a deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class DeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private static final String MANUAL \u003d \"Usage: deadline \u003cdescription\u003e /by \u003cdue time\u003e\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"Adds a task with a deadline to the task list.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"            + \"The due time must be specified in the format: yyyy-mm-dd hh:mm. The description cannot be empty.\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"            + \"Example: deadline return book /by 2024-02-18 18:00\\n\\n\" + \"Aliases: dl\";","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private String taskDescription;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private String dueTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new deadline command.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public DeadlineCommand(String body) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        String[] parts \u003d body.split(\"/by\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        this.taskDescription \u003d parts[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        this.dueTime \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the deadline command.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the deadline command.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    protected Task getTaskFromDescription(String description) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            throw new EmptyTaskDescriptionException(\"The description of a deadline cannot be empty.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"                    \"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        } else if (dueTime.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            throw new EmptyDateTimeException(\"The due time of a deadline cannot be empty.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"                    \"The due time of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        return new Deadline(taskDescription, dueTime);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":50}},{"path":"src/main/java/sylvia/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"public class DeleteCommand extends Command implements Undoable {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: delete \u003ctask number\u003e\\n\\n\" + \"Deletes a task from the task list.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"            + \"The task number must be specified as an integer.\\n\\n\" + \"Example: delete 3\\n\\n\" + \"Aliases: d, del\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private Task task;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new delete command.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the body is invalid.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public DeleteCommand(String body) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            this.index \u003d Integer.parseInt(body);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"            if (body \u003d\u003d null || body.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"                throw new EmptyTaskDescriptionException(\"The index of a task cannot be empty.\",","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"                        \"Sorry, but I don\u0027t understand what you mean by task number \\\"\" + body + \"\\\".\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidTaskIndexException(\"The index of a task must be an integer.\",","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, but I don\u0027t understand what you mean by task number \\\"\" + body + \"\\\".\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the delete command.","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the delete command.","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command deletes a task from the task list. The","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * program state is set to normal after the command is executed, even if the","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     * command fails to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the index provided falls outside the range of the","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"     *                         task list, or if the command fails to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidTaskIndexException(","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"                    \"The index of a task cannot be less than 1 or greater than the number of tasks.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, but task number \" + index + \" does not exist. You only have \" + list.size() + \" tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        Task task \u003d list.deleteTask(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d (\"Deleted: \" + task + \"\\nYou now have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        state.addCommandToHistory(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"    public String undo(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        list.addTask(this.task);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        return \"Task re-added: \" + task + \"\\nYou now have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    public String redo(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        return this.execute(list, state);","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":82}},{"path":"src/main/java/sylvia/command/EmptyDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the user does not provide a date and","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * time for a deadline or event.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class EmptyDateTimeException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public EmptyDateTimeException(String message, String botMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":13}},{"path":"src/main/java/sylvia/command/EmptyKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the keyword of a command is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class EmptyKeywordException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public EmptyKeywordException(String message, String botMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":12}},{"path":"src/main/java/sylvia/command/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the user does not provide a date and","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * time for a deadline or event.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class EmptyTaskDescriptionException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public EmptyTaskDescriptionException(String message, String botMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":13}},{"path":"src/main/java/sylvia/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Event;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to add a task with a starting time and an ending time.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class EventCommand extends AddTaskCommand {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: event \u003cdescription\u003e /from \u003cstart time\u003e /to \u003cend time\u003e\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"Adds a task with a starting time and an ending time to the task list.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"            + \"The start time and end time must be specified in the format: yyyy-mm-dd hh:mm\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"            + \"Example: event project meeting /from 2024-02-18 18:00 /to 2024-02-18 20:00\\n\\n\" + \"Aliases: ev\";","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private String taskDescription;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private String startTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    private String endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new event command.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    public EventCommand(String body) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        String[] parts \u003d body.split(\"/from|/to\", 3);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        this.taskDescription \u003d parts[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        this.startTime \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        this.endTime \u003d parts.length \u003e 2 ? parts[2].trim() : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the event command.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the event command.","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    protected Task getTaskFromDescription(String description) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        if (taskDescription.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"            throw new EmptyTaskDescriptionException(\"The description of an event cannot be empty.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"                    \"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        } else if (startTime.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            throw new EmptyDateTimeException(\"The start time of an event cannot be empty.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"                    \"The start time of an event cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        } else if (endTime.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            throw new EmptyDateTimeException(\"The end time of an event cannot be empty.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"                    \"The end time of an event cannot be empty.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        return new Event(taskDescription, startTime, endTime);","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":55}},{"path":"src/main/java/sylvia/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.configuration.Info;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: exit\\n\\n\" + \"Exits the application.\\n\\n\" + \"Aliases: ex, bye\";","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new exit command.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        super(\"\");","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the exit command.","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the exit command.","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command sets the program state to exit.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d Info.EXIT_MESSAGE;","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        state.setExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":41}},{"path":"src/main/java/sylvia/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to find tasks by keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: find \u003ckeyword\u003e\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"Finds tasks in the task list that contain the keyword.\\n\" + \"The keyword cannot be empty.\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"            + \"Example: find book\\n\\n\" + \"Aliases: f\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public FindCommand(String body) {","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the find command.","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the find command.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. The command finds all tasks that contain the keyword in","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * the list. The state is set to normal.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  the list of tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @param state the program state","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @return the response","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * @throws EmptyKeywordException if the keyword is empty","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws EmptyKeywordException {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d getBody();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        if (body.equals(\"\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            throw new EmptyKeywordException(\"Keyword cannot be empty.\",","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"                    \"I\u0027m sorry, but I cannot find anything if you don\u0027t tell me what to look for.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"            if (!task.contains(body)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"                continue;","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            response +\u003d i + 1 + \". \" + task + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"            count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"            response \u003d \"No matching tasks found.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":60}},{"path":"src/main/java/sylvia/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a help command.","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private static final String MANUAL \u003d \"Usage: help \u003ccommand\u003e\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"Displays the manual for the specified command, or the list of commands if no command is specified.\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"            + \"Aliases: h\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    /** Supported commands */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private static final String[] COMMANDS \u003d new String[] { \"list\", \"mark\", \"unmark\", \"bye\", \"todo\", \"deadline\",","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        \"event\", \"delete\", \"find\", \"undo\", \"redo\", \"help\" };","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    private static final String LINE \u003d \"----------------------------------------\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new help command.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    public HelpCommand(String body) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the help command.","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the help command.","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    private String getManualString(String command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        switch (command) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        case \"ls\":","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        case \"list\":","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            return ListCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        case \"mk\":","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"            return MarkCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        case \"umk\":","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"            return UnmarkCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        case \"ex\":","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        case \"exit\":","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"            return ExitCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        case \"td\":","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"            return TodoCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        case \"dl\":","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"            return DeadlineCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        case \"ev\":","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        case \"event\":","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"            return EventCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        case \"d\":","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"            return DeleteCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        case \"f\":","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        case \"find\":","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"            return FindCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        case \"ud\":","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        case \"undo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"            return UndoCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        case \"rd\":","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        case \"redo\":","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"            return RedoCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        case \"h\":","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        case \"help\":","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"            return HelpCommand.getManual();","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        default:","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d this.getBody().trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d getManualString(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"        if (body.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"            sb.append(\"Here are the list of commands that you can use:\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"            for (String command : COMMANDS) {","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"                sb.append(LINE + command + \"\\n\" + LINE + getManualString(command) + \"\\n\" + LINE + \"\\n\\n\");","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"            response \u003d sb.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        if (response \u003d\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"            throw new UnknownCommandException(\"Unknown command: \" + body,","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"                    \"I\u0027m sorry, I can\u0027t find the manual for that command :\u003c\");","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"        return response.trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"bachletuankhai":102}},{"path":"src/main/java/sylvia/command/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the index provided by the user is","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class InvalidTaskIndexException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public InvalidTaskIndexException(String message, String botMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":13}},{"path":"src/main/java/sylvia/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: list\\n\\n\" + \"Lists all tasks in the task list.\\n\\n\" + \"Aliases: ls\";","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new list command.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public ListCommand() {","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"        super(\"\");","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the list command.","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the list command.","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command sets the program state to normal.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            return \"You have no tasks in the list.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        return list.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":42}},{"path":"src/main/java/sylvia/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: mark \u003cindex\u003e\\n\\n\" + \"Marks a task as done in the task list.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"The index must be a positive integer.\\n\\n\" + \"Example: mark 3\\n\\n\" + \"Aliases: mk\";","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new mark command.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the body cannot be parsed as an integer.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public MarkCommand(String body) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            this.index \u003d Integer.parseInt(body);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidTaskIndexException(\"The index of a task must be an integer.\",","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, but I don\u0027t know which task you want to mark as done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the mark command.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the mark command.","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command marks a task as done. The program state is","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * set to normal after the command is executed, even if the command fails to","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the index provided falls outside the range of the","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *                         task list, or if the command fails to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidTaskIndexException(","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"                    \"The index of a task cannot be less than 1 or greater than the number of tasks.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, but task number \" + index + \" does not exist. You only have \" + list.size() + \" tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        list.markTaskAsDone(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d (\"Done: \" + list.get(index - 1));","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":62}},{"path":"src/main/java/sylvia/command/RedoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to redo the most recent command that was undone.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: redo\\n\\n\" + \"Redoes the most recent command that was undone.\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"Aliases: rd\";","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new redo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public RedoCommand(String body) {","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the redo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the redo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command redoes the most recent command that was","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * undone. The program state is set to normal after the command is executed,","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * even if the command fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the command fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        String response;","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        if (!state.isRedoable()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"            response \u003d \"Nothing to redo now.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        Undoable command \u003d state.getHistory().getLastUndoneCommand();","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        response \u003d command.redo(list, state);","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":54}},{"path":"src/main/java/sylvia/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Todo;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to add a simple todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class TodoCommand extends AddTaskCommand {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: todo \u003cdescription\u003e\\n\\n\" + \"Adds a simple todo to the task list.\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"The description cannot be empty.\\n\\n\" + \"Example: todo read book\\n\\n\" + \"Aliases: td\";","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public TodoCommand(String body) {","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the todo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the todo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    protected Task getTaskFromDescription(String description) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            throw new SylviaException(\"The description of a todo cannot be empty.\",","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, you need to tell me what you want to add. I can\u0027t add empty tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        return new Todo(description);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":35}},{"path":"src/main/java/sylvia/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to undo the most recent command that modified the task","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * list.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: undo\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"            + \"Undoes the most recent command that modified the task list.\\n\\n\" + \"Aliases: ud\";","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new undo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public UndoCommand(String body) {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the undo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the undo command.","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command undoes the most recent command that","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * modified the task list. The program state is set to normal after the command","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * is executed, even if the command fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the command fails to execute.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        String response;","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        if (!state.isUndoable()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            response \u003d \"Nothing to undo now.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"            return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        Undoable command \u003d state.getHistory().getLatestCommand();","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        response \u003d command.undo(list, state);","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":55}},{"path":"src/main/java/sylvia/command/Undoable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command that can be undone and redone.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public interface Undoable {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * Undoes the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the command fails to undo.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    String undo(TaskList list, ProgramState state) throws SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * Redoes the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the command fails to redo.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    String redo(TaskList list, ProgramState state) throws SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":30}},{"path":"src/main/java/sylvia/command/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the user enters an unparsable","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * command.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class UnknownCommandException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public UnknownCommandException(String message, String botMessage) {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":13}},{"path":"src/main/java/sylvia/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command to mark a task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MANUAL \u003d \"Usage: unmark \u003cindex\u003e\\n\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            + \"Marks the task at the specified index as not done.\\n\\n\" + \"Aliases: um\";","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new command to mark a task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @param body The body of the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the body cannot be parsed as an integer.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public UnmarkCommand(String body) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        super(body);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            this.index \u003d Integer.parseInt(body);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidTaskIndexException(\"The index of a task must be an integer.\",","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, but I don\u0027t know which task you want to mark as undone.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * Gets the manual for the unmark command.","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @return The manual for the unmark command.","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public static String getManual() {","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return MANUAL;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command. This command marks a task as not done. The program","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * state is set to normal after the command is executed, even if the command","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * fails to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @param list  The task list to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * @param state The program state to be modified.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * @return The response to be displayed to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaException If the index provided falls outside the range of the","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *                         task list, or if the command fails to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public String execute(TaskList list, ProgramState state) throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidTaskIndexException(","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"                    \"The index of a task cannot be less than 1 or greater than the number of tasks.\",","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"                    \"Sorry, but task number \" + index + \" does not exist. You only have \" + list.size() + \" tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        list.unmarkTaskAsDone(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d (\"Undone: \" + list.get(index - 1));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        state.setNormal();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":62}},{"path":"src/main/java/sylvia/configuration/Info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.configuration;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Contains default information about the chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public final class Info {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    public static final String CHATBOT_NAME \u003d \"Sylvia\";","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"    public static final String DATA_FILE_PATH \u003d \"data/sylvia.txt\";","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m \" + CHATBOT_NAME + \". What do you want to do today?\";","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public static final String EXIT_MESSAGE \u003d \"Cya!!\";","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":12}},{"path":"src/main/java/sylvia/state/ProgramState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.state;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.command.Undoable;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents the state of the program. There are three possible states: normal,","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * exit, and error.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class ProgramState {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Represents the possible states of the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    public static enum State {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"        NORMAL, EXIT, ERROR","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    private State state;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    private UndoableCommandHistory history;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new program state. The initial state is normal.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public ProgramState() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        this.state \u003d State.NORMAL;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        this.history \u003d new UndoableCommandHistory();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    public void setState(State newState) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        state \u003d newState;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    public void setNormal() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        state \u003d State.NORMAL;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isNormal() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return state \u003d\u003d State.NORMAL;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    public void setExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        state \u003d State.EXIT;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        return state \u003d\u003d State.EXIT;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    public void addCommandToHistory(Undoable command) {","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        history.addCommandToHistory(command);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        return history.isUndoable();","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isRedoable() {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        return history.isRedoable();","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    public UndoableCommandHistory getHistory() {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        return history;","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"bachletuankhai":63}},{"path":"src/main/java/sylvia/state/UndoableCommandHistory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.state;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.Deque;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.command.Undoable;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * Represents the history of undoable commands that have been executed.","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"public class UndoableCommandHistory {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_HISTORY_SIZE \u003d 100;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private Deque\u003cUndoable\u003e history;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private Deque\u003cUndoable\u003e future; // for redo","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a UndoableCommandHistory object with the given history and future.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @param history The history of commands that have been executed.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @param future  The future of commands that have been undone.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public UndoableCommandHistory(Deque\u003cUndoable\u003e history, Deque\u003cUndoable\u003e future) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        this.history \u003d history;","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        this.future \u003d future;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a UndoableCommandHistory object with the default empty history and","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * future.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    public UndoableCommandHistory() {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        this.history \u003d new ArrayDeque\u003c\u003e(MAX_HISTORY_SIZE);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        this.future \u003d new ArrayDeque\u003c\u003e(MAX_HISTORY_SIZE);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the given command to the history.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * @param command The command to be added to the history.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    public void addCommandToHistory(Undoable command) {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        // remove the oldest command if the history size exceeds the limit","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        if (history.size() + 1 \u003e MAX_HISTORY_SIZE) {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            history.removeFirst();","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        history.addLast(command);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        future.clear(); // clear the future when a new command is added","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if there are commands that can be undone, i.e. there are","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     * commands in the history.","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are commands that can be undone, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        return !history.isEmpty();","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the last command that was executed.","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"     * @return The last command that was executed, or null if the history is empty.","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    public Undoable getLatestCommand() {","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        Undoable command \u003d history.removeLast();","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        future.addLast(command);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        return command;","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if there are commands that can be redone, i.e. there are","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"     * commands in the future.","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are commands that can be redone, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isRedoable() {","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        return !future.isEmpty();","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the last command that was undone.","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"     * @return The last command that was undone, or null if the future is empty.","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"    public Undoable getLastUndoneCommand() {","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        if (future.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        Undoable command \u003d future.removeLast();","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        history.addLast(command);","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        return command;","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":101}},{"path":"src/main/java/sylvia/state/UserChatHistory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.state;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.util.RandomAccessQueue;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents the history of chat messages that have been sent.","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class UserChatHistory {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_HISTORY_SIZE \u003d 100;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /** Deque for history */","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private RandomAccessQueue\u003cString\u003e chatHistory;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a UserChatHistory object with the default empty chat history and","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * future chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public UserChatHistory() {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        // this.chatHistory \u003d new String[MAX_HISTORY_SIZE];","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        this.chatHistory \u003d new RandomAccessQueue\u003c\u003e(MAX_HISTORY_SIZE);","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the given chat message to the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * @param chatMessage The chat message to be added to the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public void addChatToHistory(String chatMessage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        chatHistory.addLast(chatMessage);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if there are chat messages in the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are chat messages in the chat history, false otherwise.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public boolean hasHistory() {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return !chatHistory.isEmpty();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the previous chat message in the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * @return The previous chat message in the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    public String getPreviousChat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        return chatHistory.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the next chat message in the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     * @return The next chat message in the chat history.","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    public String getNextChat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        return chatHistory.traverseDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"bachletuankhai":58}},{"path":"src/main/java/sylvia/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskListParser;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":" * Represents a storage for loading and saving the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private String filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * Loads the task list from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * @return The task list loaded from the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * @throws StorageLoadException If the task list fails to load.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public TaskList load() throws StorageLoadException {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"            TaskList data \u003d TaskListParser.parse(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"            return data;","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        } catch (SylviaException | IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            throw new StorageLoadException(\"Failed to load data from file: \" + filePath,","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"                    \"Cannot load data from file: \" + filePath + \"\\n\" + \"Sylvia will start with an empty task list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * Saves the task list to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @param list The task list to be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * @throws StorageSaveException If the task list fails to save.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    public void save(TaskList list) throws StorageSaveException {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"            FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"            writer.write(TaskListParser.serialize(list));","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"            throw new StorageSaveException(\"Failed to save data to file: \" + filePath,","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"                    \"Cannot save data to file: \" + filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bachletuankhai":63}},{"path":"src/main/java/sylvia/storage/StorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the storage file cannot be loaded.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class StorageLoadException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public StorageLoadException(String message, String botMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bachletuankhai":12}},{"path":"src/main/java/sylvia/storage/StorageSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.storage;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception that occurs when the storage file cannot be saved.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class StorageSaveException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public StorageSaveException(String message, String botMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bachletuankhai":12}},{"path":"src/main/java/sylvia/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    private TaskDateTime dueTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new deadline with the given description and due time.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * @param due         The due time of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the due time is not in the correct","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     *                                      format.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public Deadline(String description, String due) throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        this.dueTime \u003d new TaskDateTime(due);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new deadline with the given description, due time and done status.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @param due         The due time of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * @param isDone      The done status of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the due time is not in the correct","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     *                                      format.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    public Deadline(String description, String due, boolean isDone) throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        this.dueTime \u003d new TaskDateTime(due);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        return \"[D]\" + super.toString() + \" (due: \" + dueTime + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the serialized string of this task. The serialized string will be","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * stored in the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @return The serialized string of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    public String serialize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        // assuming that the dueTime does not contain \"|\"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        return \"D | \" + super.serialize() + \" | \" + dueTime.serialize();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":52}},{"path":"src/main/java/sylvia/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a task with a starting time and an ending time.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    private TaskDateTime startTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"    private TaskDateTime endTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new event with the given description, starting time and ending","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * time.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param startTime   The starting time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * @param endTime     The ending time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the starting time or ending time is","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     *                                      not in the correct format.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public Event(String description, String startTime, String endTime) throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        this.startTime \u003d new TaskDateTime(startTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        this.endTime \u003d new TaskDateTime(endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new event with the given description, starting time, ending time","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * and done status.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * @param startTime   The starting time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param endTime     The ending time of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @param isDone      The done status of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the starting time or ending time is","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     *                                      not in the correct format.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    public Event(String description, String startTime, String endTime, boolean isDone)","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        this.startTime \u003d new TaskDateTime(startTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        this.endTime \u003d new TaskDateTime(endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + startTime + \" - \" + endTime + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the serialized string of this task. The serialized string will be","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * stored in the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"     * @return The serialized string of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    public String serialize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        return \"E | \" + super.serialize() + \" | \" + startTime.serialize() + \" | \" + endTime.serialize();","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":59}},{"path":"src/main/java/sylvia/task/InvalidDataFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception thrown when the data file is not in the correct","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * format.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class InvalidDataFormatException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public InvalidDataFormatException(String message, String botMessage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        super(message, botMessage);","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bachletuankhai":13}},{"path":"src/main/java/sylvia/task/SylviaDateTimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an exception thrown when the date and time is not in the correct","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * format.","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class SylviaDateTimeParseException extends SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public SylviaDateTimeParseException(String message, String response) {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        super(message, response);","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":13}},{"path":"src/main/java/sylvia/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private String escapedDescription;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new task. By default, the task is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        this.escapedDescription \u003d escapeDescription(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new task with the given done status.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     * @param isDone      The done status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        this.escapedDescription \u003d escapeDescription(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the escaped description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    protected static String escapeDescription(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        return description.replace(\"|\", \"\\\\|\");","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        String status \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        return \"[\" + status + \"] \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the serialized string of this task. The serialized string will be","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     * stored in the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"     * @return The serialized string of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    public String serialize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + escapedDescription;","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        return description.contains(keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":71}},{"path":"src/main/java/sylvia/task/TaskDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents a date and time used by tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class TaskDateTime {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /** The format of the date and time used by the tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private static final String INPUT_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * The format of the date and time used when displaying the tasks to the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"EEE, MMM d yyyy HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * Parses the given string into a date and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * @param dateTime The date and time string.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the date and time is not in the","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     *                                      correct format.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public TaskDateTime(String dateTime) throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateTime, INPUT_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"            throw new SylviaDateTimeParseException(\"Wrong date and time format: \" + dateTime,","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"                    \"Please enter the date and time in the format: \" + INPUT_FORMAT);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        return OUTPUT_FORMATTER.format(dateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the serialized string of this date and time. The serialized string","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * will be stored in the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @return The serialized string of the date and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    public String serialize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        return INPUT_FORMATTER.format(dateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bachletuankhai":50}},{"path":"src/main/java/sylvia/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a task list.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * @param task The task to add.","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * @return true if the task is added, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        return tasks.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * Removes a task from the list. If the task is not in the list, nothing","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * happens.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @param task The task to remove.","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * @return The removed task, or null if the task is not in the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public Task removeTask(Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        // Remove the most recent task that is equal to the given task.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d tasks.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            if (tasks.get(i).equals(task)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"                return tasks.remove(i);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        return task;","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * Removes a task from the list by index.","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"     * @param index The index of the task to remove.","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        return tasks.remove(index - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"            sb.append(i + 1 + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"    public void unmarkTaskAsDone(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        tasks.get(index - 1).unmarkAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"    public int size() {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":84}},{"path":"src/main/java/sylvia/task/TaskListParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * Represents a parser that parses a task list from a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"public class TaskListParser {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * Parses a task list from a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param file The file to parse from.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * @return The parsed task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * @throws IOException                  If an I/O error occurs.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @throws InvalidDataFormatException   If the data file is not in the correct","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     *                                      format.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the date and time is not in the","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     *                                      correct format.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public static TaskList parse(File file)","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            throws IOException, InvalidDataFormatException, SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        BufferedReader reader \u003d new BufferedReader(fr);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        String line;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            list.addTask(parseTask(line));","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        fr.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        reader.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        return list;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * Parses a task from a line in the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * @param line The line to parse from.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * @return The parsed task.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * @throws InvalidDataFormatException   If the line is not in the correct","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     *                                      format.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     * @throws SylviaDateTimeParseException If the date and time is not in the","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     *                                      correct format.","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    private static Task parseTask(String line) throws InvalidDataFormatException, SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        String[] words \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        if (words.length \u003c 3) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidDataFormatException(\"Invalid task format: \" + line, \"Invalid task format: \" + line);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        boolean isDone \u003d words[1].equals(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        switch (words[0]) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"            return new Todo(words[2], isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"            if (words.length \u003c 4) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"                throw new InvalidDataFormatException(\"Invalid task format: \" + line, \"Invalid task format: \" + line);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"            return new Deadline(words[2], words[3], isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"            if (words.length \u003c 5) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"                throw new InvalidDataFormatException(\"Invalid task format: \" + line, \"Invalid task format: \" + line);","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"            return new Event(words[2], words[3], words[4], isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"            throw new InvalidDataFormatException(\"Unknown task type: \" + words[0], \"Unknown task type: \" + words[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"     * Serializes a task list into a string. The serialized string will be stored in","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"     * the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"     * @param list The task list to serialize.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"     * @return The serialized string.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    public static String serialize(TaskList list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"            sb.append(serializeTask(list.get(i)) + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    private static String serializeTask(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"        return task.serialize();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"bachletuankhai":89}},{"path":"src/main/java/sylvia/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the serialized string of this task. The serialized string will be","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * stored in the data file.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * @return The serialized string of the todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public String serialize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        return \"T | \" + super.serialize();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":30}},{"path":"src/main/java/sylvia/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":" * face and a label containing text from the speaker.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    private static final int IMAGE_RADIUS \u003d 20;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    private static final String userDialogStyle \u003d \"-fx-background-color: #0084ff;\"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"            + \" -fx-background-radius: 20 5 20 20;\";","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private static final String sylviaDialogStyle \u003d \"-fx-background-color: #f0f0f0;\"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            + \" -fx-background-radius: 5 20 20 20;\";","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    private Text dialog;","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        Circle clip \u003d new Circle(displayPicture.getLayoutX() + IMAGE_RADIUS, displayPicture.getLayoutY() + IMAGE_RADIUS,","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"                IMAGE_RADIUS);","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        HBox.setMargin(dialogContainer, new Insets(0, 10, 0, 10));","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        // when text overflows, wrap it to the next line","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        if (dialog.getLayoutBounds().getWidth() \u003e 300) {","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"            dialog.setWrappingWidth(275);","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     * Returns a dialog box representing the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"     * @param text The user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     * @param img  The user\u0027s image.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"     * @return The dialog box representing the user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        db.dialogContainer.setStyle(userDialogStyle);","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        db.dialog.setFill(Paint.valueOf(\"#FFFFFF\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        return db;","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"     * right.","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"    private void flip() {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"     * Returns a dialog box representing the bot\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"     * @param text The bot\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"     * @param img  The bot\u0027s image.","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"     * @return The dialog box representing the bot\u0027s response.","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"    public static DialogBox getSylviaDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        db.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        db.dialogContainer.setStyle(sylviaDialogStyle);","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        db.dialog.setFill(Paint.valueOf(\"#000000\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        return db;","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":101}},{"path":"src/main/java/sylvia/ui/ErrorResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents the response from the bot when an error occurs.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class ErrorResponse extends Response {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    public ErrorResponse(String response) {","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"        super(response);","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":10}},{"path":"src/main/java/sylvia/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" * Represents the main window of the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private Function\u003cString, Response\u003e inputHandler;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    private Supplier\u003cString\u003e prevChatSupplier \u003d () -\u003e \"up\";","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    private Supplier\u003cString\u003e nextChatSupplier \u003d () -\u003e \"down\";","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/userimg.jpg\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    private final Image sylviaImage \u003d new Image(this.getClass().getResourceAsStream(\"/image/sylviaimg.jpg\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    private final Image sendIcon \u003d new Image(this.getClass().getResourceAsStream(\"/icon/send.png\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * Initializes the main window.","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        sendButton.getStylesheets().add(getClass().getResource(\"/css/MainWindow.css\").toExternalForm());","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        sendButton.setGraphic(new ImageView(sendIcon));","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the input handler for the main window.","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * @param inputHandler The input handler for the main window.","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    public void setInputHandler(Function\u003cString, Response\u003e inputHandler) {","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        this.inputHandler \u003d inputHandler;","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the chat history suppliers for the main window.","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"     * @param prevChatSupplier The supplier for the previous chat message.","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     * @param nextChatSupplier The supplier for the next chat message.","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    public void setChatHistorySuppliers(Supplier\u003cString\u003e prevChatSupplier, Supplier\u003cString\u003e nextChatSupplier) {","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        this.prevChatSupplier \u003d prevChatSupplier;","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        this.nextChatSupplier \u003d nextChatSupplier;","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    private String getUserInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        // don\u0027t show empty input","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"            return \"\";","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        return input;","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        String input \u003d getUserInput();","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        // don\u0027t send empty input","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"            return;","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        Response response \u003d inputHandler.apply(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        showResponse(response);","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    private void setNullableUserInput(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"            return;","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        userInput.setText(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        userInput.positionCaret(input.length()); // move caret to end","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"    private void handleKeyPress(KeyEvent event) {","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        switch (event.getCode()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"        case UP:","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"            setNullableUserInput(prevChatSupplier.get());","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        case DOWN:","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"            setNullableUserInput(nextChatSupplier.get());","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        default:","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"     * Shows the response from the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"     * @param response The response from the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"    public void showResponse(Response response) {","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getSylviaDialog(response.toString(), sylviaImage));","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":119}},{"path":"src/main/java/sylvia/ui/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents the response from the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class Response {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    private String response;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new response.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * @param response The response from the bot.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public Response(String response) {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        this.response \u003d response;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        return response;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":22}},{"path":"src/main/java/sylvia/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.configuration.Info;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents the user interface of the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class UI {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    /** The main window to take input and show output */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * @param name The name of the bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public UI(MainWindow mainWindow) {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public void exit() {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * Shows an error message from the bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * @param e The exception that caused the error.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    public void showBotError(SylviaException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        showResponse(new ErrorResponse(e.getBotMessage()));","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * Shows the welcome message from the bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        showResponse(new Response(Info.WELCOME_MESSAGE));","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     * Shows the response from the bot. If the response is null, nothing will be","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * shown.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * @param response The response from the bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    public void showResponse(Response response) {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        if (response \u003d\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        mainWindow.showResponse(response);","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        showResponse(new Response(Info.EXIT_MESSAGE));","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"bachletuankhai":59}},{"path":"src/main/java/sylvia/util/RandomAccessQueue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.util;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a queue that allows for random access to elements. The queue","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" * accepts non-null elements. The queue has a default maximum capacity of 100.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * New elements are added to the tail of the queue. When the queue is full,","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * adding new elements will remove the oldest elements from the head of the","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cE\u003e the type of elements in the queue","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public class RandomAccessQueue\u003cE\u003e {","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    // TODO: Implement this class to have the same behavior as a Queue, but with the","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    // ability to access elements at any index.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_CAPACITY \u003d 100;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * The array to store elements in the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    private E[] elements;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * The number of elements in the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    private int size;","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * The index of the head of the queue. It is the index of the first element in","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    private int head;","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * The index of the tail of the queue. It is the index where the next element","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * will be added to the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    private int tail;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * The index of the current element for traversal in the queue. By default, it","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * is at the tail of the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    private int cur;","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * The maximum capacity of the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    private int capacity;","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new random access queue with a default maximum capacity of 100.","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public RandomAccessQueue() {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        // Suppress unchecked cast warning","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        capacity \u003d MAX_CAPACITY;","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        E[] a \u003d (E[]) new Object[capacity];","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        elements \u003d a;","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        size \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        head \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        tail \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a new random access queue with the specified maximum capacity.","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"     * @param capacity the maximum capacity of the queue","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"     * @throws IllegalArgumentException if the specified capacity is less than 1","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    public RandomAccessQueue(int capacity) {","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        if (capacity \u003c 1) {","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"            throw new IllegalArgumentException(\"Capacity must be at least 1\");","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        // Suppress unchecked cast warning","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"        E[] a \u003d (E[]) new Object[capacity];","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        elements \u003d a;","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        size \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        head \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        tail \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the specified element to the tail of the queue. If the queue is full,","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"     * the oldest element will be removed from the head of the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"     * @param e the element to add","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"     * @throws IllegalStateException if the queue is full","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast(E e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        if (size \u003d\u003d capacity) {","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"            pollFirst();","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        elements[tail] \u003d e;","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        tail \u003d (tail + 1) % capacity;","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        size++;","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"        // reset the current traversal index","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d tail;","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"     * Removes the first element from the queue and returns it.","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"     * @return the first element in the queue, or null if the queue is empty","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"    public E pollFirst() {","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"        E e \u003d elements[head];","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"        head \u003d (head + 1) % capacity;","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"        size--;","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"        return e;","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the element at the specified index in the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"     * @param index the index of the element to return","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"     * @return the element at the specified index","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"    public E get(int index) {","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + size);","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"        return elements[(head + index) % capacity];","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the number of elements in the queue.","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"     * @return the number of elements in the queue","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"    public int size() {","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"        return size;","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"bachletuankhai"},"content":"     * Traverses up towards the head to the next element in the queue and returns","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":"     * it. If the head of the queue is reached, returns null.","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"     * @return the next element in the queue, or null if the head of the queue is","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"     *         reached","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseUp() {","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"        if (cur \u003d\u003d head) {","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d (cur - 1 + capacity) % capacity;","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"        return elements[cur];","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"     * Traverses down towards the tail to the next element in the queue and returns","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"     * it. If the tail of the queue is reached, returns null.","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"     * @return the next element in the queue, or null if the tail of the queue is","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"     *         reached","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseDown() {","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"        if (cur \u003d\u003d tail) {","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d (cur + 1) % capacity;","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"        E e \u003d elements[cur];","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"        return e;","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"     * Returns whether the queue is empty.","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"     * @return true if the queue is empty, false otherwise","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"        return size \u003d\u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"bachletuankhai":180}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"      \u003cVBox fx:id\u003d\"dialogContainer\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"          \u003cText fx:id\u003d\"dialog\" text\u003d\"Text\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"                  \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"13.0\" right\u003d\"13.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"7.0\" right\u003d\"7.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\"  minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #FFFFFF;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sylvia.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" onKeyPressed\u003d\"#handleKeyPress\" prefHeight\u003d\"41.0\" prefWidth\u003d\"359.0\" promptText\u003d\"Message Sylvia...\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"359.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"41.0\" text\u003d\"\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #FFFFFF;\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bachletuankhai":23}},{"path":"src/test/java/sylvia/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.Todo;","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_validIndex_returnsCorrectResponse() throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        ProgramState programState \u003d new ProgramState();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        Task task \u003d new Todo(\"Sample Task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Integer.toString(index));","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d deleteCommand.execute(taskList, programState);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"Deleted: \" + task + \"\\nYou now have 0 tasks in the list.\", response);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(() -\u003e programState.isNormal());","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_invalidIndex_throwsInvalidTaskIndexException() throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        ProgramState programState \u003d new ProgramState();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        int index \u003d 5;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Integer.toString(index));","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(InvalidTaskIndexException.class, () -\u003e deleteCommand.execute(taskList, programState));","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(() -\u003e programState.isNormal());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_emptyIndex_throwsEmptyTaskDescriptionException() throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        String index \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(EmptyTaskDescriptionException.class, () -\u003e new DeleteCommand(index));","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_nonIntegerIndex_throwsInvalidTaskIndexException() throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        String index \u003d \"abc\";","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(InvalidTaskIndexException.class, () -\u003e new DeleteCommand(index));","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":64}},{"path":"src/test/java/sylvia/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.SylviaException;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"public class EventCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private EventCommand eventCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    private ProgramState programState;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        eventCommand \u003d new EventCommand(\"\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        programState \u003d new ProgramState();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_validEventCommand_addsEventToTaskList() throws SylviaException {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d \"Event description /from 2022-01-01 10:00 /to 2022-01-01 12:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        eventCommand \u003d new EventCommand(body);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d eventCommand.execute(taskList, programState);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(response.contains(\"Added:\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(response.contains(\"Event description\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(programState.isNormal());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_emptyTaskDescription_throwsEmptyTaskDescriptionException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d \"/from 2022-01-01 10:00 /to 2022-01-01 12:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        eventCommand \u003d new EventCommand(body);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(EmptyTaskDescriptionException.class, () -\u003e eventCommand.execute(taskList, programState));","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_emptyStartTime_throwsEmptyDateTimeException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d \"Event description /to 2022-01-01 12:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        eventCommand \u003d new EventCommand(body);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(EmptyDateTimeException.class, () -\u003e eventCommand.execute(taskList, programState));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_emptyEndTime_throwsEmptyDateTimeException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        String body \u003d \"Event description /from 2022-01-01 10:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        eventCommand \u003d new EventCommand(body);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(EmptyDateTimeException.class, () -\u003e eventCommand.execute(taskList, programState));","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":71}},{"path":"src/test/java/sylvia/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.command;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.state.ProgramState;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import sylvia.task.TaskList;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_exitCommand_setsProgramStateToExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"        ProgramState programState \u003d new ProgramState();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        String response \u003d exitCommand.execute(taskList, programState);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"Cya!!\", response);","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(true, programState.isExit());","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":25}},{"path":"src/test/java/sylvia/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public void toString_validTimeFormat_success() throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"        // normal time, not done","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"[D][ ] return book (due: Thu, Feb 1 2024 12:30)\",","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"                new Deadline(\"return book\", \"2024-02-01 12:30\").toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"        // normal time, done","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"[D][X] return book (due: Thu, Feb 1 2024 12:30)\",","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"                new Deadline(\"return book\", \"2024-02-01 12:30\", true).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public void serialize_validTimeFormat_success() throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        // normal time, not done","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"D | 0 | return book | 2024-02-01 12:30\",","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"                new Deadline(\"return book\", \"2024-02-01 12:30\").serialize());","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        // normal time, done","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"D | 1 | return book | 2024-02-01 12:30\",","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"                new Deadline(\"return book\", \"2024-02-01 12:30\", true).serialize());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":29}},{"path":"src/test/java/sylvia/task/TaskDateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class TaskDateTimeTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_validDateTime_returnsTaskDateTime() throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"        String dateTimeString \u003d \"2020-08-25 18:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        TaskDateTime dateTime \u003d new TaskDateTime(dateTimeString);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"Tue, Aug 25 2020 18:00\", dateTime.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_invalidDateTime_throwsSylviaDateTimeParseException() {","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        String dateTimeString \u003d \"2020-08-25 18:00:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(SylviaDateTimeParseException.class, () -\u003e new TaskDateTime(dateTimeString));","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    public void serialize_validTaskDateTime_returnsSerializedString() throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        TaskDateTime dateTime \u003d new TaskDateTime(\"2020-08-25 18:00\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        String serializedString \u003d dateTime.serialize();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"2020-08-25 18:00\", serializedString);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":41}},{"path":"src/test/java/sylvia/task/TaskListParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public class TaskListParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_validFile_returnsTaskList()","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"            throws IOException, InvalidDataFormatException, SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        File file \u003d new File(\"./data/sylvia.txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        // Add some tasks to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"T | 0 | read book\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"D | 0 | return book | 2024-02-01 18:00\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"E | 0 | project meeting | 2024-02-01 14:00 | 2024-02-01 16:00\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        TaskList taskList \u003d TaskListParser.parse(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"[T][ ] read book\", taskList.get(0).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"[D][ ] return book (due: Thu, Feb 1 2024 18:00)\", taskList.get(1).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"[E][ ] project meeting (at: Thu, Feb 1 2024 14:00 - Thu, Feb 1 2024 16:00)\",","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"                taskList.get(2).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_invalidFile_throwsInvalidDataFormatException() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        File file \u003d new File(\"./data/sylvia.txt\");","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        // Add some tasks to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        FileWriter writer \u003d new FileWriter(file, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"E | 0 | project meeting | 2020-08-26 14:00 | 2020-08-26 16:00\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"E | 0 | project meeting | 2020-08-26 14:00\\n\"); // Missing end time","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"D | 0 | return book \\n\"); // Missing due time","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        writer.write(\"T \\n\"); // Random invalid line","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(InvalidDataFormatException.class, () -\u003e TaskListParser.parse(file));","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    public void serialize_validTaskList_returnsSerializedString() throws SylviaDateTimeParseException {","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        // Add tasks to the task list","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        taskList.addTask(new Todo(\"read book\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        taskList.addTask(new Deadline(\"return book\", \"2020-08-25 18:00\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        taskList.addTask(new Event(\"project meeting\", \"2020-08-26 14:00\", \"2020-08-26 16:00\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        String serializedString \u003d TaskListParser.serialize(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(\"T | 0 | read book\\n\" + \"D | 0 | return book | 2020-08-25 18:00\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"                + \"E | 0 | project meeting | 2020-08-26 14:00 | 2020-08-26 16:00\\n\", serializedString);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"bachletuankhai":76}},{"path":"src/test/java/sylvia/util/RandomAccessQueueTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package sylvia.util;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class RandomAccessQueueTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private RandomAccessQueue\u003cInteger\u003e queue;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"        queue \u003d new RandomAccessQueue\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast_singleElement_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        int element \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element);","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element, queue.get(0));","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast_multipleElements_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        int element1 \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        int element2 \u003d 24;","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element1);","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element2);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element1, queue.get(0));","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element2, queue.get(1));","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast_fullQueue_oldestElementRemoved() {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        int element1 \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        int element2 \u003d 24;","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        int element3 \u003d 12;","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        RandomAccessQueue\u003cInteger\u003e queueCus \u003d new RandomAccessQueue\u003c\u003e(2);","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        queueCus.addLast(element1);","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        queueCus.addLast(element2);","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        queueCus.addLast(element3);","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element2, queueCus.get(0));","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element3, queueCus.get(1));","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queueCus.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    public void pollFirst_emptyQueue_returnsNull() {","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        Integer result \u003d queue.pollFirst();","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    public void pollFirst_singleElement_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        int element \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element);","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        Integer result \u003d queue.pollFirst();","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(0, queue.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"    public void get_invalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e queue.get(index));","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"    public void get_validIndex_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        int element1 \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"        int element2 \u003d 24;","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element1);","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element2);","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"        int result \u003d queue.get(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element2, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"    public void size_emptyQueue_returnsZero() {","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"        int result \u003d queue.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(0, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"    public void size_nonEmptyQueue_returnsCorrectSize() {","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"        int element1 \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"        int element2 \u003d 24;","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element1);","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element2);","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"        int result \u003d queue.size();","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"    public void traverseUp_emptyQueue_returnsNull() {","lastModifiedDate":"2024-02-23"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"        Integer result \u003d queue.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"    public void traverseUp_singleElement_returnsElement() {","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"        int element \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element);","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"        Integer result \u003d queue.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"    public void traverseUp_multipleElements_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"        int element1 \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"        int element2 \u003d 24;","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element1);","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element2);","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"        Integer result1 \u003d queue.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"        Integer result2 \u003d queue.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element2, result1);","lastModifiedDate":"2024-02-23"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element1, result2);","lastModifiedDate":"2024-02-23"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"    public void traverseDown_emptyQueue_returnsNull() {","lastModifiedDate":"2024-02-23"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"        Integer result \u003d queue.traverseDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"    public void traverseDown_singleElement_returnsNull() {","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"        int element \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element);","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"        Integer result \u003d queue.traverseDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, result);","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"    public void traverseDown_multipleElements_success() {","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"bachletuankhai"},"content":"        // Arrange","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"bachletuankhai"},"content":"        int element1 \u003d 42;","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"bachletuankhai"},"content":"        int element2 \u003d 24;","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element1);","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(element2);","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"bachletuankhai"},"content":"        // Act","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-02-23"},{"lineNumber":209,"author":{"gitId":"bachletuankhai"},"content":"        Integer result1 \u003d queue.traverseDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":210,"author":{"gitId":"bachletuankhai"},"content":"        Integer result2 \u003d queue.traverseDown();","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"bachletuankhai"},"content":"        // Assert","lastModifiedDate":"2024-02-23"},{"lineNumber":213,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(element2, result1);","lastModifiedDate":"2024-02-23"},{"lineNumber":214,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, result2);","lastModifiedDate":"2024-02-23"},{"lineNumber":215,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":216,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"bachletuankhai":216}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"todo sleep","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"deadline cs2103 /by 2023-09-01 23:59","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"event cs2101 meeting /from 2024-09-12 14:00 /to 2024-09-12 15:00","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"hi","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"bruh","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"bachletuankhai":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"java -classpath ..\\bin Sylvia \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bachletuankhai":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"# Change the current directory to the directory of this script","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"pushd \"$(dirname \"$0\")\" \u003e/dev/null","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"if ! F:/Misc/jdk-11.0.17/bin/javac.exe -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/sylvia/*.java","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"F:/Misc/jdk-11.0.17/bin/java.exe -classpath ../bin Sylvia \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"# copy generated data and delete the generated data folder","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"mv ./data/sylvia.txt ./OUT-DATA.txt","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"rm -r ./data","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    # Change back to the original directory","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    popd \u003e /dev/null","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    # Change back to the original directory","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    popd \u003e /dev/null","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"bachletuankhai":12,"-":37}}]
