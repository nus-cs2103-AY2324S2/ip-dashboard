[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"    id \"com.diffplug.spotless\" version \"6.25.0\"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        showStandardStreams \u003d true","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    mainClass.set(\"cappy.Launcher\")","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    archiveBaseName \u003d \"Cappy\"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"spotless {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    format \u0027misc\u0027, {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        // define the files to apply `misc` to","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        target \u0027*.gradle\u0027, \u0027.gitattributes\u0027, \u0027.gitignore\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        // define the steps to apply to those files","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        trimTrailingWhitespace()","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"        indentWithSpaces()","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        endWithNewline()","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"    java {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        googleJavaFormat().aosp().reflowLongStrings().formatJavadoc(true).reorderImports(true)","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        formatAnnotations()","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Dethada":40,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"# Cappy User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"![Product screenshot](Ui.png)","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"\u003e Hello I\u0027m here to help you manage your tasks! - Cappy","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"Do you have a **hard time**","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"- managing your tasks?","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"- dealing with GUI software?","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"If you do Cappy is the _perfect_ companion for you!","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"~Forget your current task management software.~","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"## Setup instructions 🛠️","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"1. Download the [jar](https://github.com/Dethada/ip/releases/tag/A-Release)","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"2. Make sure java 11 is installed","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"## Usage 📖","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"Run it by double clicking on it. Or run `java -jar Cappy.jar` in the terminal.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"## Commands","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"- Add a Todo Task:","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"   - Syntax: `todo \u003ctask_description\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"   Example: `todo Finish math assignment`","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"- Add a Deadline Task:","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"   - Syntax: `deadline \u003ctask_description\u003e /by \u003cDateTime\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"   - DateTime format: YYYY-MM-DD\u0027T\u0027HH:MM","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"   Example: `deadline Finish math assignment /by 2024-02-14T14:59`","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"- Add an Event Task:","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"   - Syntax: `event \u003ctask_description\u003e /from \u003cDateTime\u003e /to \u003cDateTime\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"   - DateTime format: YYYY-MM-DD\u0027T\u0027HH:MM","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"   Example: `event Math Exam /from 2024-02-14T15:00 /to 2024-02-14T17:00`","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"- List all Tasks:","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"   - Command: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"- Delete a Task:","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"   - Syntax: `delete \u003ctask_id\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"   Example: `delete 2`","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"- Mark Task as Completed:","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"   - Syntax: `mark \u003ctask_id\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"   Example: `mark 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"- Mark Task as not completed:","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"   - Syntax: `unmark \u003ctask_id\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"   Example: `unmark 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"- Find a Task containing a given keyword:","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"   - Syntax: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"   Example: `find math`","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"- Exit Application:","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"   - Syntax: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"- Show Help:","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"   - Syntax: `help`","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"Dethada":47,"-":14}},{"path":"src/main/java/cappy/Cappy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.FilePath.MAIN_WINDOW_FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.FilePath.STORAGE_PATH;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.command.CommandType;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.controller.MainWindow;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import cappy.util.Logger;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":" * The main class of the Cappy application.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Cappy} class is the entry point of the Cappy application. It initializes the","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":" * application components and starts the main input loop to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"public class Cappy extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    private static MainWindow mainWindow;","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    public Cappy() {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"            storage \u003d new Storage(STORAGE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            taskList \u003d TaskList.load(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        } catch (IOException | CappyException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            Logger.error(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"            stage.setTitle(\"Cappy\");","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"            stage.setOnCloseRequest(this::handleExit);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Cappy.class.getResource(MAIN_WINDOW_FXML));","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"            mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"            mainWindow.setCappy(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"            mainWindow.showGreetings();","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"            Logger.error(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    public void handleUserInput(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"            ParsedInput parsedInput \u003d Parser.parse(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"            parsedInput.executeCommand(taskList, mainWindow, storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"            if (parsedInput.getCommandType() \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"                exit();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"            Logger.error(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        } catch (CappyException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"            mainWindow.showError(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    public void handleExit(WindowEvent event) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"        exit();","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"    public static void exit() {","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"            storage.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"            mainWindow.showError(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"            Logger.error(e);","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Dethada":87,"-":2}},{"path":"src/main/java/cappy/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.util.Logger;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.util.Logger.LogLevel;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"/** A launcher class to workaround classpath issues. */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"        Logger.setLogLevel(LogLevel.DEBUG);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"        Application.launch(Cappy.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Dethada":14}},{"path":"src/main/java/cappy/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"/** Represents the command that exits the application. */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"     * Shows an exit message in the user interface.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        ui.showExit();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":28}},{"path":"src/main/java/cappy/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" * Abstract class representing a command in the Cappy application.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Command} class serves as the base class for all specific command implementations.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" * It declares an abstract method {@code execute} that must be implemented by concrete subclasses.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" * Each concrete command class encapsulates a specific operation that can be performed.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * Executes the command with the provided task list, user interface, storage, and parsed input.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":31}},{"path":"src/main/java/cappy/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":" * Enumeration representing different command types in the Cappy application.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code CommandType} enum encapsulates various command types that can be performed in the","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":" * Cappy application. Each enum value associates a command string with its corresponding concrete","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" * command implementation.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"public enum CommandType {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"    LIST(\"list\", new ListCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    MARK(\"mark\", new MarkCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    UNMARK(\"unmark\", new UnmarkCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    TODO(\"todo\", new TodoCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    DEADLINE(\"deadline\", new DeadlineCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    EVENT(\"event\", new EventCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    DELETE(\"delete\", new DeleteCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    FIND(\"find\", new FindCommand()),","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    BYE(\"bye\", new ByeCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    HELP(\"help\", new HelpCommand()),","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    EMPTY(\"\", new EmptyCommand()),","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    INVALID(\"\", new InvalidCommand());","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    private Command command;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    private String commandString;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    private CommandType(String commandString, Command command) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"     * Returns the string representation of this enum value.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"     * @return The string representation of this enum value.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public String getCommandString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        return this.commandString;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    public Command getCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        return this.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * Converts a string to a CommandType. INVALID will be the CommandType returned if there are no","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     * other matches.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"     * @param commandString The string to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"     * @return The CommandType of the given string.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    public static CommandType fromString(String commandString) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        for (CommandType command : CommandType.values()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"            if (command.getCommandString().equals(commandString)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"                return command;","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        return INVALID;","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":60}},{"path":"src/main/java/cappy/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_DATETIME_FORMAT;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_DESCRIPTION;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_DUE_DATE;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import cappy.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"/** Represents a command to add a new Deadline task to the task list. */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private static final String PREFIX_BY \u003d \"by\";","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * Adds a new Deadline task to the task list, and notify the user through the UI.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_DESCRIPTION);","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        } else if (!input.hasNamedArgument(PREFIX_BY)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_DUE_DATE);","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        String description \u003d String.join(\" \", input.getPositionalArguments());","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        String dueString \u003d input.getNamedArgument(PREFIX_BY);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"            LocalDateTime due \u003d Parser.parseDateTime(dueString);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"            Deadline task \u003d new Deadline(description, due);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"            ui.showAddedTask(task, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"            tasks.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(INVALID_DATETIME_FORMAT);","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":53}},{"path":"src/main/java/cappy/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_INDEX;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_INDEX;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"/** Represents a command to delete a task from the task list. */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * Deletes the task at the given index from the task list, and notify the user through the UI.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * The index is retrieved from the parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        String indexStr \u003d input.getPositionalArgument(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"            if (!tasks.validIndex(index)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"                throw new CappyException(INVALID_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"            tasks.removeTask(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"            String[] messages \u003d {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"                task.toString(),","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            };","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"            ui.show(messages);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"            tasks.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(INVALID_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":53}},{"path":"src/main/java/cappy/command/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"/** Represents an empty command that does nothing. */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"     * An empty command does nothing.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {}","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":26}},{"path":"src/main/java/cappy/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_DATETIME_FORMAT;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_DESCRIPTION;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_TO_FROM_DATETIME;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import cappy.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"/** Represents a command to add an Event task to the task list. */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private static final String PREFIX_FROM \u003d \"from\";","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    private static final String PREFIX_TO \u003d \"to\";","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * Adds a new Event task to the task list, and notify the user through the UI.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_DESCRIPTION);","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        } else if (!input.hasNamedArgument(PREFIX_FROM) || !input.hasNamedArgument(PREFIX_TO)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_TO_FROM_DATETIME);","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        String description \u003d String.join(\" \", input.getPositionalArguments());","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        String fromString \u003d input.getNamedArgument(PREFIX_FROM);","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        String toString \u003d input.getNamedArgument(PREFIX_TO);","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            LocalDateTime from \u003d Parser.parseDateTime(fromString);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"            LocalDateTime to \u003d Parser.parseDateTime(toString);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"            Event task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"            ui.showAddedTask(task, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"            tasks.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(INVALID_DATETIME_FORMAT);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":56}},{"path":"src/main/java/cappy/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_KEYWORD;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.NO_MATCHES_FOUND;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"/** Represents a command to find tasks in the task list. */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_KEYWORD);","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        String keyword \u003d input.getPositionalArgument(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"        TaskList results \u003d tasks.search(keyword);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"            ui.show(NO_MATCHES_FOUND);","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"            String[] messages \u003d new String[results.size() + 1];","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"            messages[0] \u003d \" Here are the matching tasks in your list:\";","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"            System.arraycopy(results.toString().split(\"\\n\"), 0, messages, 1, results.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            ui.show(messages);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Dethada":33}},{"path":"src/main/java/cappy/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.HELP;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"/** Represents a help command entered by the user. */","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * Shows the message for invalid command entered in the user interface.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        ui.show(HELP);","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Dethada":30}},{"path":"src/main/java/cappy/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_COMMAND;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"/** Represents an invalid command entered by the user. */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * Shows the message for invalid command entered in the user interface.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        ui.show(INVALID_COMMAND);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":30}},{"path":"src/main/java/cappy/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"/** Represents a command to list all tasks in the task list. */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"     * Shows the tasks currently in the task list through the UI.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        String[] messages \u003d new String[tasks.size() + 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"        messages[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        System.arraycopy(tasks.toString().split(\"\\n\"), 0, messages, 1, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        ui.show(messages);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":31}},{"path":"src/main/java/cappy/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_INDEX;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_INDEX;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"/** Represents a command to mark a task as complete. */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * Marks the task at the given index from the task list as completed, and notify the user","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * through the UI. The index is retrieved from the parsed user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        String indexStr \u003d input.getPositionalArgument(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"            if (!tasks.validIndex(index)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"                throw new CappyException(INVALID_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"            tasks.getTask(index).done();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            String[] messages \u003d {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"                \"Nice! I\u0027ve marked this task as done:\", tasks.getTask(index).toString()","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"            };","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"            ui.show(messages);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"            tasks.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(INVALID_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":49}},{"path":"src/main/java/cappy/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_DESCRIPTION;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.Todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"/** Represents a command to add a new Todo task to the task list. */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * Adds a new Todo task to the task list, and notify the user through the UI.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_DESCRIPTION);","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        String description \u003d String.join(\" \", input.getPositionalArguments());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        Todo task \u003d new Todo(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        ui.showAddedTask(task, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        tasks.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":38}},{"path":"src/main/java/cappy/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_INDEX;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.MISSING_INDEX;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.parser.ParsedInput;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"/** Represents a command to mark a task as incomplete. */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * Marks the task at the given index from the task list as incomplete, and notify the user","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     * through the UI. The index is retrieved from the parsed user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"     * @param tasks The task list that stores the tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"     * @param ui The user interface for interaction with the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage for reading and writing task data.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     * @param input The parsed user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If there is an application-specific exception during task execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs while interacting with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage, ParsedInput input)","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        if (input.numberOfPositionalArguments() \u003c 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(MISSING_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        String indexStr \u003d input.getPositionalArgument(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"            if (!tasks.validIndex(index)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"                throw new CappyException(INVALID_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"            tasks.getTask(index).undone();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            String[] messages \u003d {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\", tasks.getTask(index).toString()","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"            };","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"            ui.show(messages);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"            tasks.save();","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(INVALID_INDEX);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":49}},{"path":"src/main/java/cappy/constant/FilePath.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.constant;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/** Represents a collection of constant values used in the application. */","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"public class FilePath {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"    public static final String STORAGE_PATH \u003d \"./cappy.csv\";","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"    public static final String MAIN_WINDOW_FXML \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"    public static final String DIALOG_BOX_FXML \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"    public static final String USER_IMAGE_PATH \u003d \"/images/User.png\";","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"    public static final String CAPPY_IMAGE_PATH \u003d \"/images/Cappy.png\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Dethada":11}},{"path":"src/main/java/cappy/constant/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.constant;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/** Represents the error messages that can be shown to the user. */","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"public class Message {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"    public static final String MISSING_DESCRIPTION \u003d \"Please enter the task description\";","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"    public static final String MISSING_DUE_DATE \u003d","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"            \"Please specify the due date of the deadline task using /by [Date Time].\";","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"    public static final String MISSING_TO_FROM_DATETIME \u003d","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"            \"Please specify the duration of the event using /from [Date Time] /to [Date Time].\";","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"    public static final String MISSING_KEYWORD \u003d \"Please enter a keyword to search for.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"    public static final String MISSING_INDEX \u003d \"Please enter an index.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_DATETIME_FORMAT \u003d \"Please use the correct datetime format.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_INDEX \u003d \"Please enter a valid index.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_COMMAND \u003d \"I\u0027m sorry but I don\u0027t know what that means :-(\";","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    public static final String INVALID_STORAGE_FORMAT \u003d \"Invalid storage format!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    public static final String NO_MATCHES_FOUND \u003d \"No matches found :(\";","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    public static final String GREETING \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"            \"Hello! I\u0027m Cappy\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"                    + \"What can I do for you?\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"                    + \"(Type `help` for list of commands and how to use them)\";","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    public static final String GOODBYE \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    public static final String HELP \u003d","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"            \"Cappy to the rescue! Here are the available commands:\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"                + \"- Add a Todo Task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `todo \u003ctask_description\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `todo Finish math assignment`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"                + \"- Add a Deadline Task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `deadline \u003ctask_description\u003e /by \u003cDateTime\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"                + \"   - DateTime format: YYYY-MM-DD\u0027T\u0027HH:MM\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `deadline Finish math assignment /by 2024-02-14T14:59`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"                + \"- Add an Event Task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `event \u003ctask_description\u003e /from \u003cDateTime\u003e /to \u003cDateTime\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"                + \"   - DateTime format: YYYY-MM-DD\u0027T\u0027HH:MM\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `event Math Exam /from 2024-02-14T15:00 /to 2024-02-14T17:00`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"                + \"- List all Tasks:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"                + \"   - Command: `list`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"                + \"- Delete a Task:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `delete \u003ctask_id\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `delete 2`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"                + \"- Mark Task as Completed:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `mark \u003ctask_id\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `mark 1`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"                + \"- Mark Task as not completed:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `unmark \u003ctask_id\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `unmark 1`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"                + \"- Find a Task containing a given keyword:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `find \u003ckeyword\u003e`\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"                + \"   Example: `find math`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"                + \"- Exit Application:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `bye`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"                + \"- Show Help:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"                + \"   - Syntax: `help`\\n\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"                + \"Feel free to use these commands to manage your tasks efficiently! If you have\"","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"                + \" any questions, type `help` to see this message again.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"Dethada":58}},{"path":"src/main/java/cappy/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.controller;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.FilePath.DIALOG_BOX_FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    @FXML private Label dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    @FXML private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(DIALOG_BOX_FXML));","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    /** Flips the dialog box such that the ImageView is on the left and text on the right. */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    public static DialogBox getCappyDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Dethada":58}},{"path":"src/main/java/cappy/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.controller;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.FilePath.CAPPY_IMAGE_PATH;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.FilePath.USER_IMAGE_PATH;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.GOODBYE;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.GREETING;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.Cappy;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"/** Controller for MainWindow. Provides the layout for the other controls. */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"public class MainWindow extends AnchorPane implements Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    @FXML private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    @FXML private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    @FXML private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    private Cappy cappy;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_PATH));","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(CAPPY_IMAGE_PATH));","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    public void setCappy(Cappy c) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        assert c !\u003d null : \"Cannot set cappy to be null!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        cappy \u003d c;","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Cappy\u0027s reply and","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        userShow(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        cappy.handleUserInput(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    public void userShow(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(message, userImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    public void show(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        dialogContainer.getChildren().add(DialogBox.getCappyDialog(message, dukeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"     * Shows the given messages to the user. Each message will be on a newline.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"     * @param messages The String array of messages to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    public void show(String[] messages) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        show(String.join(\"\\n\", messages));","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    public void showError(String error) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        dialogContainer.getChildren().add(DialogBox.getCappyDialog(error, dukeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        dialogContainer.getChildren().add(DialogBox.getCappyDialog(e.getMessage(), dukeImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"     * Shows the newly added task and the current number of tasks in the task list to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"     * @param task The newly added task.","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    public void showAddedTask(Task task, TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        String[] messages \u003d {","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"            \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"            task.toString(),","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"            \"Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"        };","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"        show(messages);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"    /** Shows a greeting message to the user. */","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"    public void showGreetings() {","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"        show(GREETING);","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"    /** Shows a farewell message to the user. */","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"    public void showExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        show(GOODBYE);","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Dethada":108}},{"path":"src/main/java/cappy/error/CappyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.error;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/** Represents an exception specific to Cappy. */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"public class CappyException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"    public CappyException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":8}},{"path":"src/main/java/cappy/parser/ParsedInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.command.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.command.CommandType;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.util.Map;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" * Represents the parsed input from the user command.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code ParsedInput} class encapsulates the parsed information from the user\u0027s input,","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" * including the command type, named arguments, and positional arguments. It provides methods to","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":" * retrieve and interact with the parsed information.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"public class ParsedInput {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    private CommandType commandType;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    private Command command;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    private Map\u003cString, String\u003e namedArguments;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    private List\u003cString\u003e positionalArguments;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public ParsedInput(","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"            CommandType commandType,","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"            Map\u003cString, String\u003e namedArguments,","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"            List\u003cString\u003e positionalArguments) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        this.command \u003d commandType.getCommand();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        this.namedArguments \u003d namedArguments;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        this.positionalArguments \u003d positionalArguments;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        return commandType;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"     * Returns the corresponding value for the named argument. Returns null if the argument does not","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"     * exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     * @param name The name of the argument.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * @return The corresponding value of the argument.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public String getNamedArgument(String name) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        return namedArguments.get(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"     * Returns the value of the positional argument at the specified index. Throws {@code","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"     * IndexOutOfBoundsException} if the specified index is not a valid index.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"     * @param index The index of the positional argument to retrieve.","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"     * @return The value of the positional argument at the specified index.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"     * @throws IndexOutOfBoundsException If the specified index is negative or is greater than or","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"     *     equal to the size of the positional arguments.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    public String getPositionalArgument(int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        return positionalArguments.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    public List\u003cString\u003e getPositionalArguments() {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        return positionalArguments;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"    public int numberOfPositionalArguments() {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        return positionalArguments.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"    public int numberOfNamedArguments() {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        return namedArguments.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"     * Returns true if the named argument exists.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"     * @param name The name of the argument.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"    public boolean hasNamedArgument(String name) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        return namedArguments.containsKey(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage)","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"            throws CappyException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"        command.execute(tasks, ui, storage, this);","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"        if (!(obj instanceof ParsedInput)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"        ParsedInput other \u003d (ParsedInput) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"        return commandType \u003d\u003d other.commandType","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 namedArguments.equals(other.namedArguments)","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"                \u0026\u0026 positionalArguments.equals(other.positionalArguments);","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        return \"ParsedInput(\"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"                + commandType","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"                + \", \"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"                + namedArguments","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"                + \", \"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"                + positionalArguments","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"                + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":112}},{"path":"src/main/java/cappy/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.constant.Message.INVALID_STORAGE_FORMAT;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.command.CommandType;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import cappy.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.task.Todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":" * Handles parsing user input and converting data formats.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Parser} class provides static methods for parsing user input, converting date-time","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":" * strings to LocalDateTime objects, and parsing CSV lines into corresponding task objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    /** The DateTimeFormatter for parsing and formatting date-time strings. */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMAT \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"     * Parses a input String into a ParsedInput object.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"     * @param input The String to be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"     * @return The parsed input as a ParsedInput object.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If the input is not valid.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public static ParsedInput parse(String input) throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        StringTokenizer st \u003d new StringTokenizer(input, \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        int numTokens \u003d st.countTokens();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        if (numTokens \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"            return new ParsedInput(CommandType.EMPTY, new HashMap\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        String commandString \u003d st.nextToken();","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        CommandType command \u003d CommandType.fromString(commandString);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"        if (command \u003d\u003d CommandType.INVALID || command \u003d\u003d CommandType.EMPTY) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"            return new ParsedInput(command, new HashMap\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArguments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"            String token \u003d st.nextToken();","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"            if (token.startsWith(\"/\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"                if (!st.hasMoreTokens()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"                    throw new CappyException(\"Missing value for argument \" + token);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"                namedArguments.put(token.substring(1), st.nextToken());","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"                positionalArguments.add(token);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        return new ParsedInput(command, namedArguments, positionalArguments);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"     * Converts a String into a LocalDateTime object. The expected format is yyyy-MM-dd\u0027T\u0027HH:mm. For","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"     * example, 2023-01-29T14:00.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"     * @param input The string to be converted to a LocalDateTime object.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"     * @return The resulting LocalDateTime object from the conversion.","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"     * @throws DateTimeParseException If the String is not in the expected format.","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"    public static LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        return LocalDateTime.parse(input, DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"     * Converts a LocalDateTime object into a String. The String format is yyyy-MM-dd\u0027T\u0027HH:mm. For","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"     * example, 2023-01-29T14:00.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"     * @param dateTime The LocalDateTime object to be converted to a String.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"     * @return The resulting String from the conversion.","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        return dateTime.format(DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"     * Parses a csv line into a Task object.","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"     * @param csvLine The csv line to be parsed.","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"     * @return The Task object created from the data in the csv line.","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"     * @throws CappyException If the csv line is not in the excpected format.","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"    public static Task parseCsvLine(String csvLine) throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"        String[] data \u003d csvLine.split(\",\");","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"            String type \u003d data[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"            boolean isDone \u003d data[1].equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"            String description \u003d data[2];","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"            if (type.equals(Todo.TYPE_SYMBOL)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"            } else if (type.equals(Deadline.TYPE_SYMBOL)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"                LocalDateTime due \u003d parseDateTime(data[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"                return new Deadline(description, isDone, due);","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"            } else if (type.equals(Event.TYPE_SYMBOL)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"                LocalDateTime from \u003d parseDateTime(data[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"                LocalDateTime to \u003d parseDateTime(data[4]);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"                return new Event(description, isDone, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"                throw new CappyException(\"Invalid Task Type detected in storage!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"            throw new CappyException(INVALID_STORAGE_FORMAT);","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":116}},{"path":"src/main/java/cappy/storage/CsvFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/** This interface defines methods for handling CSV format. */","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"public interface CsvFormat {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"    /** Returns the CSV string representation of this object. */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"    public String toCsv();","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Dethada":7}},{"path":"src/main/java/cappy/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.util.Logger;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" * Manages storage operations for the task management system.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Storage} class provides functionality for creating, reading, and writing to a","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" * specified file path. It supports operations such as emptying the content, writing a line to the","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" * end of the storage, and reading all content from the storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003e\u003cstrong\u003eFile Path:\u003c/strong\u003e The path to the file associated with the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"public class Storage implements AutoCloseable {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    private final String path;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    private final File file;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     * Constructs a new Storage object with the specified file path. The file and its parent","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"     * directories will be created if they do not exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"     * @param path The file path for the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs during file or directory creation.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    public Storage(String path) throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        // Reused from https://stackoverflow.com/a/38284744","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        this.writer \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"     * Emptys the content in the storage. The underlying file will be overwritten to contain","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     * nothing.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public void empty() throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        close();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        FileWriter fileWriter \u003d new FileWriter(file, false);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        fileWriter.write(\"\");","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"        writer \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        Logger.debug(\"Emptied storage\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"     * Writes a line to the end of the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    public void writeLine(String line) throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        writer.write(line);","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        writer.newLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        Logger.debug(\"Wrote line \u0027\" + line + \"\u0027 to storage\");","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"     * Reads all the content from the storage (underlying file) and return it as a string.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"     * @return The string that contains all the content from the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"    public String readAll() throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        String line \u003d reader.readLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"            builder.append(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"            line \u003d reader.readLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        reader.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        Logger.debug(\"Read from storage\");","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        return builder.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"    public void close() throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        writer.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Dethada":91}},{"path":"src/main/java/cappy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" * Represents a deadline task in the task management system.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Deadline} class encapsulates a deadline task with a description and a due date","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" * time.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    /** The type symbol for the Deadline Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    public static final String TYPE_SYMBOL \u003d \"D\";","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    /** The due date time for the Deadline Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    private final LocalDateTime due;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    public Deadline(String description, LocalDateTime due) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime due) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    public String toCsv() {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        return TYPE_SYMBOL","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"                + (super.getDone() ? \"1\" : \"0\")","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"                + super.getDescription()","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"                + Parser.dateTimeToString(due)","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"                + \",\";","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        return \"[\"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"                + TYPE_SYMBOL","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"                + \"]\"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"                + super.toString()","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"                + \" (by: \"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"                + Parser.dateTimeToString(due)","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"                + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        Deadline other \u003d (Deadline) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        return super.equals(other) \u0026\u0026 due.equals(other.due);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Dethada":61}},{"path":"src/main/java/cappy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" * Represents a Event task in the task management system.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Event} class encapsulates a event task with a description and start and end date","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" * time.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    /** The type symbol for the Event Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    public static final String TYPE_SYMBOL \u003d \"E\";","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    /** The starting date time for the Event Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    private final LocalDateTime begin;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    /** The ending date time for the Event Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private final LocalDateTime end;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    public Event(String description, LocalDateTime begin, LocalDateTime end) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    public Event(String description, boolean isDone, LocalDateTime begin, LocalDateTime end) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    public String toCsv() {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        return TYPE_SYMBOL","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"                + (super.getDone() ? \"1\" : \"0\")","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"                + super.getDescription()","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"                + Parser.dateTimeToString(begin)","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"                + Parser.dateTimeToString(end);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        return \"[\"","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"                + TYPE_SYMBOL","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"                + \"]\"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"                + super.toString()","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"                + \" (from: \"","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"                + Parser.dateTimeToString(begin)","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"                + \" to: \"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"                + Parser.dateTimeToString(end)","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"                + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        Event other \u003d (Event) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        return super.equals(other) \u0026\u0026 begin.equals(other.begin) \u0026\u0026 end.equals(other.end);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Dethada":69}},{"path":"src/main/java/cappy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.storage.CsvFormat;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":" * Abstract base class representing a generic task in the task management system.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Task} class provides a common structure for various task types by defining","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" * properties such as description and completion status. It also implements the {@link CsvFormat}","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * interface for conversion to CSV (Comma-Separated Values) format.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003e\u003cstrong\u003eDescription:\u003c/strong\u003e The description of the task, specifying its details or content.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" * \u003cbr\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" * \u003cstrong\u003eCompletion Status:\u003c/strong\u003e The status of the task, indicating whether it is done or not.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"public abstract class Task implements CsvFormat {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"    /** The description for the Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    private String description;","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    /** The status of the Task, true if it is done. */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        return description;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    /** Returns the status of the Task, true if it is done. */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        return isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    /** Sets the status of the task to be done (complete). */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    public void done() {","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"    /** Sets the status of the task to be undone (incomplete). */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    public void undone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        Task other \u003d (Task) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        return description.equals(other.description) \u0026\u0026 isDone \u003d\u003d other.isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Dethada":64}},{"path":"src/main/java/cappy/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.util.Logger;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" * Represents a collection of tasks in the task management system.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code TaskList} class manages a list of tasks and provides operations such as adding,","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" * retrieving, removing tasks, and saving/loading tasks to/from storage. Each task is associated","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" * with a 1-based index within the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"public class TaskList {","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    private TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"        storage \u003d null;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    private TaskList(Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"     * Adds a task to this task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"     * Returns the task at the specified 1-based index.","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     * @param index 1-based index of the task to return.","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * @return the task at the specified 1-based index.","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-20"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-20"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size()","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"                : \"Trying to retireve a value at an invalid index!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"     * Removes the task at the specified 1-based index.","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"     * @param index 1-based index of the task to remove.","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        assert 0 \u003c\u003d index \u0026\u0026 index \u003c tasks.size() : \"Trying to remove a value at an invalid index!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    /** Returns the number of tasks in this task list. */","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    public int size() {","lastModifiedDate":"2024-01-20"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"     * Returns true if the specified index is valid.","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"     * @param index 1-based index to check.","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"     * @return true if the specified index is valid.","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    public boolean validIndex(int index) {","lastModifiedDate":"2024-01-20"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        return index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"     * Saves the current state of the task list to storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"     * @throws IOException If any I/O Error is encountered when saving.","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"    public void save() throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"        if (storage !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"            Logger.debug(\"Saving tasks to storage...\");","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"            storage.empty();","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"                storage.writeLine(task.toCsv());","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"            Logger.debug(\"Storage is not set for this TaskList. Skipping save operation.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"     * Creates a new TaskList using the data stored in the storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"     * @param storage The storage to load data from.","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"     * @return The newly created TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"    public static TaskList load(Storage storage) throws IOException, CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"        assert storage !\u003d null : \"Storage cannot be null!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        String[] csvLines \u003d storage.readAll().split(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        for (String line : csvLines) {","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"            if (!line.equals(\"\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"                taskList.addTask(Parser.parseCsvLine(line));","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"                Logger.debug(\"Skipping empty line in storage.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        Logger.debug(\"Loaded \" + taskList.size() + \" tasks from storage.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"        return taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"     * Returns a new TaskList containing all tasks that match the specified keyword.","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"     * @return A new TaskList containing all tasks that match the specified keyword.","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"    public TaskList search(String keyword) {","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"                taskList.addTask(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"        return taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-20"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"Dethada"},"content":"            sb.append(i + 1).append(\". \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Dethada":141}},{"path":"src/main/java/cappy/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":" * Represents a Todo task in the task management system.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Todo} class encapsulates a event task with a description.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"    /** The type symbol for the Todo Task. */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"    public static final String TYPE_SYMBOL \u003d \"T\";","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    public String toCsv() {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"        return TYPE_SYMBOL","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"                + (super.getDone() ? \"1\" : \"0\")","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"                + \",\"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"                + super.getDescription()","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"                + \",,\";","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        return \"[\" + TYPE_SYMBOL + \"]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"        if (!(obj instanceof Todo)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        Todo other \u003d (Todo) obj;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        return super.equals(other);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Dethada":43}},{"path":"src/main/java/cappy/ui/Terminal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import cappy.util.Logger;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * Terminal class for interacting with the user and displaying messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Terminal} class provides methods for displaying various messages to the user,","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" * including newly added tasks, banners, error messages, greetings, and farewell messages. It","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" * utilizes the {@link Logger} class for outputting messages to the console with a consistent","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" * format.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"public class Terminal implements Ui, AutoCloseable {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    private static final String HORIZONTAL_LINE \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * Reads a line from Standard inupt and return that.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     * @return The line read from stdin.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    public String getInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"     * Shows the newly added task and the current number of tasks in the task list to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"     * @param task The newly added task.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    public void showAddedTask(Task task, TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"        String[] messages \u003d {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"            task.toString(),","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"            \"Now you have \" + tasks.size() + \" tasks in the list.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"        };","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        show(messages);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    /** Shows the Cappy banner to the user. */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    private void showBanner() {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        Logger.print(","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"                \" ██████╗ █████╗ ██████╗ ██████╗ ██╗   ██╗\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"                        + \"██╔════╝██╔══██╗██╔══██╗██╔══██╗╚██╗ ██╔╝\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"                        + \"██║     ███████║██████╔╝██████╔╝ ╚████╔╝ \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"                        + \"██║     ██╔══██║██╔═══╝ ██╔═══╝   ╚██╔╝  \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"                        + \"╚██████╗██║  ██║██║     ██║        ██║   \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"                        + \" ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝        ╚═╝   \\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"     * Shows a message to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"     * @since 1.0","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    public void show(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"        Logger.print(INDENT + HORIZONTAL_LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        Logger.print(INDENT + \" \" + message);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        Logger.print(INDENT + HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"     * Shows the given messages to the user. Each message will be on a newline.","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"     * @param messages The String array of messages to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"    public void show(String[] messages) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        Logger.print(INDENT + HORIZONTAL_LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"        for (String msg : messages) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"            Logger.print(INDENT + \" \" + msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        Logger.print(INDENT + HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"     * Shows an error message to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"        Logger.error(message);","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"     * Shows an exception to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"     * @param exception The exception to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    public void showError(Exception exception) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"        Logger.error(exception.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"    /** Shows a greeting message to the user. */","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"    public void showGreetings() {","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"        showBanner();","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        String[] messages \u003d {\"Hello! I\u0027m Cappy\", \"What can I do for you?\"};","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        show(messages);","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"    /** Shows a farewell message to the user. */","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"    public void showExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"        show(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"    public void close() {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"        scanner.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Dethada":117}},{"path":"src/main/java/cappy/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import cappy.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import cappy.task.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":" * User Interface (Ui) interface for interacting with the user and displaying messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Ui} interface provides methods for displaying various messages to the user,","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * including newly added tasks, banners, error messages, greetings, and farewell messages.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"public interface Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"     * Shows the newly added task and the current number of tasks in the task list to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"     * @param task The newly added task.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"     * @param tasks The current TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"    public void showAddedTask(Task task, TaskList tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"     * Shows a message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"     * @since 1.0","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public void show(String message);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"     * Shows the given messages to the user. Each message will be on a newline.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"     * @param messages The String array of messages to be displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"    public void show(String[] messages);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"     * Shows an error message to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"     * @param message The error message to be displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"    public void showError(String message);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"     * Shows an exception to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"     * @param exception The exception to be displayed.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public void showError(Exception exception);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    /** Shows a greeting message to the user. */","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"    public void showGreetings();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"    /** Shows a farewell message to the user. */","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    public void showExit();","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":55}},{"path":"src/main/java/cappy/util/Logger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.util;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":" * Utility class for logging messages at different log levels.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe {@code Logger} class provides methods to log messages at various log levels, allowing","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":" * developers to control the granularity of logging based on the severity of messages. The supported","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":" * log levels include DEBUG, INFO, WARN, and ERROR.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003e\u003cstrong\u003eLog Levels:\u003c/strong\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":" * \u003cul\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":" *   \u003cli\u003e{@code DEBUG}: Fine-grained debugging information. Typically used for diagnosing issues","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":" *       during development.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":" *   \u003cli\u003e{@code INFO}: General information about the application\u0027s state or significant events. Used","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":" *       for informative purposes.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":" *   \u003cli\u003e{@code WARN}: Warning messages indicating potential issues that may require attention but","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":" *       do not disrupt normal operation.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":" *   \u003cli\u003e{@code ERROR}: Critical error messages indicating a failure or issue that requires","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":" *       immediate attention.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":" * \u003cp\u003eThe log level can be dynamically set using the {@link #setLogLevel(LogLevel)} method.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"public class Logger {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    /** Enumeration representing different log levels. */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    public enum LogLevel {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"        /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"         * Fine-grained debugging information. Typically used for diagnosing issues during","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"         * development.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"         */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        DEBUG,","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        /**","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"         * General information about the application\u0027s state or significant events. Used for","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"         * informative purposes.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"         */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"        INFO,","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        /**","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"         * Warning messages indicating potential issues that may require attention but do not","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"         * disrupt normal operation.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"         */","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        WARN,","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        /**","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"         * Critical error messages indicating a failure or issue that requires immediate attention.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"         */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        ERROR","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    private static LogLevel logLevel \u003d LogLevel.INFO;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"     * Sets the log level for the Logger.","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"     * \u003cp\u003eMessages below the specified log level will not be printed.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"     * @param logLevel The desired log level.","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"    public static void setLogLevel(LogLevel logLevel) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        Logger.logLevel \u003d logLevel;","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"     * Prints a general message to the standard output.","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"    public static void print(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"     * Logs a debug message to the error stream if the log level allows it.","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"     * @param message The debug message to be logged.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    public static void debug(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"        if (Logger.logLevel.compareTo(LogLevel.DEBUG) \u003c\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"            System.err.println(\"[DEBUG] \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"     * Logs an info message to the standard output if the log level allows it.","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"     * @param message The info message to be logged.","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    public static void info(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        if (Logger.logLevel.compareTo(LogLevel.INFO) \u003c\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"            System.out.println(\"[INFO] \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"     * Logs a warning message to the error stream if the log level allows it.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"     * @param message The warning message to be logged.","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"    public static void warn(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"        if (Logger.logLevel.compareTo(LogLevel.WARN) \u003c\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"            System.err.println(\"[WARN] \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"     * Logs an error message to the error stream.","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"     * @param message The error message to be logged.","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"    public static void error(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        System.err.println(\"[ERROR] \" + message);","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"     * Logs an exception to the error stream.","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"     * @param exception The exception to be logged.","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"    public static void error(Exception exception) {","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"        System.err.println(\"[ERROR] \" + exception.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"Dethada":124}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"\u003c!-- Fix for text truncation inspired by https://github.com/dillontkh/ip/blob/master/src/main/resources/view/DialogBox.fxml --\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Dethada":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"cappy.controller.MainWindow\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"  AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    \u003c!-- Solution below inspired by https://stackoverflow.com/a/15224445 --\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" \u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Dethada":20}},{"path":"src/test/java/cappy/parser/ParsedInputTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import cappy.command.CommandType;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import java.util.Map;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"public class ParsedInputTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"    public void numberOfPositionalArguments() {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"        String[] args \u003d {\"arg1\", \"arg2\", \"arg3\"};","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"        for (String arg : args) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"            positionalArgs.add(arg);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"            ParsedInput parsedInput \u003d new ParsedInput(CommandType.EMPTY, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"            assertEquals(positionalArgs.size(), parsedInput.numberOfPositionalArguments());","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"    public void numberOfNamedArguments() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e iterNamedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        namedArgs.put(\"option1\", \"value1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        namedArgs.put(\"option2\", \"value2\");","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"        namedArgs.put(\"option3\", \"value3\");","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"        for (Map.Entry\u003cString, String\u003e entry : namedArgs.entrySet()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"            iterNamedArgs.put(entry.getKey(), entry.getValue());","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"            ParsedInput parsedInput \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"                    new ParsedInput(CommandType.EMPTY, iterNamedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"            assertEquals(iterNamedArgs.size(), parsedInput.numberOfNamedArguments());","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    public void hasNamedArgument() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"        namedArgs.put(\"option1\", \"value1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(CommandType.EMPTY, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        assertEquals(true, parsedInput.hasNamedArgument(\"option1\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        assertEquals(false, parsedInput.hasNamedArgument(\"option2\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"    public void getNamedArgument() {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        namedArgs.put(\"option1\", \"value1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(CommandType.EMPTY, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"        assertEquals(\"value1\", parsedInput.getNamedArgument(\"option1\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"        assertEquals(null, parsedInput.getNamedArgument(\"option2\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    public void getPositionalArgument() {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"        positionalArgs.add(\"arg1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(CommandType.EMPTY, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        assertEquals(\"arg1\", parsedInput.getPositionalArgument(0));","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"\", parsedInput.getPositionalArgument(1));","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"            fail();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":78}},{"path":"src/test/java/cappy/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.parser.Parser.DATE_TIME_FORMAT;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"import cappy.command.CommandType;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import cappy.error.CappyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"import cappy.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"import cappy.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"import cappy.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"import cappy.task.Todo;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Dethada"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime DUE \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Dethada"},"content":"            LocalDateTime.parse(\"2023-01-29T12:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime FROM \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Dethada"},"content":"            LocalDateTime.parse(\"2023-01-29T12:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Dethada"},"content":"    private static final LocalDateTime TO \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Dethada"},"content":"            LocalDateTime.parse(\"2023-01-30T14:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Dethada"},"content":"    public void parse_emptyString() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Dethada"},"content":"        ParsedInput expectedParsedInput \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Dethada"},"content":"                new ParsedInput(CommandType.EMPTY, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Dethada"},"content":"        assertEquals(expectedParsedInput, Parser.parse(\"\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Dethada"},"content":"    public void parse_invalidCommand() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Dethada"},"content":"        ParsedInput expectedParsedInput \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Dethada"},"content":"                new ParsedInput(CommandType.INVALID, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Dethada"},"content":"        assertEquals(expectedParsedInput, Parser.parse(\"nonExistentCommand\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Dethada"},"content":"    public void parse_missingValueForOption() {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Dethada"},"content":"        ParsedInput expectedParsedInput \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Dethada"},"content":"                new ParsedInput(CommandType.DEADLINE, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Dethada"},"content":"            assertEquals(expectedParsedInput, Parser.parse(\"deadline description /by\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Dethada"},"content":"            fail();","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Dethada"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"Missing value for argument /by\", e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Dethada"},"content":"            assertEquals(expectedParsedInput, Parser.parse(\"deadline description /by \"));","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Dethada"},"content":"            fail();","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Dethada"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"Missing value for argument /by\", e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Dethada"},"content":"    public void parse_valueForOption() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Dethada"},"content":"        namedArgs.put(\"by\", \"2023-01-29T12:00\");","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Dethada"},"content":"        positionalArgs.add(\"description\");","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Dethada"},"content":"        ParsedInput expectedParsedInput \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Dethada"},"content":"                new ParsedInput(CommandType.DEADLINE, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Dethada"},"content":"        assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Dethada"},"content":"                expectedParsedInput, Parser.parse(\"deadline description /by 2023-01-29T12:00\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Dethada"},"content":"    public void parse_positionalArg() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"Dethada"},"content":"        HashMap\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Dethada"},"content":"        ArrayList\u003cString\u003e positionalArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"Dethada"},"content":"        positionalArgs.add(\"description\");","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"Dethada"},"content":"        ParsedInput expectedParsedInput \u003d","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Dethada"},"content":"                new ParsedInput(CommandType.TODO, namedArgs, positionalArgs);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Dethada"},"content":"        assertEquals(expectedParsedInput, Parser.parse(\"todo description\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Dethada"},"content":"    public void parseCsvLine_todo() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Dethada"},"content":"        String csvLine \u003d \"T,0,description,,\";","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Dethada"},"content":"        Todo todo \u003d new Todo(\"description\", false);","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Dethada"},"content":"        assertEquals(todo, Parser.parseCsvLine(csvLine));","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"Dethada"},"content":"    public void parseCsvLine_deadline() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"Dethada"},"content":"        String csvLine \u003d \"D,0,description,2023-01-29T12:00,\";","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"Dethada"},"content":"        Deadline deadline \u003d new Deadline(\"description\", false, DUE);","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Dethada"},"content":"        assertEquals(deadline, Parser.parseCsvLine(csvLine));","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Dethada"},"content":"    public void parseCsvLine_event() throws CappyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Dethada"},"content":"        String csvLine \u003d \"E,0,description,2023-01-29T12:00,2023-01-30T14:00\";","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Dethada"},"content":"        Event event \u003d new Event(\"description\", false, FROM, TO);","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Dethada"},"content":"        assertEquals(event, Parser.parseCsvLine(csvLine));","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Dethada"},"content":"    public void parseCsvLine_missingField() {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Dethada"},"content":"        String csvLine \u003d \"T,0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Dethada"},"content":"        Task task \u003d new Todo(\"description\", false);","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Dethada"},"content":"            assertEquals(task, Parser.parseCsvLine(csvLine));","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Dethada"},"content":"            fail();","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"Dethada"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"Invalid storage format!\", e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Dethada"},"content":"        csvLine \u003d \"D,0,description,\";","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"Dethada"},"content":"        task \u003d new Deadline(\"description\", false, DUE);","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"Dethada"},"content":"            assertEquals(task, Parser.parseCsvLine(csvLine));","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Dethada"},"content":"            fail();","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Dethada"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"Invalid storage format!\", e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"Dethada"},"content":"    public void parseCsvLine_invalidDateFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Dethada"},"content":"        String csvLine \u003d \"D,0,description,invalid date,\";","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Dethada"},"content":"        Deadline task \u003d new Deadline(\"description\", false, DUE);","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"Dethada"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"Dethada"},"content":"            assertEquals(task, Parser.parseCsvLine(csvLine));","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"Dethada"},"content":"            fail();","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"Dethada"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"Dethada"},"content":"            assertEquals(\"Invalid storage format!\", e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"Dethada"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":141}},{"path":"src/test/java/cappy/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Dethada"},"content":"package cappy.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Dethada"},"content":"import static cappy.parser.Parser.DATE_TIME_FORMAT;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Dethada"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Dethada"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Dethada"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Dethada"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Dethada"},"content":"public class EventTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Dethada"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Dethada"},"content":"    public void testStringConversion() {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Dethada"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2023-01-29T12:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Dethada"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2023-01-30T14:00\", DATE_TIME_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Dethada"},"content":"        Event event \u003d new Event(\"test\", from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Dethada"},"content":"        assertEquals(\"[E][ ] test (from: 2023-01-29T12:00 to: 2023-01-30T14:00)\", event.toString());","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Dethada"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Dethada"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Dethada":19}}]
