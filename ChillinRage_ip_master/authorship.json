[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"    mainClass.set(\"someboty.someBOTy\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"    archiveBaseName \u003d \"someboty\"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"ChillinRage":2}},{"path":"src/main/java/someboty/Exceptions/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":" * Handles errors caused by user inputs.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"public class InputException extends RuntimeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"    public InputException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":10}},{"path":"src/main/java/someboty/Exceptions/TerminateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":" * A special case Exception that simply stops all pending actions that","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":" * skips straight to closing off the bot.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"public class TerminateException extends RuntimeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"    public TerminateException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":11}},{"path":"src/main/java/someboty/Managers/commandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.TerminateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"import someboty.Tasks.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":" * commandManager acts a command center to process and coordinate the different ","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":" * command inputs with other managers. It also formats the results of each action","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":" * into a string before forwarding it to the ResponseManager.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"public class CommandManager {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    private static final String[] COMMANDS \u003d {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"        \"help\",","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"        \"list\",","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"        \"dateFormats\",","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        \"find\",","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"        \"mark\", ","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"        \"unmark\", ","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        \"delete\",","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        \"clear\",","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"        \"deadline\", ","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"        \"event\", ","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"        \"todo\"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"    private taskManager manager;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for commandManager","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"     * @param taskList The taskManager to coordinate with.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"    public CommandManager(taskManager taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        this.manager \u003d taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"     * Parses user input and forwards desription (if any) to relevant managers to execute command.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"     * @param input Command and description to be executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"     * @return Response output after executing the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"     * @throws TerminateException Thrown only when command input is \"bye\", which closes the application.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"    protected String parse(String input) throws TerminateException{","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"            switch (command) {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"                manager.update();","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"                throw new TerminateException(\"LMAO XD\");","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"            ","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"            case \"list\":","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"                return manager.printListTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"            case \"help\":","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"                return listCommands();","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"            case \"dateFormats\":","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"                return DateManager.PrintDateFormats();","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"            case \"find\":","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"                return findTasks(getDescription(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"                return setTaskStatus(getDescription(input), true);","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"                return setTaskStatus(getDescription(input), false);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"                return deleteTask(getDescription(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"            case \"clear\":","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"                return clearTaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"                return addTask(\u0027T\u0027, getDescription(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"                return addTask(\u0027D\u0027, getDescription(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"            case \"event\":","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"                return addTask(\u0027E\u0027, getDescription(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"            default:","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"                return \"Command not recognized.\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"                    + \"Type \u0027help\u0027 to get the list of valid commands.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChillinRage"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"ChillinRage"},"content":"    private static String listCommands() {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"        String response \u003d \"Here are the list of commands:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"        for (String command : COMMANDS) {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ChillinRage"},"content":"            response +\u003d String.format(\" - %s\\n\", command);","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"ChillinRage"},"content":"        return response;","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"ChillinRage"},"content":"     * Parses input to extract the description.","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ChillinRage"},"content":"     * This method is called only when a command requires description to execute.","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ChillinRage"},"content":"     * @param input String input to be parsed.","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"ChillinRage"},"content":"     * @return Description of the input.","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ChillinRage"},"content":"     * @throws InputException Thrown when input has no description.","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ChillinRage"},"content":"    private static String getDescription(String input) throws InputException {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ChillinRage"},"content":"        String[] listOfStrings \u003d input.trim().split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ChillinRage"},"content":"        String description \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"        if (listOfStrings.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(\"Task description is not recognized.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"ChillinRage"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"ChillinRage"},"content":"        // Join the split words together.","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"ChillinRage"},"content":"        for (int i \u003d 1; i \u003c listOfStrings.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"ChillinRage"},"content":"            description +\u003d listOfStrings[i] + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"ChillinRage"},"content":"        return description.trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"ChillinRage"},"content":"     * Parses description into an integer and forwards it to taskManager to mark/unmark a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"ChillinRage"},"content":"     * @param description Index of the task in the list to be marked/unmarked.","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"ChillinRage"},"content":"     * @param isCompleted Completion status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"ChillinRage"},"content":"     * @return String response after marking/unmarking the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ChillinRage"},"content":"     * @throws InputException Given index is out of the list\u0027s range.","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ChillinRage"},"content":"    private String setTaskStatus(String description, boolean isCompleted) throws InputException{","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ChillinRage"},"content":"        int index;","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"ChillinRage"},"content":"            index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"ChillinRage"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"ChillinRage"},"content":"                \"Unable to determine which task to mark or unmark.\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"ChillinRage"},"content":"                + \"Please use the format: \u0027mark TASK_NUMBER\u0027 or \u0027unmark TASK_NUMBER\u0027\"","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"ChillinRage"},"content":"                );","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"ChillinRage"},"content":"        Task task \u003d this.manager.setTaskStatus(index, isCompleted);","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"ChillinRage"},"content":"        return isCompleted","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"ChillinRage"},"content":"                ? \"Uppzz lah so hardworking!\\n \" + task","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"ChillinRage"},"content":"                : \"O...k... as you wish I guess...!\\n \" + task;","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"ChillinRage"},"content":"     * Parses description into an integer and forwards it to taskManager to delete a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"ChillinRage"},"content":"     * @param description Index of the task in the list to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"ChillinRage"},"content":"     * @return String response after deleting the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"ChillinRage"},"content":"     * @throws InputException Description is not an integer.","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"ChillinRage"},"content":"    private String deleteTask(String description) throws InputException {","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"ChillinRage"},"content":"        int index;","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"ChillinRage"},"content":"            index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"ChillinRage"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"ChillinRage"},"content":"                \"Unable to determine which task to delete.\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"ChillinRage"},"content":"                + \"Please use the format: \u0027mark TASK_NUMBER\u0027 or \u0027unmark TASK_NUMBER\u0027\"","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"ChillinRage"},"content":"                );","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"ChillinRage"},"content":"        Task deletedTask \u003d this.manager.deleteTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"ChillinRage"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"ChillinRage"},"content":"            + String.format(\"  %s\\n\", deletedTask)","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"ChillinRage"},"content":"            + String.format(\"Now you have %d tasks in the list.\", this.manager.getListSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"ChillinRage"},"content":"    private String clearTaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"ChillinRage"},"content":"        this.manager.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"ChillinRage"},"content":"        return \"Huh. Your list is magically gone!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"ChillinRage"},"content":"     * Forwards description to taskManager to create a new task and add to task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"ChillinRage"},"content":"     * @param type Type of the new task, represented as the first character of the actual type.","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"ChillinRage"},"content":"     * @param description Details relevant to the new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"ChillinRage"},"content":"     * @return String response after adding the new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"ChillinRage"},"content":"    private String addTask(char type, String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"ChillinRage"},"content":"        Task newTask \u003d this.manager.addTask(type, description);","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"ChillinRage"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"ChillinRage"},"content":"            + String.format(\"  %s\\n\", newTask)","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"ChillinRage"},"content":"            + String.format(\"Now you have %d tasks in the list.\\n\", this.manager.getListSize())","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"ChillinRage"},"content":"            +\"(Type \u0027list\u0027 to see the full list of tasks)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"ChillinRage"},"content":"     * Forwards description to taskManager to find a new list of tasks matching it.","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"ChillinRage"},"content":"     * Receives the matching list and formats it into a reader friendly format.","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"ChillinRage"},"content":"     * @param description substring used to find matching tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"ChillinRage"},"content":"     * @return String response of the list of matched tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"ChillinRage"},"content":"    private String findTasks(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"ChillinRage"},"content":"        ArrayList\u003cTask\u003e taskList \u003d manager.findTasks(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"ChillinRage"},"content":"        if (taskList.size() \u003d\u003d 0) { // special case for when no matches found","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"ChillinRage"},"content":"            return \"Huh. I couldn\u0027t find anything in this deep lonely abyss...\";","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"ChillinRage"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":218,"author":{"gitId":"ChillinRage"},"content":"        String response \u003d \"Here are the matching tasks I could find I guess...\";","lastModifiedDate":"2024-02-04"},{"lineNumber":219,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":220,"author":{"gitId":"ChillinRage"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"ChillinRage"},"content":"            response +\u003d String.format(\"\\n%d %s\", index, task);","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"ChillinRage"},"content":"            index++;","lastModifiedDate":"2024-02-04"},{"lineNumber":223,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"ChillinRage"},"content":"        return response;","lastModifiedDate":"2024-02-04"},{"lineNumber":226,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":227,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":227}},{"path":"src/main/java/someboty/Managers/dateManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":" * dateManager handles processing and formatting of date and time.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":" * This class does not need to be initialized to use its methods and so","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":" * does not have a constructor.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"public class DateManager {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"    private static final DateTimeFormatter OUT_FORMATT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"    // accepted date formats","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"    private static final String[] DATE_FORMATS \u003d {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"        \"yyyy-MM-dd HHmm\",","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        \"dd-MM-yyyy HHmm\",","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"        \"MM-dd-yyyy HHmm\",","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"        \"dd/MM/yyyy HHmm\",","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        \"MM/dd/yyyy HHmm\",","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        \"yyyy/MM/dd HHmm\",","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"        \"dd MMM yyyy HH:mm\"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"     * Parses a given date into a LocalDateTime object.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"     * @param date Given string date and time","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"     * @return a LocalDateTime object containing the given date.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"     * @throws InputException Given date is not in an acceptable format.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"    public static LocalDateTime parseDate(String date) throws InputException {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"        if (date.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"            date \u003d date + \" 2359\";","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        } ","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        for (String format : DATE_FORMATS) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"                return LocalDateTime.parse(","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"                    date,","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"                    DateTimeFormatter.ofPattern(format)","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"                    );","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"                continue;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"        throw new InputException(\"Sorry, I can\u0027t recognize that date and time format of yours.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"     * Convert a date and time into a more reader-friendly format.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"     * @param date A LocalDateTime object to format.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"     * @return String representation of the date and time.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"    public static String printDate(LocalDateTime date) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"        return date.format(OUT_FORMATT);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"     * Lists out all accepted date and time formats.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"     * @return String representation of the list of accepted date and time formats.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"    public static String PrintDateFormats() {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"        String response \u003d \"Here\u0027s a list of all acceptable date formats:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"        for (String format: DATE_FORMATS) {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"            response \u003d response + \" - \" + format + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"        return response;","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":77}},{"path":"src/main/java/someboty/Managers/fileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"import someboty.Tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"import someboty.Tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"import someboty.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"import someboty.Tasks.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":" * fileManager handles the fetching and storing of a task list","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":" * to/from a \"tasks.csv\" file.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":" * ","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":" * Each task is saved as a row in the file in the following format:","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":" * task type:           E, D, T         [Event, Deadline, ToDo respectively]","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":" * completion status:   0, 1            [1 if completed, else 0]","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":" * task description:    String of words","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":" * deadline:                            [only for tasks of type D]","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":" * start date:                          [only for tasks of type E]","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":" * end date:                            [only for tasks of type E]","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"public class FileManager {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    private String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for fileManager","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"     * @param filePath Path to find the \"data/tasks.csv\" file.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"    public FileManager(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"     * Read saved tasks from the csv file and converts it into a list.","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"     * @return A list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"    public ArrayList\u003cTask\u003e fetchTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"        Scanner scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        Task currentTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        File infile \u003d new File(this.filePath ","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"                    + File.separator + \"data\"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"                    + File.separator + \"tasks.csv\");","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"            // Creates new directory if does not exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"            new File(filePath + File.separator + \"data\").mkdir(); ","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"            ","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"            // Creates new file if it does not exist.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"            infile.createNewFile(); ","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"            scanner \u003d new Scanner(infile);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        } catch (IOException e) { // not supposed to happen.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"            return null;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"            currentTask \u003d lineToTask(scanner.nextLine());","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"        scanner.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        return taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"     * Takes in a list of task and overwrites it into the tasks.csv file.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"     * Note: This method does not append to the file, but overwrites it instead.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"     * @param taskList A list of tasks to be saved into file.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"    public void storeTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"        FileWriter outfile;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"            outfile \u003d new FileWriter(this.filePath","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"                        + File.separator + \"data\"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"                        + File.separator + \"tasks.csv\");","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"        } catch (IOException e) { // honestly idk what to do about this exception","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"            System.out.println(\"Error. Unable to create fileWriter.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"            return;","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"            for (Task task: taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"                outfile.write(task.toCSV());","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"ChillinRage"},"content":"        } catch (IOException e) { // for devs debugging","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"            System.out.println(\"Error. Unable to save tasks to file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"ChillinRage"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(\"Task list successfully saved to file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"            outfile.flush();","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"ChillinRage"},"content":"            outfile.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"            ","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"        } catch (IOException e) { // for devs debugging","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"ChillinRage"},"content":"            System.out.println(\"Error. Unable to close file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"ChillinRage"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"ChillinRage"},"content":"            return;","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"ChillinRage"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ChillinRage"},"content":"     * Parses a row in the csv file into a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"     * @param line A row in the csv file.","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ChillinRage"},"content":"     * @return A task object created from the descriptions parsed.","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ChillinRage"},"content":"    private static Task lineToTask(String line) {","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"        String[] details \u003d line.split(\",\");","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"ChillinRage"},"content":"        String taskType \u003d details[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"ChillinRage"},"content":"        boolean isCompleted \u003d details[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"ChillinRage"},"content":"        String description \u003d details[2];","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"ChillinRage"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"ChillinRage"},"content":"        switch(taskType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"ChillinRage"},"content":"            ","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"ChillinRage"},"content":"        case \"T\":","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"ChillinRage"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"ChillinRage"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"ChillinRage"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"ChillinRage"},"content":"        case \"D\":","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"ChillinRage"},"content":"            String deadline \u003d details[3];","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"ChillinRage"},"content":"            task \u003d new Deadline(description, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"ChillinRage"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"ChillinRage"},"content":"        case \"E\":","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"ChillinRage"},"content":"            String from \u003d details[3];","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"ChillinRage"},"content":"            String to \u003d details[4];","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"ChillinRage"},"content":"            task \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"ChillinRage"},"content":"            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"ChillinRage"},"content":"        task.setStatus(isCompleted);","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"ChillinRage"},"content":"        return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":148}},{"path":"src/main/java/someboty/Managers/responseManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":" * responseManager handles the input and responses to be printed onto the interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":" * ","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":" * This class mainlt deal with how the messages are printed, such as having a line separator","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":" * above and below the input response, while the commandManager deals with the response of ","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":" * each input.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"public class ResponseManager {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    private static final String GREET \u003d \"Wassup! I\u0027m someBOTy.\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"                                    + \"What are you here for?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    private static final String LINE_SEPERATOR \u003d ","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"        \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"    private CommandManager commandCenter;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for responseManager.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"     * @param commandCenter commandCenter to forward inputs and receive response.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    public ResponseManager(CommandManager commandCenter) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"        this.commandCenter \u003d commandCenter;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"     * Prints out a greeting message from the bot to user.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    public static void printGreeting() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(LINE_SEPERATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(GREET);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(LINE_SEPERATOR);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"     * Prints out a farewell message from the bot to user.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(\"Aight. Imma head out.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"     * Prompts user for input and forwards it to the command center.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"     * Then receives a response from it and prints it onto interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"    public void parseInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"        breakLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        String response \u003d commandCenter.parse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(response);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"    protected static void printLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(LINE_SEPERATOR);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    protected static void breakLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":72}},{"path":"src/main/java/someboty/Managers/taskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import someboty.Tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":" * taskManager is a class that handles actions related to tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":" * This includes (but not yet limited to) changing completion status of a task,","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":" * adding new tasks, deleting existing tasks and finding tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":" * ","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":" * The task list will be passed to fileManager to save the list for future sessions.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"public class taskManager {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"    private FileManager files;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for taskManager.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"     * @param files A fileManager object to fetch/save the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"    public taskManager(FileManager files) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"        this.files \u003d files;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"        taskList \u003d this.files.fetchTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"     * Returns the current size of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"     * @return Current size of the task list as an integer.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"    protected int getListSize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"     * Returns a String representation of the formatted task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"     * The task list is formatted to be reader friendly.","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"     * @return","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    protected String printListTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        if (taskList.size() \u003d\u003d 0) {    // special message for empty list","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"            return \"Wow! You have no recorded task! Peek laziness here.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        String response \u003d \"Here are the tasks:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"            index++;","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"            response +\u003d String.format(\"%d. %s\\n\",","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"                            index,","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"                            task","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"                            );","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"        return response;","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"     * Set the completion status of a task in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"     * Status is set to true if the task is marked as completed, else set to false.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"     * @param index The i-th position of the task in the list. (1-indexed)","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"     * @param status The completion status of the task to set.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"     * @return The task in the i-th position on the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"     * @throws InputException If index argument is out of task list\u0027s range.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    protected Task setTaskStatus(int index, boolean status) throws InputException {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"            this.taskList.get(index).setStatus(status);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"            return this.taskList.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"         } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(\"\u003e\u003e\u003e Bruh, there ain\u0027t no task \" + String.valueOf(index + 1));","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"     * @param index The position of the task to be deleted (1-index).","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"     * @return The task that has just been deleted from the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"     * @throws InputException If index argument is out of task list\u0027s range.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"    protected Task deleteTask(int index) throws InputException{","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"            Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"            return removedTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(\"\u003e\u003e\u003e Bruh, there ain\u0027t no task \" + String.valueOf(index + 1));","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ChillinRage"},"content":"     * Removes all existing tasks in the list.","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"ChillinRage"},"content":"    protected void clear() {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"ChillinRage"},"content":"        this.taskList.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"     * Adds a new task into the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ChillinRage"},"content":"     * The type argument is represented using the first character in the full task type.","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"     * @param type The type of the new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"     * @param description Details of the new task, including its name and (if any) dates.","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"ChillinRage"},"content":"     * @return Successfully created new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"ChillinRage"},"content":"    protected Task addTask(char type, String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"ChillinRage"},"content":"        Task newTask \u003d Task.createTask(type, description);","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"ChillinRage"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ChillinRage"},"content":"        return newTask;","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"     * Finds all existing tasks that has matching names with a given substring.","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ChillinRage"},"content":"     * The substring will be case insensitive.","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ChillinRage"},"content":"     * @param substring Substring to match with all task names.","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ChillinRage"},"content":"     * @return A list of tasks with names that contain the substring.","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"    protected ArrayList\u003cTask\u003e findTasks(String substring) {","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"ChillinRage"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"ChillinRage"},"content":"        String taskName;","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"ChillinRage"},"content":"        substring \u003d substring.toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"ChillinRage"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"ChillinRage"},"content":"            taskName \u003d task.toString().toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"ChillinRage"},"content":"            if (taskName.contains(substring)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"ChillinRage"},"content":"                matchList.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"ChillinRage"},"content":"        return matchList;","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"ChillinRage"},"content":"     * Passes the current task list into fileManager to save to file.","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"ChillinRage"},"content":"    protected void update() {","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"ChillinRage"},"content":"        this.files.storeTasks(this.taskList);","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"ChillinRage":145}},{"path":"src/main/java/someboty/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import someboty.Managers.DateManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":" * Handles a task of type \"Deadline\".","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":" * Deadline tasks contains both the description and deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"*/","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    /* --- VARIABLES --- */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"     * @param description Raw description of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"    public Deadline(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"        super(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"        this.formatInput(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"     * @param name Name of the deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"     * @param stringDeadline String representation of the task\u0027s deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"    public Deadline(String name, String stringDeadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"        super(name);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"        this.deadline \u003d DateManager.parseDate(stringDeadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"    protected void formatInput(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"            String stringDeadline \u003d description.split(\"/by \")[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"            this.deadline \u003d DateManager.parseDate(stringDeadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"            // occurs when missing \"/by \" in command","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"                \"Unable to identify the deadline date. Make sure to follow the format:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"                + \"\u0027deadline DESCRIPTION /by VALID_DATE_FORMAT\u0027\"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"                );","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        this.name \u003d description.split(\"/by\")[0].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"    public String toCSV() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"        char status \u003d this.isCompleted()","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"                            ? \u00271\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"                            : \u00270\u0027;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        return String.format(\"D,%c,%s,%s\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"                    status,","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"                    this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"                    DateManager.printDate(this.deadline)","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"                    );","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"        return String.format(\"[D]%s (by: [%s])\", ","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"                    super.toString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"                    DateManager.printDate(this.deadline)","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"                    );","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChillinRage":73}},{"path":"src/main/java/someboty/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import someboty.Managers.DateManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"* Handles a task of type \"Event\".","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"* Event tasks contains the following details:","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"* 1) Description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"* 2) Event start date/time.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"* 3) Event end date/time.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"*/","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    public Event(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        super(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"        this.formatInput(description);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"    public Event(String name, String stringFrom, String stringTo) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"        super(name);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"        this.from \u003d DateManager.parseDate(stringFrom);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"        this.to \u003d DateManager.parseDate(stringTo);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"    protected void formatInput(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"        String stringFrom, stringTo;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"            this.name \u003d description.split(\"/\")[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"            stringFrom \u003d description.split(\"/from \")[1].split(\"/to \")[0].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"            stringTo \u003d description.split(\"/to \")[1].split(\"/from \")[0].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"            throw new InputException(","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"                \"Unable to identify the start and/or end date. Make sure to follow the format:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"                + \"event DESCRIPTION /from START /to END\"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"                );","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"        this.from \u003d DateManager.parseDate(stringFrom);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        this.to \u003d DateManager.parseDate(stringTo);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"    public String toCSV() {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"        char status \u003d this.isCompleted()","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"                            ? \u00271\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"                            : \u00270\u0027;","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        return String.format(\"E,%c,%s,%s,%s\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"                    status,","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"                    this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"                    DateManager.printDate(this.from),","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"                    DateManager.printDate(this.to)","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"                    );","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        return String.format(\"[E]%s (from: [%s], to: [%s])\",","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"                    super.toString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"                    DateManager.printDate(this.from),","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"                    DateManager.printDate(this.to)","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"                    );","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChillinRage":73}},{"path":"src/main/java/someboty/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":" * A abstract class to handle details of a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":" * This class is extended by 3 sub-classes:","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":" * 1) ToDo","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":" * 2) Deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":" * 3) Event","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"    protected String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"     * @param name Name of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"     * Method body to be implemented by child classes.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"     * Parses the description into relevant variables as some subtasks","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"     * contains more than just a name.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"     * @param description Raw description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"    abstract protected void formatInput(String description);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"     * compress task details into a line separated with \u0027,\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"     * The format for all tasks should include:","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"     * - task type:           E, D, T         [Event, Deadline, ToDo respectively]","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"     * - completion status:   0, 1   ","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"     * - task description:    String of words","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"     * specific task types should append other relevant details.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"     * @return a single string line containing its description.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"    abstract public String toCSV();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"    // Get description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"    public String getName() {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        return this.name;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"    // Get task completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"     * Set completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"     * @param status true if completed, false otherwise.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"        return this.isCompleted()","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"            ? \"[X] \" + this.name","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"            : \"[ ] \" + this.name;","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"     * Creates a new task with the given type and description.","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"     * @param type Type of the new task, represented as the first character of the actual type.","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"     * @param description Relevant details of the new task.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"     * @return A new Task object containing the given descriptions.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"    public static Task createTask(char type, String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"        return type \u003d\u003d \u0027T\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"        ? new ToDo(description)","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"        : type \u003d\u003d \u0027D\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        ? new Deadline(description)","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"        : type \u003d\u003d \u0027E\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"        ? new Event(description)","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"        : invalidTaskType();","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"    private static Task invalidTaskType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"        throw new InputException(\"Unknown task type. Check that your command is correct.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ChillinRage":91}},{"path":"src/main/java/someboty/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":" * Handles a task of type \"ToDo\".","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":" * ToDo tasks only contain the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"*/","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"        super(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"        this.formatInput(name);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    protected void formatInput(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"        this.name \u003d description.trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"    public String toCSV() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"        char status \u003d this.isDone","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"                            ? \u00271\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"                            : \u00270\u0027;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        return String.format(\"T,%c,%s\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"                    status,","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"                    this.name);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ChillinRage":33}},{"path":"src/main/java/someboty/someBOTy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.TerminateException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"import someboty.Managers.CommandManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import someboty.Managers.FileManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"import someboty.Managers.ResponseManager;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import someboty.Managers.taskManager;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"// main class for the project","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"public class someBOTy {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"    public someBOTy(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"        // Initialize","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"        FileManager fileManager \u003d new FileManager(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"        taskManager taskManager \u003d new taskManager(fileManager);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"        CommandManager commandCenter \u003d new CommandManager(taskManager);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"        ResponseManager responseManager \u003d new ResponseManager(commandCenter);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"        ResponseManager.printGreeting();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"        while (true) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"                // read input once","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"                responseManager.parseInput(); ","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"            } catch (TerminateException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"                // print farewell message and exit application.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"                ResponseManager.printExitMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"    public static void main(String[] args) { ","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"        String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"        new someBOTy(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"ChillinRage":37}},{"path":"src/test/java/someboty/Managers/dateManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"public class DateManagerTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"    public DateManagerTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"    public void TestValidDates() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"        String[] ValidDates \u003d {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"            \"2020-01-31 2259\",  // yyyy-MM-dd HHmm","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"            \"12-12-1999 2300\",  // dd-MM-yyyy HHmm","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"            \"12-13-6402\",       // MM-dd-yyyy without time","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"            \"02/28/9999 0000\",  // MM/dd/yyyy HHmm","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"            \"0001/12/30\",  // yyyy/MM/dd without time","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"        };","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        String[] expectedDates \u003d {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"            \"31 Jan 2020 22:59\",","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"            \"12 Dec 1999 23:00\",","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"            \"13 Dec 6402 23:59\",","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"            \"28 Feb 9999 00:00\",","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"            \"30 Dec 0001 23:59\",","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"        };","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"        String actual;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"        for (int i \u003d 0; i \u003c expectedDates.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"                actual \u003d DateManager.printDate(DateManager.parseDate(ValidDates[i]));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"            } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"                actual \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"            assertEquals(expectedDates[i], actual);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"    public void TestInvalidDates() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        String[] invalidDates \u003d {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"            \"2020-12-32 2259\",  // invalid day number","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"            \"12-12-1999 2460\",  // invalid hour and minutes","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"            \"13-6402\",          // missing day/month","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"            \"02/28/9999 4pm\",   // use 12-hour time","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"            \"0001/12/3\",        // incorrect length of days","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"            \"2020/1/31\",        // incorrect length of months","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"            \"202/12/3\",         // incorrect length of years","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        };","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"        String expected \u003d \"Sorry, I can\u0027t recognize that date and time format of yours.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        String actual;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"        for (String date : invalidDates) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"                actual \u003d DateManager.printDate(DateManager.parseDate(date));","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"            } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"                actual \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ChillinRage":69}},{"path":"src/test/java/someboty/Managers/taskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"package someboty.Managers;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"import someboty.Exceptions.InputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"public class TaskManagerTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"    private taskManager manager;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"    public TaskManagerTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"ChillinRage"},"content":"    ","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"ChillinRage"},"content":"    public void DummyTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"ChillinRage"},"content":"        System.out.println(\"HELLO! IS THIS WORKING???\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(10,10);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"ChillinRage"},"content":"    public void ToDoTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"ChillinRage"},"content":"        manager \u003d new taskManager(new FileManager(\"taskManagerTestDummy\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"ChillinRage"},"content":"        String actual1 \u003d manager.addTask(\u0027T\u0027, \"Lord of the Bing Chillings\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"ChillinRage"},"content":"        String expected1 \u003d \"[T][ ] Lord of the Bing Chillings\";","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected1, actual1);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"ChillinRage"},"content":"        String actual2 \u003d manager.addTask(\u0027T\u0027, \"  With trail and lead spaces   \").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"ChillinRage"},"content":"        String expected2 \u003d \"[T][ ] With trail and lead spaces\";","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected2, actual2);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"ChillinRage"},"content":"    public void DeadlineTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"ChillinRage"},"content":"        manager \u003d new taskManager(new FileManager(\"taskManagerTestDummy\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"ChillinRage"},"content":"        String actual1;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"ChillinRage"},"content":"        String expected1 \u003d \"[D][ ] 1st Test (by: [15 Mar 2024 06:10])\";","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"ChillinRage"},"content":"            actual1 \u003d manager.addTask(\u0027D\u0027, \"1st Test /by 03-15-2024 0610\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"ChillinRage"},"content":"            actual1 \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected1, actual1);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"ChillinRage"},"content":"        String actual2;","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"ChillinRage"},"content":"        String expected2 \u003d \"[D][ ] 2nd Test (by: [15 Mar 2024 23:59])\";","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"ChillinRage"},"content":"            actual2 \u003d manager.addTask(\u0027D\u0027, \"2nd Test /by 15-03-2024\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"ChillinRage"},"content":"            actual2 \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected2, actual2);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"ChillinRage"},"content":"        String actual3;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"ChillinRage"},"content":"        String expected3 \u003d \"Unable to identify the deadline date. Make sure to follow the format:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"ChillinRage"},"content":"                        + \"\u0027deadline DESCRIPTION /by VALID_DATE_FORMAT\u0027\";","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"ChillinRage"},"content":"            actual3 \u003d manager.addTask(\u0027D\u0027, \"Lord of the Bing Chillings /by12-12-2001\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"ChillinRage"},"content":"            actual3 \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected3, actual3);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"ChillinRage"},"content":"    public void EventTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"ChillinRage"},"content":"        manager \u003d new taskManager(new FileManager(\"taskManagerTestDummy\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"ChillinRage"},"content":"        String actual1;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"ChillinRage"},"content":"        String expected1 \u003d \"[E][ ] 1st Test (from: [15 Mar 2024 06:10], to: [16 Oct 2025 09:50])\";","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"ChillinRage"},"content":"            actual1 \u003d manager.addTask(\u0027E\u0027, \"1st Test /from 03-15-2024 0610 /to 16-10-2025 0950\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"ChillinRage"},"content":"            actual1 \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected1, actual1);","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"ChillinRage"},"content":"        String actual2;","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"ChillinRage"},"content":"        String expected2 \u003d \"[E][ ] 2nd Test (from: [13 Dec 2024 06:10], to: [13 Dec 2025 09:50])\";","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"ChillinRage"},"content":"            actual2 \u003d manager.addTask(\u0027E\u0027, \"2nd Test /to 12-13-2025 0950 /from 13-12-2024 0610\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"ChillinRage"},"content":"            actual2 \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected2, actual2);","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"ChillinRage"},"content":"        String actual3;","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"ChillinRage"},"content":"        String expected3 \u003d \"Unable to identify the start and/or end date. Make sure to follow the format:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"ChillinRage"},"content":"                        + \"event DESCRIPTION /from START /to END\";","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"ChillinRage"},"content":"            actual3 \u003d manager.addTask(\u0027E\u0027, \"Lord of the Bing Chillings /from 12-12-2001\").toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"ChillinRage"},"content":"            actual3 \u003d e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"ChillinRage"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(expected3, actual3);","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"ChillinRage"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"ChillinRage"},"content":"    public void ListTest() {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"ChillinRage"},"content":"        manager \u003d new taskManager(new FileManager(\"taskManagerTestDummy\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(0, manager.getListSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"ChillinRage"},"content":"        manager.addTask(\u0027T\u0027, \"1st task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"ChillinRage"},"content":"        manager.addTask(\u0027D\u0027, \"2nd task /by 12-12-2001\");","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"ChillinRage"},"content":"            manager.addTask(\u0027D\u0027, \"invalid task /by Someday\");","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {}","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(2, manager.getListSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"ChillinRage"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"ChillinRage"},"content":"            manager.deleteTask(2);","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"ChillinRage"},"content":"        } catch (InputException e) {}","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"ChillinRage"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"ChillinRage"},"content":"        manager.deleteTask(1);","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"ChillinRage"},"content":"        assertEquals(1, manager.getListSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"ChillinRage"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"ChillinRage"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"ChillinRage":123}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChillinRage"},"content":"todo borrow \"Harry Potter\"","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ChillinRage"},"content":"deadline burn \"The Gollum Game\" /by tonight","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ChillinRage"},"content":"event Career Fair /from Sun 2am /to Mon 2pm","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ChillinRage"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ChillinRage"},"content":"deadline burn \"Blue Eyes White Dragon\"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ChillinRage"},"content":"event CS2103T meeting /to later /from now","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ChillinRage"},"content":"event CS2101 presentation /from/to","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ChillinRage"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ChillinRage"},"content":"mark 4","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"mark 1","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ChillinRage"},"content":"mark 2","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ChillinRage"},"content":"list","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ChillinRage"},"content":"bye","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ChillinRage":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ChillinRage"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\Tasks\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ChillinRage":1}}]
