[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"checkstyle {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    ","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"    archiveFileName \u003d \u0027chronos.jar\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"triciiaaa":23,"-":38}},{"path":"data/chronos.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"D | 0 | return book | 22 Sep 2024 15:00","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"T | 1 | read storybook | ","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"E | 0 | concert | 16 Feb 2024 18:00 | 16 Feb 2024 20:00","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"triciiaaa":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Launcher {","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"        Application.launch(gui.Main.class, args);","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":10}},{"path":"src/main/java/chronos/Chronos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package chronos;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import tool.Parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import tool.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import tool.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import tool.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":" * Represents the main class of the Chronos Task Management System.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"public class Chronos {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    private static final String FILE_PATH \u003d \"./data/chronos.txt\";","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    private static Storage storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Chronos object with the given file path.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    public Chronos() {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * Generates Chronos\u0027 response to the given user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @param input Input provided by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"    public String getResponse(String input) throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        return Parser.processCommand(input, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":45}},{"path":"src/main/java/exception/ChronosException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the custom exceptions thrown in Chronos Task Management System.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public abstract class ChronosException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a ChronosException with the specified error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message shown as exception is thrown.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    public ChronosException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidByeException with the specified error message.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidByeException.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidByeException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidByeException(\"Invalid command. To exit the program, please key in bye.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidListException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidListException.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidListException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidListException(\"Invalid command. To print the list of tasks, please key in list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidHelpException with the specified error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidHelpException.","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidHelpException() {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidHelpException(\"Invalid command. To view the list of commands, please key in help.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidCommandException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidCommandException.","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidCommandException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidCommandException(\"Invalid command. Please try again.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingTaskNumberException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * @return MissingTaskNumberException.","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createMissingTaskNumberException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"        return new MissingTaskNumberException(\"Missing task number. Please specify the task number.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingDescriptionException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @return MissingDescriptionException.","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createMissingDescriptionException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"        return new MissingDescriptionException(\"Missing description. Please specify the description of your task.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidDeadlineException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidDeadlineException.","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidDeadlineException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidDeadlineException(\"Invalid command. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"                + \"Please include a task description and due date following the example below:\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"                + \"\\t\\te.g. deadline return library book /by 2024-09-22 15:00\");","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidEventException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidEventException.","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidEventException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidEventException(\"Invalid command. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"                + \"Please include a task description and due date following the example below:\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"                + \"\\t\\te.g. event concert /from 2024-02-16 18:00 /to 2024-02-16 20:00\");","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a KeywordNotFoundException with the specified error message.","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * @return KeywordNotFoundException.","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createKeywordNotFoundException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"        return new KeywordNotFoundException(\"Keyword not found in any tasks. Please specify a valid keyword.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingKeywordException with the specified error message.","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"     * @return MissingKeywordException.","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createMissingKeywordException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"        return new MissingKeywordException(\"Missing keyword. Please specify at least 1 keyword.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":109}},{"path":"src/main/java/exception/InvalidByeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the bye command is invalid.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class InvalidByeException extends ChronosException {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidByeException object with the given error message.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    InvalidByeException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the command is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class InvalidCommandException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidCommandException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the deadline task is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class InvalidDeadlineException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidDeadlineException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    InvalidDeadlineException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the event details provided are invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class InvalidEventException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidEventException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    InvalidEventException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/InvalidHelpException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the help command is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class InvalidHelpException extends ChronosException {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidHelpException object with the given error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    InvalidHelpException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/InvalidListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the list command is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class InvalidListException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidListException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    InvalidListException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/KeywordNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the keyword(s) is/are not found.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class KeywordNotFoundException extends ChronosException {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a KeywordNotFoundException object with the given error message.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    KeywordNotFoundException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the task description is missing.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class MissingDescriptionException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingDescriptionException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    MissingDescriptionException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/MissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the keyword(s) is/are not provided by the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class MissingKeywordException extends ChronosException {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingKeywordException object with the given error message.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    MissingKeywordException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/exception/MissingTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the task number is missing.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class MissingTaskNumberException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingTaskNumberException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    MissingTaskNumberException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":15}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a dialog box to display on GUI.","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param text Text input provided by the user or text output processed from the user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @param img Image of speaker (Chronos or user).","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"        Circle clip \u003d new Circle(displayPicture.getFitWidth() / 2, displayPicture.getFitHeight() / 2,","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"                displayPicture.getFitWidth() / 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY,","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"                javafx.geometry.Insets.EMPTY);","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"        Background background \u003d new Background(backgroundFill);","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"        this.setBackground(background);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        this.setSpacing(15);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    private void flip() {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     * Creates an instance of a user dialog box with the given text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     * @param text Text input provided by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * @param img Image of user.","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * @return A constructed dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"     * Creates an instance of a Chronos dialog box with the given text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"     * @param text Text output processed from the user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     * @param img Image of Chronos.","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     * @return A constructed dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"    public static DialogBox getChronosDialog(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"        db.flip();","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"        return db;","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":101}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import chronos.Chronos;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":" * A GUI for Chronos using FXML.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    private Chronos chronos \u003d new Chronos();","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * Links the Chronos logic to the MainWindow.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @param stage Stage of the GUI.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChronos(chronos);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"            stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":36}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package gui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import chronos.Chronos;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"import tool.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    private Chronos chronos;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pochacco.jpg\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    private Image chronosImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/robot.jpg\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * Initialise Chronos application layout.","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        String text \u003d Ui.greetUser();","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        dialogContainer.setPadding(new Insets(15));","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        dialogContainer.setSpacing(15);","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"                DialogBox.getChronosDialog(text, chronosImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * Set Chronos object.","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @param c Chronos instance.","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    public void setChronos(Chronos c) {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        chronos \u003d c;","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Chronos\u0027 reply and then appends them to","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * the dialog container.","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    private void handleUserInput() throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"        String response \u003d chronos.getResponse(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"                DialogBox.getChronosDialog(response, chronosImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":75}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents a task with a specified deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    private static final String TASK_CODE \u003d \"D\";","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param by Deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"        super(TASK_CODE, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the due date of the Deadline object.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the due date.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        return this.by;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + TASK_CODE + \"]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents an event with a start and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    private static final String TASK_CODE \u003d \"E\";","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an Event object with the given description, start and end date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     * @param from Start date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * @param to End date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"        super(TASK_CODE, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the start and end date of the Event object.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the start and end date.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        return this.from + \" | \" + this.to;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + TASK_CODE + \"]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":43}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    protected String taskCode;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    public Task(String taskCode, String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"        this.taskCode \u003d taskCode;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * Returns the status icon in String type based on isDone.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @return Status icon of isDone.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Returns the status icon in Integer type based on isDone.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @return Status integer of isDone.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    public int getStatusInt() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * Returns the task code of the specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @return Task code.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"    public String getTaskCode() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        return this.taskCode;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * Returns the description of the specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @return Task description.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        return this.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * Returns the due date / start date / end date of the specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * By default, date is an empty string.","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @return Task due date / start date / end date.","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        return \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * Sets the task to be marked as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    public void setMarked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * Sets the task to be unmarked as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"    public void setUnmarked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":90}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    private static final String TASK_CODE \u003d \"T\";","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(TASK_CODE, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + taskCode + \"]\" + super.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":27}},{"path":"src/main/java/tool/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":" * Represents the tool to process user commands.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Parser object.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    private Parser() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * Changes the format the date specified for a deadline or an event.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * @param dateTime Date and time of a deadline or an event in the format yyyy-mm-dd HH:MM.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @return Formatted date and time.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    public static String formatDateTime(String dateTime) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"        String date \u003d dateTimeArray[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        String time \u003d dateTimeArray[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        String combinedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"        return LocalDateTime.parse(combinedDateTime).format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the length of input for a command with a single argument is equals to 1.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @param lengthOfInput Length of input provided by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the length of input is equals to 1, else False.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    public static boolean isNotSingleArgument(int lengthOfInput) {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        return lengthOfInput !\u003d 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the length of input for a command with double arguments is equals to 2.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @param lengthOfInput Length of input provided by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     * @return True if the length of input is equals to 2, else False.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"    public static boolean isNotDoubleArgument(int lengthOfInput) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"        return lengthOfInput !\u003d 2;","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes bye command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with bye.","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to bye command.","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteBye(String[] token) throws ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"            if (isNotSingleArgument(token.length)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createInvalidByeException();","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"                return Ui.bidGoodbye();","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.InvalidByeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes help command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with help.","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to help command.","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteHelp(String[] token) throws ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"            if (isNotSingleArgument(token.length)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createInvalidHelpException();","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"                return Ui.printHelp();","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.InvalidHelpException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes list command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with list.","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to list command.","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteList(String[] token, Ui ui, TaskList tasks) throws ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"            if (isNotSingleArgument(token.length)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createInvalidListException();","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"            } else if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"                return ui.printNoOutstandingTasks();","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"                return ui.printTasks(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.InvalidListException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes mark command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with mark.","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Text file containing list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to mark command.","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteMark(String[] token, Ui ui, Storage storage, TaskList tasks)","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"            throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"            if (isNotDoubleArgument(token.length) || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createMissingTaskNumberException();","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"                    int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"                    Task selectedTaskToBeMarked \u003d tasks.markTask(i, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"                    storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printMarkTaskSuccessful(selectedTaskToBeMarked);","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printNumberFormatException();","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printIndexOutOfBoundsException();","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.MissingTaskNumberException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes unmark command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with unmark.","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Text file containing list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to unmark command.","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteUnmark(String[] token, Ui ui, Storage storage, TaskList tasks)","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"            throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"            if (isNotDoubleArgument(token.length) || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createMissingTaskNumberException();","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"                    int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"                    Task selectedTaskToBeUnmarked \u003d tasks.unMarkTask(i, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"                    storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printUnmarkTaskSuccessful(selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printNumberFormatException();","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printIndexOutOfBoundsException();","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.MissingTaskNumberException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes todo command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with todo.","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Text file containing list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to todo command.","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteTodo(String[] token, Ui ui, Storage storage, TaskList tasks)","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"triciiaaa"},"content":"            throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":195,"author":{"gitId":"triciiaaa"},"content":"            if (isNotDoubleArgument(token.length) || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createMissingDescriptionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":197,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":198,"author":{"gitId":"triciiaaa"},"content":"                String description \u003d token[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"triciiaaa"},"content":"                Task todo \u003d tasks.addToDo(description, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"triciiaaa"},"content":"                assert !tasks.isEmpty() : \"Task list should not be empty.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"triciiaaa"},"content":"                storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":202,"author":{"gitId":"triciiaaa"},"content":"                return ui.printAddTodoSuccessful(todo, tasks.size());","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":204,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.MissingDescriptionException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":205,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":207,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes deadline command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Text file containing list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to deadline command.","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteDeadline(String[] token, Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"triciiaaa"},"content":"            if (!token[1].contains(\"/by\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":221,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createInvalidDeadlineException();","lastModifiedDate":"2024-02-07"},{"lineNumber":222,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":223,"author":{"gitId":"triciiaaa"},"content":"            String[] descriptionAndBy \u003d token[1].split(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":224,"author":{"gitId":"triciiaaa"},"content":"            String description \u003d descriptionAndBy[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":225,"author":{"gitId":"triciiaaa"},"content":"            String dueDate \u003d Parser.formatDateTime(descriptionAndBy[1].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":226,"author":{"gitId":"triciiaaa"},"content":"            Task deadline \u003d tasks.addDeadline(description, dueDate, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":227,"author":{"gitId":"triciiaaa"},"content":"            assert !tasks.isEmpty() : \"Task list should not be empty.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":228,"author":{"gitId":"triciiaaa"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":229,"author":{"gitId":"triciiaaa"},"content":"            return ui.printAddDeadlineSuccessful(deadline, tasks.size());","lastModifiedDate":"2024-02-19"},{"lineNumber":230,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.InvalidDeadlineException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":231,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":232,"author":{"gitId":"triciiaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":233,"author":{"gitId":"triciiaaa"},"content":"            ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":234,"author":{"gitId":"triciiaaa"},"content":"            message.add(\"Invalid command.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":235,"author":{"gitId":"triciiaaa"},"content":"            message.add(\"Please include a task description and due date following the example below:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":236,"author":{"gitId":"triciiaaa"},"content":"            message.add(\"e.g. deadline return library book /by 2024-09-22 15:00\");","lastModifiedDate":"2024-02-19"},{"lineNumber":237,"author":{"gitId":"triciiaaa"},"content":"            return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":238,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":239,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":240,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":241,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":242,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes event command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":243,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":244,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with event.","lastModifiedDate":"2024-02-19"},{"lineNumber":245,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":246,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Text file containing list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":247,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":248,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to event command.","lastModifiedDate":"2024-02-19"},{"lineNumber":249,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":250,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteEvent(String[] token, Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":251,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":252,"author":{"gitId":"triciiaaa"},"content":"            if (!token[1].contains(\"/from\") \u0026\u0026 !token[1].contains(\"/to\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":253,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createInvalidEventException();","lastModifiedDate":"2024-02-07"},{"lineNumber":254,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":255,"author":{"gitId":"triciiaaa"},"content":"            String[] descriptionAndDate \u003d token[1].split(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":256,"author":{"gitId":"triciiaaa"},"content":"            String description \u003d descriptionAndDate[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":257,"author":{"gitId":"triciiaaa"},"content":"            String[] fromAndTo \u003d descriptionAndDate[1].split(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":258,"author":{"gitId":"triciiaaa"},"content":"            String fromDateAndTime \u003d Parser.formatDateTime(fromAndTo[0].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":259,"author":{"gitId":"triciiaaa"},"content":"            String toDateAndTime \u003d Parser.formatDateTime(fromAndTo[1].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":260,"author":{"gitId":"triciiaaa"},"content":"            Task event \u003d tasks.addEvent(description, fromDateAndTime, toDateAndTime, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":261,"author":{"gitId":"triciiaaa"},"content":"            assert !tasks.isEmpty() : \"Task list should not be empty.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":262,"author":{"gitId":"triciiaaa"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":263,"author":{"gitId":"triciiaaa"},"content":"            return ui.printAddEventSuccessful(event, tasks.size());","lastModifiedDate":"2024-02-19"},{"lineNumber":264,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.InvalidEventException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":265,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":266,"author":{"gitId":"triciiaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":267,"author":{"gitId":"triciiaaa"},"content":"            ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":268,"author":{"gitId":"triciiaaa"},"content":"            message.add(\"Invalid command.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":269,"author":{"gitId":"triciiaaa"},"content":"            message.add(\"Please include a task description and due date following the example below:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":270,"author":{"gitId":"triciiaaa"},"content":"            message.add(\"e.g. event concert /from 2024-02-16 18:00 /to 2024-02-16 20:00\");","lastModifiedDate":"2024-02-19"},{"lineNumber":271,"author":{"gitId":"triciiaaa"},"content":"            return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":272,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":273,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":274,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":275,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":276,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes delete command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":277,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":278,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with delete.","lastModifiedDate":"2024-02-19"},{"lineNumber":279,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":280,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Text file containing list of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":281,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":282,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to delete command.","lastModifiedDate":"2024-02-19"},{"lineNumber":283,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":284,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteDelete(String[] token, Ui ui, Storage storage, TaskList tasks)","lastModifiedDate":"2024-02-19"},{"lineNumber":285,"author":{"gitId":"triciiaaa"},"content":"            throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":286,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":287,"author":{"gitId":"triciiaaa"},"content":"            if (isNotDoubleArgument(token.length) || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":288,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createMissingTaskNumberException();","lastModifiedDate":"2024-02-07"},{"lineNumber":289,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":290,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":291,"author":{"gitId":"triciiaaa"},"content":"                    int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":292,"author":{"gitId":"triciiaaa"},"content":"                    Task deletedTask \u003d tasks.deleteTask(i, ui);","lastModifiedDate":"2024-02-19"},{"lineNumber":293,"author":{"gitId":"triciiaaa"},"content":"                    storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":294,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printDeleteTaskSuccessful(deletedTask, tasks.size());","lastModifiedDate":"2024-02-19"},{"lineNumber":295,"author":{"gitId":"triciiaaa"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":296,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printNumberFormatException();","lastModifiedDate":"2024-02-19"},{"lineNumber":297,"author":{"gitId":"triciiaaa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":298,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printIndexOutOfBoundsException();","lastModifiedDate":"2024-02-19"},{"lineNumber":299,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":300,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":301,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.MissingTaskNumberException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":302,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":303,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":304,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":305,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":306,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":307,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes find command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":308,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":309,"author":{"gitId":"triciiaaa"},"content":"     * @param token User input starting with find.","lastModifiedDate":"2024-02-19"},{"lineNumber":310,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Constructed Ui object.","lastModifiedDate":"2024-02-19"},{"lineNumber":311,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":312,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to find command.","lastModifiedDate":"2024-02-19"},{"lineNumber":313,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":314,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteFind(String[] token, Ui ui, TaskList tasks) throws ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":315,"author":{"gitId":"triciiaaa"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":316,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":317,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":318,"author":{"gitId":"triciiaaa"},"content":"            if (isNotDoubleArgument(token.length) || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":319,"author":{"gitId":"triciiaaa"},"content":"                throw ChronosException.createMissingKeywordException();","lastModifiedDate":"2024-02-12"},{"lineNumber":320,"author":{"gitId":"triciiaaa"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":321,"author":{"gitId":"triciiaaa"},"content":"                String[] keywords \u003d token[1].split(\" \");","lastModifiedDate":"2024-02-12"},{"lineNumber":322,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":323,"author":{"gitId":"triciiaaa"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2024-02-12"},{"lineNumber":324,"author":{"gitId":"triciiaaa"},"content":"                    for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":325,"author":{"gitId":"triciiaaa"},"content":"                        Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":326,"author":{"gitId":"triciiaaa"},"content":"                        assert currentTask !\u003d null : \"Current task should not be null.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":327,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":328,"author":{"gitId":"triciiaaa"},"content":"                        if (currentTask.getDescription().contains(keyword)","lastModifiedDate":"2024-02-12"},{"lineNumber":329,"author":{"gitId":"triciiaaa"},"content":"                                \u0026\u0026 !filteredTasks.contains(currentTask)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":330,"author":{"gitId":"triciiaaa"},"content":"                            filteredTasks.addTask(currentTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":331,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-12"},{"lineNumber":332,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":333,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":334,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":335,"author":{"gitId":"triciiaaa"},"content":"                if (filteredTasks.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":336,"author":{"gitId":"triciiaaa"},"content":"                    throw ChronosException.createKeywordNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":337,"author":{"gitId":"triciiaaa"},"content":"                } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":338,"author":{"gitId":"triciiaaa"},"content":"                    return ui.printFilteredTasks(filteredTasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":339,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":340,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":341,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.MissingKeywordException | exception.KeywordNotFoundException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":342,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":343,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":344,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":345,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":346,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":347,"author":{"gitId":"triciiaaa"},"content":"     * Parses and executes invalid command and returns Chronos\u0027 response.","lastModifiedDate":"2024-02-19"},{"lineNumber":348,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":349,"author":{"gitId":"triciiaaa"},"content":"     * @return Chronos\u0027 response to an invalid command.","lastModifiedDate":"2024-02-19"},{"lineNumber":350,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":351,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":352,"author":{"gitId":"triciiaaa"},"content":"    public static String parseAndExecuteInvalid() throws ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":353,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":354,"author":{"gitId":"triciiaaa"},"content":"            throw ChronosException.createInvalidCommandException();","lastModifiedDate":"2024-02-07"},{"lineNumber":355,"author":{"gitId":"triciiaaa"},"content":"        } catch (exception.InvalidCommandException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":356,"author":{"gitId":"triciiaaa"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":357,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":358,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":359,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":360,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":361,"author":{"gitId":"triciiaaa"},"content":"     * Processes the command provided by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":362,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":363,"author":{"gitId":"triciiaaa"},"content":"     * @param command Command provided by the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":364,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Ui object that deals with the interactions with the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":365,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Storage object that deals with loading tasks from file and saving tasks to file.","lastModifiedDate":"2024-02-19"},{"lineNumber":366,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks TaskList object that contains the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":367,"author":{"gitId":"triciiaaa"},"content":"     * @return Integer to indicate whether program should terminate.","lastModifiedDate":"2024-02-19"},{"lineNumber":368,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-19"},{"lineNumber":369,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-19"},{"lineNumber":370,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":371,"author":{"gitId":"triciiaaa"},"content":"    public static String processCommand(","lastModifiedDate":"2024-02-19"},{"lineNumber":372,"author":{"gitId":"triciiaaa"},"content":"            String command, Ui ui, Storage storage, TaskList tasks) throws IOException, ChronosException {","lastModifiedDate":"2024-02-19"},{"lineNumber":373,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":374,"author":{"gitId":"triciiaaa"},"content":"        String[] token \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-19"},{"lineNumber":375,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":376,"author":{"gitId":"triciiaaa"},"content":"        if (token[0].equals(\"bye\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":377,"author":{"gitId":"triciiaaa"},"content":"            return parseAndExecuteBye(token);","lastModifiedDate":"2024-02-19"},{"lineNumber":378,"author":{"gitId":"triciiaaa"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":379,"author":{"gitId":"triciiaaa"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":380,"author":{"gitId":"triciiaaa"},"content":"            switch(token[0]) {","lastModifiedDate":"2024-02-19"},{"lineNumber":381,"author":{"gitId":"triciiaaa"},"content":"            case \"sos\":","lastModifiedDate":"2024-02-20"},{"lineNumber":382,"author":{"gitId":"triciiaaa"},"content":"            case \"help\":","lastModifiedDate":"2024-02-19"},{"lineNumber":383,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteHelp(token);","lastModifiedDate":"2024-02-19"},{"lineNumber":384,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":385,"author":{"gitId":"triciiaaa"},"content":"            case \"ls\":","lastModifiedDate":"2024-02-20"},{"lineNumber":386,"author":{"gitId":"triciiaaa"},"content":"            case \"list\":","lastModifiedDate":"2024-02-19"},{"lineNumber":387,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteList(token, ui, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":388,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":389,"author":{"gitId":"triciiaaa"},"content":"            case \"mk\":","lastModifiedDate":"2024-02-20"},{"lineNumber":390,"author":{"gitId":"triciiaaa"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":391,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteMark(token, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":392,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":393,"author":{"gitId":"triciiaaa"},"content":"            case \"umk\":","lastModifiedDate":"2024-02-20"},{"lineNumber":394,"author":{"gitId":"triciiaaa"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-19"},{"lineNumber":395,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteUnmark(token, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":396,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":397,"author":{"gitId":"triciiaaa"},"content":"            case \"td\":","lastModifiedDate":"2024-02-20"},{"lineNumber":398,"author":{"gitId":"triciiaaa"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-19"},{"lineNumber":399,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteTodo(token, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":400,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":401,"author":{"gitId":"triciiaaa"},"content":"            case \"dl\":","lastModifiedDate":"2024-02-20"},{"lineNumber":402,"author":{"gitId":"triciiaaa"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-19"},{"lineNumber":403,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteDeadline(token, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":404,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":405,"author":{"gitId":"triciiaaa"},"content":"            case \"ev\":","lastModifiedDate":"2024-02-20"},{"lineNumber":406,"author":{"gitId":"triciiaaa"},"content":"            case \"event\":","lastModifiedDate":"2024-02-19"},{"lineNumber":407,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteEvent(token, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":408,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":409,"author":{"gitId":"triciiaaa"},"content":"            case \"rm\":","lastModifiedDate":"2024-02-20"},{"lineNumber":410,"author":{"gitId":"triciiaaa"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-19"},{"lineNumber":411,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteDelete(token, ui, storage, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":412,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":413,"author":{"gitId":"triciiaaa"},"content":"            case \"f\":","lastModifiedDate":"2024-02-20"},{"lineNumber":414,"author":{"gitId":"triciiaaa"},"content":"            case \"find\":","lastModifiedDate":"2024-02-19"},{"lineNumber":415,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteFind(token, ui, tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":416,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-19"},{"lineNumber":417,"author":{"gitId":"triciiaaa"},"content":"            default:","lastModifiedDate":"2024-02-19"},{"lineNumber":418,"author":{"gitId":"triciiaaa"},"content":"                return parseAndExecuteInvalid();","lastModifiedDate":"2024-02-19"},{"lineNumber":419,"author":{"gitId":"triciiaaa"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-12"},{"lineNumber":420,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":421,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":422,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":423,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":423}},{"path":"src/main/java/tool/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":" * Represents the hard drive storage for tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @param filePath File path of the saved tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * Converts the saved tasks to Task objects.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * @param taskDetails Task details stored in String format.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @return Task object converted from task details stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    public Task convertSaveToTask(String taskDetails) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"        String[] taskDetailsSplit \u003d taskDetails.split(\"\\\\|\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        String taskCode \u003d taskDetailsSplit[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"        String taskStatus \u003d taskDetailsSplit[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        String taskDescription \u003d taskDetailsSplit[2].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        Task convertedTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"        if (taskCode.equals(\"D\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"            String taskByDate \u003d taskDetailsSplit[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"            convertedTask \u003d new Deadline(taskDescription, taskByDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"        } else if (taskCode.equals(\"E\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"            String taskFromDate \u003d taskDetailsSplit[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"            String taskToDate \u003d taskDetailsSplit[4].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"            convertedTask \u003d new Event(taskDescription, taskFromDate, taskToDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"        if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"            convertedTask.setMarked();","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"        return convertedTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * Converts a Task object to the saved format.","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * @param currentTask Current task to be converted.","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the converted task.","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"    public String convertTaskToSave(Task currentTask) {","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"        String taskCode \u003d currentTask.getTaskCode();","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"        String taskStatus \u003d Integer.toString(currentTask.getStatusInt());","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"        String taskDescription \u003d currentTask.getDescription();","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"        String date \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"        if (!taskCode.equals(\"T\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"            date \u003d currentTask.getDate();","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"        return taskCode + \" | \" + taskStatus + \" | \" + taskDescription + \" | \" + date;","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     * Loads the saved tasks from the text file.","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * @return ArrayList of Task objects converted from task details stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"        Path retrievedFilePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"        Files.createDirectories(retrievedFilePath.getParent());","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"        if (!Files.exists(retrievedFilePath)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"            Files.createFile(retrievedFilePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"            Scanner sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"            ArrayList\u003cTask\u003e retrievedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"                String taskDetails \u003d sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"                Task retrievedTask \u003d convertSaveToTask(taskDetails);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"                retrievedTaskList.add(retrievedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"            return retrievedTaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"            return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"     * Saves task list to text file upon each change.","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks to be stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"            Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"            fw.write(convertTaskToSave(currentTask) + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"        fw.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":127}},{"path":"src/main/java/tool/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":" * Represents the list of tasks specified by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a TaskList object with the list of saved tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     * Adds a task.","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     * @param task Task to be added into the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints a todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    public Task addToDo(String description, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"        return todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints a task with a deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the task with deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * @param dueDate Deadline of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    public Task addDeadline(String description, String dueDate, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"        return deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints an event.","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @param from Start date and time of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     * @param to End date and time of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"    public Task addEvent(String description, String from, String to, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        return event;","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeMarked Task number to be marked as completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"    public Task markTask(int selectedTaskNumberToBeMarked, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"        Task selectedTaskToBeMarked \u003d tasks.get(selectedTaskNumberToBeMarked - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"        selectedTaskToBeMarked.setMarked();","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"        tasks.set(selectedTaskNumberToBeMarked - 1, selectedTaskToBeMarked);","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"        return selectedTaskToBeMarked;","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"     * Unmarks a task as incomplete.","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeUnmarked Task number to be unmarked as incomplete.","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"    public Task unMarkTask(int selectedTaskNumberToBeUnmarked, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"        Task selectedTaskToBeUnmarked \u003d tasks.get(selectedTaskNumberToBeUnmarked - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"        selectedTaskToBeUnmarked.setUnmarked();","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"        tasks.set(selectedTaskNumberToBeUnmarked - 1, selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"        return selectedTaskToBeUnmarked;","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     * Deletes a task from task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeDeleted Task number to be deleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"    public Task deleteTask(int selectedTaskNumberToBeDeleted, Ui ui) {","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"        Task deletedTask \u003d tasks.get(selectedTaskNumberToBeDeleted - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"        tasks.remove(selectedTaskNumberToBeDeleted - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"        return deletedTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"     * Retrieves a task from task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     * @param taskNumber Task number to be retrieved.","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     * @return Retrieved task.","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"        return tasks.get(taskNumber);","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the list of tasks is empty.","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     * @return True if list of tasks is empty, else False.","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the list of tasks contains a specific task.","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"     * @return True if list of tasks contains the specific task, else False.","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"triciiaaa"},"content":"    public boolean contains(Task currentTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"        return tasks.contains(currentTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":146}},{"path":"src/main/java/tool/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":" * Represents the tool to deal with user interactions.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    private static final String POSSIBLE_COMMANDS \u003d \"TODO     --- todo [task name]\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"            + \"DEADLINE --- deadline [task name] /by [yyyy-mm-dd HH:MM]\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"            + \"EVENT    --- event [task name] /from [yyyy-mm-dd HH:MM] /to [yyyy-mm-dd HH:MM]\";","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    public Ui() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * Prints greetings to user.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    public static String greetUser() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Hello! I\u0027m Chronos.\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"What can I do for you?\");","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Prints goodbye to user.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    public static String bidGoodbye() {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * Prints task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"            task.Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"            message.add(i + \". \" + currentTask.toString() + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"     * Prints filtered task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks with the specific keyword.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    public String printFilteredTasks(TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"            task.Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"            message.add(i + \". \" + currentTask.toString() + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * Prints no outstanding tasks and list of commands.","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    public String printNoOutstandingTasks() {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        return \"There are no outstanding tasks in your list.\\n\" + \"You may add various tasks with the commands below:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"                + POSSIBLE_COMMANDS;","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     * Prints list of commands.","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"    public static String printHelp() {","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"        return \"Here are the possible commands:\\n\" + POSSIBLE_COMMANDS;","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of adding a todo task.","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     * @param todo Todo object added.","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    public String printAddTodoSuccessful(Task todo, int noOfTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"        message.add(todo + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of adding a deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"     * @param deadline Deadline object added.","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"    public String printAddDeadlineSuccessful(Task deadline, int noOfTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"        message.add(deadline + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of adding an event.","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     * @param event Event object added.","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"    public String printAddEventSuccessful(Task event, int noOfTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"        message.add(event + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of marking a task as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskToBeMarked Selected task to be marked as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"    public String printMarkTaskSuccessful(Task selectedTaskToBeMarked) {","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"        message.add(selectedTaskToBeMarked.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of unmarking a task as incomplete.","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskToBeUnmarked Selected task to be marked as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"    public String printUnmarkTaskSuccessful(Task selectedTaskToBeUnmarked) {","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"        message.add(selectedTaskToBeUnmarked.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of deleting a task.","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"     * @param deletedTask Selected task to be deleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"triciiaaa"},"content":"    public String printDeleteTaskSuccessful(Task deletedTask, int noOfTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"        message.add(deletedTask + \"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"        message.add(\"Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"        return String.join(\" \", message);","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"     * Prints custom error message for NumberFormatException.","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"    public String printNumberFormatException() {","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"        return \"Task number is not an integer. Please include a valid task number.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"     * Prints custom error message for IndexOutOfBoundsException.","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"    public String printIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"        return \"Task number out of range. Please include a valid task number.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":176}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"triciiaaa":19}},{"path":"src/test/java/tool/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    @Test","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    public void userInputDateTimeFormat_success() {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"        String userInput \u003d \"2024-02-16 18:00\";","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"        String expectedOutput \u003d \"16 Feb 2024 18:00\";","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"        String actualOutput \u003d Parser.formatDateTime(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/test/java/tool/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    private static final String FILE_PATH \u003d \"./data/chronos.txt\";","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    @Test","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    public void convertTaskToSave_success() {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"        Task taskToBeConverted \u003d new Deadline(\"return library book\", \"2024-03-14 12:00\");","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"        String expectedOutput \u003d \"D | 0 | return library book | 2024-03-14 12:00\";","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"        String actualOutput \u003d storage.convertTaskToSave(taskToBeConverted);","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"triciiaaa":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"deadline return book /by 1st Mar","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"event project meeting /from 29th Mar 8pm /to 29th Mar 10pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"triciiaaa":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"java -classpath ..\\bin Chronos \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"triciiaaa":1,"-":20}}]
