[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"    public String saveToText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"        return String.format(\"D | %s | %s | %s\", this.isDone ? 1 : 0, this.description,","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"                Utils.convertDateTimeToString(this.by));","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Utils.printTime(by) + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"        Storage storage \u003d new Storage(\"./data/test.txt\");","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"        ArrayList\u003cTask\u003e items \u003d storage.readData();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"        System.out.println(\"Hello! I\u0027m GuanGuanBot!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"        while (isValid) {","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"                isValid \u003d handleInput(command, items);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"                storage.saveData(items);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"guanquann"},"content":"                System.out.printf(\"[!] %s\\n\", e.getMessage());","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"guanquann"},"content":"            System.out.println();","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"guanquann"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"guanquann"},"content":"    private static boolean handleInput(String command, ArrayList\u003cTask\u003e items) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"guanquann"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"guanquann"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"guanquann"},"content":"            return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"guanquann"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"guanquann"},"content":"            if (items.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"guanquann"},"content":"                System.out.println(\"You have no tasking available.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"guanquann"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"guanquann"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"guanquann"},"content":"                for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"guanquann"},"content":"                    System.out.printf(\"%s. %s%n\", i + 1, items.get(i));","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"guanquann"},"content":"                }","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"guanquann"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"guanquann"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"guanquann"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"guanquann"},"content":"                items.get(index).markDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"guanquann"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"guanquann"},"content":"                System.out.println(items.get(index));","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"guanquann"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"Invalid task ID to mark\");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"guanquann"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"guanquann"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"guanquann"},"content":"                int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"guanquann"},"content":"                items.get(index).unmarkDone();","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"guanquann"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"guanquann"},"content":"                System.out.println(items.get(index));","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"guanquann"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"Invalid task ID to unmark\");","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"guanquann"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"guanquann"},"content":"        else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"guanquann"},"content":"            if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"guanquann"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"guanquann"},"content":"            Todo todo \u003d new Todo(command.substring(5));","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"guanquann"},"content":"            items.add(todo);","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"guanquann"},"content":"            System.out.println(todo);","lastModifiedDate":"2024-01-21"},{"lineNumber":76,"author":{"gitId":"guanquann"},"content":"            System.out.printf(\"Now you have %s tasks in the list.%n\", items.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"guanquann"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"guanquann"},"content":"            if (command.length() \u003c\u003d 9) {","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":81,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":83,"author":{"gitId":"guanquann"},"content":"            try{","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"guanquann"},"content":"                String[] splittedCommand \u003d command.split(\" /by \");","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"guanquann"},"content":"                String task \u003d splittedCommand[0].substring(9);","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"guanquann"},"content":"                String by \u003d splittedCommand[1];","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"guanquann"},"content":"                Deadline deadline \u003d new Deadline(task, Utils.convertStringToDateTime(by));","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"guanquann"},"content":"                items.add(deadline);","lastModifiedDate":"2024-01-21"},{"lineNumber":90,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":91,"author":{"gitId":"guanquann"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"guanquann"},"content":"                System.out.println(deadline);","lastModifiedDate":"2024-01-21"},{"lineNumber":93,"author":{"gitId":"guanquann"},"content":"                System.out.printf(\"Now you have %s tasks in the list.%n\", items.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"guanquann"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"Invalid deadline date. Use /by\");","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":98,"author":{"gitId":"guanquann"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":99,"author":{"gitId":"guanquann"},"content":"            if (command.length() \u003c\u003d 6) {","lastModifiedDate":"2024-01-21"},{"lineNumber":100,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":101,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":102,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":103,"author":{"gitId":"guanquann"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"guanquann"},"content":"                String[] splittedCommand \u003d command.split(\" /from \");","lastModifiedDate":"2024-01-21"},{"lineNumber":105,"author":{"gitId":"guanquann"},"content":"                String task \u003d splittedCommand[0].substring(6);","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":107,"author":{"gitId":"guanquann"},"content":"                String[] splittedTime \u003d splittedCommand[1].split(\" /to \");","lastModifiedDate":"2024-01-21"},{"lineNumber":108,"author":{"gitId":"guanquann"},"content":"                String from \u003d splittedTime[0];","lastModifiedDate":"2024-01-21"},{"lineNumber":109,"author":{"gitId":"guanquann"},"content":"                String to \u003d splittedTime[1];","lastModifiedDate":"2024-01-21"},{"lineNumber":110,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":111,"author":{"gitId":"guanquann"},"content":"                Event event \u003d new Event(task, Utils.convertStringToDateTime(from), Utils.convertStringToDateTime(to));","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"guanquann"},"content":"                items.add(event);","lastModifiedDate":"2024-01-21"},{"lineNumber":113,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":114,"author":{"gitId":"guanquann"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"guanquann"},"content":"                System.out.println(event);","lastModifiedDate":"2024-01-21"},{"lineNumber":116,"author":{"gitId":"guanquann"},"content":"                System.out.printf(\"Now you have %s tasks in the list.%n\", items.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"guanquann"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"Invalid event date. Use /from and /to\");","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"guanquann"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":122,"author":{"gitId":"guanquann"},"content":"            if (command.length() \u003c\u003d 7) {","lastModifiedDate":"2024-01-21"},{"lineNumber":123,"author":{"gitId":"guanquann"},"content":"                throw new DukeException(\"OOPS!!! Task ID cannot be empty.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":124,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":125,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":126,"author":{"gitId":"guanquann"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":127,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":128,"author":{"gitId":"guanquann"},"content":"            int index \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-21"},{"lineNumber":129,"author":{"gitId":"guanquann"},"content":"            Task task \u003d items.remove(index);","lastModifiedDate":"2024-01-21"},{"lineNumber":130,"author":{"gitId":"guanquann"},"content":"            System.out.println(task);","lastModifiedDate":"2024-01-21"},{"lineNumber":131,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":132,"author":{"gitId":"guanquann"},"content":"            System.out.printf(\"Now you have %s tasks in the list.%n\", items.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"guanquann"},"content":"        } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":134,"author":{"gitId":"guanquann"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-21"},{"lineNumber":135,"author":{"gitId":"guanquann"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":136,"author":{"gitId":"guanquann"},"content":"        return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"guanquann":134,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"    public Event(String description, LocalDate  from, LocalDate  to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"    public String saveToText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"        return String.format(\"E | %s | %s | %s | %s\", this.isDone ? 1 : 0, this.description,","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"                Utils.convertDateTimeToString(this.from), Utils.convertDateTimeToString(this.to));","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), Utils.printTime(this.from),","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"guanquann"},"content":"                Utils.printTime(this.to));","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":24}},{"path":"src/main/java/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"/**","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":" * This utility class stores two items together in a pair.","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":" * It could be used, for instance, to faciliate returning of","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":" * two values in a function.","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":" *","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":" * @author cs2030","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":" * @param \u003cT\u003e the type of the first element","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":" * @param \u003cU\u003e the type of the second element","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":" **/","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"public class Pair\u003cT, U\u003e {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"    private final T t;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"    private final U u;","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"    private Pair(T t, U u) {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"        this.t \u003d t;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"        this.u \u003d u;","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"     * Creates a {@code Pair} of items.","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"guanquann"},"content":"     * @param t first item of the pair","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"guanquann"},"content":"     * @param u second item of the pair","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"guanquann"},"content":"     **/","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"guanquann"},"content":"    static \u003cT,U\u003e Pair\u003cT,U\u003e of(T t, U u) {","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"guanquann"},"content":"        return new Pair\u003cT,U\u003e(t, u);","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"guanquann"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"guanquann"},"content":"     * Returns the first item of the pair.","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"guanquann"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"guanquann"},"content":"     * @return the first item of the pair","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"guanquann"},"content":"     */","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"guanquann"},"content":"    public T first() {","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"guanquann"},"content":"        return this.t;","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"guanquann"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"guanquann"},"content":"     * Returns the second item of the pair.","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"guanquann"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"guanquann"},"content":"     * @return the second item of the pair","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"guanquann"},"content":"     */","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"guanquann"},"content":"    public U second() {","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"guanquann"},"content":"        return this.u;","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"guanquann"},"content":"    /**","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"guanquann"},"content":"     * Returns a string representation of this pair enclosed in ({@code \"()\"}).","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"guanquann"},"content":"     * The two elements are separated by the characters {@code \", \"} (comma and space).","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"guanquann"},"content":"     * Elements are converted to strings as by {@link String#valueOf(Object)}.","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"guanquann"},"content":"     *","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"guanquann"},"content":"     * @return a string representation of this list","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"guanquann"},"content":"     */","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"guanquann"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"guanquann"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"guanquann"},"content":"        return \"(\" + this.t + \", \" + this.u + \")\";","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":58}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"import java.io.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"import java.util.Objects;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"public class Storage {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"    private final String filepath;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"    private final ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"    Storage(String filepath) {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"    public ArrayList\u003cTask\u003e readData() throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"guanquann"},"content":"            Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"guanquann"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"guanquann"},"content":"                String[] lineArray \u003d reader.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"guanquann"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"guanquann"},"content":"                String taskType \u003d lineArray[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"guanquann"},"content":"                boolean isDone \u003d Objects.equals(lineArray[1], \"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"guanquann"},"content":"                // format [T | 0 | borrow book]","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"guanquann"},"content":"                if (Objects.equals(taskType, \"T\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"guanquann"},"content":"                    task \u003d new Todo(lineArray[2]);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"guanquann"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"guanquann"},"content":"                // format [D | 0 | borrow book | today]","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"guanquann"},"content":"                else if (Objects.equals(taskType, \"D\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"guanquann"},"content":"                    task \u003d new Deadline(lineArray[2], Utils.convertStringToDateTime(lineArray[3]));","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"guanquann"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"guanquann"},"content":"                // format [E | 0 | project meeting | Mon 2pm | 4pm]","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"guanquann"},"content":"                else if (Objects.equals(taskType, \"E\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"guanquann"},"content":"                    task \u003d new Event(lineArray[2], Utils.convertStringToDateTime(lineArray[3]),","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"guanquann"},"content":"                            Utils.convertStringToDateTime(lineArray[4]));","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"guanquann"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"guanquann"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"guanquann"},"content":"                    throw new DukeException(\"Task Type not found!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"guanquann"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"guanquann"},"content":"                task.isDone \u003d isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"guanquann"},"content":"                items.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"guanquann"},"content":"            reader.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"guanquann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"guanquann"},"content":"            throw new DukeException(\"Task Type not found!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"guanquann"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"guanquann"},"content":"        return items;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"guanquann"},"content":"    public void saveData(ArrayList\u003cTask\u003e items) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"guanquann"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"guanquann"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"guanquann"},"content":"            for (Task item : items) {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"guanquann"},"content":"                builder.append(item.saveToText()).append(\"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"guanquann"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"guanquann"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filepath);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"guanquann"},"content":"            fileWriter.write(builder.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"guanquann"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"guanquann"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"guanquann"},"content":"            throw new DukeException(\"Unable to store tasks!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"guanquann"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"guanquann":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"    protected String description;","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"guanquann"},"content":"    public String saveToText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"guanquann"},"content":"        return \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"guanquann"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"guanquann"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"guanquann"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"        super(description);","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"    public String saveToText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"        return String.format(\"T | %s | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":15}},{"path":"src/main/java/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"public class Utils {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"    public static LocalDate convertStringToDateTime(String datetime) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"        int lenDatetime \u003d datetime.length();","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"        LocalDate localDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"        // date format: 2019-12-01","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"        if (lenDatetime \u003d\u003d 10) {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"            localDate \u003d LocalDate.parse(datetime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"guanquann"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"guanquann"},"content":"            throw new DukeException(\"Invalid datetime format!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"guanquann"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"guanquann"},"content":"        return localDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"guanquann"},"content":"    public static String printTime(LocalDate datetime) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"guanquann"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"guanquann"},"content":"        return datetime.format(formatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"guanquann"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"guanquann"},"content":"    public static String convertDateTimeToString(LocalDate datetime) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"guanquann"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"guanquann"},"content":"        return datetime.format(formatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"guanquann"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"guanquann"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"guanquann":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"guanquann"},"content":"todo borrow book","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"guanquann"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"guanquann"},"content":"deadline return book /by 2024-01-02","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"guanquann"},"content":"event project meeting /from 2024-01-02 /to 2024-01-05","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"guanquann"},"content":"mark 3","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"guanquann"},"content":"unmark 3","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"guanquann"},"content":"delete 2","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"guanquann"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"guanquann"},"content":"delete","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"guanquann"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"guanquann":10}}]
