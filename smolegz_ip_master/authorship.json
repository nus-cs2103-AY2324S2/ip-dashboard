[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"T|1|showering","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"D|0|to homework |later","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":2}},{"path":"src/main/java/Howie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"import commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import parser.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import tasklists.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":" * The chat-bot To-Do program named Howie which keeps tracks of major major tasks such as","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":" * todo, event and deadlines.","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"public class Howie {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    private static Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    private static TaskList taskLs;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"     * Deletes a task from Howie\u0027s list.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"     * @param i 1-Based index of the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"    public static void delete(List\u003cTask\u003e tasks, int i) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"        if (i \u003e tasks.size() || i \u003c\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"            throw new DukeException(\"Hmm...I can\u0027t delete something that isn\u0027t there :O\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"            Task t \u003d tasks.remove(i-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Okay! The following task has been removed:\\n\" + t);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"            ui.printAllTask(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"     * Prints a message when a blank task has been entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"    public static void emptyTaskMessage() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"        Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"Hey! You\u0027ve just entered an unnamed task... Try to give a description/name of your task :)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"     * Prints a message when an invalid format has been entered.","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"    public static void invalidFormat() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"        Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"I see you\u0027ve entered an invalid format. Type \u0027help\u0027 if you\u0027re unsure :)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"     * Initialises the program.","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"     * @param args Input arguments.","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"     * @throws Exception Throws DukeException and IOException when invalid commands are entered","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"     * or input exception occurs.","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"        taskLs \u003d storage.readFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"            String[] input \u003d ui.getUserCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"            Command command \u003d new Parser().parseCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"                command.setData(taskLs);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"                command.execute();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"                Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":79}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"bye\";","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    public void execute() throws DukeException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"        Ui.exit();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":20}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import tasklists.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"    protected TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    public void execute() throws DukeException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"Invalid call of execute()\");","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    };","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    public void setData(TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":18}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    private final String name;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    private final String by;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    public DeadlineCommand(String name, String by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"            Ui.emptyTaskMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"        } else if (name.compareTo(by) \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"            Ui.invalidFormat();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            Deadline deadline \u003d new Deadline(name, by.trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"            tasks.add(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Got it! Deadline has been added:\\n\" + deadline + \"\\nNow you have \"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"                    + tasks.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":34}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"delete\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    private int i;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    public DeleteCommand (int i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"        this.i \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"        if (i \u003e tasks.getList().size() || i \u003c\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"            throw new DukeException(\"Hmm...I can\u0027t delete something that isn\u0027t there :O\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"            Task t \u003d tasks.remove(i-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Okay! The following task has been removed:\\n\" + t);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            Ui.printAllTask(tasks.getList());","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":29}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"event\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    private String name;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    private String from;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    private String to;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    public EventCommand(String name, String from, String to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"            Ui.emptyTaskMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        } else if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            Ui.invalidFormat();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"            Event eventTask \u003d new Event(name, from.trim(), to.trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            tasks.add(eventTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Got it! Event has been added:\\n\" + eventTask + \"\\nNow you have \"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"                    + tasks.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":36}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"    public void execute() {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"        Ui.helpMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":12}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    public void execute() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"        Ui.printAllTask(tasks.getList());","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":15}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"mark\";","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"    private final int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    public MarkCommand(int i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"        this.index \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    public void execute() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"            Task toMark \u003d tasks.get(index-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Acknowledged!!\\n\" + toMark.setDone());","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Oppss...I can\u0027t seem to find the task you\u0027re looking for. Type \u0027list\u0027 to see the the tasks that you have!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":28}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"todo\";","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    private final String name;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    public TodoCommand(String s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"        this.name \u003d s;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"            Ui.emptyTaskMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"            Task task \u003d new Task(name.trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"            tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Got it! task.Task has been added:\\n\" + task+ \"\\nNow you have \"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"                    + tasks.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":29}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND \u003d \"unmark\";","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"    private final int index;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    public UnmarkCommand(int i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"        this.index \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    public void execute() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"            Task toMark \u003d tasks.get(index-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Acknowledged!\\n\" + toMark.setUndone());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Oppss...I can\u0027t seem to find the task you\u0027re looking for. Type \u0027list\u0027 to see the the tasks that you have!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"            Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":27}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" * Custom exception that handles edge cases such as invalid command etc.","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"     * Constructs the exception","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"     * @param message the message to be printed to user.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"smolegz":19}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import commands.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"    public Command parseCommand(String[] input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"        StringBuilder name;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"        StringBuilder current;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"        String s1 \u003d input[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"        switch (s1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"        case ListCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        case ByeCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"        case MarkCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"            return new MarkCommand(Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"        case UnmarkCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"            return new UnmarkCommand(Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        case TodoCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            name \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"            for (int j\u003d1; j\u003cinput.length; j++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"                name.append(input[j]).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"            return new TodoCommand(name.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"        case DeadlineCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"            name \u003d  new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"            StringBuilder by \u003d  new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"            current \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"            for (; i\u003cinput.length; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"                if (input[i].equals(\"/by\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"                    name \u003d current;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"                    current \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"                current.append(input[i]).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"            by \u003d current;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"            return new DeadlineCommand(name.toString(), by.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"        case EventCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"            name \u003d  new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"            StringBuilder from \u003d  new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"            StringBuilder to \u003d  new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"            current \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"            i \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"            for (; i\u003cinput.length; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"                if (input[i].equals(\"/from\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"                    name \u003d current;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"                    current \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"                } else if (input[i].equals(\"/to\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"                    from \u003d current;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"                    current \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"                current.append(input[i]).append(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"            return new EventCommand(name.toString(), from.toString(), to.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"        case DeleteCommand.COMMAND:","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"            return new DeleteCommand(Integer.parseInt(input[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"            return new HelpCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":76}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import tasklists.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    public static class InvalidFilePathException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"        public InvalidFilePathException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"            super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"    public static class InvalidFormatException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        public InvalidFormatException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"    public static final String FILEPATH \u003d \"data/data.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"    public final Path path;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"    public Storage() throws InvalidFilePathException {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"        this.path \u003d Paths.get(FILEPATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        if (!path.toString().endsWith(\".txt\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"            throw new InvalidFilePathException(\"Storage must end with \u0027.txt\u0027\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"    private boolean checkFormat(String[] input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"        if (input[0].equals(\"T\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"            return input.length \u003d\u003d 3;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"        } else if (input[0].equals(\"D\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"            return input.length \u003d\u003d 4;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"        } else if (input[0].equals(\"E\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"            return input.length \u003d\u003d 5;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"    public TaskList readFile() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"            return new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"            for (int i\u003d0; i \u003c lines.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"                String line \u003d lines.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"                String[] input \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"                if (!checkFormat(input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"                    throw new InvalidFormatException(\"Invalid format detected at line: \" + i);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"                    if (input[0].equals(\"T\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"                        Task t \u003d new Task(input[2]);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"                        if (input[1].equals(\"1\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"                            t.setDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"                        tasks.add(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"                    } else if (input[0].equals(\"D\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"                        Deadline d \u003d new Deadline(input[2],input[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"                        if (input[1].equals(\"1\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"                            d.setDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"                        tasks.add(d);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"                        Event e \u003d new Event(input[2], input[3], input[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"                        if (input[1].equals(\"1\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"smolegz"},"content":"                            e.setDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"smolegz"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"smolegz"},"content":"                        tasks.add(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"smolegz"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"smolegz"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"smolegz"},"content":"            return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"smolegz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"smolegz"},"content":"            throw new DukeException(\"I/O error detected...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"smolegz"},"content":"    public void saveFile(TaskList taskLs) throws DukeException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"smolegz"},"content":"        List\u003cTask\u003e tasks \u003d taskLs.getList();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"smolegz"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(path.toString()));","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"smolegz"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"smolegz"},"content":"                bw.write(t.encode());","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"smolegz"},"content":"                bw.newLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"smolegz"},"content":"            bw.flush();","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"smolegz"},"content":"            bw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"smolegz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"smolegz"},"content":"           Files.createDirectories(Paths.get(\"data\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"smolegz"},"content":"           saveFile(taskLs);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"smolegz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"smolegz"},"content":"            throw new DukeException(\"I/O Exception Detected\");","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":112}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":" * Deadline is a subclass of task.Task that stores a task with a completion date.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    ","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    private String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    private LocalDate date;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"     *","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"     * @param s The name of the deadline.","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"     * @param by The time at which the deadline should be completed.","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    public Deadline(String s, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"        super(s);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"            date \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"    public String encode() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"        String s \u003d \"D|\" + (super.getStatus() ? 1 : 0) + \"|\" + super.getTask() + \"|\" + by;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        return s;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"        return \"[D][\" + (super.getStatus() ? \"X\" : \" \") + \"] \" +","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"                super.getTask() + \"(by: \" + by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":44}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":" * Event is a subclass of task.Task. It stores information of a task including","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":" * the start and end date.","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    private String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    private String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    LocalDateTime start;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    LocalDateTime end;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"     * Constructor for Event with a task name, start and end date.","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"     * @param s Name of the event.","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"     * @param from The start timing of the event.","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"     * @param to The end of the event.","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"    public Event(String s, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"        super(s);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            start \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"            end \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"            this.from \u003d start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"            this.to \u003d end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"    public String encode() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"        String s \u003d \"E|\" + (super.getStatus() ? 1 : 0) + \"|\" + super.getTask()","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"                + \"|\" + from + \"|\" + to;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"        return s;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"        return \"[E][\" + (super.getStatus() ? \"X\" : \" \") + \"] \" + super.getTask()","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"                + \"(From: \" + from + \" To: \" + to + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":52}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":" * The task.Task class encapsulates a task to be tracked by Howie.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":" * It stores information of the task and its status.","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":" * @author Koo Zhuo Hui","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"    private String task;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"     * Constructor for task.Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"     * @param s The name of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    public Task(String s) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        this.task \u003d s;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"     * Retrieves the name of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"     * @return Name of task.","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"        return task;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"     * Retrieves the status of a task.","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"     * @return Whether task.Task is completed, or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"        return isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"     * Set task.Task to complete status.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"     * @return Returns itself.","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"    public Task setDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"        return this;","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"     * Set task.Task to undone status.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"     * @return Returns itself.","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"    public Task setUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"        return this;","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"    public String encode() {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"        String s \u003d \"T|\" + (isDone ? 1 : 0) + \"|\" + task;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"        return s;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"     * Convert this task.Task to a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"     * @return A string representation of task.Task, including its status.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"        return \"[T][\" +(isDone ? \"X\" : \" \") + \"] \" + task;","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":68}},{"path":"src/main/java/tasklists/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package tasklists;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import java.util.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"        tasks.add(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    public Task remove(int i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"        return tasks.remove(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":32}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    private final BufferedReader br;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"     * Prints a vertical line.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"    public static void printVLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"------------------------------------\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"        intro();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        this.br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"    public String[] getUserCommand() throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"        return br.readLine().split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"    private void intro() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Hello! I\u0027m Howie! My hobby is to keep track of TASKS. Let me help you!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"So, what can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"     * Prints the list of tasks that is currently stored by Howie.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"     * @param tasks The collection of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"    public static void printAllTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"            System.out.println(\"Your list is now EMPTY! Time for you to have a break!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"            printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"You have \" + tasks.size() + \" left. There are:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"        for (int i\u003d1; i\u003c\u003dtasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"            Task t \u003d tasks.get(i-1);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"            System.out.println(i +\".\" + t);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"     * Exits the program when exit command is entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Bye! I\u0027ll see you when I see you :)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"     * Prints the list of commands available to Howie.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"    public static void helpMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"        System.out.println(\"Below is a list of available commands for me:\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"                \"   todo [task_name]\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"                \"   event [task_name] /from [date] /to [date]\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"                \"   deadline [task_name] /by [date]\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"                \"   list - to see all tasks\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"                \"   mark/unmark [index]\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"                \"   bye - to exit the programme\");","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"        printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"smolegz"},"content":"     * Prints a message when a blank task has been entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"smolegz"},"content":"    public static void emptyTaskMessage() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"smolegz"},"content":"        Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"Hey! You\u0027ve just entered an unnamed task... Try to give a description/name of your task :)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"smolegz"},"content":"     * Prints a message when an invalid format has been entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"smolegz"},"content":"    public static void invalidFormat() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"smolegz"},"content":"        Ui.printVLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"smolegz"},"content":"        throw new DukeException(\"I see you\u0027ve entered an invalid format. Type \u0027help\u0027 if you\u0027re unsure :)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"smolegz":98}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"help","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"smolegz":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"java -classpath ..\\bin Howie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"smolegz":1,"-":20}}]
