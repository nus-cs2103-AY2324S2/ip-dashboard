[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    mainClass.set(\"johnny.Launcher\")","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    archiveBaseName \u003d \"Johnny\"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SimHanKiong":18,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"# Johnny User Guide","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"![Ui](Ui.png \"Johnny\")","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"Welcome to Johnny, a chatbot that tracks all your tasks and saves it for reuse. ","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"There are 3 variations of tasks you can save, todos, deadlines and events.","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"## Adding a todo: todo","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"Adds a todo to the list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"Format: `todo NAME`","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"Example: `todo take a nap`","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"Go get this done bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"[T][ ] take a nap","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"You still have _ tasks in you list bro.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"## Adding a deadline: deadline","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"Adds a deadline to the list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"Format: `deadline NAME /by BY (yyyy/MM/dd HHmm)`","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"Example: `deadline return book /by 2023/08/12 1230`","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"Go get this done bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"[D][ ] return book (by: Aug 12 2023 12:30 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"You still have _ tasks in you list bro.","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"## Adding an event: event","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"Adds an event to the list of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"Format: `event NAME /from FROM (yyyy/MM/dd HHmm) /to TO (yyyy/MM/dd HHmm)`","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"Example: `event party /from 2023/09/01 1800 /to 2023/09/01 2359`","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"Go get this done bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"[E][ ] part (from: Sep 01 2023 06:00 PM to: Sep 01 2023 11:59 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"You still have _ tasks in you list bro.","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"## Listing tasks: list","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"Lists all tasks being tracked","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"Format: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"Example: `list`","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"Get all these done bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"1. [T][ ] take a nap","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"2. [D][ ] return book (by: Aug 12 2023 12:30 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"## Marking tasks: mark","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"Mark tasks being tracked based on indices","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"Format: `mark INDICES`","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"Example: `mark 1 2`","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"Finally done bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"1. [T][X] take a nap","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"2. [D][X] return book (by: Aug 12 2023 12:30 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"## Unmarking tasks: unmark","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"Unmark tasks being tracked based on indices","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"Format: `unmark INDICES`","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"Example: `unmark 2`","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"Why are you not done yet bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"1. [D][ ] return book (by: Aug 12 2023 12:30 PM)","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"## Deleting tasks: delete","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"Delete tasks being tracked based on indices","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"Format: `delete INDICES`","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"Tasks removed. Why so lazy bro:","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"1. [T][ ] take a nap","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"You still have _ tasks in your list bro.","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"## Exit: bye","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"Application will close upon command.","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"## Save tasks in local storage","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"Tasks will be saved into your local computer upon edits. ","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"You don\u0027t have to worry about losing changes if you computer crashes.","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"## Load tasks from local storage","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":118,"author":{"gitId":"SimHanKiong"},"content":"Tasks will be loaded from you local computer automatically. No further steps are needed.","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"SimHanKiong":102,"-":16}},{"path":"src/main/java/johnny/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"    public static DialogBox getJohnnyDialog(String text, Image img) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"SimHanKiong":61}},{"path":"src/main/java/johnny/Johnny.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.parser.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * The chatbot Johnny.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" * It takes in specified commands to manage Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"public class Johnny {","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    /** File path to where the data will be stored. */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /** Storage component to read and store Tasks in a text file. */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    /** TaskList component to store tasks in a list. */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    /** Ui component determines responses to user. */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for Johnny chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     * Instantiates Ui and Storage component.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Instantiates TaskList component using data in the Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Ui will print any error caught in the chatbot to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    public Johnny() {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        } catch (JohnnyException e) {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     * Starts the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     * Print welcome message and reads command from user and responds with the appropriate response.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     * Ui will print any error caught in the chatbot to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"            if (c.isExit()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"            return ui.getOutput();","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        } catch (JohnnyException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"            return ui.getOutput();","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"     * Generates the welcome message in the Ui and outputs it.","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"     * @return Welcome message.","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"    public String getWelcome() {","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"        return ui.getOutput();","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"SimHanKiong":73}},{"path":"src/main/java/johnny/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":" * Entry point of the application.","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"     * Launches the Johnny chatbot application.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"     * @param args Unused.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"SimHanKiong":19}},{"path":"src/main/java/johnny/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    private Johnny johnny \u003d new Johnny();","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJohnny(johnny);","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"            stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"SimHanKiong":32}},{"path":"src/main/java/johnny/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    private Johnny johnny;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Slave.png\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    private final Image johnnyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Johnny.png\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    public void setJohnny(Johnny j) {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        johnny \u003d j;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"                DialogBox.getJohnnyDialog(johnny.getWelcome(), johnnyImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    @FXML","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        String response \u003d johnny.getResponse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"                DialogBox.getJohnnyDialog(response, johnnyImage)","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"SimHanKiong":52}},{"path":"src/main/java/johnny/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when a Deadline is being added.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    /** Name of the Deadline. */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    private String name;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /** When the Deadline is due by. */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for AddDeadlineCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of the Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     * @param by When the Deadline is due by.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    public AddDeadlineCommand(String name, LocalDateTime by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a AddDeadlineCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * Instantiates a new Deadline, adds it to TaskList, writes it to Storage and Ui shows appropriate response.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new Deadline(name, by);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        storage.appendToFile(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        ui.showAddTask(task, tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":60}},{"path":"src/main/java/johnny/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when an Event is being added.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    /** Name of the Event. */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    private String name;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /** When the Event starts from. */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    /** When the Event lasts to. */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     * @param from When the Event starts from.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * @param to When the Event lasts to.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public AddEventCommand(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a AddEventCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"     * Instantiates a new Event, adds it to TaskList, writes it to Storage and Ui shows appropriate response.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new Event(name, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"        storage.appendToFile(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        ui.showAddTask(task, tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":64}},{"path":"src/main/java/johnny/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when a Todo is being added.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    /** Name of the Deadline. */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    private String name;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for AddTodoCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public AddTodoCommand(String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a AddTodoCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Instantiates a new Command, adds it to TaskList, writes it to Storage and Ui shows appropriate response.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new ToDo(name);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        storage.appendToFile(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        ui.showAddTask(task, tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":54}},{"path":"src/main/java/johnny/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":" * Command classes inherit from this abstract class.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of Commands.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage or Task does not exist in TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"     * Determines if chatbot should continue running.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     * @return Boolean to continue or stop the loop.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"SimHanKiong":30}},{"path":"src/main/java/johnny/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when a Task is being deleted.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    /** Indices of Task in TaskList being deleted. */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    private List\u003cInteger\u003e indices;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     * @param indices Indices of Tasks in TaskList being deleted.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    public DeleteCommand(List\u003cInteger\u003e indices) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a DeleteCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Deletes Task, rewrite TaskList to Storage and Ui shows appropriate response.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage or Task does not exist in TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e deletedTasks \u003d tasks.delete(indices);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        storage.rewriteFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        ui.showDelete(deletedTasks, tasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":54}},{"path":"src/main/java/johnny/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when a user exits chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a ExitCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"     * Ui shows exit response.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        ui.showEnd();","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     * Exits so chatbot stops running.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     * @return True so the loop stops running.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        return true;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":35}},{"path":"src/main/java/johnny/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens user tries to find Tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    /** String to be matched to Task name. */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    private String keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     * @param keyword SString to be matched to Task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a FindCommand.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Finds Task, appends to a new TaskList and Ui shows appropriate response.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException Ignore as error will not be thrown.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e foundTasks \u003d tasks.find(keyword);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"SimHanKiong":53}},{"path":"src/main/java/johnny/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when TaskList is listed.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a ListCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"     * Ui prints all Tasks in TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException Ignore.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"        ui.showList(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":37}},{"path":"src/main/java/johnny/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when a Task is being marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    /** Indices of Task in TaskList being marked. */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    private List\u003cInteger\u003e indices;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     * @param indices Indices of Task in TaskList being marked.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    public MarkCommand(List\u003cInteger\u003e indices) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a MarkCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Mark Tasks, rewrite TaskList to Storage and Ui shows appropriate response.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage or Task does not exist in TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e markedTasks \u003d tasks.mark(indices);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        storage.rewriteFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        ui.showMark(markedTasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":54}},{"path":"src/main/java/johnny/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.storage.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import johnny.ui.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":" * Controls what happens when a Task is being unmarked.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    /** Indices of Task in TaskList being unmarked. */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    private List\u003cInteger\u003e indices;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     * @param indices Indices of Task in TaskList being unmarked.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    public UnmarkCommand(List\u003cInteger\u003e indices) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        this.indices \u003d indices;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Executes the process of a UnmarkCommand.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Unmark Tasks, rewrite TaskList to Storage and Ui shows appropriate response.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     * @param ui Ui to print responses.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * @param storage Storage for data.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If data cannot be written to Storage or Task does not exist in TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e unmarkedTasks \u003d tasks.unmark(indices);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        storage.rewriteFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        ui.showUnmark(unmarkedTasks);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     * Returns False so chatbot can continue running.","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     * @return False so the loop keeps running.","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":54}},{"path":"src/main/java/johnny/exceptions/JohnnyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.exceptions;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":" * Custom exception thrown by methods in Johnny chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"public class JohnnyException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor to create Exception.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"     * @param errorMessage Error message to be printed by Ui when caught.","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    public JohnnyException(String errorMessage) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":17}},{"path":"src/main/java/johnny/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.AddDeadlineCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.AddEventCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.AddTodoCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.DeleteCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.ExitCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.FindCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.ListCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.MarkCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"import johnny.commands.UnmarkCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":" * Parses the input from user into Commands to be executed.","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    /** Format of DateTime in Tasks entered by user. */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * Parses the command into various Commands depending on the type of command.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * @param fullCommand Input entered by user.","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * @return Command that corresponds to the user input.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If command does not match any existing command or format.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public static Command parse(String fullCommand) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cString\u003e parsedCommand \u003d Arrays.asList(fullCommand.split(\" \"));","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        checkIfCommandIsEmpty(parsedCommand, \"Enter a command bro.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        String command \u003d parsedCommand.get(0);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        switch (command) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cInteger\u003e indices \u003d getIndicesFromCommand(parsedCommand,","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"                    \"Which task do you want to mark bro?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"            return new MarkCommand(indices);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"            indices \u003d getIndicesFromCommand(parsedCommand,","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"                    \"Which task do you want to unmark bro?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"            return new UnmarkCommand(indices);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"            indices \u003d getIndicesFromCommand(parsedCommand,","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"                    \"Which task am I supposed to delete bro?\");","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"            return new DeleteCommand(indices);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"            return parseTodoCommand(parsedCommand);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"            return parseDeadlineCommand(parsedCommand);","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        case \"event\":","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"            return parseEventCommand(parsedCommand);","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        case \"find\":","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"            return parseFindCommand(parsedCommand);","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Your command does not make sense bro.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"    private static void checkIfCommandIsEmpty(List\u003cString\u003e command, String errorMessage) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"    private static void checkIfCommandIsTooShort(List\u003cString\u003e command, String errorMessage) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"        if (command.size() \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"    private static List\u003cInteger\u003e getIndicesFromCommand(List\u003cString\u003e command, String commandTooShortError)","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"            throws JohnnyException {","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"            checkIfCommandIsTooShort(command, commandTooShortError);","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"            return command.subList(1, command.size())","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"                    .stream()","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"                    .map(i -\u003e Integer.parseInt(i) - 1)","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"                    .sorted(Comparator.reverseOrder())","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Enter a valid number bro.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"    private static AddTodoCommand parseTodoCommand(List\u003cString\u003e command) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"        checkIfCommandIsTooShort(command, \"What is your todo bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"        String name \u003d String.join(\" \", command.subList(1, command.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"        assert !name.equals(\"\") : \"Name should not be empty\";","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"        return new AddTodoCommand(name);","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"    private static void checkIfIndexNotFound(int index, String errorMessage) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"    private static LocalDateTime parseToLocalDateTime(String dateTime) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"            return LocalDateTime.parse(dateTime, INPUT_DATE_FORMAT);","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Date and Time should be in the format of YYYY/MM/DD HHMM bro.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"SimHanKiong"},"content":"    private static AddDeadlineCommand parseDeadlineCommand(List\u003cString\u003e command) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"SimHanKiong"},"content":"        checkIfCommandIsTooShort(command, \"What is your deadline bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"SimHanKiong"},"content":"        int i \u003d command.indexOf(\"/by\");","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"SimHanKiong"},"content":"        checkIfIndexNotFound(i, \"When is your deadline by bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"SimHanKiong"},"content":"        String name \u003d String.join(\" \", command.subList(1, i));","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"SimHanKiong"},"content":"        assert !name.equals(\"\") : \"Name should not be empty\";","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"SimHanKiong"},"content":"        String by \u003d String.join(\" \", command.subList(i + 1, command.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"SimHanKiong"},"content":"        return new AddDeadlineCommand(name, parseToLocalDateTime(by));","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"SimHanKiong"},"content":"    private static AddEventCommand parseEventCommand(List\u003cString\u003e command) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"SimHanKiong"},"content":"        checkIfCommandIsTooShort(command, \"What is your deadline bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"SimHanKiong"},"content":"        int i \u003d command.indexOf(\"/from\");","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"SimHanKiong"},"content":"        checkIfIndexNotFound(i, \"When does your event start from bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"SimHanKiong"},"content":"        int j \u003d command.indexOf(\"/to\");","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"SimHanKiong"},"content":"        checkIfIndexNotFound(j, \"When does your event last to bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"SimHanKiong"},"content":"        String name \u003d String.join(\" \", command.subList(1, i));","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"SimHanKiong"},"content":"        assert !name.equals(\"\") : \"Name should not be empty\";","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"SimHanKiong"},"content":"        String from \u003d String.join(\" \", command.subList(i + 1, j));","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"SimHanKiong"},"content":"        String to \u003d String.join(\" \", command.subList(j + 1, command.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"SimHanKiong"},"content":"        return new AddEventCommand(name, parseToLocalDateTime(from), parseToLocalDateTime(to));","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"SimHanKiong"},"content":"    private static FindCommand parseFindCommand(List\u003cString\u003e command) throws JohnnyException {","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"SimHanKiong"},"content":"        checkIfCommandIsTooShort(command, \"What task do you want to find bro?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"SimHanKiong"},"content":"        String keyword \u003d String.join(\" \", command.subList(1, command.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"SimHanKiong"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":150}},{"path":"src/main/java/johnny/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":" * Controls data read and written to a text file.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    /** Format of DateTime in Tasks for storing in Storage. */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    /** Where the data is read from and written to. */","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for Storage.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @param filePath Where the data is read from and written to.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"     * Reads Tasks from given file path and stores them into TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"     * If directory or file does not exist, create them and return empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"     * @return Populated or empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If directory or file cannot be created.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"    public List\u003cTask\u003e load() throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"            if (!file.isFile() \u0026\u0026 file.getParentFile().mkdir()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"                return tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"                String[] parsedInput \u003d input.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"                Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"                String taskType \u003d parsedInput[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"                switch(taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"                case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"                    task \u003d new ToDo(parsedInput[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"                case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"                    LocalDateTime by \u003d LocalDateTime.parse(parsedInput[3], INPUT_DATE_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"                    task \u003d new Deadline(parsedInput[2], by);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"                case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"                    LocalDateTime from \u003d LocalDateTime.parse(parsedInput[3], INPUT_DATE_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"                    LocalDateTime to \u003d LocalDateTime.parse(parsedInput[4], INPUT_DATE_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"                    task \u003d new Event(parsedInput[2], from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"                default:","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"                    throw new JohnnyException(\"The file has been corrupted bro.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"                if (parsedInput[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"                    task.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"            scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"            return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"I can\u0027t create a new file bro: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"     * Writes all Tasks in TaskList into the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList to be stored.","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If file cannot be written to.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"    public void rewriteFile(TaskList tasks) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"                fw.write(tasks.get(i).addToFile());","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Cannot write to file bro: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"     * Adds a new Task at the bottom the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"     * @param task Task to be added to file.","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If file cannot be written to.","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"    public void appendToFile(Task task) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"        try (FileWriter fw \u003d new FileWriter(filePath, true)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"SimHanKiong"},"content":"            fw.write(task.addToFile());","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Cannot write to file bro: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":123}},{"path":"src/main/java/johnny/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":" * Represents a deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    /** When the Deadline is due by. */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"     * Calls super class constructor to store name of task.","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of the Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     * @param by When the Deadline is due by.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"        super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Deadline for Ui to print.","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Deadline for printing.","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.formatOutputDate(by) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Deadline for storing in Storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Deadline to store.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        return \"D | \" + super.addToFile() + \" | \" + super.formatInputDate(by) + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":45}},{"path":"src/main/java/johnny/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":" * Represents an event.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    /** When the Event starts from. */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    /** When the Event lasts to. */","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"     * Calls super class constructor to store name of task.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of the Event.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * @param from When the Event starts from.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     * @param to When the Event lasts to.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"        super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Event for Ui to print.","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Event for printing.","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.formatOutputDate(from)","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"                + \" to: \" + super.formatOutputDate(to) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Event for storing in Storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Event to store.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        return \"E | \" + super.addToFile() + \" | \" + super.formatInputDate(from)","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"                + \" | \" + super.formatInputDate(to) + \"\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":51}},{"path":"src/main/java/johnny/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":" * Represents a task.","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    /** Format of DateTime in Tasks for storing in Storage. */","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    private static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    /** Format of DateTime in Tasks for Ui to print. */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    /** Name of Task. */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    private String name;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    /** Boolean to check if Task is done. */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of Task.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     * Marks Task as done.","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    public void mark() {","lastModifiedDate":"2024-01-20"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"     * Unmarks Task to not done.","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Task for Ui to print.","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Task for printing.","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"        String x \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-20"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"        return \"[\" + x + \"] \" + name;","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Task for storing in Storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Task to store.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"        String isDone \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"        return isDone + \" | \" + name;","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"     * Formats DateTime in Tasks for storing in Storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"     * @param dateTime DateTime to be formatted.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of formatted DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"    public String formatInputDate(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"        return dateTime.format(INPUT_DATE_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"     * Formats DateTime in Tasks for Ui to print.","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"     * @param dateTime DateTime to be formatted.","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of formatted DateTime.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"    public String formatOutputDate(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"        return dateTime.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"     * Checks if Task name contains keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"     * @param keyword String to be matched to Task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"     * @return True if name contains else false;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"        return name.contains(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"SimHanKiong":94}},{"path":"src/main/java/johnny/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":" * Represents list of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    /** List of tasks */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for TaskList using a lists of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks List of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for empty TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"     * Gets a specific Task using the index in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     * @param index Index of Task to be retrieved.","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"     * @return Task at the given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If no Task exists at given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"    public Task get(int index) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"This task does not exist bro.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"     * Marks a specific Task using the index in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"     * @param indices Indices of Task to be marked.","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"     * @return Task at the given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If no Task exists at given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"    public List\u003cTask\u003e mark(List\u003cInteger\u003e indices) throws JohnnyException {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cTask\u003e markedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"            for (int i \u003d 0; i \u003c indices.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"                int index \u003d indices.get(i);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"                task.mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"                markedTasks.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"            return markedTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Some of the tasks do not exist bro.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"     * Unmarks a specific Task using the index in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"     * @param indices Indices of Task to be unmarked.","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"     * @return Task at the given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If no Task exists at given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"    public List\u003cTask\u003e unmark(List\u003cInteger\u003e indices) throws JohnnyException {","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cTask\u003e unmarkedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"            for (int i \u003d 0; i \u003c indices.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"                int index \u003d indices.get(i);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"                task.unmark();","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"                unmarkedTasks.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"            return unmarkedTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Some of the tasks do not exist bro.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"     * Deletes a specific Task using the index in the TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"     * @param indices Indices of Task to be deleted.","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"     * @return Task at the given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException If no Task exists at given index.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"    public List\u003cTask\u003e delete(List\u003cInteger\u003e indices) throws JohnnyException {","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"            List\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"            for (int i \u003d 0; i \u003c indices.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"                int index \u003d indices.get(i);","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"                Task deletedTask \u003d tasks.remove(index);","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"                deletedTasks.add(deletedTask);","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"            return deletedTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"            throw new JohnnyException(\"Some of the tasks do not exist bro.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"     * Gets size of TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"     * @return Length of TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"SimHanKiong"},"content":"    public int size() {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"SimHanKiong"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"SimHanKiong"},"content":"     * Adds Task to TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"SimHanKiong"},"content":"     * @param task Task to be added to TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"SimHanKiong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"SimHanKiong"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"SimHanKiong"},"content":"     * Finds all Tasks in TaskList whose names contains specified keyword.","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"SimHanKiong"},"content":"     * @param keyword String to be matched to Task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"SimHanKiong"},"content":"     * @return All Tasks that contains keyword.","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"SimHanKiong"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"SimHanKiong"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"SimHanKiong"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"SimHanKiong"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"SimHanKiong"},"content":"        return foundTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"SimHanKiong"},"content":"     * Checks if 2 TaskLists are equal by checking all Tasks in TaskList.","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"SimHanKiong"},"content":"     * @param o Object to be compared with.","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"SimHanKiong"},"content":"     * @return True if the TaskLists are equal else false.","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"SimHanKiong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"SimHanKiong"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"SimHanKiong"},"content":"        } else if (o instanceof TaskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"SimHanKiong"},"content":"            TaskList t \u003d (TaskList) o;","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"SimHanKiong"},"content":"            if (this.size() !\u003d t.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"SimHanKiong"},"content":"                return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"SimHanKiong"},"content":"            for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"SimHanKiong"},"content":"                if (!this.tasks.get(i).equals(t.tasks.get(i))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"SimHanKiong"},"content":"                    return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"SimHanKiong"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"SimHanKiong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"SimHanKiong"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"SimHanKiong"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"SimHanKiong"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":173}},{"path":"src/main/java/johnny/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":" * Represents a todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"     * Constructor for Todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"     * Calls super class constructor to store name of task.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"     * @param name Name of the Todo.","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"        super(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Todo for Ui to print.","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Todo for printing.","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"     * Formats Todo for storing in Storage.","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"     * @return String representation of Todo to store.","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"    public String addToFile() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        return \"T | \" + super.addToFile() + \"\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":38}},{"path":"src/main/java/johnny/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import johnny.tasks.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":" * Handles all responses to user.","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"    /** Output to be returned to GUI */","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    private StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"     * Prints error message to user.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"     * @param errorMessage Error message of error to be printed.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"        output.append(errorMessage);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"     * Prints welcome message to user.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Johnny here. What do you want bro?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"     * Prints end message to user.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    public void showEnd() {","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Bye bro. I\u0027m going back to sleep.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"     * Prints all Tasks in TaskList to user.","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList to be printed","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"     * @throws JohnnyException Ignore as for loop will prevent error.","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"    public void showList(TaskList tasks) throws JohnnyException {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"            output.append(\"You have no tasks bro. Stop being lazy and add some tasks.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"            return;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Get all these done bro:\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"            output.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"     * Prints marked Tasks to user.","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"     * @param markedTasks Tasks to be marked.","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"    public void showMark(List\u003cTask\u003e markedTasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Finally done bro:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"        for (int i \u003d 0; i \u003c markedTasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"            output.append(i + 1).append(\". \").append(markedTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"     * Prints unmarked Tasks to user.","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"     * @param unmarkedTasks Tasks to be unmarked.","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"SimHanKiong"},"content":"    public void showUnmark(List\u003cTask\u003e unmarkedTasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Why are you not done yet bro: \\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"SimHanKiong"},"content":"        for (int i \u003d 0; i \u003c unmarkedTasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"SimHanKiong"},"content":"            output.append(i + 1).append(\". \").append(unmarkedTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"SimHanKiong"},"content":"     * Prints deleted Tasks to user.","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"SimHanKiong"},"content":"     * @param deletedTasks Tasks to be deleted.","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks TaskList that the Task belonged to.","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"SimHanKiong"},"content":"    public void showDelete(List\u003cTask\u003e deletedTasks, TaskList tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Tasks removed. Why so lazy bro: \\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"SimHanKiong"},"content":"        for (int i \u003d 0; i \u003c deletedTasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"SimHanKiong"},"content":"            output.append(i + 1).append(\". \").append(deletedTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"You still have \").append(tasks.size()).append(\" tasks in your list bro.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"SimHanKiong"},"content":"     * Prints added Task and number of Tasks in TaskList to user.","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"SimHanKiong"},"content":"     * @param task Task to be added.","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"SimHanKiong"},"content":"     * @param tasks Tasks left in TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"SimHanKiong"},"content":"    public void showAddTask(Task task, TaskList tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"Go get this done bro: \\n\").append(task).append(\"\\n\").append(\"You still have \")","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"SimHanKiong"},"content":"                .append(tasks.size()).append(\" tasks in your list bro.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"SimHanKiong"},"content":"     * Prints the Tasks found that matches user query.","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"SimHanKiong"},"content":"     * @param foundTasks List of Tasks that matches user query.","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"SimHanKiong"},"content":"    public void showFoundTasks(List\u003cTask\u003e foundTasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"SimHanKiong"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"SimHanKiong"},"content":"            output.append(\"No matches bro.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"SimHanKiong"},"content":"        output.append(\"All these tasks match bro:\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"SimHanKiong"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"SimHanKiong"},"content":"            output.append(i + 1).append(\". \").append(foundTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"SimHanKiong"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"SimHanKiong"},"content":"     * Returns the Ui response and resets the output String.","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"SimHanKiong"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"SimHanKiong"},"content":"     * @return String that is passed into GUI.","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"SimHanKiong"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"SimHanKiong"},"content":"    public String getOutput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"SimHanKiong"},"content":"        String temp \u003d output.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"SimHanKiong"},"content":"        assert !temp.equals(\"\") : \"Output should not be empty\";","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"SimHanKiong"},"content":"        output \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"SimHanKiong"},"content":"        return temp;","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SimHanKiong":135}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"SimHanKiong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"johnny.MainWindow\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"SimHanKiong":19}},{"path":"src/test/java/johnny/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2013-06-15T23:50\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[D][ ] return book (by: Jun 15 2013 11:50 PM)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2013-06-15T23:50\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        deadline.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[D][X] return book (by: Jun 15 2013 11:50 PM)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2013-06-15T23:50\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"D | 0 | return book | 2013/06/15 2350\\n\", deadline.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"2013-06-15T23:50\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        deadline.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"D | 1 | return book | 2013/06/15 2350\\n\", deadline.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"SimHanKiong":37}},{"path":"src/test/java/johnny/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_unMarkedEvent_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"        Event event \u003d new Event(\"borrow book\",","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-07-14T00:30\"),","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-08-14T12:30\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[E][ ] borrow book (from: Jul 14 2001 12:30 AM to: Aug 14 2001 12:30 PM)\",","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"                event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_markedEvent_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"        Event event \u003d new Event(\"borrow book\",","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-07-14T00:30\"),","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-08-14T12:30\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        event.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[E][X] borrow book (from: Jul 14 2001 12:30 AM to: Aug 14 2001 12:30 PM)\",","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"                event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_unMarkedEvent_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        Event event \u003d new Event(\"borrow book\",","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-07-14T00:30\"),","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-08-14T12:30\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"E | 0 | borrow book | 2001/07/14 0030 | 2001/08/14 1230\\n\", event.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_markedEvent_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        Event event \u003d new Event(\"borrow book\",","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-07-14T00:30\"),","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"                LocalDateTime.parse(\"2001-08-14T12:30\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        event.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"E | 1 | borrow book | 2001/07/14 0030 | 2001/08/14 1230\\n\", event.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"SimHanKiong":47}},{"path":"src/test/java/johnny/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import java.util.List;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"import johnny.exceptions.JohnnyException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public void get_indexWithinBounds_success() throws JohnnyException {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"        Task expected \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        list.add(expected);","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(expected, tasks.get(0));","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public void get_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"            tasks.get(-1);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"            fail();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        } catch (JohnnyException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"            assertEquals(\"This task does not exist bro.\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"    public void size_filledList_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"        Task dummy1 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        Task dummy2 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        list.add(dummy1);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"        list.add(dummy2);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    public void size_emptyList_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"SimHanKiong"},"content":"    public void find_keywordFound_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"SimHanKiong"},"content":"        Task dummy1 \u003d new Task(\"book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"SimHanKiong"},"content":"        Task dummy2 \u003d new Task(\"return book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"SimHanKiong"},"content":"        list.add(dummy1);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"SimHanKiong"},"content":"        list.add(dummy2);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"SimHanKiong"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(list, tasks.find(\"book\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"SimHanKiong"},"content":"    public void find_keywordNotFound_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"SimHanKiong"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"SimHanKiong"},"content":"        Task dummy1 \u003d new Task(\"book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"SimHanKiong"},"content":"        Task dummy2 \u003d new Task(\"return book\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"SimHanKiong"},"content":"        list.add(dummy1);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"SimHanKiong"},"content":"        list.add(dummy2);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"SimHanKiong"},"content":"        TaskList tasks \u003d new TaskList(list);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(new ArrayList\u003c\u003e(), tasks.find(\"blablabla\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"SimHanKiong":74}},{"path":"src/test/java/johnny/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_unMarkedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new Task(\"do homework\");","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[ ] do homework\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_markedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new Task(\"do homework\");","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"        task.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[X] do homework\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_unMarkedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new Task(\"do homework\");","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"0 | do homework\", task.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_markedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        Task task \u003d new Task(\"do homework\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"        task.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"1 | do homework\", task.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"SimHanKiong"},"content":"    public void formatInputDate_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"SimHanKiong"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2013-01-23T21:30\");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"2013/01/23 2130\", new Task(\"dummy\").formatInputDate(dateTime));","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"SimHanKiong"},"content":"    public void formatOutputDate_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SimHanKiong"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"2013-01-23T21:30\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"Jan 23 2013 09:30 PM\", new Task(\"dummy\").formatOutputDate(dateTime));","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"SimHanKiong":49}},{"path":"src/test/java/johnny/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"package johnny.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_unMarkedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"        ToDo todo \u003d new ToDo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[T][ ] sleep\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"    public void toString_markedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"        ToDo todo \u003d new ToDo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"SimHanKiong"},"content":"        todo.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"[T][X] sleep\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_unMarkedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"SimHanKiong"},"content":"        ToDo todo \u003d new ToDo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"T | 0 | sleep\\n\", todo.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"SimHanKiong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"SimHanKiong"},"content":"    public void addToFile_markedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"SimHanKiong"},"content":"        ToDo todo \u003d new ToDo(\"sleep\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"SimHanKiong"},"content":"        todo.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"SimHanKiong"},"content":"        assertEquals(\"T | 1 | sleep\\n\", todo.addToFile());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"SimHanKiong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"SimHanKiong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"SimHanKiong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"SimHanKiong":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SimHanKiong"},"content":"todo borrow book","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"SimHanKiong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"SimHanKiong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"SimHanKiong"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"SimHanKiong"},"content":"mark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"SimHanKiong"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"SimHanKiong"},"content":"unmark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"SimHanKiong"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"SimHanKiong"},"content":"delete 2","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"SimHanKiong"},"content":"blablabla","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"SimHanKiong"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"SimHanKiong":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"SimHanKiong"},"content":"REM run the program, feed johnny.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SimHanKiong":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"SimHanKiong"},"content":"if ! javac -cp ../src/main/java/johnny -Xlint:none -d ../bin ../src/main/java/johnny/*.java","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"SimHanKiong"},"content":"# run the program, feed johnny.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SimHanKiong"},"content":"java -classpath ../bin Johnny \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SimHanKiong":3,"-":35}}]
