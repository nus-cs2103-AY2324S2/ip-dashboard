[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":2,"-":22}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"        super(description, Task.TaskType.DEADLINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        //String[] arr \u003d by.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public String getType(){","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        return \"D\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        return String.format(\"%s |  %d | %s | %s\", getType(), isDone? 1:0, description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    private String FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/src/main/java/data/duke.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        tasks \u003d new TaskList(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        String line \u003d \"------------------------------\";","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        Scanner obj \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        System.out.println(\"\\n Hello! I\u0027m Leo\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"                \" What can I do for you?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        while(obj.hasNextLine()){","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"            String res \u003d obj.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"            if (res.equals(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                return;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"            Parser parser \u003d new Parser(res);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"            parser.execute(tasks, ui);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":40,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        super(description, Task.TaskType.EVENT);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"//        String[] arr1 \u003d from.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"//        String[] arr2 \u003d to.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    public String getType(){","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        return \"E\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        return String.format(\"%s |  %d | %s | %s | %s\", getType(), isDone? 1:0, description, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":29}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import duke.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import duke.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    private String input;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    //constructor","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public Parser(String input){","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public void execute(TaskList tasks, Ui ui){","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        String line \u003d \"------------------------------\";","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        String[] elems \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        String action \u003d elems[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        String[] dateFormats \u003d {\"dd/MM/yyyy\", \"MMM dd yyyy\"};","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        int i \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        while(tasks.getTask(i)!\u003d null){","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"            i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        switch (action){","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"                ui.printList(tasks, i);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"                for(int k \u003d0; k \u003c i ; k++){","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"                    if (tasks.getTask(k) !\u003d null){","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"                        Task t \u003d tasks.getTask(k);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"                        String str \u003d t.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"                        if (str.equals(elems[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"                            t.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"[X] \" + elems[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"                for(int k \u003d0; k \u003c i ; k++){","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"                    if (tasks.getTask(k) !\u003d null){","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"                        Task t \u003d tasks.getTask(k);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"                        String str \u003d t.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"                        if (str.equals(elems[1])) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"                            t.unMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"[ ] \" + elems[1] );","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"                Task item \u003d new ToDo(elems[1]);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"                //tasks.setTask(i, item);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"                System.out.println(item.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"                i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"                tasks.addTask(item);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Now you have \" + i + \" task(s) in your list!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"                String[] by \u003d elems[1].split(\"/by \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"                String[] dateTime \u003d by[1].split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"                //LocalDate deadlineDate \u003d LocalDate.parse(by[1].trim(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"                LocalDate deadlineDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"                for (String format : dateFormats) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"                    try {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"                        deadlineDate \u003d LocalDate.parse(by[1].trim(),","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"                                DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"                    } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"                if(deadlineDate !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"                    Task dline \u003d new Deadline(by[0], deadlineDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"                    //lst[i] \u003d dline;","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(dline.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"                    i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"                    //saveToFile(i, lst);","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"                    tasks.addTask(dline);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Now you have \" + i + \" task(s) in your list!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Invalid date and time format -_-\");","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"            //duke.Event","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"                String[] fromto \u003d elems[1].split(\"/\", 3);","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"                LocalDate fromDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"                LocalDate toDate \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"                for (String format : dateFormats) {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"                    try {","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"                        fromDate \u003d LocalDate.parse(fromto[1], DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"                        toDate \u003d LocalDate.parse(fromto[2], DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"                    } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"                if(toDate !\u003d null \u0026 fromDate!\u003dnull) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"                    Task e \u003d new Event(fromto[0], fromDate, toDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"                    //lst[i] \u003d e;","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(e.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"                    i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"                    //saveToFile(i, lst);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"                    tasks.addTask(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Now you have \" + i + \" task(s) in your list!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Invalid date and time format -_-\");","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"                int toDelete \u003d Integer.valueOf(elems[1]) -1;","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"                if(toDelete \u003e\u003d0 \u0026\u0026 toDelete\u003c i){","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"                    tasks.deleteTask(toDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(tasks.getTask(toDelete).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"//                for(int p \u003d toDelete; p\u003c i; p++){","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"//                    lst[p] \u003d lst[p+1];","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"//                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"//                    lst[i - 1] \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"                    i--;","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"Now you have \" + i + \" task(s) in the list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"                    System.out.println(\"That is an invalid task to delete sir??\");","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"                System.out.println(\"Sorry what??, I did not get that!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":152}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    private String FILE_PATH \u003d System.getProperty(\"user.dir\") + \"/src/main/java/data/duke.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    private String filepath;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    public Storage(String filepath){","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public void saveToFile(int size, ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        try (PrintWriter writer \u003d new PrintWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"            for (int i \u003d0; i \u003c size; i++){","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"                writer.println(task.toFileString());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"Could not save tasks to file\" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public ArrayList\u003cTask\u003e loadFromFile(){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        try(BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))){","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"            String line;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"            while((line \u003d reader.readLine()) !\u003d null){","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                //adding the task from the file to be read","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"                //index++;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"                //tasks.set(index,duke.Task.fromFileString(line));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"                tasks.add(Task.fromFileString(line));","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"                index++;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"File not found! Creating new Data File...\");","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"            saveToFile(0, tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            System.out.println(\"Error loading file\" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":47}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"        TODO,","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"        EVENT","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    protected TaskType taskType;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    //function to mark as done","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    //function to unmark","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    public void unMark(){","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public String toString(){","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        return \"[\"+ this.getStatusIcon() +\"] \" + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    public String toFileString(){","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        return String.format(\"%s |  %d | %s\", getType(), isDone? 1:0, description);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    public static Task fromFileString(String fileString){","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        String[] elements \u003d fileString.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        Boolean done \u003d Integer.parseInt(elements[1]) \u003d\u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        //for each type of task","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        switch(elements[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"                ToDo todo \u003d new ToDo((elements[2]));","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"                todo.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"                return todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"                Deadline dline \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"                if(elements.length \u003e\u003d4) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"                    LocalDate deadlineDate \u003d LocalDate.parse(elements[3], DateTimeFormatter.ISO_DATE);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"                    dline \u003d new Deadline(elements[2], deadlineDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"                    dline.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"                return dline;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"                LocalDate fromDate \u003d LocalDate.parse(elements[3], DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"                LocalDate toDate \u003d LocalDate.parse(elements[4], DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"                Event event \u003d new Event(elements[2], fromDate, toDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"                event.isDone \u003d done;","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"                return event;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"                throw new IllegalArgumentException(\"Invalid task type in file\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    public String getType(){","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        return \" \";","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":78}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import duke.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public int i \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    //constructor","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public TaskList(String filepath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        tasks.addAll(storage.loadFromFile());","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    public void addTask(Task task){","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        storage.saveToFile(i, tasks); //index?","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        if(i \u003e 0 \u0026\u0026 i \u003c tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"            storage.saveToFile(i, tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"            i--;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    public Task getTask(int index){","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    public void setTask(int index, Task elem){","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        tasks.set(index, elem);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":52}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import duke.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"        super(description, Task.TaskType.TODO);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    public String getType(){","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        return \"T\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"    public void printList(TaskList tasks, int size){","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"        System.out.println(\"Here are the tasks in your list!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"        for (int j \u003d 0; j \u003c size; j++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"            int nr \u003d j + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"            System.out.println(nr +\".\" + tasks.getTask(j).toString()+ \".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public void printMessage(String msg){","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        System.out.println(msg);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"meenulekha":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"deadline bye /by 2","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"event die /from 2 /to 5","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"meenulekha":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"if ! javac -cp /Users/meenu/Desktop/CS2103T/ip/src/main/java -Xlint:none -d /Users/meenu/Desktop/CS2103T/ip/src/main/java/bin /Users/meenu/Desktop/CS2103T/ip/src/main/java/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"java -classpath /Users/meenu/Desktop/CS2103T/ip/src/main/java/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meenulekha":2,"-":36}}]
