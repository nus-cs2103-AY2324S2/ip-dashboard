[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":13}},{"path":"src/main/java/Lamball.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"public class Lamball {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    String indent \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"    String welcomeMessage \u003d \"    Lamball\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"            \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"            \"     Hello! I\u0027m Lamball, your helpful sheep!\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"            \"     Whaaat can I do for you?\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"            \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    String goodbyeMessage \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"            \"     See you again!\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"            \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    public Lamball() {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    public void greetingMessage() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"        System.out.println(this.welcomeMessage);","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        System.out.println(this.goodbyeMessage);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"ongzhili"},"content":"    public void printList() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent);","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"    Here aaaaare the taaaasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ongzhili"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ongzhili"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\");","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent);","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"ongzhili"},"content":"    public void mark(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ongzhili"},"content":"        // If not numeric","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ongzhili"},"content":"        if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Invalid number, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"ongzhili"},"content":"        int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ongzhili"},"content":"        // Checks if index is within range of list","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ongzhili"},"content":"        if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Taaask index out of range, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent + \"    I have maaarked the task as done:\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ongzhili"},"content":"        temp.mark();","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"        \" + temp.toString() + \"\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ongzhili"},"content":"    public void unMark(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ongzhili"},"content":"        // If not numeric","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"ongzhili"},"content":"        if (parts.length \u003c 2 || !parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Invalid number, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"ongzhili"},"content":"        int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ongzhili"},"content":"        // Checks if index is within range of list","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ongzhili"},"content":"        if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Taaask index out of range, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent + \"    I have maaarked the task as undone:\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.get(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ongzhili"},"content":"        temp.unMark();","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"        \" + temp.toString() + \"\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"ongzhili"},"content":"    public void toDo(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"ongzhili"},"content":"        // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"ongzhili"},"content":"        if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Your todo field is empty, baaaaka.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d new ToDo(parts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"ongzhili"},"content":"        tasks.add(temp);","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent + \"    Added ToDo:\\n        \" + temp.toString() + \"\\n    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"ongzhili"},"content":"    public void deadline(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"ongzhili"},"content":"        // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"ongzhili"},"content":"        if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Your deadline field is empty, baaaaka.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"ongzhili"},"content":"        String[] furtherSplit \u003d parts[1].split(\" /\", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"ongzhili"},"content":"        if (furtherSplit.length \u003c 2 || !furtherSplit[1].substring(0,3).equals(\"by \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Deadline is in the wrong formaaaaaaat, baa. :(\\n    Correct formaaat is: deadline \u003cname\u003e /by \u003ctime\u003e, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d new Deadline(furtherSplit[0], furtherSplit[1].replaceFirst(\"by \", \"\"));","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"ongzhili"},"content":"        tasks.add(temp);","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent + \"    Added Deadline:\\n        \" + temp.toString() + \"\\n    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"ongzhili"},"content":"    public void event(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"ongzhili"},"content":"        // Checks if empty string (nothing after command) or only whitespaces","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"ongzhili"},"content":"        if (parts.length \u003c 2 || parts[1] \u003d\u003d null || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Your event field is empty, baaaaka.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"ongzhili"},"content":"        String[] furtherSplit \u003d parts[1].split(\" /\", 3);","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"ongzhili"},"content":"        if (furtherSplit.length \u003c 3 || !furtherSplit[1].substring(0,5).equals(\"from \") || !furtherSplit[2].substring(0,3).equals(\"to \")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Event is in the wrong formaaaaaaat, baa. :(\\n    Correct formaaat is: event \u003cname\u003e /from \u003ctime\u003e /to \u003ctime\u003e, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d new Event(furtherSplit[0], furtherSplit[1].replaceFirst(\"from \", \"\"), furtherSplit[2].replaceFirst(\"to \", \"\"));","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"ongzhili"},"content":"        tasks.add(temp);","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent + \"    Added Event:\\n        \" + temp.toString() + \"\\n    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"ongzhili"},"content":"    public void deleteFromList(String[] parts) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"ongzhili"},"content":"        // If not numeric","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"ongzhili"},"content":"        if (!parts[1].matches(\"-?\\\\d+\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Invalid number, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"ongzhili"},"content":"        int idx \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"ongzhili"},"content":"        // Checks if index is within range of list","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"ongzhili"},"content":"        if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"ongzhili"},"content":"            throw new LamballParseException(indent + \"    Taaask index out of range, baa.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"ongzhili"},"content":"        System.out.println(indent + \"    I have removed this taaask:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"ongzhili"},"content":"        Task temp \u003d tasks.remove(idx);","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"        \" + temp.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"ongzhili"},"content":"    public boolean parse(String msg) throws LamballParseException {","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"ongzhili"},"content":"        String[] parts \u003d msg.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"ongzhili"},"content":"        System.out.println(\"\\n    Lamball\");","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"ongzhili"},"content":"        switch(parts[0]) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"ongzhili"},"content":"            case \"mark\": {","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"ongzhili"},"content":"                mark(parts);","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"ongzhili"},"content":"            case \"unmark\": {","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"ongzhili"},"content":"                unMark(parts);","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"ongzhili"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"ongzhili"},"content":"                goodbyeMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"ongzhili"},"content":"                return false;","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"ongzhili"},"content":"            case \"list\":","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"ongzhili"},"content":"                printList();","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"ongzhili"},"content":"            case \"todo\": {","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"ongzhili"},"content":"                toDo(parts);","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"ongzhili"},"content":"            case \"event\": {","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"ongzhili"},"content":"                event(parts);","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"ongzhili"},"content":"            case \"deadline\": {","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"ongzhili"},"content":"                deadline(parts);","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"ongzhili"},"content":"            case \"delete\": {","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"ongzhili"},"content":"                deleteFromList(parts);","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"ongzhili"},"content":"                return true;","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"ongzhili"},"content":"            default:","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"ongzhili"},"content":"                throw new LamballParseException(indent + \"    Sorry, I don\u0027t understaaaaaand your commaaaaand, baa. :(\\n\" + indent);","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ongzhili":158}},{"path":"src/main/java/LamballParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"public class LamballParseException extends Exception{","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"    public LamballParseException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":5}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"public class Main {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"        Lamball lamball \u003d new Lamball();","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"        boolean active \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"        lamball.greetingMessage();","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"        while (active) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"            System.out.print(\"    You:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"            // Echo the user\u0027s command","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"                active \u003d lamball.parse(userInput);","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"            } catch (LamballParseException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        scanner.close();","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ongzhili":25}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ongzhili"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ongzhili"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ongzhili"},"content":"deadline a /by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ongzhili"},"content":"deadline a/by 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ongzhili"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ongzhili"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ongzhili"},"content":"event a /from b","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ongzhili"},"content":"event a/from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ongzhili"},"content":"event a /from b /to c","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ongzhili"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ongzhili"},"content":"mark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ongzhili"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ongzhili"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ongzhili"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ongzhili"},"content":"unmark -1","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ongzhili"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"unmark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ongzhili"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ongzhili"},"content":"delete -1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ongzhili"},"content":"delete 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ongzhili"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ongzhili":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ongzhili"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ongzhili":1,"-":20}}]
