[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"    private String deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"        String[] command \u003d description.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"        if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"                    \"OOPS! Your Only Friend cannot take in a deadline entry with no time :(\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"        this.deadline \u003d command[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"        this.description \u003d command[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"        return \"[D]\" + super.toString() + this.description + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"                \" Hello! I\u0027m Your Only Friend\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"                \" What can I do for you?\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"        Scanner whatToDo \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"        String whatToDoCall \u003d whatToDo.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"        String[] command \u003d whatToDoCall.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"            while (!whatToDoCall.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"                if ((whatToDoCall.equals(\"list\") | whatToDoCall.equals(\"List\") | whatToDoCall.equals(\"LIST\"))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"                    for (int i \u003d 1; i \u003c\u003d listOfTasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"                        System.out.println(i + \".\" + listOfTasks.get(i - 1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"                } else if (command[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"                    int indexToMark \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"                    listOfTasks.get(indexToMark).markComplete();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(listOfTasks.get(indexToMark).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"                } else if (command[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"                    int indexToUnmark \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"                    listOfTasks.get(indexToUnmark).markIncomplete();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(listOfTasks.get(indexToUnmark).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"                } else if (command[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"                    int indexToDelete \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"                    String str \u003d listOfTasks.get(indexToDelete).toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"                    listOfTasks.remove(indexToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"faaheem13"},"content":"                            + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"faaheem13"},"content":"                            + str + \"\\n\"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"faaheem13"},"content":"                            + \"Now you have \" + listOfTasks.size() + (listOfTasks.size() \u003c\u003d 1 ? \" task in the list.\" : \" tasks in the list.\")","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"faaheem13"},"content":"                            + \"\\n____________________________________________________________\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"faaheem13"},"content":"                } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"faaheem13"},"content":"                    Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"faaheem13"},"content":"                    if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"faaheem13"},"content":"                        throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"faaheem13"},"content":"                                \"OOPS! Your Only Friend cannot take in an empty \" + command[0] +","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"faaheem13"},"content":"                                \"\\nMake sure \" + command[0] + \"has a description!\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"faaheem13"},"content":"                                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"faaheem13"},"content":"                    if (command[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new ToDo(command[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"faaheem13"},"content":"                    } else if (command[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new Deadline(command[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"faaheem13"},"content":"                    } else if (command[0].equals(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"faaheem13"},"content":"                        task \u003d new Event(command[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"faaheem13"},"content":"                    } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"faaheem13"},"content":"                        throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"faaheem13"},"content":"                                \"OOPS! Turns out Your Only Friend does not know what that is :(\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"faaheem13"},"content":"                                \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"faaheem13"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"faaheem13"},"content":"                    listOfTasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"faaheem13"},"content":"                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"faaheem13"},"content":"                            + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"faaheem13"},"content":"                            + task.toString() + \"\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"faaheem13"},"content":"                            + \"Now you have \" + listOfTasks.size() + (listOfTasks.size() \u003c\u003d 1 ? \" task in the list.\" : \" tasks in the list.\")","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"faaheem13"},"content":"                            + \"\\n____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"faaheem13"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"faaheem13"},"content":"                whatToDoCall \u003d whatToDo.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"faaheem13"},"content":"                command \u003d whatToDoCall.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"faaheem13"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"faaheem13"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"faaheem13"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"faaheem13"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"faaheem13"},"content":"                + \" Bye. Hope to see you again soon!\\n - Your Only Friend\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"faaheem13"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"faaheem13":94,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"        super(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"faaheem13":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"    private String from;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"    private String to;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"    public Event(String description) throws DukeException{","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"        String[] command \u003d description.split(\" /from \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"        if (command.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"                    \"OOPS! Your Only Friend cannot take in an event entry with no timeline :(\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"        String timeline \u003d command[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"        String[] eventDates \u003d timeline.split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"        if (eventDates.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"            throw new DukeException(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"                    \"OOPS! Your Only Friend cannot take in a deadline entry with no timeline :(\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"                    \"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"        this.from \u003d eventDates[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"        this.to \u003d eventDates[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        this.description \u003d command[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"        return \"[E]\" + super.toString() + this.description + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"abstract public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"//    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"//        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"//        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"//    }","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"    public void markComplete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"    public String toString(){","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"        String str;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"        str \u003d \"[\" + this.getStatusIcon() + \"] \";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"        return str;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":32}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"        return \"[T]\" + super.toString() + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"faaheem13":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"todo borrow book","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"deadline submit assign /by 2pm","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"mark 1","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"event PHight night /from 2pm /to 6pm","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"list","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"faaheem13":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"faaheem13":1,"-":20}}]
