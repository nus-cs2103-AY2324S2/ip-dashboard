[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"# BalkanBot project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"3. After that, locate the `src/main/java/BalkanBot.java` file, right-click it, and choose `Run BalkanBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuahjiajie":2,"-":22}},{"path":"src/main/java/BalkanBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"public class BalkanBot {","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"        String line \u003d \"------------------------------------------\";","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"        Task[] listOfInputs \u003d new Task[100];","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"        int current \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(\"Hello! I\u0027m Balkan Bot\\n\" + \"What can I do for you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chuahjiajie"},"content":"        while(true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chuahjiajie"},"content":"            String command \u003d input.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"            if(command.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chuahjiajie"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chuahjiajie"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chuahjiajie"},"content":"            else if(command.equals(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"chuahjiajie"},"content":"                StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"chuahjiajie"},"content":"                for(int i \u003d 0; i \u003c listOfInputs.length; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"chuahjiajie"},"content":"                    if(listOfInputs[i] \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"chuahjiajie"},"content":"                    } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"chuahjiajie"},"content":"                        listOutput.append(i + 1).append(\". \").append(listOfInputs[i].toString())","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chuahjiajie"},"content":"                                .append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chuahjiajie"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(listOutput);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"chuahjiajie"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"chuahjiajie"},"content":"            else {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"chuahjiajie"},"content":"                String[] brokenCommand \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"chuahjiajie"},"content":"                if(brokenCommand[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"chuahjiajie"},"content":"                    int index \u003d Integer.parseInt(brokenCommand[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"chuahjiajie"},"content":"                    listOfInputs[index].mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"chuahjiajie"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"chuahjiajie"},"content":"                            listOfInputs[index].toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"chuahjiajie"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"chuahjiajie"},"content":"                else if(brokenCommand[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"chuahjiajie"},"content":"                    int index \u003d Integer.parseInt(brokenCommand[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"chuahjiajie"},"content":"                    listOfInputs[index].unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"chuahjiajie"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\" + \"\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"chuahjiajie"},"content":"                            listOfInputs[index].toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chuahjiajie"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"chuahjiajie"},"content":"                else {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"chuahjiajie"},"content":"                    listOfInputs[current] \u003d new Task(command);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"chuahjiajie"},"content":"                    current++;","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chuahjiajie"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"chuahjiajie"},"content":"                    System.out.println(\"Added: \" + command);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"chuahjiajie"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"chuahjiajie"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"chuahjiajie"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"chuahjiajie"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":60}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chuahjiajie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chuahjiajie"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chuahjiajie"},"content":"    public void mark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chuahjiajie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chuahjiajie"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chuahjiajie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chuahjiajie"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"chuahjiajie"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chuahjiajie"},"content":"java -classpath ..\\bin BalkanBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuahjiajie":1,"-":20}}]
