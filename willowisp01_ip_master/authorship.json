[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    mainClass.set(\"luke.Luke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willowisp01":1,"-":41}},{"path":"src/main/java/luke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public enum Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    BYE, LIST, MARK, DELETE, TASK","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":5}},{"path":"src/main/java/luke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    public Deadline(String name, LocalDate by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    public String fullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[D][X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[D][ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        if (deadline.name.equals(this.name) \u0026\u0026 deadline.by.equals(this.by) \u0026\u0026 (deadline.isDone \u003d\u003d this.isDone)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":32}},{"path":"src/main/java/luke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    LocalDate start;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    LocalDate end;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    public String fullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[E][X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[E][ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name + \" (from: \" + start +  \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        Event event \u003d (Event) obj;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        if (event.name.equals(this.name) \u0026\u0026 event.start.equals(this.start) \u0026\u0026 event.end.equals(this.end) \u0026\u0026 (event.isDone \u003d\u003d this.isDone)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":35}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"public class Luke {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    //Logo created using https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dVarsity\u0026t\u003dLuke","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    private static String logo \u003d \"  _____             __             \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"            + \" |_   _|           [  |  _         \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"            + \"   | |     __   _   | | / ] .---.  \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"            + \"   | |   _[  | | |  | \u0027\u0027 \u003c / /__\\\\\\\\ \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"            + \"  _| |__/ || \\\\_/ |, | |`\\\\ \\\\| \\\\__., \\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"            + \" |________|\u0027.__.\u0027_/[__|  \\\\_]\u0027.__.\u0027 \";","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    public static void main(String[] args) throws LukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        ui.greet();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        String wd \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        Path directoryPath \u003d Paths.get(wd,  \"data\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"        Path historyPath \u003d Paths.get(wd, \"data\", \"history.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"        //create directory (if it does not already exist)","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"            Files.createDirectory(directoryPath);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"            //directory already exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Failed to create directory\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"        //create file (if it does not already exist)","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"            Files.createFile(historyPath);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        } catch (FileAlreadyExistsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"            //file already exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Failed to create file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        //load the file if there is save data (reference: https://www.baeldung.com/java-serialization)","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"        //otherwise, create a new History object.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"        File historyFile \u003d new File(String.valueOf(historyPath));","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"            ObjectInputStream inputStream \u003d new ObjectInputStream(new FileInputStream(historyFile));","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"            storage \u003d (Storage) inputStream.readObject();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"            //System.out.println(\"No save data found, creating new save.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Class not found\");","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"        Parser parser \u003d new Parser(storage, historyFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"        boolean isFinished \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"        while (!isFinished) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"            //task mode","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"            //first, determine the type of input.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"            String input \u003d sc.nextLine().trim(); //trim removes preceding and trailing whitespace.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"            isFinished \u003d parser.parseCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"        ui.bye();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":79}},{"path":"src/main/java/luke/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":4}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;//Returns a list of Strings neatly parsed as arguments.","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    private File saveFile;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    public Parser(Storage storage, File saveFile) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.getHistory();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        this.taskList \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        this.saveFile \u003d saveFile;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    public boolean parseCommand(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        String trimmedLowercase \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        //bye, list","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        if (trimmedLowercase.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"            //TODO: save history","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"            storage.saveHistory(saveFile, taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        } else if (trimmedLowercase.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"            taskList.listTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"            return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"        } else if (trimmedLowercase.split(\" \")[0].trim().equals(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1].strip()) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"                taskList.deleteTask(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"                return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"Hey! You forgot something! Be glad I\u0027m here to remind you.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Missing delete parameter(s)]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"                return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        } else if (trimmedLowercase.split(\" \")[0].trim().equals(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"                int index \u003d Integer.parseInt(input.split(\" \")[1].strip()) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"                taskList.markTask(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"                return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"Hey! You forgot something! Be glad I\u0027m here to remind you.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Missing mark parameter(s)]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"                return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"        //tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"        Task task \u003d makeTask(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"            return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"    //assume that the input is a task","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"    protected static Task makeTask(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"        Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"        String trimmedLowercase \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"        String taskType \u003d trimmedLowercase.split(\" \")[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"willowisp01"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"willowisp01"},"content":"        String todoString \u003d TaskType.TODO.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"willowisp01"},"content":"        String deadlineString \u003d TaskType.DEADLINE.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"willowisp01"},"content":"        String eventString \u003d TaskType.EVENT.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"willowisp01"},"content":"        if (taskType.equals(todoString)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"willowisp01"},"content":"            task \u003d new Todo(trimmedLowercase.substring(todoString.length()).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"willowisp01"},"content":"            if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"You have eyes for a reason, don\u0027t you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Missing todo description]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"willowisp01"},"content":"                return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"willowisp01"},"content":"        } else if (taskType.equals(deadlineString)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"willowisp01"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"willowisp01"},"content":"                String taskName \u003d input.split(\"/\")[0].trim().substring(deadlineString.length()).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"willowisp01"},"content":"                LocalDate by \u003d LocalDate.parse(input.split(\"/\")[1].replace(\"by\", \"\").trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"willowisp01"},"content":"                task \u003d new Deadline(taskName, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"willowisp01"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"Hey! You forgot something! Be glad I\u0027m here to remind you.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Missing deadline parameter(s)]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"willowisp01"},"content":"                return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"willowisp01"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"Hey! What are you even talking about?!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Input date in format dd-mm-yyyy]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"willowisp01"},"content":"                return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"willowisp01"},"content":"        } else if (taskType.equals(eventString)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"willowisp01"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"willowisp01"},"content":"                String taskName \u003d input.split(\"/\")[0].trim().substring(eventString.length()).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"willowisp01"},"content":"                LocalDate start \u003d LocalDate.parse(input.split(\"/\")[1].replace(\"from\", \"\").trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"willowisp01"},"content":"                LocalDate end \u003d LocalDate.parse(input.split(\"/\")[2].replace(\"to\", \"\").trim(), formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"willowisp01"},"content":"                task \u003d new Event(taskName, start, end);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"willowisp01"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"/// I don\u0027t know when you are free... ///\");","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Missing event parameter(s)]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"willowisp01"},"content":"                return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"willowisp01"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"Hey! What are you even talking about?!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"willowisp01"},"content":"                System.out.println(\"[Input date in format dd-mm-yyyy]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"willowisp01"},"content":"                return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"/// What on earth are you saying! ///\");","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"[Command not found]\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"willowisp01"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"willowisp01"},"content":"        return task;","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":120}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"public class Storage implements Serializable {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    private ArrayList\u003cTask\u003e history;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    public Storage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"        history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    //Attempts to save history (reference: https://www.baeldung.com/java-serialization)","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    //For now we will only do this once when exiting the program normally. (i.e., by using \"bye\" command).","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    public void saveHistory(File file, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        updateHistory(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"            ObjectOutputStream outputStream \u003d new ObjectOutputStream(new FileOutputStream(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"            outputStream.writeObject(this);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"            outputStream.flush();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"            outputStream.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"oops!!!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"    public void updateHistory(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        this.history \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    public ArrayList\u003cTask\u003e getHistory() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        return history;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"    //TODO: is loading history done by history class itself?","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"willowisp01":37}},{"path":"src/main/java/luke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    protected String name \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    public String getName() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"        return name;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"        return isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    public void complete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        //System.out.println(\"It\u0027s about time you got this done. \");","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    public void incomplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        //System.out.println(\"Stop dragging your heels on it!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"    public String fullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        return name;","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":45}},{"path":"src/main/java/luke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"//for CURRENT tasks only.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    //fetch tasks from history","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"I helped you add task \u0027\" + task.fullStatus() + \"\u0027. But do it yourself next time! Hmmph!\" + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            tasks.get(index).complete();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Jeez, you really ought to give me a number I can work with... got that?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"[Item index exceeds history count]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"        System.out.println(\"Good work, I guess.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        System.out.println((index + 1) + \".\" + tasks.get(index).fullStatus());","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        System.out.println();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"        int num \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"Looks like you have way too much free time on your hands, huh.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"[No items in list]\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"        for (Task s : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"            if (s.isDone()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"                System.out.println(num + \".\" + s.fullStatus());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"                System.out.println(num + \".\" + s.fullStatus());","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"            num +\u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"        System.out.println();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"        String fullStatus;","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"            fullStatus \u003d tasks.get(index).fullStatus();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"There\u0027s nothing there, dummy...\");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"            System.out.println(\"[Tried to remove non-existent event]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"willowisp01"},"content":"        System.out.println(\"Fine! If that\u0027s what you really want...\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"willowisp01"},"content":"        System.out.println(\"[Removed \" + fullStatus + \"]\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":70}},{"path":"src/main/java/luke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public enum TaskType {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    TODO (\"todo\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    DEADLINE (\"deadline\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    EVENT (\"event\");","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"    private final String nameString;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    TaskType(String nameString) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"        this.nameString \u003d nameString;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        return nameString;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":17}},{"path":"src/main/java/luke/Testing.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class Testing {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"        System.out.println(Command.BYE.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":7}},{"path":"src/main/java/luke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"    public String fullStatus() { //TODO: add type of task later","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"        String checkbox;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[T][X] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"            checkbox \u003d \"[T][ ] \";","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        return checkbox + name;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        Todo todo \u003d (Todo) obj;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        if (todo.name.equals(this.name) \u0026\u0026 (todo.isDone \u003d\u003d this.isDone)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"            return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":28}},{"path":"src/main/java/luke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"public class UI {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"    private static String logo \u003d \"  _____             __             \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"            + \" |_   _|           [  |  _         \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"            + \"   | |     __   _   | | / ] .---.  \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"            + \"   | |   _[  | | |  | \u0027\u0027 \u003c / /__\\\\\\\\ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"            + \"  _| |__/ || \\\\_/ |, | |`\\\\ \\\\| \\\\__., \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"            + \" |________|\u0027.__.\u0027_/[__|  \\\\_]\u0027.__.\u0027 \";","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    public static void greet() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"        System.out.println(\"I\u0027m\\n\" + logo + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"        System.out.println(\"Don\u0027t expect to get too chummy with me, you got that?\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"    public static void bye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        System.out.println(\"Don\u0027t be ridiculous!\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"                \"It\u0027s... it\u0027s not like I want to see you again or anything!\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"willowisp01":20}},{"path":"src/test/java/luke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"    Parser parser \u003d new Parser(new Storage(), null);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    LocalDate date1 \u003d LocalDate.parse(\"27-08-2001\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    LocalDate date2 \u003d LocalDate.parse(\"28-08-2001\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    Task[] correctSamples \u003d {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"            new Todo(\"stuff\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"            new Deadline(\"homework\", date1),","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"            new Event(\"holiday\", date1, date2)","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    String[] missingParams \u003d {\"todo\", \"deadline\", \"event\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_correctParams_returnTask() {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctSamples[0], parser.makeTask(\"todo stuff\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctSamples[1], parser.makeTask(\"deadline homework / by 27-08-2001\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctSamples[2], parser.makeTask(\"event holiday / from 27-08-2001 / to 28-08-2001\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_weirdSpacing_returnTask() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctSamples[0], parser.makeTask(\"todo          stuff\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctSamples[1], parser.makeTask(\"deadline  homework   /   by    27-08-2001\"  ));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        assertEquals(correctSamples[2], parser.makeTask(\"  event holiday / from    27-08-2001 /  to 28-08-2001\"  ));","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_missingParams_returnNull() {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"todo\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"deadline homework\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"event holiday\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"event holiday / from 27-08-2001\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_incorrectDateFormat_returnNull() {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"deadline homework / by 082-12-12398\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"event holiday / from Singapore / to London\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"    public void makeTask_unknownCommand_returnNull() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"        assertEquals(null, parser.makeTask(\"akjdijbakf\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"willowisp01":57}},{"path":"src/test/java/luke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"    LocalDate date1 \u003d LocalDate.parse(\"27-08-2001\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"    LocalDate date2 \u003d LocalDate.parse(\"28-08-2001\", formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"    Task[] tasks \u003d {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"            new Todo(\"stuff\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"            new Deadline(\"homework\", date1),","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"            new Event(\"holiday\", date1, date2)","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"    public void addTasks_validTasks_success() {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(tasks[i]);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"            assertEquals(tasks[i], taskList.getTasks().get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"willowisp01"},"content":"    public void addTasks_invalidTasks_failure() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"willowisp01"},"content":"        taskList.addTask(null);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"willowisp01"},"content":"        assertEquals(0, taskList.getTasks().size());","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"willowisp01"},"content":"    public void markTask_validTasks_success() {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(tasks[i]);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"willowisp01"},"content":"            assertEquals(false, taskList.getTasks().get(i).isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"willowisp01"},"content":"            taskList.markTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"willowisp01"},"content":"            assertEquals(true, taskList.getTasks().get(i).isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"willowisp01"},"content":"    public void deleteTasks_deleteExistingTasks_success() {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"willowisp01"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"willowisp01"},"content":"            taskList.addTask(tasks[i]);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"willowisp01"},"content":"        for (int i \u003d tasks.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"willowisp01"},"content":"            taskList.deleteTask(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"willowisp01"},"content":"            assertEquals(i, taskList.getTasks().size());","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"willowisp01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"willowisp01":64}},{"path":"src/test/java/luke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"package luke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"    //https://se-education.org/se-book/cppToJava/junit/basic/index.html for test naming ideas","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"    public void testFullStatus() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"        Todo stuff \u003d new Todo(\"stuff\");","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"        Todo things \u003d new Todo(\"things\");","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"        assertEquals(stuff.fullStatus(), \"[T][ ] stuff\");","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"        assertEquals(things.fullStatus(), \"[T][ ] things\");","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"    public void markTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"willowisp01"},"content":"        Todo stuff \u003d new Todo(\"stuff\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"willowisp01"},"content":"        Todo things \u003d new Todo(\"things\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"willowisp01"},"content":"        stuff.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"willowisp01"},"content":"        things.complete();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"willowisp01"},"content":"        assertEquals(stuff.fullStatus(), \"[T][X] stuff\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"willowisp01"},"content":"        assertEquals(things.fullStatus(), \"[T][X] things\");","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"willowisp01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"willowisp01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"willowisp01":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"deadline","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"event","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"quhd qudwduchu qiwucd","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"deadline return book /by 27-08-2001","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"event project meeting /from 27-08-2001 /to 28-08-2001","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"event project meeting /from uewfihu i /to iudg9uh o","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"delete 2","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"delete 0","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"willowisp01"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"willowisp01":21}},{"path":"text-ui-test/input_old.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"todo","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"event","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"willowisp01"},"content":"todo borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"willowisp01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"willowisp01"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"willowisp01"},"content":"mark 1","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"willowisp01"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"willowisp01"},"content":"mark 3","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"willowisp01"},"content":"mark 4","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"willowisp01"},"content":"delete 3","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"willowisp01"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"willowisp01"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"delete 0","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"willowisp01"},"content":"bye","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"willowisp01"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"willowisp01":20}},{"path":"text-ui-test/input_test_history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"willowisp01"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"willowisp01"},"content":"todo homework","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"willowisp01"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"willowisp01":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"willowisp01"},"content":"java -classpath ..\\bin luke.Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"willowisp01":1,"-":20}},{"path":"data/history.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"willowisp01":0}},{"path":"text-ui-test/data/history.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"willowisp01":0}}]
