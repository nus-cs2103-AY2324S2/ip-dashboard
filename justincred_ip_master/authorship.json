[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"    private String date;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"    public Deadline (String desc,int type, String date) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"        super(desc, type);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"        return super.toString() + \"(\" + date + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"        String message \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"                \"Hello! I\u0027m Jux\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"                \"What can I do for you?\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"        String end \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"                \"____________________________________________________________\"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"                ;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"        while(true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"                } else if(input.equals(\"list\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"                    if (list.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"                        throw new DukeException(\" YOUR LIST IS EMPTY\");","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"                    System.out.println(\"Here are the tasks in your list!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"                    for (int i \u003d 0; i \u003c list.size();i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"                        int j \u003d i + 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"                        String listMessage \u003d j + \".\" + \"[\" + list.get(i).getType() + \"]\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"                                \"[\"+ list.get(i).getStatusIcon() + \"]\" + list.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"                        System.out.println(listMessage + \"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"                } else if(input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"                    if (input.length() \u003e 5 ) {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"                        String listStringNumber \u003d  input.substring(5);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"                        int convertedToNumber \u003d Integer.parseInt(listStringNumber) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"                        String doneness \u003d list.get(convertedToNumber).toggleIsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"                        // check if already marked then return error","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"                        System.out.println(\"[\" + list.get(convertedToNumber).getType() + \"]\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"                                \"[\" + doneness + \"] \" + list.get(convertedToNumber));","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"                        throw new DukeException(\"PLEASE INSERT NUMBER TO MARK\");","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"                    String listStringNumber \u003d  input.substring(7);","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"                    int convertedToNumber \u003d Integer.parseInt(listStringNumber) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"                    String doneness \u003d list.get(convertedToNumber).toggleIsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"                    System.out.println(\"[\" + list.get(convertedToNumber).getType() + \"]\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"                            \"[\" + doneness + \"] \" + list.get(convertedToNumber));","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"                } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"                    int icon \u003d 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"                    String desc \u003d \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"                    Task task;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"                    if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"                        if (input.length() \u003e 5) {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"                            desc \u003d input.substring(5);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"                            task \u003d new Todo(desc, icon);","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"                            throw new DukeException(\"PLEASE INSERT DESCRIPTION FOR YOUR TODO\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"                        if (input.length() \u003e7 ) {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"                            String regex \u003d \".*\" + \u0027/\u0027+ \".*\" + \u0027/\u0027 + \".*\";","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"                            if (!input.matches(regex)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"                                throw new DukeException(\"insert time for event such as event /monday /sunday\");","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"                            }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"                            icon \u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"                            desc \u003d input.substring(6, input.indexOf(\"/\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"                            String firstDate \u003d input.substring(input.indexOf(\"/\") + 1, input.lastIndexOf(\"/\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"                            String endDate \u003d input.substring(input.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"                            task \u003d new Event(desc, icon, firstDate, endDate);","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"justincred"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"justincred"},"content":"                            throw new DukeException(\"PLEASE INSERT DESCRIPTION FOR YOUR EVENT\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"justincred"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"justincred"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"justincred"},"content":"                        if (input.length() \u003e10) {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"justincred"},"content":"                            icon \u003d 2;","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"justincred"},"content":"                            if (!input.contains(\"/\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"justincred"},"content":"                                throw new DukeException(\"insert time after deadline such as deadline /monday\");","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"justincred"},"content":"                            }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"justincred"},"content":"                            desc \u003d input.substring(9, input.indexOf(\"/\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"justincred"},"content":"                            String date \u003d input.substring(input.indexOf(\"/\") + 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"justincred"},"content":"                            task \u003d new Deadline(desc, icon, date);","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"justincred"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"justincred"},"content":"                            throw new DukeException(\"PLEASE INSERT DESCRIPTION FOR YOUR DEADLINE\");","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"justincred"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"justincred"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"justincred"},"content":"                        throw new DukeException(\"SORRY I DO NOT KNOW WHAT THAT MEANS, PLEASE TRY AGAIN!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"justincred"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"justincred"},"content":"                    list.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"justincred"},"content":"                    System.out.println(\"You entered:\" );","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"justincred"},"content":"                    System.out.println(\"[\" + task.getType() + \"]\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"justincred"},"content":"                            \"[\" + task.getStatusIcon() + \"] \"+ task);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"justincred"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"justincred"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"justincred"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"justincred"},"content":"        System.out.println(end);","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"justincred":110,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"    // You can add more constructors or methods based on your needs","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"    private String startDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"    private String endDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"    public Event(String desc,int type, String startDate, String endDate){","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"        super(desc, type);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"        return super.toString() + \"(\" + startDate + endDate + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"    private int type;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"    public Task(String description, int type) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"    public String toggleIsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"        return getStatusIcon();","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    public String getType() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"        if (type \u003d\u003d 0) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"            return \"T\";","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"        } else if (type \u003d\u003d1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"            return \"E\";","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"        } else if (type \u003d\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"            return \"D\";","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"            return \"None\";","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"    public String toString(){","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"    //...","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"    public Todo(String desc, int type) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"        super(desc, type);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"todo hi","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"deadline hw /monday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"event jb /tues /wed","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"javac  -cp \\Desktop\\2101\\ip\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"java -classpath \\Desktop\\2101\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justincred":2,"-":19}}]
