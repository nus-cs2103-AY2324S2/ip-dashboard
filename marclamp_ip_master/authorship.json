[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"# Chaterpillar project template","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"3. After that, locate the `src/main/java/Chaterpillar.java` file, right-click it, and choose `Run Chaterpillar.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":2,"-":22}},{"path":"src/main/java/Chaterpillar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"import commands.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * Main class for Chaterpillar chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class Chaterpillar {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public Chaterpillar() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        ui.greet();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"        boolean hasExited \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        while (!hasExited) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"                hasExited \u003d command.hasExited();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"            } catch (ChaterpillarException | IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"                ui.echo(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"            } finally {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                ui.printHorizontalLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"        new Chaterpillar().run();","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":46}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    public abstract void execute(TaskList task, Ui ui, Storage storage) throws ChaterpillarException, IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    public boolean hasExited() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":15}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException, IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"            tasks.deleteTaskAtIndex(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"                    \"Sorry, there is no number detected.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"                    \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"                    \"Sorry, the item does not exist in the list.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"                    \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":30}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"        ui.echo(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    public boolean hasExited() {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"        return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":13}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"        String helpMessage \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"                \"Hi! Here are the list of commands I recognise: \\n\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"                \"\u0027list\u0027 - lists the tasks registered in the list\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"                \"\u0027today\u0027 - lists the tasks for today\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"                \"\u0027todo\u0027 - adds an item that has no due date\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"                \"\u0027deadline\u0027 - adds an item with a due date\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"                \"\u0027event\u0027 - adds an item that has a duration\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"                \"\u0027mark\u0027 - marks the task as completed\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"                \"\u0027unmark\u0027 - marks the task as not completed\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"                \"\u0027help\u0027 - opens the list of commands available\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"                \"\u0027bye\u0027 - exits the chatbot\";","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        ui.echo(helpMessage);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":21}},{"path":"src/main/java/commands/ListAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class ListAllCommand extends Command{","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"        new ListCommand(tasks).execute(tasks, ui, storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":11}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        ui.echo(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        for (Task eachTask : this.tasks.getTasks()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"            ui.echo(i++ + \". \" + eachTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":20}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException, IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"                    \"Sorry! That item does not exist in the list.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"                    \"You currently have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"            ui.echo(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            Task currTask \u003d tasks.get(index-1);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"            currTask.mark();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"            ui.echo(currTask.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"            storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":30}},{"path":"src/main/java/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    private final Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public TaskCommand(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException, IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        ui.echo(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"        ui.echo(task.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        ui.echo(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":23}},{"path":"src/main/java/commands/TasksByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import datetime.DateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"public class TasksByDateCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    DateTime date;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    public TasksByDateCommand(String date) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        this.date \u003d new DateTime(date);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public TasksByDateCommand(DateTime date) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"                    \"Congrats! You have no tasks for today. :)\");","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"            ui.echo(String.format(\"Here are the tasks on %s:\", this.date));","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"            TaskList tasksNew \u003d tasks.getTasksOnDate(this.date);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            new ListCommand(tasksNew).execute(tasks, ui, storage);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":27}},{"path":"src/main/java/commands/TasksTodayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import datetime.DateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class TasksTodayCommand extends TasksByDateCommand {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    public TasksTodayCommand() throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"        super(new DateTime(LocalDate.now()));","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":11}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    private final int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws ChaterpillarException, IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"                    \"Sorry! That item does not exist in the list.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"                    \"You currently have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"            ui.echo(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"            currTask.unmark();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"            ui.echo(currTask.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"            storage.saveAllToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":30}},{"path":"src/main/java/commands/UnrecognisedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class UnrecognisedCommand extends Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"        String unrecognised \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"                \"Oops, I have no idea what that means. \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"                \"Use \u0027help\u0027 for a list of commands I recognise.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"        ui.echo(unrecognised);","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":14}},{"path":"src/main/java/datetime/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package datetime;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.time.Year;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"import java.time.YearMonth;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"public class DateTime {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public LocalDateTime dateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public Boolean dateOnly;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    public Boolean timeOnly;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    public DateTime(String dt) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"        this.dateOnly \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        this.timeOnly \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d parseDateTime(dt);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    public DateTime(LocalDate date) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        this.dateOnly \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        this.timeOnly \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d date.atTime(0, 0);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     * Parses the string of date and/or time to a","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     * @param str \u003ccode\u003eString\u003c/code\u003e of date and/or time","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e object","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    public LocalDateTime parseDateTime(String str) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        DateTimeFormatterBuilder dateTimeFormatterBuilder \u003d","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                new DateTimeFormatterBuilder()","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM h:mm a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M/uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M-uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM/uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM-uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM/uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM-uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM uuuu]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/M]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-M]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d M]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d/MMMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d-MMMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[d MMMM]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[HHmm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[HH:mm]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"marclamp"},"content":"                        .appendPattern(\"[h a]\")","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"marclamp"},"content":"                        .parseDefaulting(ChronoField.YEAR, Year.now().getValue());","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"marclamp"},"content":"        DateTimeFormatter dateTimeFormatter \u003d dateTimeFormatterBuilder.toFormatter();","lastModifiedDate":"2024-02-06"},{"lineNumber":124,"author":{"gitId":"marclamp"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"marclamp"},"content":"            return getDate(str.trim(), dateTimeFormatter);","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"marclamp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"marclamp"},"content":"                    \"Invalid date format! I accept quite a number of common date format, \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"marclamp"},"content":"                    \"but here is one you can use: DD/MM/YYY HH:MM\");","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"marclamp"},"content":"     * Gets the date and/or time from String with default values","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"marclamp"},"content":"     * FROM:","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"marclamp"},"content":"     * @param s \u003ccode\u003eString\u003c/code\u003e of Date and/or Time","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"marclamp"},"content":"     * @param format \u003ccode\u003eDateTimeFormatter\u003c/code\u003e object","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003eLocalDateTime\u003c/code\u003e object","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"marclamp"},"content":"    private LocalDateTime getDate(String s, DateTimeFormatter format) throws DateTimeParseException {","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"marclamp"},"content":"        TemporalAccessor dt \u003d format.parseBest(","lastModifiedDate":"2024-02-06"},{"lineNumber":142,"author":{"gitId":"marclamp"},"content":"                s, LocalDateTime::from, LocalDate::from, LocalTime::from, YearMonth::from);","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"marclamp"},"content":"        if (dt instanceof LocalDate) {","lastModifiedDate":"2024-02-06"},{"lineNumber":145,"author":{"gitId":"marclamp"},"content":"            dateOnly \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"marclamp"},"content":"            return ((LocalDate) dt).atStartOfDay();","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"marclamp"},"content":"        } else if (dt instanceof LocalTime) {","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"marclamp"},"content":"            return ((LocalTime) dt).atDate(LocalDate.now());","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"marclamp"},"content":"        } else if (dt instanceof YearMonth) {","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"marclamp"},"content":"            dateOnly \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"marclamp"},"content":"            return ((YearMonth) dt).atDay(1).atStartOfDay();","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"marclamp"},"content":"            return LocalDateTime.from(dt);","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"marclamp"},"content":"    public boolean isSameDay(DateTime dt) {","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"marclamp"},"content":"        return this.dateTime.toLocalDate().isEqual(dt.dateTime.toLocalDate());","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"marclamp"},"content":"    public boolean isWithinDate(DateTime dtStart, DateTime dtEnd) {","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"marclamp"},"content":"        if (dateTime.toLocalDate().isAfter(dtStart.dateTime.toLocalDate())","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"marclamp"},"content":"            \u0026\u0026 dateTime.toLocalDate().isBefore(dtEnd.dateTime.toLocalDate())) {","lastModifiedDate":"2024-02-06"},{"lineNumber":163,"author":{"gitId":"marclamp"},"content":"            return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":164,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"marclamp"},"content":"            return dateTime.toLocalDate().isEqual(dtStart.dateTime.toLocalDate())","lastModifiedDate":"2024-02-06"},{"lineNumber":166,"author":{"gitId":"marclamp"},"content":"                    || dateTime.toLocalDate().isEqual(dtEnd.dateTime.toLocalDate());","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":169,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"marclamp"},"content":"        if (dateOnly) {","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"marclamp"},"content":"            return this.dateTime.format(DateTimeFormatter.ofPattern(\"d/MMM/yyyy\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"marclamp"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":174,"author":{"gitId":"marclamp"},"content":"            return this.dateTime.format(DateTimeFormatter.ofPattern(\"d/MMM/yyyy hh:mm a\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":175,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":176,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":177,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"marclamp":177}},{"path":"src/main/java/exceptions/ChaterpillarException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"public class ChaterpillarException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"    public ChaterpillarException(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"        super(message);","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import tasks.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import commands.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    public static Command parse(String input) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        int num;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"        String name;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        String[] temp;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"        Task currTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"        switch(inputSplit[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"            case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"                return new ListAllCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"                num \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"                return new MarkCommand(num);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"                num \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"                return new UnmarkCommand(num);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"                    name \u003d input.substring(5);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"                    currTask \u003d new TodoTask(name);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"                    return new TaskCommand(currTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"                            \"Sorry, the name of the task todo cannot be empty.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"                            \"The way to use the command is as such: todo taskname\");","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"                    temp \u003d input.split(\"/\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"                    name \u003d temp[0].substring(9);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"                    String date \u003d temp[1].substring(3);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"                    currTask \u003d new DeadlineTask(name, date);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"                    return new TaskCommand(currTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(\"Sorry, this command is in the wrong format.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"                            \"The way to use the command is: deadline taskname /by date_and_time\");","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"                            \"Unable to add task, wrong date/time format!\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"                            \"Suggested format: DD/MM/YYY HH:MM\");","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"            case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                    temp \u003d input.split(\"/\");","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                    name \u003d temp[0].substring(6);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"                    String date1 \u003d temp[1].substring(5);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                    String date2 \u003d temp[2].substring(3);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                    currTask \u003d new EventTask(name, date1, date2);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"                    return new TaskCommand(currTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(\"Sorry, this command is in the wrong format.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                            \"The way to use the command is: event taskname /from date_and_time /to date_and_time\");","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                            \"Unable to add task, wrong date/time format!\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                            \"Suggested format: DD/MM/YYY HH:MM\");","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                    temp \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                    int index \u003d Integer.parseInt(temp[1])-1;","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                            \"Sorry, there is no number detected.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                            \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                            \"Sorry, the format for this command is wrong.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                            \"The correct way to use the command is: delete number\");","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"            case \"today\":","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"                return new TasksTodayCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"            case \"help\":","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"                return new ExitCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"                return new UnrecognisedCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":92}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import tasks.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    public static final String CHATBOT_PATH_NAME \u003d \"./data\";","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public static final String CHATBOT_FILE_NAME \u003d \"history.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     * Gets the path of the file that stores the list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"     * Creates the directory if it is not found.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"     * Creates the file if it does not exist.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"     * @return \u003ccode\u003ePath\u003c/code\u003e of the file","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * @throws IOException if there are any input/output errors","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    public static Path getHistoryFilePath() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"        Path chatbotDataFilePath \u003d Paths.get(CHATBOT_PATH_NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        if (!Files.exists(chatbotDataFilePath)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"            Files.createDirectory(chatbotDataFilePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        Path chatbotFilePath \u003d chatbotDataFilePath.resolve(CHATBOT_FILE_NAME);","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"        if (!Files.exists(chatbotFilePath)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"            Files.createFile(chatbotFilePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"        return chatbotFilePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"     * Loads the contents of the file and inputs it into the listOfTasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003etasks.Task\u003c/code\u003e objects.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     * @throws IOException if there are any input/output errors.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    public TaskList loadFromFile() throws ChaterpillarException, IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        Path path \u003d getHistoryFilePath();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(path)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"            String str;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"            while ((str \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                    String[] eachLine \u003d str.split(\"\\\\|\");","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                    String taskType \u003d eachLine[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                    boolean isMarked \u003d Boolean.parseBoolean(eachLine[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"                    String taskName \u003d eachLine[2];","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"                    switch (taskType) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                        case \"T\": {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"                            Task task \u003d new TodoTask(taskName, isMarked);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"                            newList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"                            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"                        case \"D\": {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"                            String dueDate \u003d eachLine[3];","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"                            Task task \u003d new DeadlineTask(taskName, isMarked, dueDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"                            newList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"marclamp"},"content":"                            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"marclamp"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"marclamp"},"content":"                        case \"E\": {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"marclamp"},"content":"                            String startDate \u003d eachLine[3];","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"marclamp"},"content":"                            String endDate \u003d eachLine[4];","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"marclamp"},"content":"                            Task task \u003d new EventTask(taskName, isMarked, startDate, endDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"marclamp"},"content":"                            newList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"marclamp"},"content":"                            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"marclamp"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"marclamp"},"content":"                        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"marclamp"},"content":"                            throw new ChaterpillarException(","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"marclamp"},"content":"                                    \"Error in type of task of this line: \\n\" + str);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"marclamp"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"marclamp"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"marclamp"},"content":"                    throw new ChaterpillarException(\"Error in formatting of this line: \\n\" + str);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"marclamp"},"content":"        return new TaskList(newList);","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"marclamp"},"content":"     * Saves the entire list of Tasks into the file, by first clearing its contents.","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"marclamp"},"content":"     * @throws IOException if there are any input/output errors.","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"marclamp"},"content":"    public void saveAllToFile(TaskList tasks) throws ChaterpillarException, IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"marclamp"},"content":"        Path path \u003d getHistoryFilePath();","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"marclamp"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(path, Charset.defaultCharset())) {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"marclamp"},"content":"            writer.write(\"\");   // clears the file","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"marclamp"},"content":"            StringBuilder strBdr \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"marclamp"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"marclamp"},"content":"                String str \u003d task.stringForSaving();","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"marclamp"},"content":"                strBdr.append(str).append(\"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"marclamp"},"content":"            writer.write(strBdr.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"marclamp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"marclamp"},"content":"            throw new ChaterpillarException(\"Error in writing to the file.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":106}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import datetime.DateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" * Represents a task with a deadline. A \u003ccode\u003etasks.DeadlineTask\u003c/code\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * object contains its description or name, represented by a String,","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * a boolean indicating whether the task is marked, and","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * a String representing the date and/or time of deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public DateTime dateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     * Basic constructor","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public DeadlineTask(String taskName, String date_time) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        super(taskName);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d new DateTime(date_time);","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor with date/time specified","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * and marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * @param taskname name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     * @param dateTime Date and/or Time of deadline","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"     * @param marked status of task (marked or unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    public DeadlineTask(String taskname, Boolean marked, String dateTime) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"        super(taskname, marked);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"        this.dateTime \u003d new DateTime(dateTime);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    public Boolean isWithinDate(DateTime dt) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        return this.dateTime.isSameDay(dt);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    public String stringForSaving() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        return \"D|\" + super.stringForSaving() + \"|\" + this.dateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"                String.format(\" (by: %s)\", this.dateTime);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":50}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import datetime.DateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" * Represents a task which is an event. A \u003ccode\u003etasks.EventTask\u003c/code\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * object contains its description or name, represented by a String,","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" * a boolean indicating whether the task is marked,","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":" * a String representing the start date and/or time of the event, and","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":" * a String representing the end date and/or time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public DateTime dateTimeFrom;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    public DateTime dateTimeTo;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     * Constructor with event start and end","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * date and/or time specified","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param taskname name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeFrom start date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeTo end date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public EventTask(String taskname, String dateTimeFrom, String dateTimeTo) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        super(taskname);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"        this.dateTimeFrom \u003d new DateTime(dateTimeFrom);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"        this.dateTimeTo \u003d new DateTime(dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor with event start and end","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"     * date and/or time specified","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"     * @param taskname name of task to be tracked","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"     * @param isMarked \u003ccode\u003eBoolean\u003c/code\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeFrom start date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * @param dateTimeTo end date and/or time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    public EventTask(String taskname, Boolean isMarked, String dateTimeFrom, String dateTimeTo) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        super(taskname,isMarked);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        this.dateTimeFrom \u003d new DateTime(dateTimeFrom);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        this.dateTimeTo \u003d new DateTime(dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    public Boolean isWithinDate(DateTime dt) {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        return dt.isWithinDate(this.dateTimeFrom, this.dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"    public String stringForSaving() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        return \"E|\" + super.stringForSaving() + \"|\"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"                + this.dateTimeFrom + \"|\"","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                + this.dateTimeTo;","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"                + String.format(\" (from: %s to: %s)\", this.dateTimeFrom, this.dateTimeTo);","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":60}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import datetime.DateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" * Represents a task. A \u003ccode\u003etasks.Task\u003c/code\u003e object contains its","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" * description or name, represented by a String, and a boolean","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":" * indicating whether the task is marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"    public String taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    public boolean isMarked;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"    public boolean hasDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"     * Basic constructor","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"    public Task(String taskName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"        this.taskName \u003d taskName.trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        this.hasDate \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * Overloaded constructor with marked status","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     * @param isMarked status of task (marked or unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    public Task(String taskName, Boolean isMarked) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * Sets this task as marked, by setting the","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     * boolean flag to be true.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    public void mark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"     * Sets this task as unmarked, by setting the","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"     * boolean flag to be false.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"     * Returns a formatted string meant for saving into the","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"     * text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"     * @return formatted String, consisting of isMarked status and taskname","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"    public String stringForSaving() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        return this.isMarked + \"|\" + this.taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    public Boolean isWithinDate(DateTime dt) {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"        return (this.isMarked ? \"[X] \" : \"[ ] \") + this.taskName;","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":66}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import datetime.DateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import exceptions.ChaterpillarException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"    public void deleteTaskAtIndex(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"    public TaskList getTasksToday() throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        DateTime today \u003d new DateTime(LocalDate.now());","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        return getTasksOnDate(today);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"    public TaskList getTasksOnDate(String date) throws ChaterpillarException {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"        DateTime dt \u003d new DateTime(date);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"        return getTasksOnDate(dt);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"    public TaskList getTasksOnDate(DateTime date) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"marclamp"},"content":"        ArrayList\u003cTask\u003e tasksToDisplayList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"marclamp"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"marclamp"},"content":"            if (task.hasDate) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"marclamp"},"content":"                if(task.isWithinDate(date)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"marclamp"},"content":"                    tasksToDisplayList.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"marclamp"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"marclamp"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"marclamp"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"marclamp"},"content":"        return new TaskList(tasksToDisplayList);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":65}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":" * Represents a task to be done. A \u003ccode\u003eToDoTask\u003c/code\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":" * object contains its description or name, represented by a String, and","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":" * a boolean indicating whether the task is marked.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"     * Basic Constructor","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"     * @param taskName name of task to be tracked","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    public TodoTask(String taskName) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"        super(taskName);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * Overloaded Constructor with isMarked status","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     * @param taskname name of task to be tracked","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"     * @param isMarked status of task (marked or unmarked)","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    public TodoTask(String taskname, Boolean isMarked) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"        super(taskname, isMarked);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"    public String stringForSaving() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"        return \"T|\" + super.stringForSaving();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"marclamp":34}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"package ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"            \"                           .    .\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"            \"                            )  (\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"            \"      _ _ _ _ _ _ _ _ _ _ _(.--.)\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"            \"    {{ { { { { { { { { { { ( \u0027v\u0027)\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"            \"     \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e`--\u0027\u003e\";","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"    private static final BufferedReader reader \u003d new BufferedReader(","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"            new InputStreamReader((System.in)));","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"     * Prints out the message given in the String argument.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"marclamp"},"content":"     * @param s the message to be printed","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"marclamp"},"content":"    public void echo(String s) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"marclamp"},"content":"        System.out.println(s);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"marclamp"},"content":"     * Prints out a horizontal line, typically used to segment","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"marclamp"},"content":"     * the start and end of a message by the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"marclamp"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"marclamp"},"content":"        String line \u003d \"-\".repeat(50);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"marclamp"},"content":"        echo(line);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"marclamp"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"marclamp"},"content":"     * Prints the greeting message by the Chaterpillar chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"marclamp"},"content":"     * It also prints the horizontal lines as dividers before and after the message.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"marclamp"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"marclamp"},"content":"    public void greet() {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"marclamp"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"marclamp"},"content":"        echo(LOGO);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"marclamp"},"content":"        echo(\"Hello! I\u0027m Chaterpillar\");","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"marclamp"},"content":"        echo(\"What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"marclamp"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"marclamp"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"marclamp"},"content":"    public String readCommand() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"marclamp"},"content":"        return reader.readLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"marclamp"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"marclamp"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":49}},{"path":"text-ui-test/data/history.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"T|true|read book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"D|true|return book|6/Feb/2024","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"E|false|project meeting|8/Feb/2024 02:00 PM|8/Feb/2024 04:00 PM","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"T|true|join sports club","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"D|false|finish this|6/Feb/2024","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"E|false|lunch plans|7/Feb/2024 02:00 PM|7/Feb/2024 04:00 PM","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"marclamp":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marclamp"},"content":"todo read book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"marclamp"},"content":"deadline return book /by 6 Feb","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"marclamp"},"content":"event project meeting /from 8 Feb 2 PM /to 8 Feb 4 PM","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"marclamp"},"content":"todo join sports club","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"marclamp"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"marclamp"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"marclamp"},"content":"mark 2","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"marclamp"},"content":"mark 4","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"marclamp"},"content":"delete 5","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"marclamp"},"content":"deadline finish this /by 6 Feb","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"marclamp"},"content":"event lunch plans /from 2 PM /to 4 PM","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"marclamp"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"marclamp"},"content":"today","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"marclamp"},"content":"bye","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"marclamp":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marclamp"},"content":"java -classpath ..\\bin Chaterpillar \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marclamp":1,"-":20}}]
