[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"# jerome.JeromeGpt project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"3. After that, locate the `src/main/java/jerome.JeromeGpt.java` file, right-click it, and choose `Run jerome.JeromeGpt.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"## Building files with Gradle","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"1. The generated JAR is stored here: `/Users/chuajerome/IdeaProjects/ip-30Jan/build/libs/ip-30Jan.jar`","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jerome-j":6,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    mainClass.set(\"jerome.gui.Launcher\")","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"    // Use this for the Command Line version","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"//    mainClass.set(\"jerome.JeromeGpt\")","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"    archiveBaseName \u003d \"jeromeGpt\"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jerome-j":23,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"# JeromeGPT ","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"👋 Welcome to JeromeGPT","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"![JeromeGPT Image](https://jerome-j.github.io/ip/Ui.png)","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"## Product Introduction","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"JeromeGPT is a newbie software designed to aid you with the management of your daily tasks!","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"\u003e Have something you need to keep track of? Simply note it down with JeromeGPT!","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"## Commands Supported","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"### 1. Creating events as deadline tasks ","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"`deadline eventName /by 2020-01-01`","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"\t Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"\t [D][ ] eventName [Priority: MEDIUM] (by: Jan 01 2020)","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"\t Now you have 1 task(s) available!","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"### 2. Creating events as todo tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"`todo this is a task that I need to complete!`","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"\t Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"\t [T][ ] this is a task that I need to complete! [Priority: MEDIUM]","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"\t Now you have 2 task(s) available!","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"### 3. Adding events","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"`event party all day every /from 2023-02-01 /to 2024-03-09`","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"```angular2html","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    [E][ ] party all day every [Priority: MEDIUM] (from: Feb 01 2023 to: Mar 09 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    Now you have 3 task(s) available!","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"### 4. List _all_ tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"Simply enter the `list` command to list down all the tasks that you have created! ","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"They are listed in the order that you initially created them in!","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"\t 1. [D][ ] eventName [Priority: MEDIUM] (by: Jan 01 2020)","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"\t 2. [T][ ] this is a task that I need to complete! [Priority: MEDIUM]","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"\t 3. [E][ ] party all day every [Priority: MEDIUM] (from: Feb 01 2023 to: Mar 09 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"### 5. Finding for _selected_ task(s)","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"Use the find command to search for a part of the string that you are looking for. It is case-insensitive.","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"Run the sample command `find tHiS iS A task` which is case-insensitive","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"```angular2html","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"\t 2. [T][ ] this is a task that I need to complete! [Priority: MEDIUM]","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"\u003e **Warning:** JeromeGPT ensures that the index is valid, so please do not enter a negative or index that does not exist yet. ","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"\u003e This instruction apply for all commands that make use of index.","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"\u003e `mark -999` is invalid and will result in ","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"\u003e ```angular2html","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"\u003e   This is an invalid index","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"\u003e   There are 3 tasks available.","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"\u003e ```","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"### 6. Marking a task as complete","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"To mark a task as completed, simply type in `mark 1` where 1 is the index that you intend to indicate as completed.","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"```angular2html","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"\t Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"\t [D][X] eventName [Priority: MEDIUM] (by: Jan 01 2020)","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"### 7. Marking a task as not complete","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"Similar to point 6, To mark a task as not completed, simply type in `unmark 1` where 1 is the index that you intend to indicate as completed.","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"```angular2html","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"\t Nice! I\u0027ve marked this task as uncompleted:","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"\t [D][ ] eventName [Priority: MEDIUM] (by: Jan 01 2020)","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"### 8. Setting priority for tasks (Triage)","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"Use the command `triage 2 LOW` if you wish to mark task 2 as LOW priority. ","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"There are 3 different priority levels available: HIGH, MEDIUM, LOW.","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"```angular2html","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"    Noted, the priority of this task has been modified:","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"    [T][ ] this is a task that I need to complete! [Priority: LOW]","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"The respective change will be reflected in the `list` command.","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"\t 1. [D][ ] eventName [Priority: MEDIUM] (by: Jan 01 2020)","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"\t 2. [T][ ] this is a task that I need to complete! [Priority: LOW]","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"\t 3. [E][ ] party all day every [Priority: MEDIUM] (from: Feb 01 2023 to: Mar 09 2024)","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"### 9. Deleting a task","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"To delete a task, simply type `delete 2` where you want to remove a task at index 2.","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"\t Noted, I have removed this task:","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"\t  [T][ ] this is a task that I need to complete! [Priority: LOW]","lastModifiedDate":"2024-02-20"},{"lineNumber":105,"author":{"gitId":"Jerome-j"},"content":"\t Now you have 2 task(s) in the list.","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":107,"author":{"gitId":"Jerome-j"},"content":"### 10. Goodbye command","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"Jerome-j"},"content":"Enter `bye` to end your session. Your data is always automatically saved.","lastModifiedDate":"2024-02-20"},{"lineNumber":109,"author":{"gitId":"Jerome-j"},"content":"- **Expected Output**:","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"Jerome-j"},"content":"\t ____________________________________________________________","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"Jerome-j"},"content":"\t Exiting as requested ...","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"Jerome-j"},"content":"\t ____________________________________________________________","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"Jerome-j"},"content":"\t ____________________________________________________________","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"Jerome-j"},"content":"\t Bye. Hope to see you again soon!","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"Jerome-j"},"content":"\t ____________________________________________________________","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"Jerome-j"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"Jerome-j"},"content":"\u003e **Pro-Tip 🎩:** You can simply delete and re-create the task that you intend to modify.","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":121,"author":{"gitId":"Jerome-j"},"content":"## Feature 1: Autosave 💾","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"Jerome-j"},"content":"Once you complete a command, whatever changes that you have made is persisted!","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"Jerome-j"},"content":"So there is no save button!","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":125,"author":{"gitId":"Jerome-j"},"content":"## Feature 2: Triage (Set Priority Level) 🏥","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"Jerome-j"},"content":"You can set the priority level for the tasks that you wish to concentrate on!","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Jerome-j":106,"-":20}},{"path":"src/main/java/jerome/JeromeGpt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.ByeCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.CommandResult;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import jerome.common.DataStorage;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import jerome.parser.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import jerome.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" * Runs the JeromeGPT, a command-line application that allows user interaction by entering commands.","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" * This class is used for testing the command line interface.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":" * program design.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"public class JeromeGpt {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    private DataStorage dataStorage;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     * Duke is a command-line application that allows users to interact with it by entering commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    public JeromeGpt() { }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"     * Starts the Duke application by initializing the user interface and data storage,","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"     * and displaying the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    public void start() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"        // TODO: There could be a try catch here","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"        this.dataStorage \u003d new DataStorage(Integer.MAX_VALUE, \"database.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"     * Prints the Goodbye message and exits.","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    private void exit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     * Runs the Duke application by starting it, running the command loop until the bye command is issued.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"        start();","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"        runCommandLoopUntilExitCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"        exit();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"     * Executes the main method of the application for command-line mode.","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"     * @param args the command-line arguments","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"        new JeromeGpt().run();","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"     * Executes the given command and returns the result.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"     * @param command the command to be executed","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"     * @return the result of the command execution","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult executeCommand(Command command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"        command.setData(dataStorage);","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"        CommandResult commandResult \u003d command.execute();","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"        return commandResult;","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"     * Reads the user command and executes it, until the user issues the exit command.","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"    private void runCommandLoopUntilExitCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"        Command command;","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"        do {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"            // Keep reading user input until they type \"bye\"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"            // Check that userInput is not null.","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"            assert(userInput !\u003d null);","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"            command \u003d new Parser().parseCommand(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"            CommandResult commandResult \u003d executeCommand(command);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"            ui.showLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"            System.out.println(commandResult.feedbackToUser);","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"            ui.showLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"        } while (!ByeCommand.isExit(command));","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the response from the application based on the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"Jerome-j"},"content":"     * @param input the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Jerome-j"},"content":"     * @return the response generated required by Duke.","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"Jerome-j"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"Jerome-j"},"content":"        Command command \u003d new Parser().parseCommand(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"Jerome-j"},"content":"        CommandResult commandResult \u003d executeCommand(command);","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"Jerome-j"},"content":"        return commandResult.feedbackToUser;","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":117,"-":1}},{"path":"src/main/java/jerome/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Ends the program execution","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"     * Represents the keyword for the \"bye\" command.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"     * The \"bye\" command ends the program execution.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    /** Represents the usage message for the \"bye\" command. * Usage: bye */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Quits the program.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    /** Represents the acknowledgment message when the program exits. */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGMENT \u003d \"\\t Exiting as requested ...\";","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGMENT);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     * Checks if the given command represents an exit command.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     * @param command the command to check","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * @return true if the command is an exit command, false otherwise","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"        // instanceof returns false if it is null","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"        return command instanceof ByeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":43}},{"path":"src/main/java/jerome/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.common.DataStorage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Represents an executable command.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"public class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"     * Represents a data storage object that handles reading from and writing to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    protected DataStorage dataStorage;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * TODO: Code referenced from: https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    };","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     * Configures the data storage object used by the command.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     * @param dataStorage the data storage object to be set","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    public void setData(DataStorage dataStorage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"        this.dataStorage \u003d dataStorage;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":34}},{"path":"src/main/java/jerome/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"public class CommandResult {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"     * Displays the feedback message to be shown to the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"     * Contains a description of the execution result","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     * */","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     * Represents the result of a command execution.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * @param feedbackToUser message to be displayed to user.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":25}},{"path":"src/main/java/jerome/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import static jerome.common.DateTimeHandler.DATE_INPUT_FORMAT_STRING;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to add a deadline task to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" * with modifications to the format.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for the Deadline command.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     * Represents the usage message for the Deadline command.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     * Usage Example: deadline boil hot water /by 2021-07-30.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\t \" + COMMAND_WORD + \": Adds an deadline. \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Example: \" + COMMAND_WORD","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"            + \" boil hot water /by \" + DATE_INPUT_FORMAT_STRING;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Represents the error message when the event name is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_BLANK_EVENT \u003d \"\\t The event name cannot be empty!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     * Represents the error message when the deadline\u0027s end time is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_BLANK_END_TIME \u003d \"\\t The end time cannot be empty!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"     * Represents the message after the deadline is successfully added.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"     * Contains the added deadline details and the current number of tasks in the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t %s\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Now you have %d task(s) available!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"     * Represents the format of the arguments for a deadline command.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"     * Regex to capture the `eventName` and `endTime` as a capture group.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"    public static final Pattern DEADLINE_ARGUMENTS_FORMAT \u003d Pattern.compile(\"(?\u003ceventName\u003e.+) \\\\/by (?\u003cendTime\u003e\\\\S+)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * Represents the Deadline object that is to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"     * Represents the DeadlineCommand, which adds a deadline task to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     * @param eventName the name of the deadline event.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"     * @param by the deadline\u0027s end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"    public DeadlineCommand(String eventName, String by) throws MalformedUserInputException {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"        this.toAdd \u003d new Deadline(eventName, by, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command by adding a task to the data storage and returning a command result.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"     * @return CommandResult object containing success message and task count in the custom format above.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(this.toAdd);","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString(), dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":81}},{"path":"src/main/java/jerome/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to delete a task to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for the Delete command.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     * Represents the usage message for the Delete command.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"     * Usage Example: delete 3.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\t \" + COMMAND_WORD + \": Delete a selected event when it exists. \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Example: \" + COMMAND_WORD","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"            + \" 1 \";","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"     * Represents the message after the delete command is successfully executed.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"     * Contains the deleted task information, and task count in the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Noted, I have removed this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t  %s\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Now you have %d task(s) in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     * Represents an invalid message when user input is dirty.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_INVALID_ID \u003d \"\\t Please enter a integer that is 1 or larger.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"     * Represents a message indicating that a task has not been created yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_TASK_NOT_CREATED_YET \u003d \" \\t This is an invalid index\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t There are %d tasks available.\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     * Represents the index of the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    private int targetIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"     * Represents command to delete a task from the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"     * @param targetIndex the index of the task to be deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"    public DeleteCommand(int targetIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"     * @return the CommandResult indicating the result of the execution which could pass or fail.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"            Task task \u003d dataStorage.getTask(targetIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"            dataStorage.deleteTask(targetIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, task, dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NOT_CREATED_YET, dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":76}},{"path":"src/main/java/jerome/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import static jerome.common.DateTimeHandler.DATE_INPUT_FORMAT_STRING;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to add an event to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for the Event command.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     * Represents the usage message for the Event command.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     * Usage Example: event event_name /from 2021-02-25 /to 2024-01-01.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\t \" + COMMAND_WORD + \": Adds an event.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Example: \" + COMMAND_WORD","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"            + \" go for CS2103 tutorial /from \" + DATE_INPUT_FORMAT_STRING + \" /to \" + DATE_INPUT_FORMAT_STRING;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     * Represents the message after the event is successfully added.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * Contains the added event details and the current number of tasks in the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t %s\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Now you have %d task(s) available!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"     * Represents error message when the event name is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_BLANK_EVENT \u003d \"\\t The event name cannot be empty!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"     * Represents error message when the start time of an event is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_BLANK_START_TIME \u003d \"\\t The start time cannot be empty!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"     * Represents the error message when the end time of an event is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_BLANK_END_TIME \u003d \"\\t The end time cannot be empty!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * Represents the format of the arguments for a deadline command.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     * Regex to capture the `eventName`, `startTime` and `endTime` as a capture group.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"    public static final Pattern EVENT_ARGUMENTS_FORMAT \u003d","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"            Pattern.compile(\"(?\u003ceventName\u003e.+) \\\\/from (?\u003cstartTime\u003e\\\\S+) \\\\/to (?\u003cendTime\u003e\\\\S+)\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     * Represents the Event object that is to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"    private final Event toAdd;","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"     * Represents the EventCommand, which adds an event task to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"     * @param eventName the name of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"     * @param startTime time that the event starts.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"     * @param  endTime time that the end ends.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"    public EventCommand(String eventName, String startTime, String endTime) throws MalformedUserInputException {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"        if (eventName.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(MESSAGE_BLANK_EVENT);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"        this.toAdd \u003d new Event(eventName.trim(), startTime, endTime, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command by adding a task to the data storage and returning a command result.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"     * @return CommandResult object containing success message and task count in the custom format above.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(this.toAdd);","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString(), dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":93}},{"path":"src/main/java/jerome/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to add an event to the data storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for Find command.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     * Represents a message displayed when the search term is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_EMPTY_SEARCH_TERM \u003d","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"            \"\\t If you would like to list everything, please use the list command.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     * Represents how each individual event should be formatted.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    private static final String MESSAGE_INDIVIDUAL_LISTING_FORMAT \u003d \"\\t %d. %s\";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"     * Represents the target index stores the search term provided by the user.","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    private String searchString;","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"        this.searchString \u003d searchTerm;","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command to display a list of all entries in the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"     * @return a CommandResult containing the formatted list of entries that contains required keywords.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(dataStorage.searchResultsInList(searchString));","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jerome-j":45}},{"path":"src/main/java/jerome/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"     * Represents feedback provided to the user when command is bad.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"     * Creates a new IncorrectCommand object with the given feedback message.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"     * @param feedbackToUser the feedback message to be displayed to the user","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command by returning a command result.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":30}},{"path":"src/main/java/jerome/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to display list of all entries in database.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for List Event command.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"     * Represents how each individual event should be formatted.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    private static final String MESSAGE_INDIVIDUAL_LISTING_FORMAT \u003d \"\\t %d. %s\";","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command to display a list of all entries in the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * @return a CommandResult containing the formatted list of entries.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(dataStorage.searchResultsInList(\"\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":27}},{"path":"src/main/java/jerome/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to add an event to the data storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for mark Event command.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * Represents how this command should be used.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\t \" + COMMAND_WORD + \": Marks an event as completed.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Example: \" + COMMAND_WORD","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"            + \" 1 \";","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     * Represents how data should be presented to user upon success.","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t %s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Represents what should be displayed when an error is met.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_INVALID_ID \u003d \"\\t Please enter a integer that is 1 or larger.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     * Represents an error message representing a valid, but not yet created index.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_TASK_NOT_CREATED_YET \u003d \" \\t This is an invalid index\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t There are %d tasks available.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    private int targetIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"     * Represents a command to mark an event as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"     * @param targetIndex the index to be marked as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"    public MarkCommand(int targetIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command to execute the marking of tasks as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     * @return a CommandResult if the operation has succeeded or failed.","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"            dataStorage.setTaskStatus(targetIndex, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, dataStorage.getTask(targetIndex)));","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NOT_CREATED_YET, dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":68}},{"path":"src/main/java/jerome/commands/SetPriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Task;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to delete a task to the data storage.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" *","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"public class SetPriorityCommand extends Command {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for the Delete command.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"triage\";","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     * Represents a regular expression pattern for matching a specific format.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    public static final Pattern SET_PRIORITY_ARGUMENTS_FORMAT \u003d","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"            Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+) (?\u003cpriorityLevel\u003e\\\\S+)\");","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     * Represents the usage message for the Delete command.","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Usage Example: delete 3.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\t \" + COMMAND_WORD + \": Change priority level of a Task. \\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Example: \" + COMMAND_WORD","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"            + \" 1 medium\";","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"     * Represents the message after the delete command is successfully executed.","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"     * Contains the deleted task information, and task count in the database.","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Noted, the priority of this task has been modified:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t  %s\";","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"     * Represents an invalid message when user input is dirty.","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_INVALID_ID \u003d \"\\t Please enter a integer that is 1 or larger.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"     * Represents an error message indicating that an invalid priority value was provided.","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_INVALID_PRIORITY \u003d \"\\t Please enter a valid priority level.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * Represents a message indicating that a task has not been created yet.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_TASK_NOT_CREATED_YET \u003d \" \\t This is an invalid index\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t There are %d tasks available.\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"     * Represents the index of the task to be deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    private int targetIndex;","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"    private Priority priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"     * Represents command to delete a task from the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"     * @param targetIndex the index of the task to be deleted.","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"    public SetPriorityCommand(int targetIndex, Priority priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command to delete a task from the task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"     * @return the CommandResult indicating the result of the execution which could pass or fail.","lastModifiedDate":"2024-02-14"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"            Task task \u003d dataStorage.getTask(targetIndex);","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"            task.setPriority(this.priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"            dataStorage.rebuildStorage();","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, task, dataStorage.getTaskCount()));","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NOT_CREATED_YET, dataStorage.getTaskCount()));","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Jerome-j":93}},{"path":"src/main/java/jerome/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to create to do event to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for the To-do command.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * Represents the usage message for the To-do command.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * Usage Example: todo eventName","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a todo task. \\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"            + \" boil coconut milk\";","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * Represents the message after the event is successfully added.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     * Contains the added event details and the current number of tasks in the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t %s\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Now you have %d task(s) available!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     * Represents error message when the event name is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_BLANK_EVENT \u003d \"\\t The event name cannot be empty!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"     * Represents the To-do object that is to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    private final Todo toAdd;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"     * Represents the TodoCommand, which adds a to-do task to the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"     * This command takes in a task name and creates a new To-do object with the task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     * @param taskName the name of the task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    public TodoCommand(String taskName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"        this.toAdd \u003d new Todo(taskName, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command by adding a task to the data storage and returning a command result.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * @return CommandResult object containing success message and task count in the custom format above.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(this.toAdd);","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd.toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"                dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":64}},{"path":"src/main/java/jerome/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Represents the command to mark the task as uncompleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"     * Represents the command word for unmark Event command.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * Represents how this command should be used.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\t \" + COMMAND_WORD + \": Marks an event as uncompleted.\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t Example: \" + COMMAND_WORD","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"            + \" 1 \";","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * Represents how data should be presented to user upon success.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"\\t Nice! I\u0027ve marked this task as uncompleted:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t %s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * Represents what should be displayed when an error is met.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_INVALID_ID \u003d \"\\t Please enter a integer that is 1 or larger.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"     * Represents an error message representing a valid, but not yet created index.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_TASK_NOT_CREATED_YET \u003d \" \\t This is an invalid index\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"            + \"\\t There are %d tasks available.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    private int targetIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     * Represents a command to unmark an event as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     * @param targetIndex the index to be unmarked as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    public UnmarkCommand(int targetIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     * Executes the command to execute the unmarking of tasks as completed.","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     * @return a CommandResult if the operation has succeeded or failed.","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    public CommandResult execute() {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"            dataStorage.setTaskStatus(targetIndex, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, dataStorage.getTask(targetIndex)));","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"        } catch (IndexOutOfBoundsException iobe) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NOT_CREATED_YET, dataStorage.getTaskCount()));","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":70}},{"path":"src/main/java/jerome/common/DataStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.common;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":" * Stores and manages tasks in a data storage file.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":" * Persist to long-term storage when a new task is added or current task is modified.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":" * For retrieval, it makes use of the one that is cached in RAM.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"public class DataStorage {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    private ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    private int taskCount;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"    private int maxTask;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    private File file;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     * Constructs a new DataStorage object with maximum number of tasks and file name.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Exits the program if there are problem accessing device IO.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * @param maxTask  the maximum number of tasks to store.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     * @param fileName the name of the file to use for storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    public DataStorage(int maxTask, String fileName) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"        this.maxTask \u003d maxTask;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"        this.taskCount \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"        this.file \u003d new File(fileName);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"        this.createNewFileOrOpenExisting();","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"    private void createNewFileOrOpenExisting() {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"        // Solution below adapted from https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"            if (!this.file.createNewFile()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"                // This means that the file already exists here.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"                this.tasksList \u003d readTextFileIfAlreadyCreated();","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"            System.err.println(\"An error occurred while opening the file. \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"                    + \"An error occurred on your device; \"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"                    + \"please check that there is at least 100 MB of free disk space.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"            System.exit(1); // Exit the program. Non-zero indicates abnormal termination.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the task at the requested index.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"     * @param index the index of the task to be retrieved.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"     * @return the task at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"     * @throws IndexOutOfBoundsException if the index is lesser than zero or greater than the task count.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"        // To check if there is an improper reduction in internal task count.","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"        assert (this.taskCount \u003e\u003d 0);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"        if (index \u003c 0 || index \u003e this.taskCount) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"        return this.tasksList.get(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"     * Adds a task to the task list and updates the storage file on HDD.","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"    public void addTaskToTextFile(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"        // To check if there is an improper reduction in internal task count.","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"        assert (this.taskCount \u003e\u003d 0);","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"        this.tasksList.add(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"        addTaskToTextFile(task.toStorageString(), true);","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"        this.taskCount++;","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"     * Adds a task to the storage file on HDD.","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"     * @param line     the entry to be added to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"     * @param isAppend flag to select append the line to the end of the file or overwrite the file (completely).","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"    public void addTaskToTextFile(String line, boolean isAppend) {","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"            // Solution below adapted from: https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"            FileWriter myWriter \u003d new FileWriter(this.file, isAppend);","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"            myWriter.append(line);","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"Jerome-j"},"content":"            myWriter.append(\"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"Jerome-j"},"content":"            myWriter.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"Jerome-j"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Jerome-j"},"content":"     * Reads tasks from the database if it has already been created.","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Jerome-j"},"content":"     * Returns an ArrayList of Task objects.","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Jerome-j"},"content":"     * An error will be displayed if the file is corruped.","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Jerome-j"},"content":"     * @return ArrayList of Task objects read from the database.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Jerome-j"},"content":"    public ArrayList\u003cTask\u003e readTextFileIfAlreadyCreated() {","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"Jerome-j"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"Jerome-j"},"content":"            this.appendReadTasksIntoList(tasksList);","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"Jerome-j"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"Jerome-j"},"content":"            System.out.println(\"The file was not found.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"Jerome-j"},"content":"            System.out.println(\"An error occurred while reading from the file.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException malformedUserInputException) {","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"Jerome-j"},"content":"            System.out.println(\"Your database may be corrupted. \" + malformedUserInputException.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"Jerome-j"},"content":"        return tasksList;","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"Jerome-j"},"content":"    private void appendReadTasksIntoList(ArrayList\u003cTask\u003e tasksList) throws IOException, MalformedUserInputException {","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"Jerome-j"},"content":"        FileReader fileReader \u003d new FileReader(this.file);","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"Jerome-j"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"Jerome-j"},"content":"        String line;","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"Jerome-j"},"content":"        // Continuously read until the end of file.","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"Jerome-j"},"content":"        while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"Jerome-j"},"content":"            Task task \u003d parseTaskStoredInFile(line);","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"Jerome-j"},"content":"            tasksList.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"Jerome-j"},"content":"            this.taskCount++;","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"Jerome-j"},"content":"        bufferedReader.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"Jerome-j"},"content":"        fileReader.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"Jerome-j"},"content":"    private Task parseTaskStoredInFile(String line) throws MalformedUserInputException {","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"Jerome-j"},"content":"        String[] splitTask \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"Jerome-j"},"content":"        int length \u003d splitTask.length;","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"Jerome-j"},"content":"        // TODO: Handle a dirty input.","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"Jerome-j"},"content":"        if (line.startsWith(\"T\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"Jerome-j"},"content":"            return this.getTodoTaskFromDatabase(length, splitTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"Jerome-j"},"content":"        } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"Jerome-j"},"content":"            return this.getDeadlineTaskFromDatabase(length, splitTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"Jerome-j"},"content":"        } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"Jerome-j"},"content":"            return this.getEventTaskFromDatabase(length, splitTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"Jerome-j"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"Your database is potentially corrupted\");","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"Jerome-j"},"content":"    private static Event getEventTaskFromDatabase(int length, String[] splitTask) throws MalformedUserInputException {","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"Jerome-j"},"content":"        // then it is an event","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"Jerome-j"},"content":"        if (length !\u003d 6) {","lastModifiedDate":"2024-02-14"},{"lineNumber":171,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"Your database is corrupted.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"Jerome-j"},"content":"        return new Event(splitTask[1], splitTask[3], splitTask[4],","lastModifiedDate":"2024-02-14"},{"lineNumber":174,"author":{"gitId":"Jerome-j"},"content":"                Boolean.valueOf(splitTask[2]), Priority.valueOf(splitTask[5]));","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"Jerome-j"},"content":"    private static Deadline getDeadlineTaskFromDatabase(int length, String[] splitTask)","lastModifiedDate":"2024-02-12"},{"lineNumber":178,"author":{"gitId":"Jerome-j"},"content":"            throws MalformedUserInputException {","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"Jerome-j"},"content":"        // then it is a deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"Jerome-j"},"content":"        if (length !\u003d 5) {","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"Your database is corrupted.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"Jerome-j"},"content":"        return new Deadline(splitTask[1], splitTask[3], Boolean.valueOf(splitTask[2]), Priority.valueOf(splitTask[4]));","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"Jerome-j"},"content":"    private static Todo getTodoTaskFromDatabase(int length, String[] splitTask) throws MalformedUserInputException {","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"Jerome-j"},"content":"        // then it is a task","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"Jerome-j"},"content":"        if (length !\u003d 4) {","lastModifiedDate":"2024-02-14"},{"lineNumber":189,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"Your database is corrupted.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"Jerome-j"},"content":"        return new Todo(splitTask[1], Boolean.valueOf(splitTask[2]), Priority.valueOf(splitTask[3]));","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Jerome-j"},"content":"     * Sets the completion status of a task at the specified index, and updates the HDD file.","lastModifiedDate":"2024-02-20"},{"lineNumber":197,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"Jerome-j"},"content":"     * @param taskIndex the index of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"Jerome-j"},"content":"     * @param status    the status of the task (true indicates completed, while false indicates incomplete).","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the task index is out of bounds or the task has not been created yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"Jerome-j"},"content":"     * @throws IndexOutOfBoundsException   if the task index is out of bounds.","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"Jerome-j"},"content":"    public void setTaskStatus(int taskIndex, boolean status) throws MalformedUserInputException {","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"Jerome-j"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e this.maxTask) {","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"Jerome-j"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"Jerome-j"},"content":"        } else if (taskIndex \u003e\u003d taskCount) {","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"Jerome-j"},"content":"            // It is a valid index, but there is no task there yet.","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"\\t The task has not been created yet.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":210,"author":{"gitId":"Jerome-j"},"content":"        this.tasksList.get(taskIndex).setDone(status);","lastModifiedDate":"2024-01-24"},{"lineNumber":211,"author":{"gitId":"Jerome-j"},"content":"        // We rebuild the dataStorage again","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"Jerome-j"},"content":"        rebuildStorage();","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":215,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":216,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the number of tasks stored in the data storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"Jerome-j"},"content":"     * @return the number of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"Jerome-j"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-01-24"},{"lineNumber":223,"author":{"gitId":"Jerome-j"},"content":"        return this.taskCount;","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":225,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":227,"author":{"gitId":"Jerome-j"},"content":"     * Rebuilds the storage file by iterating through all the tasks in the task list","lastModifiedDate":"2024-02-14"},{"lineNumber":228,"author":{"gitId":"Jerome-j"},"content":"     * and adding them to the storage file again.","lastModifiedDate":"2024-02-14"},{"lineNumber":229,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":230,"author":{"gitId":"Jerome-j"},"content":"     * Uses the addTaskToTextFile method to add a task to the storage file.","lastModifiedDate":"2024-02-14"},{"lineNumber":231,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":232,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":233,"author":{"gitId":"Jerome-j"},"content":"    public void rebuildStorage() {","lastModifiedDate":"2024-02-14"},{"lineNumber":234,"author":{"gitId":"Jerome-j"},"content":"        // TODO: might not be a very good idea to rebuild the entire database.","lastModifiedDate":"2024-01-28"},{"lineNumber":235,"author":{"gitId":"Jerome-j"},"content":"        for (int i \u003d 0; i \u003c this.taskCount; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":236,"author":{"gitId":"Jerome-j"},"content":"            // i !\u003d 0 means that refresh the whole file.","lastModifiedDate":"2024-01-28"},{"lineNumber":237,"author":{"gitId":"Jerome-j"},"content":"            addTaskToTextFile(tasksList.get(i).toStorageString(), i !\u003d 0);","lastModifiedDate":"2024-02-12"},{"lineNumber":238,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":239,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":242,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"Jerome-j"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"Jerome-j"},"content":"     * @param indexToDelete the index of the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the task index is out of bounds or the task has not been created yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"Jerome-j"},"content":"     * @throws IndexOutOfBoundsException   if the task index is out of bounds.","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"Jerome-j"},"content":"    public void deleteTask(int indexToDelete) throws MalformedUserInputException {","lastModifiedDate":"2024-01-30"},{"lineNumber":250,"author":{"gitId":"Jerome-j"},"content":"        if (indexToDelete \u003c 0 || indexToDelete \u003e this.maxTask) {","lastModifiedDate":"2024-01-24"},{"lineNumber":251,"author":{"gitId":"Jerome-j"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":252,"author":{"gitId":"Jerome-j"},"content":"        } else if (indexToDelete \u003e\u003d this.taskCount) {","lastModifiedDate":"2024-01-24"},{"lineNumber":253,"author":{"gitId":"Jerome-j"},"content":"            // It is a valid index, but there is no task there yet.","lastModifiedDate":"2024-01-24"},{"lineNumber":254,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"There are no task stored at the specified location.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":255,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":256,"author":{"gitId":"Jerome-j"},"content":"        // If we reach here, it means that there is no problem.","lastModifiedDate":"2024-01-28"},{"lineNumber":257,"author":{"gitId":"Jerome-j"},"content":"        this.tasksList.remove(indexToDelete);","lastModifiedDate":"2024-01-24"},{"lineNumber":258,"author":{"gitId":"Jerome-j"},"content":"        this.taskCount--;","lastModifiedDate":"2024-01-24"},{"lineNumber":259,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":260,"author":{"gitId":"Jerome-j"},"content":"        // To check if there is an improper reduction in internal task count.","lastModifiedDate":"2024-02-12"},{"lineNumber":261,"author":{"gitId":"Jerome-j"},"content":"        assert (this.taskCount \u003e\u003d 0);","lastModifiedDate":"2024-02-12"},{"lineNumber":262,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":263,"author":{"gitId":"Jerome-j"},"content":"        // We rebuild the dataStorage again.","lastModifiedDate":"2024-02-12"},{"lineNumber":264,"author":{"gitId":"Jerome-j"},"content":"        rebuildStorage();","lastModifiedDate":"2024-01-28"},{"lineNumber":265,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":266,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":267,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":268,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":269,"author":{"gitId":"Jerome-j"},"content":"     * Searches for tasks whose description contains the given search term.","lastModifiedDate":"2024-02-12"},{"lineNumber":270,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":271,"author":{"gitId":"Jerome-j"},"content":"     * @param searchTerm the keyword used to search for tasks. If no terms are specified,","lastModifiedDate":"2024-02-12"},{"lineNumber":272,"author":{"gitId":"Jerome-j"},"content":"     *                   then everything is returned.","lastModifiedDate":"2024-02-12"},{"lineNumber":273,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the tasks whose description contains the search term.","lastModifiedDate":"2024-02-12"},{"lineNumber":274,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":275,"author":{"gitId":"Jerome-j"},"content":"    public String searchResultsInList(String searchTerm) {","lastModifiedDate":"2024-02-12"},{"lineNumber":276,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":277,"author":{"gitId":"Jerome-j"},"content":"        ArrayList\u003cString\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":278,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":279,"author":{"gitId":"Jerome-j"},"content":"        this.tasksList.stream()","lastModifiedDate":"2024-02-12"},{"lineNumber":280,"author":{"gitId":"Jerome-j"},"content":"                // Ignore the case during the search by converting searchTerm","lastModifiedDate":"2024-02-12"},{"lineNumber":281,"author":{"gitId":"Jerome-j"},"content":"                // and item stored to lowercase.","lastModifiedDate":"2024-02-12"},{"lineNumber":282,"author":{"gitId":"Jerome-j"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(searchTerm.toLowerCase()))","lastModifiedDate":"2024-02-12"},{"lineNumber":283,"author":{"gitId":"Jerome-j"},"content":"                .forEach(task -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":284,"author":{"gitId":"Jerome-j"},"content":"                    // Gets the index of the particular item.","lastModifiedDate":"2024-02-12"},{"lineNumber":285,"author":{"gitId":"Jerome-j"},"content":"                    int indexNumber \u003d this.tasksList.indexOf(task) + 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":286,"author":{"gitId":"Jerome-j"},"content":"                    arrayList.add(\"\\t \" + indexNumber + \". \" + task.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":287,"author":{"gitId":"Jerome-j"},"content":"                }); // Append the description of each filtered task to the StringBuilder","lastModifiedDate":"2024-02-12"},{"lineNumber":288,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":289,"author":{"gitId":"Jerome-j"},"content":"        return convertArrayListToLineSeparatedString(arrayList);","lastModifiedDate":"2024-02-12"},{"lineNumber":290,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":291,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":292,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":293,"author":{"gitId":"Jerome-j"},"content":"     * Converts an ArrayList of Strings into a single String","lastModifiedDate":"2024-02-12"},{"lineNumber":294,"author":{"gitId":"Jerome-j"},"content":"     * with each item separated by a newline character,","lastModifiedDate":"2024-02-12"},{"lineNumber":295,"author":{"gitId":"Jerome-j"},"content":"     * except for the last line.","lastModifiedDate":"2024-02-12"},{"lineNumber":296,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":297,"author":{"gitId":"Jerome-j"},"content":"     * @param arrayList the ArrayList of Strings to be converted.","lastModifiedDate":"2024-02-12"},{"lineNumber":298,"author":{"gitId":"Jerome-j"},"content":"     * @return a single String with each item separated by a newline character.","lastModifiedDate":"2024-02-12"},{"lineNumber":299,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":300,"author":{"gitId":"Jerome-j"},"content":"    public String convertArrayListToLineSeparatedString(ArrayList\u003cString\u003e arrayList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":301,"author":{"gitId":"Jerome-j"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":302,"author":{"gitId":"Jerome-j"},"content":"        int size \u003d arrayList.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":303,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":304,"author":{"gitId":"Jerome-j"},"content":"        for (int i \u003d 0; i \u003c size; i++) { // Use a traditional for loop","lastModifiedDate":"2024-02-12"},{"lineNumber":305,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":306,"author":{"gitId":"Jerome-j"},"content":"            sb.append(arrayList.get(i));","lastModifiedDate":"2024-02-12"},{"lineNumber":307,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":308,"author":{"gitId":"Jerome-j"},"content":"            if (i \u003c size - 1) { // Check if it\u0027s not the last item","lastModifiedDate":"2024-02-12"},{"lineNumber":309,"author":{"gitId":"Jerome-j"},"content":"                sb.append(\"\\n\"); // Append new line except for the last item","lastModifiedDate":"2024-02-12"},{"lineNumber":310,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":311,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":312,"author":{"gitId":"Jerome-j"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":313,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":314,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":315,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Jerome-j":315}},{"path":"src/main/java/jerome/common/DateTimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.common;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * Represents a handler for date and time operations.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"public class DateTimeHandler {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"    // Solution adapted from:","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    // https://stackoverflow.com/questions/22463062/how-can-i-parse-format-dates-with-localdatetime-java-8","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"     * Represents the date input format string.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    public static final String DATE_INPUT_FORMAT_STRING \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     * Represents the format for parsing input dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    public static final DateTimeFormatter DATE_INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(DATE_INPUT_FORMAT_STRING);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     * Represents the format for outputting dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"    public static final DateTimeFormatter DATE_OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    private LocalDate localDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Represents a handler for date and time operations.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     * @param dateTime date in String format to be parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    public DateTimeHandler(String dateTime) throws MalformedUserInputException {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"            // Possible formats","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"            // 12 May","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"            // 12 May HH:mm","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"            // 12 May 2023","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"            // 12 May 2024 11:22","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"            // Monday","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"            // Monday 2 PM","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"            // Monday 2:00 PM","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"            this.localDate \u003d LocalDate.parse(dateTime, DATE_INPUT_FORMAT);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"        } catch (DateTimeException dateTimeException) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"            throw new MalformedUserInputException(\"\\t Invalid date time format.\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"                    + \"\\t Please enter in format \" + DATE_INPUT_FORMAT_STRING);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     * Returns the string representation of LocalDate object in a storage-friendly format.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * The format is specified by DATE_INPUT_FORMAT.","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the LocalDate object in a format suitable for storage","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"        return this.localDate.format(DATE_INPUT_FORMAT);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"     * Returns the string representation in a different format.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of LocalDate object in human-friendly format","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"        return this.localDate.format(DATE_OUTPUT_FORMAT);","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":73}},{"path":"src/main/java/jerome/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.common;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents various messages that are used in the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"public class Messages {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"    // Emoji of \\uD83D\\uDE05 is 😅","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"    public static final String MESSAGE_INCORRECT \u003d","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"            \"\\t I have no idea what you are trying to tell me??? \\uD83D\\uDE05\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":12}},{"path":"src/main/java/jerome/exception/MalformedUserInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents an exception that is thrown when the user input is dirty.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"public class MalformedUserInputException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"     * Represents an exception which represents the user dirty input.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"     * @param message error that user needs to correct.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    public MalformedUserInputException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Jerome-j":14}},{"path":"src/main/java/jerome/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.gui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.SnapshotParameters;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":" * Represents the DialogBox controlled using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":" * Represents dialog box consisting of ImageView to represent the","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":" * speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":" * program design.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"        // Leave a nicer space between the Image and the text that user input.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"        // Inspired by ChatGPT.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"        this.setSpacing(10);","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"        this.displayPicture.setImage(getRoundedImage(img));","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"        this.dialog.setStyle(\"-fx-border-color: black; -fx-border-width: 5; -fx-padding: 5; \"","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"                + \"-fx-background-color: rgba(48,48,90,0.13); -fx-border-radius: 2;\");","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the user dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"     * @param text that the user enter.","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"     * @param img image of the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"     * @return the user dialog box.","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the dialog box for the Chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"     * @param text from the chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"     * @param img chatbot image.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"     * @return the dialog box for Duke.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"    // Solution taken from: https://stackoverflow.com/questions/68631386/javafx-crop-image-as-a-circle","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"    private static Image getRoundedImage(Image image) {","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"        // Prompted about ideal radius using ChatGPT.","lastModifiedDate":"2024-02-21"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"        double radius \u003d Math.min(image.getWidth(), image.getHeight()) / 2;","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"        Circle clip \u003d new Circle(image.getWidth() / 2, image.getHeight() / 2, radius);","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"        ImageView imageView \u003d new ImageView(image);","lastModifiedDate":"2024-02-21"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"        imageView.setClip(clip);","lastModifiedDate":"2024-02-21"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"        SnapshotParameters parameters \u003d new SnapshotParameters();","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"        parameters.setFill(Color.TRANSPARENT);","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"        return imageView.snapshot(parameters, null);","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Jerome-j":102}},{"path":"src/main/java/jerome/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.gui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * Represents the launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Jerome-j":12}},{"path":"src/main/java/jerome/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.gui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"import jerome.JeromeGpt;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * Represents the GUI for Duke using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":" * program design.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    private JeromeGpt jeromeGpt \u003d new JeromeGpt();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     * Configures the primary stage, loading the FXML file for the main window,","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     * initializing UI and dataStorage, main window with the JeromeGpt instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * @param stage to be displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"            assert fxmlLoader !\u003d null : \"fxmlLoader cannot be found!\";","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"            jeromeGpt.start();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJeromeGpt(jeromeGpt);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Jerome-j":44}},{"path":"src/main/java/jerome/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.gui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"import jerome.JeromeGpt;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * Represents the Controller for MainWindow.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":" * program design.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    private JeromeGpt jeromeGpt;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"    // Image of JeromeGPT is an emoji that is captured as a screenshot with resolution of 84 by 84.","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    private Image jeromeGptImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JeromeGpt.png\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     * Ensures that the scrollPane automatically scrolls to the bottom","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     * when new dialog boxes are added.","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"        // Display welcome message.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"                DialogBox.getDukeDialog(\"Welcome to JeromeGPT!\", jeromeGptImage)","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"        );","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"     * Sets JeromeGpt instance for the MainWindow.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"     * @param j the JeromeGpt instance to set","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"    public void setJeromeGpt(JeromeGpt j) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"        this.jeromeGpt \u003d j;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"     * JeromeGPT\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     * the dialog container.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"        String response \u003d jeromeGpt.getResponse(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"                DialogBox.getDukeDialog(response, jeromeGptImage)","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Jerome-j":76}},{"path":"src/main/java/jerome/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.ByeCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.DeadlineCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.DeleteCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.EventCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.IncorrectCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.ListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.MarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.SetPriorityCommand;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.TodoCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"import jerome.commands.UnmarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"import jerome.common.Messages;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":" * Represents a Parser class that parses user input and converts it into executable commands.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":" *","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":" * with modifications to suit the context of my program.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Represents Regex used for initial separation of command word and args.","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"     * @param userInput the user input string","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"     * @return Command object based on user input","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    public Command parseCommand(String userInput) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"        assert userInput !\u003d null : \"User input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(Messages.MESSAGE_INCORRECT);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"            return prepareTodo(arguments);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"            return prepareEvent(arguments);","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"            return prepareDeadline(arguments);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"            return prepareMarkCommand(arguments);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"            return prepareUnmarkCommand(arguments);","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"            return prepareDeleteCommand(arguments);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"            return prepareFindCommand(arguments);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"        case SetPriorityCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"            return prepareSetPriorityCommand(arguments);","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(Messages.MESSAGE_INCORRECT);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareSetPriorityCommand(String arguments) {","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"        final Matcher matcher \u003d SetPriorityCommand.SET_PRIORITY_ARGUMENTS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(SetPriorityCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"            final int targetIndex \u003d Integer.parseInt(matcher.group(\"targetIndex\")) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"            final Priority priorityLevel \u003d Priority.valueOf(matcher.group(\"priorityLevel\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"            return new SetPriorityCommand(targetIndex, priorityLevel);","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(SetPriorityCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"Jerome-j"},"content":"            // Handle the case where the enum constant is not valid","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(SetPriorityCommand.MESSAGE_INVALID_PRIORITY);","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareFindCommand(String arguments) {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Jerome-j"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(FindCommand.MESSAGE_EMPTY_SEARCH_TERM);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"Jerome-j"},"content":"        return new FindCommand(arguments.trim());","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareMarkCommand(String arguments) {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Jerome-j"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(MarkCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"Jerome-j"},"content":"            int targetIndex \u003d Integer.valueOf(arguments.trim()) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"Jerome-j"},"content":"            return new MarkCommand(targetIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"Jerome-j"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(MarkCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareUnmarkCommand(String arguments) {","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Jerome-j"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(UnmarkCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Jerome-j"},"content":"            int targetIndex \u003d Integer.valueOf(arguments.trim()) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Jerome-j"},"content":"            return new UnmarkCommand(targetIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Jerome-j"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(UnmarkCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareDeleteCommand(String arguments) {","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Jerome-j"},"content":"        if (arguments.trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(DeleteCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Jerome-j"},"content":"            int targetIndex \u003d Integer.valueOf(arguments.trim()) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"Jerome-j"},"content":"            return new DeleteCommand(targetIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"Jerome-j"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(DeleteCommand.MESSAGE_INVALID_ID);","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareDeadline(String arguments) {","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"Jerome-j"},"content":"        final Matcher matcher \u003d DeadlineCommand.DEADLINE_ARGUMENTS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Jerome-j"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(DeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Jerome-j"},"content":"        final String eventName \u003d matcher.group(\"eventName\");","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Jerome-j"},"content":"        final String endTime \u003d matcher.group(\"endTime\");","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Jerome-j"},"content":"        if (eventName.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(DeadlineCommand.MESSAGE_BLANK_EVENT);","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Jerome-j"},"content":"        } else if (endTime.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(DeadlineCommand.MESSAGE_BLANK_END_TIME);","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"Jerome-j"},"content":"            return new DeadlineCommand(eventName, endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareEvent(String arguments) {","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Jerome-j"},"content":"        final Matcher matcher \u003d EventCommand.EVENT_ARGUMENTS_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Jerome-j"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(EventCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"Jerome-j"},"content":"        final String startTime \u003d matcher.group(\"startTime\");","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"Jerome-j"},"content":"        final String endTime \u003d matcher.group(\"endTime\");","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"Jerome-j"},"content":"        final String eventName \u003d matcher.group(\"eventName\");","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"Jerome-j"},"content":"        if (startTime.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(EventCommand.MESSAGE_BLANK_START_TIME);","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"Jerome-j"},"content":"        } else if (eventName.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(EventCommand.MESSAGE_BLANK_EVENT);","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"Jerome-j"},"content":"        } else if (endTime.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(EventCommand.MESSAGE_BLANK_END_TIME);","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"Jerome-j"},"content":"            return new EventCommand(eventName, startTime, endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":202,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":205,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"Jerome-j"},"content":"    private Command prepareTodo(String arguments) {","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"Jerome-j"},"content":"        String eventName \u003d arguments.trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"Jerome-j"},"content":"        if (eventName.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"Jerome-j"},"content":"            return new IncorrectCommand(TodoCommand.MESSAGE_BLANK_EVENT);","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"Jerome-j"},"content":"        return new TodoCommand(eventName);","lastModifiedDate":"2024-02-12"},{"lineNumber":213,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":215}},{"path":"src/main/java/jerome/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.common.DateTimeHandler;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * Represents a Deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    private DateTimeHandler by;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     * Creates the Deadline task with the given description, deadline, and status.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"     * @param description the name of the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"     * @param by          the deadline of the task in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone      the status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"    public Deadline(String description, String by, boolean isDone) throws MalformedUserInputException {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"        this.by \u003d new DateTimeHandler(by);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * Creates a Deadline task with the given description, deadline, priority and status.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"     * @param description the name of the deadline task.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"     * @param by          the deadline of the task in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone      the status of the task (true if completed, false otherwise).","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * @param priority    the priority level of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"    public Deadline(String description, String by, boolean isDone, Priority priority)","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"            throws MalformedUserInputException {","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"        this.by \u003d new DateTimeHandler(by);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"        super.setPriority(priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the Deadline object.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"     * Returns a string representation of the Task object in a format suitable for storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the Task object in a format suitable for storage","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"        return \"D | \" + this.getDescription() + \" | \" + super.getStatus()","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"                + \" | \" + this.by.toStorageString() + \" | \" + this.getPriority();","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Jerome-j":64}},{"path":"src/main/java/jerome/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import jerome.common.DateTimeHandler;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" * Represents an event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"    private DateTimeHandler startTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    private DateTimeHandler endTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     * Initializes a new Event task with the given description, start time, end time, and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"     * @param description the description of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"     * @param startTime the start time of the Event task in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"     * @param endTime the end time of the Event task in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone the completion status of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    public Event(String description, String startTime, String endTime, boolean isDone)","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"            throws MalformedUserInputException {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"        this.startTime \u003d new DateTimeHandler(startTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"        this.endTime \u003d new DateTimeHandler(endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"     * Initializes a new Event task with the given description, start time, end time, priority and completion status.","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * @param description the description of the Event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     * @param startTime the start time of the Event task in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * @param endTime the end time of the Event task in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone the completion status of the Event task.","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"     * @param priority    the priority level of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the user input is dirty.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    public Event(String description, String startTime, String endTime, boolean isDone, Priority priority)","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"            throws MalformedUserInputException {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"        this.startTime \u003d new DateTimeHandler(startTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"        this.endTime \u003d new DateTimeHandler(endTime);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the Event object.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * Returns a string representation of the Event object in a format suitable for storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the Event object in a format suitable for storage","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"        return \"E | \" + this.getDescription() + \" | \" + super.getStatus() + \" | \"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"                + this.startTime.toStorageString() + \" | \" + this.endTime.toStorageString()","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"                + \" | \" + this.getPriority();","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Jerome-j":67}},{"path":"src/main/java/jerome/tasklist/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.tasklist;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents the priority levels for tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" * It has three constants representing low, medium,","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":" * and high priority.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"public enum Priority {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"    LOW,","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"    MEDIUM,","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    HIGH","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Jerome-j":12}},{"path":"src/main/java/jerome/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents a task with a description and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"    private String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"    private Priority priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"     * Constructs a Task object with the given description and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"     * @param description the description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone      the completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"        // Default sets priority to medium","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"        this.priority \u003d Priority.MEDIUM;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * @return the priority of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    public Priority getPriority() {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"        return this.priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * Sets the priority of the task to the specified priority level.","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"     * @param priority the priority level to be set.","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"     * The status icon represents the completion status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"     * If the task is marked as done, the status icon will be \"X\".","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"     * Otherwise, the status icon will be a space character.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     * @return the status icon of the task (\"X\" if done, \" \" if not done)","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"     * Sets the completion status of the task to the true / false.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"     * @param status the completion status of the task (true indicates completed, false indicates incomplete).","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"     * Retrieves the name of the Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"     * @return the name of the Task.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"        return this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"     * The string representation includes the status icon","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"     * and the description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the Task object.","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" [Priority: \" + this.priority + \"]\";","lastModifiedDate":"2024-02-14"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"     * Allows saving of the Task object in a String format so that it can be stored in the database.","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"     * @return String interpretation of Task object.","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"        return \"T | \" + this.getStatus() + \" | \" + this.description + \" | \" + this.priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Jerome-j":104}},{"path":"src/main/java/jerome/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":" * Represents a to-do task with a description and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"     * Constructs a To-do object with the given description and completion status.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"     * @param description the description of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone      the completion status of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * Constructs a To-do object with the given description, completion status and priority.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     * @param description the description of the to-do task.","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"     * @param isDone      the completion status of the to-do task.","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"     * @param priority    the priority level of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"    public Todo(String description, boolean isDone, Priority priority) {","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"        this.setPriority(priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"     * Returns a string representation of the To-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * @return a string representation of the To-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"     * Represents a to-do task with a description and completion status to be stored in txt file.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"        return \"T | \" + this.getDescription() + \" | \" + super.getStatus() + \" | \" + this.getPriority();","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Jerome-j":50}},{"path":"src/main/java/jerome/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import jerome.common.Messages;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":" * Represents the User Interface of the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" * program design.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"     * Represents the User Interface of the application.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * Takes stdin from System standard-input.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * Displays a line separator in the console.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    public void showLine() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"        System.out.println(\"\\t ____________________________________________________________\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"     * Displays a welcome message in the console.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"        showLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"        System.out.println(\"\\t Hello! I\u0027m JeromeGPT\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"        showLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"     * Displays the goodbye message in the console.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"        showLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"        System.out.println(\"\\t \" + Messages.MESSAGE_GOODBYE);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"        showLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"     * @return the command entered by the user","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"        \u003c!-- Apply a border to the Label --\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"               style\u003d\"-fx-border-color: black; -fx-border-width: 2; -fx-padding: 5; -fx-border-insets: -2; -fx-border-radius: 10; -fx-background-color: transparent;\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Jerome-j":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"600\" minWidth\u003d\"400\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jerome.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"  \u003c!-- Inspired by https://github.com/nus-cs2103-AY2324S2/forum/issues/337: fy17ohhh   --\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"    \u003cTextField fx:id\u003d\"userInput\" AnchorPane.leftAnchor\u003d\"0\" AnchorPane.bottomAnchor\u003d\"1.0\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"    \u003c!-- Make sure that the items do not take more extra space than necessary: fixToHeight. --\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" AnchorPane.topAnchor\u003d\"0\" AnchorPane.rightAnchor\u003d\"0\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0\" hbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" fillWidth\u003d\"true\" maxWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Jerome-j":21}},{"path":"src/test/java/jerome/commands/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":" * This class is a JUnit test class for the EventCommand class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":" * Tests the functionality of the {@code EventCommand} class.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"public class EventCommandTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"     * Represents a variable for whitespace to test for empty event name","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"     * or date.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"    public static final String WHITESPACE \u003d \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"     * Tests adding an empty event, start date or end date with a whitespace as name.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"    public void addCommand_emptyEvent_throwsException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":"        assertConstructingInvalidEventCmdThrowsException(\"some event name\", WHITESPACE, \"2024-01-01\");","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":"        assertConstructingInvalidEventCmdThrowsException(\"some event name\", \"2024-01-01\", WHITESPACE);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":"        assertConstructingInvalidEventCmdThrowsException(WHITESPACE, \"2024-01-01\", \"2024-01-01\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"     * Tests different kinds of invalid event name.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    public void addCommand_invalidEventName_throwsException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"        final String[] invalidNames \u003d {\"\", \" \", \"               \"};","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"        for (String name : invalidNames) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"            assertConstructingInvalidEventCmdThrowsException(name, \"2024-01-01\", \"2024-02-01\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"     * Tests different kinds of invalid dates.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"    public void addCommand_invalidDate_throwsException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"        final String[] invalidDates \u003d {\"12 Jan 2023\", \"2024-31-01\", \"2024-0100-21\", \"24-12-12\"};","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"        for (String startDate : invalidDates) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"            for (String endDate : invalidDates) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"                assertConstructingInvalidEventCmdThrowsException(\"some event name\", startDate, endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"     * Tests a successful add command.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"    public void addCommand_successful() {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"        final String[] validDates \u003d {\"1992-01-01\", \"2013-01-09\", \"2023-01-09\", \"2024-01-09\", \"2024-01-03\"};","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"        final String[] activityNames \u003d {\"drill the wall\", \"cook laksa\", \"write test case\", \"swim\", \"dance in pool\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"        for (String startDate : validDates) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"            for (String endDate : validDates) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"                for (String activity : activityNames) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"                    assertConstructingValidEvent(activity, startDate, endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"    private void assertConstructingInvalidEventCmdThrowsException(String name, String startTime, String endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"            new EventCommand(name, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"        String error \u003d String.format(","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"                \"An event command was successfully constructed with invalid input: %s %s %s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"                name, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"        fail(error);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"    private void assertConstructingValidEvent(String name, String startTime, String endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"            new EventCommand(name, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"        } catch (MalformedUserInputException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"            String error \u003d String.format(","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"                    \"An event command was successfully constructed with invalid input: %s %s %s\",","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"                    name, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Jerome-j"},"content":"            fail(error);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jerome-j":109}},{"path":"src/test/java/jerome/common/DataStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"package jerome.common;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"import java.util.Random;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"import jerome.exception.MalformedUserInputException;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Priority;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"import jerome.tasklist.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":" * Tests the functionality of the {@code DataStorage} class.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":" * @@author se-edu","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":" * Reuse from https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jerome-j"},"content":" * with minor modifications to cater for differences in","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jerome-j"},"content":" * error handling and output.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jerome-j"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jerome-j"},"content":"public class DataStorageTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Jerome-j"},"content":"    // Represents the String that the Tests format of the database.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jerome-j"},"content":"    private static final String TODO_DATABASE_FORMAT \u003d \"T | %s | %s | %s\";","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"Jerome-j"},"content":"    private static final String DEADLINE_DATABASE_FORMAT \u003d \"D | %s | %s | %s | %s\";","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Jerome-j"},"content":"    private static final String EVENT_DATABASE_FORMAT \u003d \"E | %s | %s | %s | %s | %s\";","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jerome-j"},"content":"    // Represents the random activities and valid timestamps used for testing.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jerome-j"},"content":"    private static final String[] activityNames \u003d {\"Running\", \"Swimming\", \"Cycling\", \"Hiking\", \"Skiing\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jerome-j"},"content":"    private static final String[] datesRange \u003d {\"2024-01-01\", \"2025-01-01\", \"2024-03-21\", \"2024-12-31\", \"2023-01-01\"};","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jerome-j"},"content":"    private static final int NUMBER_OF_EVENTS \u003d 200;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jerome-j"},"content":"     * Creates a temporary file used internally for Tests.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Jerome-j"},"content":"    private File mockFile;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jerome-j"},"content":"     * Creates the dataStorage that we are testing.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Jerome-j"},"content":"    private DataStorage dataStorage;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Jerome-j"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jerome-j"},"content":"     * Returns the total number of lines in the mockFile.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Jerome-j"},"content":"     * @return the line count of the temporary file.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Jerome-j"},"content":"     * @throws RuntimeException if the file has any errors.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jerome-j"},"content":"    private int getLineCount() {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Jerome-j"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Jerome-j"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(mockFile));","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Jerome-j"},"content":"            while (bufferedReader.readLine() !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Jerome-j"},"content":"                count++;","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"Jerome-j"},"content":"            return count;","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Jerome-j"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Jerome-j"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Jerome-j"},"content":"            throw new RuntimeException(ioException);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jerome-j"},"content":"     * Returns the line in String at specified index in the test txt file.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Jerome-j"},"content":"     * @param index the index of the line to be retrieved.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"Jerome-j"},"content":"     * @return the line at the specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Jerome-j"},"content":"     * @throws RuntimeException if the file has any errors.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"Jerome-j"},"content":"    private String getLine(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Jerome-j"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"Jerome-j"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(mockFile));","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Jerome-j"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Jerome-j"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Jerome-j"},"content":"                count++;","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Jerome-j"},"content":"                if (count \u003d\u003d index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Jerome-j"},"content":"                    return line;","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Jerome-j"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Jerome-j"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"Jerome-j"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Jerome-j"},"content":"            throw new RuntimeException(ioException);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Jerome-j"},"content":"        throw new RuntimeException(\"not in specified index!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"Jerome-j"},"content":"     * Sets up the test environment before each test case.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"Jerome-j"},"content":"     * It creates a temporary file, initializes the DataStorage object used for testing","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Jerome-j"},"content":"     * and creates tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Jerome-j"},"content":"     * Temporary file is deleted after testing.","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if there is an error in the user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"Jerome-j"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"Jerome-j"},"content":"    public void setUp() throws MalformedUserInputException {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"Jerome-j"},"content":"        // Create a temporary file","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"Jerome-j"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"Jerome-j"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"Jerome-j"},"content":"            // Referenced from:","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Jerome-j"},"content":"            // https://stackoverflow.com/questions/26860167/what-is-a-safe-way-to-create-a-temp-file-in-java","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Jerome-j"},"content":"            mockFile \u003d Files.createTempFile(\"test\", \".txt\").toFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"Jerome-j"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"Jerome-j"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"Jerome-j"},"content":"        mockFile.deleteOnExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"Jerome-j"},"content":"        // Initialize DataStorage with the temporary file","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"Jerome-j"},"content":"        dataStorage \u003d new DataStorage(10000, mockFile.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"Jerome-j"},"content":"        System.out.println(mockFile.getAbsolutePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"Jerome-j"},"content":"        createTasks();","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"Jerome-j"},"content":"    private void createTasks() throws MalformedUserInputException {","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"Jerome-j"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_EVENTS; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"Jerome-j"},"content":"            Task task;","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"Jerome-j"},"content":"            if (i % 3 \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"Jerome-j"},"content":"                task \u003d new Todo(getRandomEvent(), false);","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"Jerome-j"},"content":"            } else if (i % 3 \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"Jerome-j"},"content":"                task \u003d new Deadline(getRandomEvent(), getRandomDate(), false);","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"Jerome-j"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"Jerome-j"},"content":"                task \u003d new Event(getRandomEvent(), getRandomDate(), getRandomDate(), false);","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"Jerome-j"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"Jerome-j"},"content":"            tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"Jerome-j"},"content":"            dataStorage.addTaskToTextFile(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"Jerome-j"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"Jerome-j"},"content":"     * Check if the number of tasks stored in database increases.","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_task_increaseAfterAdding() {","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"Jerome-j"},"content":"        Todo sampleTask \u003d new Todo(\"Sample Task\", false);","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"Jerome-j"},"content":"        // Get line count before we add","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"Jerome-j"},"content":"        int currentLineCount \u003d this.getLineCount();","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(sampleTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"Jerome-j"},"content":"        assertEquals(dataStorage.getTaskCount(), currentLineCount + 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"Jerome-j"},"content":"     * Checks if the task is properly stored.","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"Jerome-j"},"content":"     * @throws RuntimeException if the file has any errors.","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_task_correctlyStored() {","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"Jerome-j"},"content":"        String taskName \u003d \"Sample Task\";","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"Jerome-j"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"Jerome-j"},"content":"        Priority priority \u003d Priority.LOW;","lastModifiedDate":"2024-02-14"},{"lineNumber":178,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"Jerome-j"},"content":"        Todo sampleTask \u003d new Todo(taskName, isDone, priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":180,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"Jerome-j"},"content":"        String databaseEntry \u003d String.format(TODO_DATABASE_FORMAT, taskName, isDone, priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(sampleTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"Jerome-j"},"content":"        int currentLineCount \u003d this.getLineCount();","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"Jerome-j"},"content":"        assertEquals(this.getLine(currentLineCount), databaseEntry);","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"Jerome-j"},"content":"     * Checks if deadline with the correct format is stored.","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if the date input is dirty.","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_deadline_correctlyStored() throws MalformedUserInputException {","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"Jerome-j"},"content":"        String taskName \u003d \"Sample Task\";","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"Jerome-j"},"content":"        String deadline \u003d \"2024-01-02\";","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"Jerome-j"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"Jerome-j"},"content":"        Priority priority \u003d Priority.HIGH;","lastModifiedDate":"2024-02-14"},{"lineNumber":199,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":200,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"Jerome-j"},"content":"        Deadline sampleTask \u003d new Deadline(taskName, deadline, isDone, priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"Jerome-j"},"content":"        String databaseEntry \u003d String.format(DEADLINE_DATABASE_FORMAT, taskName, isDone, deadline, priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":204,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(sampleTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":205,"author":{"gitId":"Jerome-j"},"content":"        int currentLineCount \u003d this.getLineCount();","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"Jerome-j"},"content":"        assertEquals(this.getLine(currentLineCount), databaseEntry);","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"Jerome-j"},"content":"     * Tests if the event in the data storage is correctly marked as completed","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"Jerome-j"},"content":"     * by comparing the String in test txt file and actual txt file.","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if there is an error in the user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_event_correctlyMarked() throws MalformedUserInputException {","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"Jerome-j"},"content":"        int currentLineCount \u003d this.getLineCount();","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"Jerome-j"},"content":"        int indexToDelete \u003d getRandomNumberUsingNextInt(1, currentLineCount);","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"Jerome-j"},"content":"        Task toDelete \u003d tasks.get(indexToDelete);","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"Jerome-j"},"content":"        String previousRecord \u003d toDelete.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.setTaskStatus(indexToDelete, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"Jerome-j"},"content":"        assertNotEquals(previousRecord, dataStorage.getTask(indexToDelete).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":227,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"Jerome-j"},"content":"     * Tests deletion of a task from the task list at a random valid index","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"Jerome-j"},"content":"     * which is between zero and some positive integer.","lastModifiedDate":"2024-02-01"},{"lineNumber":230,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if unable to delete.","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_event_correctlyDeleted() throws MalformedUserInputException {","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"Jerome-j"},"content":"        int currentLineCount \u003d this.getLineCount();","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"Jerome-j"},"content":"        int indexToDelete \u003d getRandomNumberUsingNextInt(1, currentLineCount);","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.deleteTask(indexToDelete);","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"Jerome-j"},"content":"        assertEquals(dataStorage.getTaskCount(), currentLineCount - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":242,"author":{"gitId":"Jerome-j"},"content":"     * Tests if an event is properly stored.","lastModifiedDate":"2024-02-01"},{"lineNumber":243,"author":{"gitId":"Jerome-j"},"content":"     * @throws MalformedUserInputException if unable to add simple task.","lastModifiedDate":"2024-02-01"},{"lineNumber":244,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":245,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_event_correctlyStored() throws MalformedUserInputException {","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"Jerome-j"},"content":"        String taskName \u003d \"Sample Task\";","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"Jerome-j"},"content":"        String startTime \u003d \"2024-01-02\";","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"Jerome-j"},"content":"        String endTime \u003d \"2024-01-02\";","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"Jerome-j"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"Jerome-j"},"content":"        Priority priority \u003d Priority.MEDIUM;","lastModifiedDate":"2024-02-14"},{"lineNumber":252,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"Jerome-j"},"content":"        Event sampleTask \u003d new Event(taskName, startTime, endTime, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"Jerome-j"},"content":"        String databaseEntry \u003d String.format(EVENT_DATABASE_FORMAT, taskName, isDone, startTime, endTime, priority);","lastModifiedDate":"2024-02-14"},{"lineNumber":256,"author":{"gitId":"Jerome-j"},"content":"        dataStorage.addTaskToTextFile(sampleTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":257,"author":{"gitId":"Jerome-j"},"content":"        int currentLineCount \u003d this.getLineCount();","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"Jerome-j"},"content":"        assertEquals(this.getLine(currentLineCount), databaseEntry);","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":262,"author":{"gitId":"Jerome-j"},"content":"     * Returns a random integer between the specified minimum and maximum values (inclusive).","lastModifiedDate":"2024-02-01"},{"lineNumber":263,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":264,"author":{"gitId":"Jerome-j"},"content":"     * @param min the lower bound of the range.","lastModifiedDate":"2024-02-01"},{"lineNumber":265,"author":{"gitId":"Jerome-j"},"content":"     * @param max the upper bound of the range.","lastModifiedDate":"2024-02-01"},{"lineNumber":266,"author":{"gitId":"Jerome-j"},"content":"     * @return a random integer within the specified range.","lastModifiedDate":"2024-02-01"},{"lineNumber":267,"author":{"gitId":"Jerome-j"},"content":"     *     @@author baeldung.","lastModifiedDate":"2024-02-03"},{"lineNumber":268,"author":{"gitId":"Jerome-j"},"content":"     *     Reuse from https://www.baeldung.com/java-generating-random-numbers-in-range","lastModifiedDate":"2024-02-01"},{"lineNumber":269,"author":{"gitId":"Jerome-j"},"content":"     *     with no modifications.","lastModifiedDate":"2024-02-01"},{"lineNumber":270,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":271,"author":{"gitId":"Jerome-j"},"content":"    public int getRandomNumberUsingNextInt(int min, int max) {","lastModifiedDate":"2024-01-31"},{"lineNumber":272,"author":{"gitId":"Jerome-j"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"Jerome-j"},"content":"        return random.nextInt(max - min) + min;","lastModifiedDate":"2024-01-31"},{"lineNumber":274,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":275,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":277,"author":{"gitId":"Jerome-j"},"content":"     * Returns a random event from the activityNames array.","lastModifiedDate":"2024-02-01"},{"lineNumber":278,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":279,"author":{"gitId":"Jerome-j"},"content":"     * @return the names of a random event.","lastModifiedDate":"2024-02-01"},{"lineNumber":280,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":281,"author":{"gitId":"Jerome-j"},"content":"    public String getRandomEvent() {","lastModifiedDate":"2024-01-31"},{"lineNumber":282,"author":{"gitId":"Jerome-j"},"content":"        int index \u003d getRandomNumberUsingNextInt(0, activityNames.length);","lastModifiedDate":"2024-01-31"},{"lineNumber":283,"author":{"gitId":"Jerome-j"},"content":"        return activityNames[index];","lastModifiedDate":"2024-01-31"},{"lineNumber":284,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":285,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":286,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":287,"author":{"gitId":"Jerome-j"},"content":"     * Returns a random valid date from the datesRange array.","lastModifiedDate":"2024-02-01"},{"lineNumber":288,"author":{"gitId":"Jerome-j"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":289,"author":{"gitId":"Jerome-j"},"content":"     * @return a random valid date as a String.","lastModifiedDate":"2024-02-01"},{"lineNumber":290,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":291,"author":{"gitId":"Jerome-j"},"content":"    public String getRandomDate() {","lastModifiedDate":"2024-01-31"},{"lineNumber":292,"author":{"gitId":"Jerome-j"},"content":"        int index \u003d getRandomNumberUsingNextInt(0, datesRange.length);","lastModifiedDate":"2024-01-31"},{"lineNumber":293,"author":{"gitId":"Jerome-j"},"content":"        return datesRange[index];","lastModifiedDate":"2024-01-31"},{"lineNumber":294,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":295,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":296,"author":{"gitId":"Jerome-j"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":297,"author":{"gitId":"Jerome-j"},"content":"     * Tests marking a task at a very large index as completed,","lastModifiedDate":"2024-02-01"},{"lineNumber":298,"author":{"gitId":"Jerome-j"},"content":"     * which is expected to throw an Exception.","lastModifiedDate":"2024-02-01"},{"lineNumber":299,"author":{"gitId":"Jerome-j"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":300,"author":{"gitId":"Jerome-j"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":301,"author":{"gitId":"Jerome-j"},"content":"    @AfterEach","lastModifiedDate":"2024-01-31"},{"lineNumber":302,"author":{"gitId":"Jerome-j"},"content":"    public void dataStorage_task_markVeryLargeIndexAsCompleted() {","lastModifiedDate":"2024-02-01"},{"lineNumber":303,"author":{"gitId":"Jerome-j"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":304,"author":{"gitId":"Jerome-j"},"content":"            dataStorage.setTaskStatus(1000000000, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":305,"author":{"gitId":"Jerome-j"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":306,"author":{"gitId":"Jerome-j"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":307,"author":{"gitId":"Jerome-j"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Jerome-j":307}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jerome-j"},"content":"somethingwrong","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Jerome-j"},"content":"todo hello","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"event party all day every /from 2023-01-01 /to 2024-03-09","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Jerome-j"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Jerome-j"},"content":"event party all day every /from 2023-02-01 /to 2024-03-09","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"Jerome-j"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Jerome-j"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Jerome-j"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Jerome-j"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Jerome-j"},"content":"triage 2 LOW","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"Jerome-j"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Jerome-j"},"content":"event party /FROM Monday 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Jerome-j"},"content":"mark -2","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Jerome-j"},"content":"delete 1","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"triage -1 HIHJIEHJGOIEHGIO","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"triage -1 HIGH","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"triage 1 HIGH?","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Jerome-j"},"content":"mark 12098765456t7yuioi8765467890-98765789","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Jerome-j"},"content":"mark","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Jerome-j"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Jerome-j"},"content":"delete 3","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Jerome-j"},"content":"unmark","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"delete -3","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"delete 3.123456","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Jerome-j":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Jerome-j"},"content":"REM run the program, feed jerome.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Jerome-j"},"content":"java -classpath ..\\bin jerome.JeromeGpt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jerome-j":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Jerome-j"},"content":"rm -rf database.txt","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Jerome-j"},"content":"if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/jerome/*.java","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Jerome-j"},"content":"#ls ../bin/jerome \u003e ACTUAL.txt","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"Jerome-j"},"content":"##java JeromeGpt \u003e ACTUAL.txt","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"Jerome-j"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Jerome-j"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Jerome-j"},"content":"java -classpath ../bin/ jerome.JeromeGpt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jerome-j":10,"-":35}}]
