[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"mainClassName \u003d \u0027Nicole\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    mainClass.set(\"Nicole\")","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"    archiveFileName \u003d \"nicole.jar\"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    archiveBaseName \u003d \"nicole\"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yashpola":7,"-":30}},{"path":"src/main/java/Nicole.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"import userrequests.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"public class Nicole {","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"     * Initialises the chatbot and triggers user interactions","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    public Nicole() {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            new Ui();","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        new File(\"./data\").mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        new File(\"./data/tasks.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"        new Nicole();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"yashpola":27}},{"path":"src/main/java/nicoleexceptions/NicoleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package nicoleexceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"public class NicoleException extends Exception {","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"    private String errorMessage;","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"    public NicoleException(String errorMessage) {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"        return \"Nicole: ERROR. \" + errorMessage;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"yashpola":13}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    private LocalDate deadlineDateLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    private String deadlineDateReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     * Initialises a Deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the description is not as deadline [task] by YYYY-MM-DD.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    public Deadline(String name) throws NicoleException {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        super();","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        if (name.contains(\"null\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Describe your deadline like this: deadline [task] by YYYY-MM-DD\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        this.parseDate(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        super.setName(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    private void parseDate(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        String[] whiteSpaceSeparatedDate \u003d name.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        String date \u003d whiteSpaceSeparatedDate[whiteSpaceSeparatedDate.length - 1];","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            this.deadlineDateLocalDate \u003d LocalDate.parse(date);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Are you sure your date is in the proper [YYYY-MM-DD] format...?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        if (LocalDate.now().isAfter(this.deadlineDateLocalDate)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Erm, the deadline can\u0027t be before now right...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"        this.deadlineDateReformattedString \u003d \"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                + this.deadlineDateLocalDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                + this.deadlineDateLocalDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"                + this.deadlineDateLocalDate.getYear();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        return this.deadlineDateLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":54}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    private LocalDateTime deadlineFromDateTimeLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    private LocalDateTime deadlineToDateTimeLocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    private String deadlineFromDateReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    private String deadlineFromTimeReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    private String deadlineToDateReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    private String deadlineToTimeReformattedString;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * Initialises a Event","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the description is not","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     *                         as event [name] from YYYY-MM-DD at HH-MM-SS","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     *                         to YYYY-MM-DD at HH-MM-SS.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public Event(String name) throws NicoleException {","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        super();","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        if (name.contains(\"null\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Describe your event like this: \" +","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                                      \"event [name] from YYYY-MM-DD at HH-MM-SS to YYYY-MM-DD at HH-MM-SS\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        this.parseDateTime(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        super.setName(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    private void parseDateTime(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        String[] whiteSpaceSeparatedDate \u003d name.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            for (int i \u003d 0; i \u003c whiteSpaceSeparatedDate.length; i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                if (whiteSpaceSeparatedDate[i].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                    \u0026\u0026 i \u003c whiteSpaceSeparatedDate.length - 4) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"                    this.deadlineFromDateTimeLocalDate \u003d LocalDateTime.parse(whiteSpaceSeparatedDate[i]","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"                            + \"T\" + whiteSpaceSeparatedDate[i + 2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                } else if (whiteSpaceSeparatedDate[i].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"                           \u0026\u0026 i \u003e whiteSpaceSeparatedDate.length - 4) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"                    this.deadlineToDateTimeLocalDate \u003d LocalDateTime.parse(whiteSpaceSeparatedDate[i]","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"                            + \"T\" + whiteSpaceSeparatedDate[i + 2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Are you sure your date and time are in the proper \" +","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                    \"[YYYY-MM-DD], [HH-MM-SS] format...?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        if (this.deadlineFromDateTimeLocalDate.isAfter(this.deadlineToDateTimeLocalDate)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Erm, the \u0027to\u0027 datetime can\u0027t be before \u0027from\u0027 right...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        this.deadlineFromDateReformattedString \u003d \"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"                + this.deadlineFromDateTimeLocalDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"                + this.deadlineFromDateTimeLocalDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"                + this.deadlineFromDateTimeLocalDate.getYear();","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        this.deadlineToDateReformattedString \u003d \"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"                + this.deadlineToDateTimeLocalDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                + this.deadlineToDateTimeLocalDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"                + this.deadlineToDateTimeLocalDate.getYear();","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        this.deadlineFromTimeReformattedString \u003d \"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"                + this.deadlineFromDateTimeLocalDate.getHour() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"                + this.deadlineFromDateTimeLocalDate.getMinute() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"                + this.deadlineFromDateTimeLocalDate.getSecond();","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"        this.deadlineToTimeReformattedString \u003d \"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                + this.deadlineToDateTimeLocalDate.getHour() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"                + this.deadlineToDateTimeLocalDate.getMinute() + \" \"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"                + this.deadlineToDateTimeLocalDate.getSecond();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"        return this.deadlineFromDateTimeLocalDate.toLocalDate();","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":84}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"    private boolean taskCompleted;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    private String name;","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"     * Initialises a Task. The default state of a Task is incomplete.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    public Task() {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"        this.taskCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    protected void setName(String name) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     * Factory method for Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"     * @param taskType \u0027T\u0027 for Todo, \u0027D\u0027 for Deadline, \u0027E\u0027 for Event.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if any of Task, Deadline, or Event throws it due to","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"     *                         invalid request.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    public static Task taskFactory(String name, char taskType) throws NicoleException {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            return new Todo(name);","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"            return new Deadline(name);","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            return new Event(name);","lastModifiedDate":"2024-01-20"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"     * Marks a task object as completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the task is already marked completed.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public String markDone() throws NicoleException {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        if (this.taskCompleted) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"That is already marked complete -_-\");","lastModifiedDate":"2024-01-21"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            this.taskCompleted \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"            return \"Nicole: Marked as completed! Good job :3\";","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"     * Marks a task object as incomplete.","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the task is already marked incomplete.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"    public String markUndone() throws NicoleException {","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        if (!this.taskCompleted) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"That is already marked incomplete -_-\");","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"            this.taskCompleted \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"            return \"Nicole: Marked as incomplete. We\u0027ll get em next time\";","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"     * Retrieves the date associated with the Task object.","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"     * @return the max LocalDate by default.","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"        return LocalDate.parse(\"+999999999-12-31\");","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"     * Verifies if there is a keyword match with this task.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"     * @param name the keyword.","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"        return this.name.contains(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"        return this.taskCompleted ? \"[C] \" + this.name : \"[I] \" + this.name;","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":91}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"     * Initialises a Todo","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the description is not in todo [task]","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    public Todo(String name) throws NicoleException {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"        super();","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"What exactly do you want me to note...tell me in the form of: todo [task]\");","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"        super.setName(name);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":25}},{"path":"src/main/java/taskstorage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package taskstorage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    File tasksFile;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"    FileWriter taskFileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     * Initialises Storage by creating a directory \"./data\" and a file \"tasks.txt\" inside.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are issues with creating a writer to the task file.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public Storage() throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            this.taskFileWriter \u003d new FileWriter(\"./data/tasks.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Sorry sorry I couldn\u0027t create a file to save your tasks...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        this.loadTasksFromFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"     * Saves user tasks to \"./data/tasks.txt\"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are write issues to tasks.txt","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    protected void saveTasksToFile() throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            for (int i \u003d 0; i \u003c TaskList.taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"                this.taskFileWriter.write(TaskList.taskList.get(i) + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"            this.taskFileWriter.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"I couldn\u0027t save the task \u003e\u003c try again plss\");","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    public void loadTasksFromFile() throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        File tasksFile \u003d new File(\"./data/tasks.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"            int numTasksInFile \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(tasksFile));","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"            while (reader.readLine() !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"                numTasksInFile++;","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            Scanner userTaskFileReader \u003d new Scanner(tasksFile);","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"            while (userTaskFileReader.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"                String task \u003d userTaskFileReader.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"                if (TaskList.taskList.size() \u003c numTasksInFile) {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                    char taskType \u003d task.charAt(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"                    char taskCompleted \u003d task.charAt(4);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"                    String taskDescription \u003d task.substring(7);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"                    Task recreatedTask \u003d Task.taskFactory(taskDescription, taskType);","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"                    if (taskCompleted \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"                        recreatedTask.markDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                    TaskList.taskList.add(recreatedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"            System.out.println(\"Nicole: I have no past data with you, let\u0027s start something ;)\");","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Sorry sorry I have trouble loading your tasks from storage....\");","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":80}},{"path":"src/main/java/taskstorage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package taskstorage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"import userrequests.Request;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    protected static final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * Initialises a TaskList and creates Storage for tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if Storage throws it due to IO issues with the","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     *                         tasks file.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public TaskList() throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"    private void crudChecker(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e TaskList.taskList.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Huh? That\u0027s not a valid item number :\u0027)\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"     * Unmarks a task in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the unmark index is out of bounds of the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"    public void unmarkTask(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        this.crudChecker(taskNumber);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        System.out.println(TaskList.taskList.get(taskNumber - 1).markUndone());","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        this.storage.saveTasksToFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"     * Marks a task in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the mark index is out of bounds of the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"    public void markTask(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        this.crudChecker(taskNumber);","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        System.out.println(TaskList.taskList.get(taskNumber - 1).markDone());","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"        this.storage.saveTasksToFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"     * Deletes a task in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the delete index is out of bounds of the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"    public void deleteTask(int taskNumber) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        this.crudChecker(taskNumber);","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"        TaskList.taskList.remove(taskNumber - 1);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"        System.out.println(\"Nicole: Phew...deleted  :\u003e\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"        this.storage.saveTasksToFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are write issues to tasks.txt","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"    public void addTask(Task newTask) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"        TaskList.taskList.add(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"            FileWriter taskFileWriter \u003d new FileWriter(\"./data/tasks.txt\", true);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"            taskFileWriter.write(newTask.toString() + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"            taskFileWriter.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"I couldn\u0027t save the task \u003e\u003c try again plss\");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"        System.out.println(\"Nicole: Oki I added \" + \"\\\"\" + newTask.toString().substring(7) + \"\\\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"     * Searches for a task using a specific keyword.","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"     * @param name the keyword.","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if there are no matching tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"yashpola"},"content":"    public void findTasks(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"yashpola"},"content":"        int numMatchingTasks \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"yashpola"},"content":"        System.out.println(\"Nicole: Let me see..\");","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"yashpola"},"content":"        for (int i \u003d 0; i \u003c TaskList.taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"yashpola"},"content":"            if (TaskList.taskList.get(i).contains(name)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"yashpola"},"content":"                System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"yashpola"},"content":"                numMatchingTasks +\u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"yashpola"},"content":"        if (numMatchingTasks \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"Sorry I couldn\u0027t find any matching tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"yashpola"},"content":"     * Lists the present tasks. Sorts the list by task date if the user requests it","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"yashpola"},"content":"     * before printing the tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"yashpola"},"content":"    public void listTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"yashpola"},"content":"        if (TaskList.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"yashpola"},"content":"            System.out.println(\"Nicole: No tasks yet. Let\u0027s make some moves BD\");","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"yashpola"},"content":"            System.out.println(\"Nicole: Here\u0027s the tasks I saved so far,\");","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"yashpola"},"content":"        if (Request.needPriorityTasking) {","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"yashpola"},"content":"            Comparator\u003cTask\u003e sorter \u003d (task1, task2) -\u003e {","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"yashpola"},"content":"                if (task1.getDate().isBefore(task2.getDate())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"yashpola"},"content":"                    return -1;","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"yashpola"},"content":"                } else if (task1.getDate().isEqual(task2.getDate())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"yashpola"},"content":"                    return 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"yashpola"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"yashpola"},"content":"                    return 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"yashpola"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"yashpola"},"content":"            };","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"yashpola"},"content":"            TaskList.taskList.sort(sorter);","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"yashpola"},"content":"        for (int i \u003d 0; i \u003c TaskList.taskList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"yashpola"},"content":"            System.out.println((i + 1) + \". \" + TaskList.taskList.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":136}},{"path":"src/main/java/userrequests/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package userrequests;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public Parser() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"     * Checks the validity of the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * @return the appropriate task for the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the request is unknown or in the wrong format.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    protected static Task parseRequest(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"^todo(?: (.*?))?$\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"^deadline(?: (.*?))?(?: by (\\\\d{4}-\\\\d{2}-\\\\d{2}))?$\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"^event(?: (.*?))?(?: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"                + \"from (\\\\d{4}-\\\\d{2}-\\\\d{2}) at (\\\\d{2}:\\\\d{2}:\\\\d{2}) \"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"                + \"to (\\\\d{4}-\\\\d{2}-\\\\d{2}) at (\\\\d{2}:\\\\d{2}:\\\\d{2}))?$\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        Matcher todoMatcher \u003d todoPattern.matcher(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"        Matcher deadlineMatcher \u003d deadlinePattern.matcher(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        Matcher eventMatcher \u003d eventPattern.matcher(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"        if (todoMatcher.matches()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"            return Task.taskFactory(todoMatcher.group(1), \u0027T\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        } else if (deadlineMatcher.matches()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            return Task.taskFactory(","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"                        deadlineMatcher.group(1) + \" by \" + deadlineMatcher.group(2),","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"                        \u0027D\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"        } else if (eventMatcher.matches()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"            return Task.taskFactory(eventMatcher.group(1)","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"                        + \" from \"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                        + eventMatcher.group(2) + \" at \" + eventMatcher.group(3)","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                        + \" to \"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"                        + eventMatcher.group(4) + \" at \" + eventMatcher.group(5), \u0027E\u0027);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"            throw new NicoleException(\"What does this mean? \"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"                    + \"Send \u0027help\u0027 if you want to know what commands I can help you with\");","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":48}},{"path":"src/main/java/userrequests/Request.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package userrequests;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import taskstorage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"import taskstorage.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"public class Request {","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    public static boolean needPriorityTasking \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"    private Task newTask;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     * Initialises a Request","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     * @param name the user request.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     * @throws NicoleException if the Parser throws this exception due to issues","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"     *                         with the request.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"     * @throws IOException if the TaskList throws this exception due to issues with","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"     *                     posting and retrieving data from hard drive.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"    public Request(String name) throws NicoleException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        if (name.equals(\"list\")","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"                || name.contains(\"mark\")","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"                || name.contains(\"unmark\")","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                || name.contains(\"help\")","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"                || name.contains(\"delete\")","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"                || name.contains(\"priority\")","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"                || name.contains(\"find\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            this.newTask \u003d Parser.parseRequest(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        this.handleRequest(name);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    private void handleRequest(String name) throws NicoleException {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        if (name.contains(\"unmark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(name.substring(7));","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"                taskList.unmarkTask(taskNumber);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"unmark [task number] pls...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"        } else if (name.contains(\"mark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(name.substring(5));","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                taskList.markTask(taskNumber);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"mark [task number] pls...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"        } else if (name.contains(\"delete\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"                int taskNumber \u003d Integer.parseInt(name.substring(7));","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"                taskList.deleteTask(taskNumber);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"delete [task number] pls...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"        } else if (name.equals(\"help\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"            System.out.println(\"Nicole: \" +","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"                    \"I\u0027m your task/deadline/event manager! I\u0027m down with these requests,\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"                    + \"1. todo [task]\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"yashpola"},"content":"                    + \"2. deadline [task] by YYYY-MM-DD\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"yashpola"},"content":"                    + \"3. event [name] from YYYY-MM-DD at HH-MM-SS to YYY-MM-DD at HH-MM-SS\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"yashpola"},"content":"                    + \"4. list\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"yashpola"},"content":"                    + \"5. priority\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"yashpola"},"content":"                    + \"6. find [keyword]\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"yashpola"},"content":"                    + \"7. bye\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"yashpola"},"content":"                    + \"8. help\"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"yashpola"},"content":"            );","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"yashpola"},"content":"        } else if (name.equals(\"priority\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"yashpola"},"content":"            Request.needPriorityTasking \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"yashpola"},"content":"        } else if (name.contains(\"find\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"yashpola"},"content":"                String taskKeyWord \u003d name.substring(6);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"yashpola"},"content":"                taskList.findTasks(taskKeyWord);","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"yashpola"},"content":"            } catch (StringIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"yashpola"},"content":"                throw new NicoleException(\"find [keyword] pls...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"yashpola"},"content":"        } else if (!name.equals(\"list\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"yashpola"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"yashpola"},"content":"              taskList.listTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":88,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":89,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"yashpola":89}},{"path":"src/main/java/userrequests/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package userrequests;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"    private static final BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"     * Initialises Ui and executes the user interaction loop.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"     * @throws IOException if Request throws this exception due to issues with","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"     *                     posting and retrieving data from hard drive.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    public Ui() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"        System.out.println(this.greet());","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        this.talkToUser();","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"    private void talkToUser() throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"        String request \u003d br.readLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"        while (request !\u003d null \u0026\u0026 !request.equals(\"bye\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"                new Request(request);","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"            } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"            request \u003d br.readLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"        System.out.println(this.exit());","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"    private String greet() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"        DateTimeFormatter digitalTime \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"        DateTimeFormatter parseHour \u003d DateTimeFormatter.ofPattern(\"HH\");","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"        String salutation \u003d \"Good \";","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"        int currentHour \u003d Integer.parseInt(parseHour.format(now));","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"        if (currentHour \u003c 12 \u0026\u0026 currentHour \u003e\u003d 5) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"            salutation +\u003d \"morns :D ! What\u0027s the plan today\";","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        } else if (currentHour \u003e\u003d 12 \u0026\u0026 currentHour \u003c 17) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            salutation +\u003d \"afternoon zzz...how\u0027s it going\";","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            salutation +\u003d \"evening! Let\u0027s wrap it up soon? :P\";","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"        return \"Welcome to Nicole Mark II. New conversation at \"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"                + digitalTime.format(now) + \"\\n\"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"                + \"----------------------------- x ------------------------------\"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"                + \"\\n\" + \"Nicole: \" + salutation;","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"    private String exit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"        return \"Bye, for now ;) Let\u0027s catch up again soon.\";","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":61}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public void deadline_noDescriptionGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"2024 by null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Describe your deadline like this: deadline [task] by YYYY-MM-DD\",","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public void deadline_noDeadlineGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"return book by null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Describe your deadline like this: deadline [task] by YYYY-MM-DD\",","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    public void parseDate_invalidLocalDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"return book by 2024-30-49\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Are you sure your date is in the proper [YYYY-MM-DD] format...?\",","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void parseDate_impossibleDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            new Deadline(\"return book by 2010-01-01\");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Erm, the deadline can\u0027t be before now right...\",","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    void deadlineCreation_perfectConditions_toStringCorrect() {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            Deadline testDeadline \u003d new Deadline(\"return book by 2024-01-29\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"[D][I] return book by 2024-01-29\", testDeadline.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":65}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"public class EventTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"    public void event_noDescriptionGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"            new Event(\"from 2024-01-29 at 18:00:00 to 2024-01-29 at 21:00:00 from null at null to null at null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Describe your event like this: event [name] from YYYY-MM-DD at HH-MM-SS to YYYY-MM-DD at HH-MM-SS\",","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"    public void event_noDeadlineGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"            new Event(\"meeting with kay from null at null to null at null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Describe your event like this: event [name] from YYYY-MM-DD at HH-MM-SS to YYYY-MM-DD at HH-MM-SS\",","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"yashpola"},"content":"    public void parseDate_invalidLocalDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"yashpola"},"content":"            new Event(\"meeting with kay from 2024-30-89 at 18:00:00 to 2024-30-89 at 21:00:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Are you sure your date and time are in the proper [YYYY-MM-DD], [HH-MM-SS] format...?\",","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"yashpola"},"content":"    public void parseDate_impossibleDate_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"yashpola"},"content":"            new Event(\"meeting with kay from 2024-01-30 at 18:00:00 to 2024-01-29 at 21:00:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"yashpola"},"content":"            assertEquals(","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"yashpola"},"content":"                    \"Nicole: ERROR. Erm, the \u0027to\u0027 datetime can\u0027t be before \u0027from\u0027 right...\",","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"yashpola"},"content":"    void eventCreation_perfectConditions_toStringCorrect() {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"yashpola"},"content":"            Event testEvent \u003d new Event(\"meeting with kay from 2024-01-29 at 18:00:00 to 2024-01-30 at 21:00:00\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"[E][I] meeting with kay from 2024-01-29 at 18:00:00 to 2024-01-30 at 21:00:00\", testEvent.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":65}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"package task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"import nicoleexceptions.NicoleException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"    void todo_noDescriptionGiven_nicoleExceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"            new Todo(\"null\");","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"Nicole: ERROR. What exactly do you want me to note...tell me in the form of: todo [task]\",","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"                    e.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"    void todoCreation_perfectConditions_toStringCorrect() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"            Todo testTodo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"            assertEquals(\"[T][I] borrow book\", testTodo.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"        } catch (NicoleException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"yashpola"},"content":"help","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"yashpola"},"content":"todo","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"yashpola"},"content":"deadline","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"yashpola"},"content":"event","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"yashpola"},"content":"deadline \\by Sunday","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"yashpola"},"content":"deadline xyz","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"yashpola"},"content":"event \\from xyz \\to abc","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"yashpola"},"content":"event xyz","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"yashpola"},"content":"blah","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"yashpola"},"content":"todo borrow book","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"yashpola"},"content":"event read book from 2024-01-30 at 16:00:00 to 2024-01-30 at 18:00:00","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"yashpola"},"content":"deadline return book by 2024-01-29","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"yashpola"},"content":"delete 500","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"yashpola"},"content":"delete -2","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"yashpola"},"content":"mark 500","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"yashpola"},"content":"mark -2","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"yashpola"},"content":"mark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"yashpola"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"yashpola"},"content":"unmark 500","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"yashpola"},"content":"unmark -2","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"mark 2","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"yashpola"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"yashpola"},"content":"unmark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"yashpola"},"content":"unmark 1","lastModifiedDate":"2024-01-21"},{"lineNumber":28,"author":{"gitId":"yashpola"},"content":"delete 1","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"yashpola"},"content":"priority","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"yashpola"},"content":"list","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"yashpola":31}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yashpola"},"content":"java -classpath ../bin Nicole \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yashpola":1,"-":37}}]
