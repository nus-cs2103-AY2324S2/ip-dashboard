[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teee728"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"Teee728"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"Teee728"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Teee728"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.*;","lastModifiedDate":"2024-01-18"},{"lineNumber":6,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Teee728"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Teee728"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Teee728"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Teee728"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Teee728"},"content":"        return \"Ummm, \" + getMessage();","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"Teee728"},"content":"enum TaskType {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Teee728"},"content":"    T, D, E","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Teee728"},"content":"class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"    protected String description;","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"Teee728"},"content":"    protected TaskType type;","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Teee728"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":26,"author":{"gitId":"Teee728"},"content":"    protected String statusIcon;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"Teee728"},"content":"    public Task(TaskType type, String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"Teee728"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-19"},{"lineNumber":31,"author":{"gitId":"Teee728"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":32,"author":{"gitId":"Teee728"},"content":"        updateStatusIcon();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Teee728"},"content":"    private void updateStatusIcon() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Teee728"},"content":"        this.statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"Teee728"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-19"},{"lineNumber":38,"author":{"gitId":"Teee728"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-19"},{"lineNumber":39,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":40,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":41,"author":{"gitId":"Teee728"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"Teee728"},"content":"        return this.description;","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"Teee728"},"content":"    public static void numberOfTasks(ArrayList \u003c Task \u003e arr) {","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"Teee728"},"content":"        System.out.println(","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"Teee728"},"content":"                arr.size() \u003d\u003d 1 ? \"Now you have 1 task in the list.\" :","lastModifiedDate":"2024-01-20"},{"lineNumber":48,"author":{"gitId":"Teee728"},"content":"                        \"Now you have \" + arr.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-20"},{"lineNumber":49,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":50,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":51,"author":{"gitId":"Teee728"},"content":"    public String markStatus() throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"Teee728"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"This task is already marked as done.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"Teee728"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-19"},{"lineNumber":56,"author":{"gitId":"Teee728"},"content":"        return \"Nice! I\u0027ve marked this as done: \\n \" + \"[\" + this.type + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":58,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":59,"author":{"gitId":"Teee728"},"content":"    public String unmarkStatus() throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"Teee728"},"content":"        if (!isDone) {","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"This task is already marked as not done.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"Teee728"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":64,"author":{"gitId":"Teee728"},"content":"        return \"OK, I\u0027ve marked this task as not done yet: \\n \" + \"[\" + this.type + \"][\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":66,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":67,"author":{"gitId":"Teee728"},"content":"    public static void deleteTask(int index, ArrayList\u003cTask\u003e arr) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"Teee728"},"content":"        if (index \u003c 0 || index \u003e\u003d arr.size()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You have not created task \" + (index + 1) + \" for me to delete!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"Teee728"},"content":"        Task removedTask \u003d arr.remove(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"Teee728"},"content":"        String taskDetails \u003d \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"Teee728"},"content":"                \"[\" + removedTask.type + \"][\" + removedTask.getStatusIcon() + \"] \" + removedTask.getDescription();","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"Teee728"},"content":"        if (removedTask instanceof Deadline) {","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"Teee728"},"content":"            Deadline deadlineTask \u003d (Deadline) removedTask;","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"Teee728"},"content":"           taskDetails +\u003d \" (by: \" + deadlineTask.by + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"Teee728"},"content":"        } else if (removedTask instanceof Event) {","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"Teee728"},"content":"            Event eventTask \u003d (Event) removedTask;","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"Teee728"},"content":"            taskDetails +\u003d \" (from: \" + eventTask.from + \" to: \" + eventTask.to + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"Teee728"},"content":"        System.out.println(taskDetails);","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"Teee728"},"content":"    public static void getList(ArrayList \u003c Task \u003e arr) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"Teee728"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":87,"author":{"gitId":"Teee728"},"content":"            Task task \u003d arr.get(i);","lastModifiedDate":"2024-01-20"},{"lineNumber":88,"author":{"gitId":"Teee728"},"content":"            String taskDetails \u003d (i + 1) + \".[\" + task.type + \"][\" + (task !\u003d null ? task.getStatusIcon() : \"\") + \"] \" + task.description;","lastModifiedDate":"2024-01-20"},{"lineNumber":89,"author":{"gitId":"Teee728"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2024-01-20"},{"lineNumber":90,"author":{"gitId":"Teee728"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-01-20"},{"lineNumber":91,"author":{"gitId":"Teee728"},"content":"                taskDetails +\u003d \" (by: \" + deadlineTask.by + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":92,"author":{"gitId":"Teee728"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-20"},{"lineNumber":93,"author":{"gitId":"Teee728"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-01-20"},{"lineNumber":94,"author":{"gitId":"Teee728"},"content":"                taskDetails +\u003d \" (from: \" + eventTask.from + \" to: \" + eventTask.to + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":95,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":96,"author":{"gitId":"Teee728"},"content":"            System.out.println(taskDetails);","lastModifiedDate":"2024-01-20"},{"lineNumber":97,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":98,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":99,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":100,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":101,"author":{"gitId":"Teee728"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":102,"author":{"gitId":"Teee728"},"content":"    private ArrayList \u003c Task \u003e arr \u003d new ArrayList \u003c \u003e ();","lastModifiedDate":"2024-01-20"},{"lineNumber":103,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"Teee728"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"Teee728"},"content":"        super(TaskType.T, description);","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"Teee728"},"content":"        arr.add(this);","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":108,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":109,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":110,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":111,"author":{"gitId":"Teee728"},"content":"        return \"Got it. I\u0027ve added this task: \\n [T][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-01-20"},{"lineNumber":112,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":113,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":114,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":115,"author":{"gitId":"Teee728"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":116,"author":{"gitId":"Teee728"},"content":"    protected String by;","lastModifiedDate":"2024-01-20"},{"lineNumber":117,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":118,"author":{"gitId":"Teee728"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"Teee728"},"content":"        super(TaskType.D, description);","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"Teee728"},"content":"        if (!description.contains(\"/by\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"By when? You forgot to enter \\\"/by\\\"\");","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"Teee728"},"content":"        int index \u003d description.indexOf(\"/by\");","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"Teee728"},"content":"        if (index \u003d\u003d 0 || index \u003d\u003d description.length() - 3) {","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You forgot to enter the task for which you have to complete it by\");","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"Teee728"},"content":"        this.by \u003d description.substring(index + 3).trim();","lastModifiedDate":"2024-01-20"},{"lineNumber":132,"author":{"gitId":"Teee728"},"content":"        this.description \u003d description.substring(0, index).trim();","lastModifiedDate":"2024-01-20"},{"lineNumber":133,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":134,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":136,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":137,"author":{"gitId":"Teee728"},"content":"        return \"Got it. I\u0027ve added this task: \\n [D][\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":138,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":139,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-20"},{"lineNumber":140,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":141,"author":{"gitId":"Teee728"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":142,"author":{"gitId":"Teee728"},"content":"    protected String from;","lastModifiedDate":"2024-01-20"},{"lineNumber":143,"author":{"gitId":"Teee728"},"content":"    protected String to;","lastModifiedDate":"2024-01-20"},{"lineNumber":144,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":145,"author":{"gitId":"Teee728"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"Teee728"},"content":"        super(TaskType.E, description);","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"Teee728"},"content":"        if (description.isEmpty() \u0026\u0026 (!from.isEmpty() \u0026\u0026 !to.isEmpty())) {","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You didn\u0027t specify the event!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"Teee728"},"content":"        } else if (description.isEmpty() \u0026\u0026 (!from.isEmpty() || !to.isEmpty())) {","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You didn\u0027t specify the details or give the duration correctly! Please re-enter\");","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"Teee728"},"content":"        } else if (!description.isEmpty() \u0026\u0026 (from.isEmpty() \u0026\u0026 to.isEmpty())) {","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention the duration! Please re-enter correctly!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"Teee728"},"content":"        } else if (!description.isEmpty() \u0026\u0026 from.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention from when! Please re-enter correctly!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"Teee728"},"content":"        } else if (!description.isEmpty() \u0026\u0026 to.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"Teee728"},"content":"            throw new DukeException(\"You did not mention till when! Please re-enter correctly!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"Teee728"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-20"},{"lineNumber":161,"author":{"gitId":"Teee728"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-20"},{"lineNumber":162,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":163,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":164,"author":{"gitId":"Teee728"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":165,"author":{"gitId":"Teee728"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":166,"author":{"gitId":"Teee728"},"content":"        return \"Got it. I\u0027ve added this task:\\n [E][\" + getStatusIcon() + \"] \" + getDescription() +","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"Teee728"},"content":"                (from.isEmpty() ? \"\" : \" (from: \" + from) + (to.isEmpty() ? \"\" : \" to: \" + to + \")\");","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":169,"author":{"gitId":"Teee728"},"content":"}","lastModifiedDate":"2024-01-19"},{"lineNumber":170,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":172,"author":{"gitId":"Teee728"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"Teee728"},"content":"        boolean hasChanged \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"Teee728"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-18"},{"lineNumber":178,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":179,"author":{"gitId":"Teee728"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"Teee728"},"content":"            loadTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"Teee728"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"Teee728"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello! I\u0027m Tango. \\nWhat can I do for you today?\");","lastModifiedDate":"2024-01-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-18"},{"lineNumber":189,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2024-01-18"},{"lineNumber":191,"author":{"gitId":"Teee728"},"content":"            if (hasChanged) {","lastModifiedDate":"2024-01-28"},{"lineNumber":192,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"Teee728"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"Teee728"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"Teee728"},"content":"                    System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"Teee728"},"content":"            String input \u003d scan.nextLine().trim();","lastModifiedDate":"2024-01-19"},{"lineNumber":200,"author":{"gitId":"Teee728"},"content":"            String[] words \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2024-01-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-18"},{"lineNumber":202,"author":{"gitId":"Teee728"},"content":"            if (words[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":204,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2024-01-18"},{"lineNumber":207,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-19"},{"lineNumber":208,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-19"},{"lineNumber":209,"author":{"gitId":"Teee728"},"content":"                System.out.println(tasks.size() \u003d\u003d 0 ? \"You have no tasks in your list!\" :","lastModifiedDate":"2024-01-20"},{"lineNumber":210,"author":{"gitId":"Teee728"},"content":"                        tasks.size() \u003d\u003d 1 ? \"Here is the task in your list:\" :","lastModifiedDate":"2024-01-20"},{"lineNumber":211,"author":{"gitId":"Teee728"},"content":"                                \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-20"},{"lineNumber":212,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":213,"author":{"gitId":"Teee728"},"content":"                    Task.getList(tasks);","lastModifiedDate":"2024-01-20"},{"lineNumber":214,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":215,"author":{"gitId":"Teee728"},"content":"                    System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":216,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":218,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"mark\") \u0026\u0026 words.length \u003e 1) {","lastModifiedDate":"2024-01-19"},{"lineNumber":219,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"Teee728"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-19"},{"lineNumber":221,"author":{"gitId":"Teee728"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-19"},{"lineNumber":222,"author":{"gitId":"Teee728"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-19"},{"lineNumber":223,"author":{"gitId":"Teee728"},"content":"                    try {","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"Teee728"},"content":"                        System.out.println(task.markStatus());","lastModifiedDate":"2024-01-20"},{"lineNumber":225,"author":{"gitId":"Teee728"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":226,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"Teee728"},"content":"                    } catch (DukeException | IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":228,"author":{"gitId":"Teee728"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":230,"author":{"gitId":"Teee728"},"content":"                } else {","lastModifiedDate":"2024-01-19"},{"lineNumber":231,"author":{"gitId":"Teee728"},"content":"                    try {","lastModifiedDate":"2024-01-22"},{"lineNumber":232,"author":{"gitId":"Teee728"},"content":"                        throw new DukeException(\"You have not created a task \" + words[1] + \" yet!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":233,"author":{"gitId":"Teee728"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":234,"author":{"gitId":"Teee728"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":235,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-01-18"},{"lineNumber":237,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":238,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"unmark\") \u0026\u0026 words.length \u003e 1) {","lastModifiedDate":"2024-01-19"},{"lineNumber":239,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":240,"author":{"gitId":"Teee728"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-19"},{"lineNumber":241,"author":{"gitId":"Teee728"},"content":"                if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-19"},{"lineNumber":242,"author":{"gitId":"Teee728"},"content":"                    Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-19"},{"lineNumber":243,"author":{"gitId":"Teee728"},"content":"                    try {","lastModifiedDate":"2024-01-22"},{"lineNumber":244,"author":{"gitId":"Teee728"},"content":"                        System.out.println(task.unmarkStatus());","lastModifiedDate":"2024-01-20"},{"lineNumber":245,"author":{"gitId":"Teee728"},"content":"                        saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":247,"author":{"gitId":"Teee728"},"content":"                    } catch (DukeException | IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":248,"author":{"gitId":"Teee728"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":249,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":250,"author":{"gitId":"Teee728"},"content":"                } else {","lastModifiedDate":"2024-01-19"},{"lineNumber":251,"author":{"gitId":"Teee728"},"content":"                    try {","lastModifiedDate":"2024-01-22"},{"lineNumber":252,"author":{"gitId":"Teee728"},"content":"                        throw new DukeException(\"You have not created a task \" + words[1] + \" yet!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":253,"author":{"gitId":"Teee728"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":254,"author":{"gitId":"Teee728"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":255,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":256,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":257,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-19"},{"lineNumber":258,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"delete\") \u0026\u0026 words.length \u003e 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":259,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":260,"author":{"gitId":"Teee728"},"content":"                int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":261,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":262,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":263,"author":{"gitId":"Teee728"},"content":"                    Task.deleteTask(index, tasks);","lastModifiedDate":"2024-01-22"},{"lineNumber":264,"author":{"gitId":"Teee728"},"content":"                    Task.numberOfTasks(tasks);","lastModifiedDate":"2024-01-22"},{"lineNumber":265,"author":{"gitId":"Teee728"},"content":"                    saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":266,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":267,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException | IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":268,"author":{"gitId":"Teee728"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":269,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":270,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":272,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":274,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":275,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":276,"author":{"gitId":"Teee728"},"content":"                        throw new DukeException(\"You gotta enter some task TO DO\");","lastModifiedDate":"2024-01-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2024-01-18"},{"lineNumber":278,"author":{"gitId":"Teee728"},"content":"                    Task task \u003d new ToDo(input.substring(5).trim());","lastModifiedDate":"2024-01-22"},{"lineNumber":279,"author":{"gitId":"Teee728"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":280,"author":{"gitId":"Teee728"},"content":"                    System.out.println(task.toString());","lastModifiedDate":"2024-01-20"},{"lineNumber":281,"author":{"gitId":"Teee728"},"content":"                    task.numberOfTasks(tasks);","lastModifiedDate":"2024-01-20"},{"lineNumber":282,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":283,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":284,"author":{"gitId":"Teee728"},"content":"                    System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-20"},{"lineNumber":287,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":288,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-20"},{"lineNumber":289,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":290,"author":{"gitId":"Teee728"},"content":"                    if (input.length() \u003e\u003d 9) {","lastModifiedDate":"2024-01-22"},{"lineNumber":291,"author":{"gitId":"Teee728"},"content":"                        Task task \u003d new Deadline(input.substring(9).trim(), words.length \u003e 2 ? words[2] : \"\");","lastModifiedDate":"2024-01-22"},{"lineNumber":292,"author":{"gitId":"Teee728"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":293,"author":{"gitId":"Teee728"},"content":"                        System.out.println(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":294,"author":{"gitId":"Teee728"},"content":"                        task.numberOfTasks(tasks);","lastModifiedDate":"2024-01-20"},{"lineNumber":295,"author":{"gitId":"Teee728"},"content":"                        hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":296,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":297,"author":{"gitId":"Teee728"},"content":"                        throw new DukeException(\"Deadline for what and by when? Please re-enter correctly\");","lastModifiedDate":"2024-01-22"},{"lineNumber":298,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":299,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":300,"author":{"gitId":"Teee728"},"content":"                    System.out.println(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":301,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-20"},{"lineNumber":302,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-20"},{"lineNumber":303,"author":{"gitId":"Teee728"},"content":"            } else if (words[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":304,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":305,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":306,"author":{"gitId":"Teee728"},"content":"                    Matcher fromMatcher \u003d Pattern.compile(\"/from\\\\s+(\\\\S+[^/]+)\").matcher(input);","lastModifiedDate":"2024-01-22"},{"lineNumber":307,"author":{"gitId":"Teee728"},"content":"                    Matcher toMatcher \u003d Pattern.compile(\"/to\\\\s+(\\\\S.+)\").matcher(input);","lastModifiedDate":"2024-01-22"},{"lineNumber":308,"author":{"gitId":"Teee728"},"content":"                    String eventDescription \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":309,"author":{"gitId":"Teee728"},"content":"                    Matcher descriptionMatcher \u003d Pattern.compile(\"event\\\\s+(.+?)\\\\s*/from\").matcher(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":310,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":311,"author":{"gitId":"Teee728"},"content":"                    if (words.length \u003e 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":312,"author":{"gitId":"Teee728"},"content":"                        if (descriptionMatcher.find()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":313,"author":{"gitId":"Teee728"},"content":"                            eventDescription \u003d descriptionMatcher.group(1).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":314,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":315,"author":{"gitId":"Teee728"},"content":"                    } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":316,"author":{"gitId":"Teee728"},"content":"                            throw new DukeException(\"You didn\u0027t enter the details or duration!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":317,"author":{"gitId":"Teee728"},"content":"                        }","lastModifiedDate":"2024-01-20"},{"lineNumber":318,"author":{"gitId":"Teee728"},"content":"                    String from \u003d fromMatcher.find() ? fromMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":319,"author":{"gitId":"Teee728"},"content":"                    String to \u003d toMatcher.find() ? toMatcher.group(1).trim() : \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":321,"author":{"gitId":"Teee728"},"content":"                    Task task \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2024-01-22"},{"lineNumber":322,"author":{"gitId":"Teee728"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":323,"author":{"gitId":"Teee728"},"content":"                    System.out.println(task.toString());","lastModifiedDate":"2024-01-20"},{"lineNumber":324,"author":{"gitId":"Teee728"},"content":"                    task.numberOfTasks(tasks);","lastModifiedDate":"2024-01-20"},{"lineNumber":325,"author":{"gitId":"Teee728"},"content":"                    hasChanged \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":326,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":327,"author":{"gitId":"Teee728"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":328,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-20"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":330,"author":{"gitId":"Teee728"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-22"},{"lineNumber":332,"author":{"gitId":"Teee728"},"content":"                try {","lastModifiedDate":"2024-01-22"},{"lineNumber":333,"author":{"gitId":"Teee728"},"content":"                    throw new DukeException(\"I don\u0027t know what you are saying :(\");","lastModifiedDate":"2024-01-22"},{"lineNumber":334,"author":{"gitId":"Teee728"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":335,"author":{"gitId":"Teee728"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":336,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                System.out.println(\"-------------------------------\");","lastModifiedDate":"2024-01-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":341,"author":{"gitId":"Teee728"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":342,"author":{"gitId":"Teee728"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":343,"author":{"gitId":"Teee728"},"content":"        File parentFolder \u003d file.getParentFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":344,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":345,"author":{"gitId":"Teee728"},"content":"        if (!parentFolder.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":346,"author":{"gitId":"Teee728"},"content":"            if (!parentFolder.mkdirs()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":347,"author":{"gitId":"Teee728"},"content":"                throw new IOException(\"Failed to create the data folder.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":348,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":349,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":350,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":351,"author":{"gitId":"Teee728"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file, false)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":352,"author":{"gitId":"Teee728"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":353,"author":{"gitId":"Teee728"},"content":"                String text \u003d task.type + \" | \" + (task.getStatusIcon().equals(\"X\") ? \"1\" : \"0\") + \" | \" + task.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":354,"author":{"gitId":"Teee728"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":355,"author":{"gitId":"Teee728"},"content":"                    text +\u003d \" | \" + ((Deadline) task).by;","lastModifiedDate":"2024-01-28"},{"lineNumber":356,"author":{"gitId":"Teee728"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-28"},{"lineNumber":357,"author":{"gitId":"Teee728"},"content":"                    text +\u003d \" | \" + ((Event) task).from + \"-\" + ((Event) task).to;","lastModifiedDate":"2024-01-28"},{"lineNumber":358,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":359,"author":{"gitId":"Teee728"},"content":"                fileWriter.write(text);","lastModifiedDate":"2024-01-28"},{"lineNumber":360,"author":{"gitId":"Teee728"},"content":"                fileWriter.append(\"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":361,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":362,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":363,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":364,"author":{"gitId":"Teee728"},"content":"    private static void loadTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":365,"author":{"gitId":"Teee728"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":366,"author":{"gitId":"Teee728"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":367,"author":{"gitId":"Teee728"},"content":"                System.out.println(\"\\nData file does not currently exist. However, as you add a task, it will save it to\\nthe \" +","lastModifiedDate":"2024-01-28"},{"lineNumber":368,"author":{"gitId":"Teee728"},"content":"                        \"path specified. You can view your task list after exiting the chatbot.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":369,"author":{"gitId":"Teee728"},"content":"                return;","lastModifiedDate":"2024-01-28"},{"lineNumber":370,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":371,"author":{"gitId":"Teee728"},"content":"                try(Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":372,"author":{"gitId":"Teee728"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":373,"author":{"gitId":"Teee728"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":374,"author":{"gitId":"Teee728"},"content":"                    String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-28"},{"lineNumber":375,"author":{"gitId":"Teee728"},"content":"                    TaskType taskType \u003d TaskType.valueOf(parts[0].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":376,"author":{"gitId":"Teee728"},"content":"                    boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":377,"author":{"gitId":"Teee728"},"content":"                    String description \u003d parts[2].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":378,"author":{"gitId":"Teee728"},"content":"                    String additionalInfo \u003d (parts.length \u003e 3) ? parts[3].trim() : null;","lastModifiedDate":"2024-01-28"},{"lineNumber":379,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":380,"author":{"gitId":"Teee728"},"content":"                    Task task \u003d new Task(null, null);","lastModifiedDate":"2024-01-28"},{"lineNumber":381,"author":{"gitId":"Teee728"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":382,"author":{"gitId":"Teee728"},"content":"                    if (taskType \u003d\u003d TaskType.T) {","lastModifiedDate":"2024-01-28"},{"lineNumber":383,"author":{"gitId":"Teee728"},"content":"                        task \u003d new ToDo(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":384,"author":{"gitId":"Teee728"},"content":"                    } else if (taskType \u003d\u003d TaskType.D) {","lastModifiedDate":"2024-01-28"},{"lineNumber":385,"author":{"gitId":"Teee728"},"content":"                        task \u003d new Deadline(description, additionalInfo);","lastModifiedDate":"2024-01-28"},{"lineNumber":386,"author":{"gitId":"Teee728"},"content":"                    } else if (taskType \u003d\u003d TaskType.E) {","lastModifiedDate":"2024-01-28"},{"lineNumber":387,"author":{"gitId":"Teee728"},"content":"                        String[] p \u003d additionalInfo.split(\"-\");","lastModifiedDate":"2024-01-28"},{"lineNumber":388,"author":{"gitId":"Teee728"},"content":"                        task \u003d new Event(description, p[0].trim(), p[1].trim());","lastModifiedDate":"2024-01-28"},{"lineNumber":389,"author":{"gitId":"Teee728"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":390,"author":{"gitId":"Teee728"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":391,"author":{"gitId":"Teee728"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":392,"author":{"gitId":"Teee728"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":393,"author":{"gitId":"Teee728"},"content":"        catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":394,"author":{"gitId":"Teee728"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-28"},{"lineNumber":395,"author":{"gitId":"Teee728"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":396,"author":{"gitId":"Teee728"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":397,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-18"}],"authorContributionMap":{"Teee728":369,"-":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Teee728"},"content":"java -classpath ..\\bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Teee728"},"content":"java -classpath ../bin Duke \u003c in.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Teee728":1,"-":37}}]
