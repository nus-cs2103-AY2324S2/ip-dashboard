[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"martinng01":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Duke is a chatbot that helps you keep track of your tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" * It can store your tasks, mark them as done, and delete them.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * It also supports different types of tasks, such as ToDos, Deadlines, and Events.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" * Duke stores your tasks in a file, so you can continue where you left off the next time you run it.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":" * Duke has the characteristics of a typical Chinese Singaporean.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    static final String NAME \u003d \"jun jie\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    static final String INTRO_MSG \u003d \"hi bro, im \" + NAME + \"\\nwhat you want me to do?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs a Duke chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    public Duke() {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        Storage.init();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        String fileContents \u003d Storage.read();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        TaskList taskList \u003d new TaskList(fileContents);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        ui.print(INTRO_MSG);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            Command command \u003d Parser.handleInput(input, ui, taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            command.execute(taskList, ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            if (command.isExit()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"     * Entry point of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"     * @param args Unused.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        new Duke();","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"martinng01":46}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import duke.commands.DefaultCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":" * Parser class is responsible for parsing user input and returning a Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"     * Splits user input into a HashMap.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     * @param input user input","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     * @return HashMap containing the command and its content","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    public static HashMap\u003cString, String\u003e splitInput(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        HashMap\u003cString, String\u003e res \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        String argRegex \u003d \"(?\u003c\u003d/%s\\\\s)(.*?)(?\u003d\\\\s/|$)\";","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        res.put(\"command\", input.split(\" \", 2)[0]);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            return res;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        res.put(\"content\", splitInput[1].split(\" /\")[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        Pattern byPattern \u003d Pattern.compile(String.format(argRegex, \"by\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        Pattern fromPattern \u003d Pattern.compile(String.format(argRegex, \"from\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        Pattern toPattern \u003d Pattern.compile(String.format(argRegex, \"to\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        Matcher byMatcher \u003d byPattern.matcher(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        Matcher fromMatcher \u003d fromPattern.matcher(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        Matcher toMatcher \u003d toPattern.matcher(input);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"        if (byMatcher.find()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"            res.put(\"by\", byMatcher.group());","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        if (fromMatcher.find()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"            res.put(\"from\", fromMatcher.group());","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        if (toMatcher.find()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"            res.put(\"to\", toMatcher.group());","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"        return res;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"     * Parses user input and returns a Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"     * @param input user input","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"     * @param ui Ui object","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"     * @param taskList TaskList object","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"     * @return Command object","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"    public static Command handleInput(String input, Ui ui, TaskList taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"        HashMap\u003cString, String\u003e inputs \u003d splitInput(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        switch (inputs.get(\"command\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"            return new MarkCommand(inputs.get(\"content\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"            return new UnmarkCommand(inputs.get(\"content\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"            return new DeleteCommand(inputs.get(\"content\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"            return new TodoCommand(inputs.get(\"content\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"            return new DeadlineCommand(inputs.get(\"content\"), inputs.get(\"by\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"            return new EventCommand(inputs.get(\"content\"), inputs.get(\"from\"), inputs.get(\"to\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"            return new FindCommand(inputs.get(\"content\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"            return new DefaultCommand();","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"martinng01":99}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Storage is responsible for reading and writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    private static File file;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"     * Creates a new file if it does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public static void init() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"            file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * Writes the given string to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"     * @param str The string to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public static void write(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            fileWriter.write(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"     * Reads the file and returns its contents as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"     * @return The contents of the file as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"    public static String read() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"                str.append(scanner.nextLine());","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"                    str.append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"            return str.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"            return \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"martinng01":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs a task list with the given file contents.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param fileContents The contents of the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public TaskList(String fileContents) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        if (fileContents.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"            return;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        String[] tasks \u003d fileContents.split(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"        for (String task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"            String[] taskDetails \u003d task.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"            String taskType \u003d taskDetails[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"            boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            String taskContent \u003d taskDetails[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"                    this.add(new TodoTask(taskContent, isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"                    String deadline \u003d taskDetails[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"                    this.add(new DeadlineTask(taskContent, deadline, isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"                    String eventFrom \u003d taskDetails[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                    String eventTo \u003d taskDetails[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"                    this.add(new EventTask(taskContent, eventFrom, eventTo, isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"                default:","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"                    throw new InvalidArgumentException(\"Invalid task type in file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"            } catch (DateTimeException | InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        super.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        Storage.write(this.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    public Task remove(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        Task taskRemoved \u003d super.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"        Storage.write(this.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"        return taskRemoved;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"            str.append(String.format(\"%d. %s\", i + 1, this.get(i).toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"                str.append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        return str.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task list that can be written to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task list that can be written to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"            str.append(String.format(\"%s\", this.get(i).toFileString()));","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"                str.append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        return str.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":99}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":" * The Ui class handles the user interface of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":" * It is responsible for printing messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"     * Prints the given string surrounded by a border of dashes.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     * This method adds a decorative border to the printed output for visual emphasis.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     * @param str The string to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public void print(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        System.out.println(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"martinng01":20}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a command.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     * @param ui User interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public abstract void execute(TaskList tasks, Ui ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":26}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"     * The command word to add a deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"added this task for you liao:\\n%s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    private final String name;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    private final String deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     * Constructs a command to add a deadline task with the given name and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    public DeadlineCommand(String name, String deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"            Task task \u003d new DeadlineTask(name, deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"            ui.print(String.format(MESSAGE, task));","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException | DateTimeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":46}},{"path":"src/main/java/duke/commands/DefaultCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a command that is not recognised by the chat bot.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class DefaultCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"what are u saying\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"        ui.print(MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":16}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     * The command word to delete a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"ok i help you delete this task ah:\\n%s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private static final String ERROR_MESSAGE \u003d \"oi the argument must be a number la\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    private final String index;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * Constructs a command to delete the task at the given index.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public DeleteCommand(String index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            int index \u003d Integer.parseInt(this.index);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"            ui.print(String.format(MESSAGE, task));","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            ui.print(ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":41}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"     * The command word to add an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"added this task for you liao:\\n%s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    private final String name;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    private final String from;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    private final String to;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     * Constructs a command to add an event task with the given name, start time and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    public EventCommand(String name, String from, String to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"            Task task \u003d new EventTask(name, from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            ui.print(String.format(MESSAGE, task));","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException | InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":49}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     * The command word to exit the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"ok see you bro\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        ui.print(MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"        return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":25}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Represents a command to find tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     * The command word to be matched with the user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"found for u liao:\\n%s\";","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     * Constructs a new FindCommand with the given keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        TaskList filteredTasks \u003d new TaskList(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            if (task.getName().contains(keyword)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        ui.print(String.format(MESSAGE, filteredTasks.toString()));","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"martinng01":39}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     * The command word to list all tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        ui.print(tasks.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":19}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * A command to mark a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     * The command word to mark a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"good job bro, marked this task as done:\\n%s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private static final String ERROR_MESSAGE \u003d \"oi the argument must be a number la\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    private final String index;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * Constructs a command to mark the task at the given index.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     * @param index The index of the task to mark.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public MarkCommand(String index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            int index \u003d Integer.parseInt(this.index);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            task.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            ui.print(String.format(MESSAGE, tasks.get(index - 1)));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            ui.print(ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":40}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     * The command word to add a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"added this task for you liao:\\n%s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    private final String name;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * Constructs a command to add a todo task with the given name.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    public TodoCommand(String name) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            Task task \u003d new TodoTask(name);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            ui.print(String.format(MESSAGE, task));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":40}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.commands;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     * The command word to unmark a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String MESSAGE \u003d \"ok i help you unmark this task ah:\\n%s\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private static final String ERROR_MESSAGE \u003d \"oi the argument must be a number la\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    private final String index;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * Constructs a command to unmark the task at the given index.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     * @param index The index of the task to unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public UnmarkCommand(String index) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            int index \u003d Integer.parseInt(this.index);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            task.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            ui.print(String.format(MESSAGE, tasks.get(index)));","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            ui.print(ERROR_MESSAGE);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":40}},{"path":"src/main/java/duke/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":" * Represents an exception that is thrown when an invalid argument is provided to a command.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"     * Constructs an invalid argument exception with the given message.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"     * @param message The message of the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":15}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"eh the date/time format is wrong la, must be yyyy-mm-dd\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_NAME \u003d \"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_DEADLINE \u003d \"bro this task needs a deadline bro\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs a deadline task with the given name, deadline, and done status.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param name     The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     * @param isDone   The done status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     * @throws DateTimeException        If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"     * @throws InvalidArgumentException If the name or deadline is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    public DeadlineTask(String name, String deadline, boolean isDone)","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"            throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"            throw new InvalidArgumentException(INVALID_NAME);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            throw new InvalidArgumentException(INVALID_DEADLINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"            throw new DateTimeException(INVALID_DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"     * Constructs a deadline task with the given name and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"     * @param name     The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"     * @throws DateTimeException        If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"     * @throws InvalidArgumentException If the name or deadline is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    public DeadlineTask(String name, String deadline) throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        this(name, deadline, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        return String.format(\"D | %d | %s | %s\", isDone() ? 1 : 0, getName(), deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":72}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Represents a task that starts and ends at specific dates and times.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"eh the date/time format is wrong la, must be yyyy-mm-dd\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_NAME \u003d \"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_FROM \u003d \"eh the event needs a start date/time\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_TO \u003d \"eh the event needs a end date/time\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * Constructs an event task with the given name, start date, end date, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"     * @param from   The start date of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     * @param to     The end date of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     * @throws DateTimeException        If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"     * @throws InvalidArgumentException If the name, start date, or end date is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    public EventTask(String name, String from, String to, boolean isDone)","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            throw new InvalidArgumentException(INVALID_NAME);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            throw new InvalidArgumentException(INVALID_FROM);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"            throw new InvalidArgumentException(INVALID_TO);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"            throw new DateTimeException(INVALID_DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"     * Constructs an event task with the given name, start date, and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"     * @param from The start date of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"     * @param to   The end date of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"     * @throws DateTimeException        If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"     * @throws InvalidArgumentException If the name, start date, or end date is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"    public EventTask(String name, String from, String to) throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"        this(name, from, to, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isDone() ? 1 : 0, getName(), from, to);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":82}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":" * Represents a task that can be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"    private final String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     * Constructs a task with the given name.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     * Constructs a task with the given name and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     * @param isDone The completion status of the task (true if done, false if not done).","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        this.done \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"     * @param done The completion status to set for the task (true if done, false if not done).","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    public void markDone(boolean done) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        this.done \u003d done;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"     * Returns the name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"     * @return The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    public String getName() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        return name;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be displayed to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be displayed to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        return done;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        return String.format(\"[%s] %s\", done ? \"X\" : \" \", name);","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":68}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":" * Represents a task that has no specific date or time associated with it.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_NAME \u003d \"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\";","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     * Constructs a new TodoTask with the given name and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     * @param name   The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"     * @param isDone The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"     * @throws InvalidArgumentException If the name is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    public TodoTask(String name, boolean isDone) throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"            throw new InvalidArgumentException(INVALID_NAME);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     * Constructs a new TodoTask with the given name and sets its completion status to false.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"     * @throws InvalidArgumentException If the name is empty.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    public TodoTask(String name) throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        this(name, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        return String.format(\"T | %d | %s\", isDone() ? 1 : 0, getName());","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":49}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Tests the Parser class.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    public void testSplitInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        expected.put(\"command\", \"todo\");","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"        expected.put(\"content\", \"read book\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"        assertEquals(expected, Parser.splitInput(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public void testSplitInputWithBy() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        String input \u003d \"deadline return book /by 2021-08-25\";","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        expected.put(\"command\", \"deadline\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        expected.put(\"content\", \"return book\");","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        expected.put(\"by\", \"2021-08-25\");","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        assertEquals(expected, Parser.splitInput(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    public void testSplitInputWithFromAndTo() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        String input \u003d \"event project meeting /from 2021-08-25 /to 2021-08-26\";","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        expected.put(\"command\", \"event\");","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        expected.put(\"content\", \"project meeting\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        expected.put(\"from\", \"2021-08-25\");","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        expected.put(\"to\", \"2021-08-26\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        assertEquals(expected, Parser.splitInput(input));","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"martinng01":46}},{"path":"src/test/java/duke/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"eh the date/time format is wrong la, must be yyyy-mm-dd\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_NAME \u003d \"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_DEADLINE \u003d \"bro this task needs a deadline bro\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public void testStringConversion() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 12 2020)\", deadline.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public void testFileConversion() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"D | 0 | return book | 2020-12-12\", deadline.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    public void testInvalidDate() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-32\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    public void testEmptyName() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"            DeadlineTask deadline \u003d new DeadlineTask(\"\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_NAME, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    public void testEmptyDeadline() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"            DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_DEADLINE, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    public void testEmptyNameAndDeadline() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"            DeadlineTask deadline \u003d new DeadlineTask(\"\", \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_NAME, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    public void testEmptyNameAndInvalidDeadline() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"            DeadlineTask deadline \u003d new DeadlineTask(\"\", \"2020-12-32\");","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_NAME, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsDone() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        deadline.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[D][X] return book (by: Dec 12 2020)\", deadline.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsUndone() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"        deadline.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        deadline.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 12 2020)\", deadline.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsDoneAndFileConversion() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"        deadline.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"D | 1 | return book | 2020-12-12\", deadline.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsUndoneAndFileConversion() throws InvalidArgumentException, DateTimeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"martinng01"},"content":"        DeadlineTask deadline \u003d new DeadlineTask(\"return book\", \"2020-12-12\");","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"martinng01"},"content":"        deadline.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"martinng01"},"content":"        deadline.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"D | 0 | return book | 2020-12-12\", deadline.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":110}},{"path":"src/test/java/duke/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":" * JUnit test class for the EventTask class.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"public class EventTaskTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"eh the date/time format is wrong la, must be yyyy-mm-dd\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_NAME \u003d \"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\";","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_FROM \u003d \"eh the event needs a start date/time\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_TO \u003d \"eh the event needs a end date/time\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    public void testStringConversion() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"        EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[E][ ] project meeting (from: Aug 25 2021 to: Aug 26 2021)\", event.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    public void testFileConversion() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"E | 0 | project meeting | 2021-08-25 | 2021-08-26\", event.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public void testInvalidDate() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"            EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-32\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    public void testEmptyName() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"            EventTask event \u003d new EventTask(\"\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_NAME, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"    public void testEmptyFrom() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"            EventTask event \u003d new EventTask(\"project meeting\", \"\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_FROM, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    public void testEmptyTo() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"            EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"            fail();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_TO, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsDone() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"        EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        event.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[E][X] project meeting (from: Aug 25 2021 to: Aug 26 2021)\", event.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsUndone() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"        event.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"        event.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[E][ ] project meeting (from: Aug 25 2021 to: Aug 26 2021)\", event.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsDoneAndFileConversion() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"martinng01"},"content":"        EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"martinng01"},"content":"        event.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"E | 1 | project meeting | 2021-08-25 | 2021-08-26\", event.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsUndoneAndFileConversion() throws DateTimeException, InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"martinng01"},"content":"        EventTask event \u003d new EventTask(\"project meeting\", \"2021-08-25\", \"2021-08-26\");","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"martinng01"},"content":"        event.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"martinng01"},"content":"        event.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"E | 0 | project meeting | 2021-08-25 | 2021-08-26\", event.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":102}},{"path":"src/test/java/duke/tasks/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import duke.exceptions.InvalidArgumentException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Tests the TodoTask class.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"public class TodoTaskTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    private static final String INVALID_NAME \u003d \"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public void testStringConversion() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        TodoTask todo \u003d new TodoTask(\"read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"    public void testFileConversion() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"        TodoTask todo \u003d new TodoTask(\"read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"T | 0 | read book\", todo.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"    public void testEmptyName() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"            TodoTask todo \u003d new TodoTask(\"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            assertEquals(INVALID_NAME, e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsDone() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        TodoTask todo \u003d new TodoTask(\"read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        todo.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsUndone() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        TodoTask todo \u003d new TodoTask(\"read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        todo.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        todo.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsDoneAndFileConversion() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        TodoTask todo \u003d new TodoTask(\"read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        todo.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"T | 1 | read book\", todo.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"    public void testMarkAsUndoneAndFileConversion() throws InvalidArgumentException {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        TodoTask todo \u003d new TodoTask(\"read book\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"        todo.markDone(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"        todo.markDone(false);","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"        assertEquals(\"T | 0 | read book\", todo.toFileString());","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"martinng01":66}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"hi bro, im jun jie","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"what you want me to do?","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"duke.exceptions.DukeException: oi the task needs a name la 😡😡","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"what are u saying","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"added this task for you liao:","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"added this task for you liao:","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"good job bro, marked this task as done:","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"[T][X] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"1. [T][X] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"ok deleted this one:","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"[T][X] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"1. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"ok see you bro","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"hi","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":10}}]
