[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"# gui.Todopal project template","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"3. After that, locate the `src/main/java/gui.Todopal.java` file, right-click it, and choose `Run gui.Todopal.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"bertrandong":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"bertrandong":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"# gui.Todopal User Guide","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"-":29,"bertrandong":1}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"import gui.Main;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":11}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":" * Controls what happens when a task is added.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * Task to be added into the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * AddCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param newTask New task created and waiting to be added into the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.taskToAdd \u003d newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * Executes the add task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the task is added to.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the task is added.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        for (int i \u003d 0; i \u003c taskList.length(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"            if (this.taskToAdd.descriptionToString().equals(taskList.getTask(i).descriptionToString())) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"Task already exists!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(this.taskToAdd);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"        String s \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\\n%s\",","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"                this.taskToAdd.toString(), taskList.numTaskToString());","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":44}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":" * Controls what to do when user inputs something.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * Variable to tell the program whether to exit or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    private boolean isExit;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * Executes the task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the command is applied.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when the process is unsuccessful.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    public abstract String execute(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":24}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":" * Controls what happens when a task is deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * The task index of the task that is to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    private int taskToDeleteIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * DeleteCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input that the user types into the command line.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.taskToDeleteIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * Executes the delete task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the task is deleted from.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the task is deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when the user input is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"            Task removedTask \u003d taskList.deleteTask(this.taskToDeleteIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"            storage.save(taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"            String s \u003d String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n%s\",","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"                    removedTask.toString(), taskList.numTaskToString());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"            return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"Invalid input. Please provide a valid task index or check that the task exists.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":44}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":" * Controls what to do when user exits program.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * Executes the exit program process.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the command is applied.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"        return \"Bye! Hope to see you again!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":21}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":" * Controls what to do when user wants to find keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    private String keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * FindCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * Executes the find task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the task is filtered from.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        TaskList foundTasks \u003d taskList.find(this.keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        return taskList.findToString(this.keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"bertrandong":35}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":" * Controls what to do when user wants to list all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     * Executes the listing process of all tasks in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the command is applied.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"        return taskList.listToString() + taskList.numTaskToString();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":20}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":" * Controls what to do when user marks task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * The task index of which task is to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * The mark status of a given task.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     * MarkCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input that the user types into the command line.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     * @param isMarked The variable that determines whether a given task is to be marked or unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    public MarkCommand(String userInput, boolean isMarked) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"        this.taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     * Executes the mark task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the given task is marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * @return The response expected from the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when an invalid put is entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    public String execute(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"            Task taskToMark \u003d taskList.markTask(this.taskIndex, this.isMarked);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"            storage.save(taskList);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"            String marked \u003d String.format(\"done:\\n%s\\n%s\", taskToMark.toString(), taskList.numTaskToString());","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"            String unmarked \u003d String.format(\"not done yet:\\n%s\\n%s\", taskToMark.toString(), taskList.numTaskToString());","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"            String s \u003d \"Nice! I\u0027ve marked this task as \" + (this.isMarked ? marked : unmarked);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"            return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"Invalid input. Please provide a valid task index or check that the task exists.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":51}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":" * The exception thrown when user inputs something that the program does not support.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     * DukeException class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"     * @param message The exception message.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":14}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package gui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":61}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package gui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    private Todopal todopal \u003d new Todopal();","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(todopal);","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":31}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package gui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":" * Controller for gui.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    private Todopal todopal;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chatbot.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    public void setDuke(Todopal t) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"        todopal \u003d t;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"                DialogBox.getDukeDialog(todopal.getWelcome(), dukeImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"        String response \u003d todopal.getResponse(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":55}},{"path":"src/main/java/gui/Todopal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package gui;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import command.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import utilities.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":" * Duke class responsible for running the program.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"public class Todopal {","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    /** File name to where the data will be stored. */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /** Directory path to where the data will be stored. */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    private static final String DIRECTORY_NAME \u003d \"./src/main/data\";","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * Ui responsible for user interaction.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * The user\u0027s task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * The storage used to access the save file if it exists.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     * Duke class constructor.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    public Todopal() {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        this.storage \u003d new Storage(FILE_NAME, DIRECTORY_NAME);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"     * Generates a response from the chatbot.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input the user keys in.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * @return The message the chatbot replies.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"            Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"            return command.execute(taskList, storage);","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"     * Displays the welcome message upon load up.","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"     * @return The intended welcome message for the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    public String getWelcome() {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"        return ui.getOutput();","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":62}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import utilities.DateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":" * A task with a due date.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * The due date or deadline of the given task in string form.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    private String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * The due date or deadline of the given task as a date time object.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    private DateTime deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * Deadline class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @param description Task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     * @param by The due date or deadline of the given task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"        this.deadline \u003d new DateTime(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * Deadline class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     * @param by The due date or deadline of the given task.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"        this.deadline \u003d new DateTime(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"                + \" (by: \" + this.deadline.formatDate() + \"hrs)\";","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"        return \"D\" + super.toFileString() + \"|\" + this.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"     * Gets the description and deadline of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"     * @return The task description and deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"    public String descriptionToString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"        return super.descriptionToString()","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"                + \" (by: \" + this.deadline.formatDate() + \"hrs)\";","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":68}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import utilities.DateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":" * A task with a start date and an end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * The date time of the start of the event as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    private String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * The date time of the end of the event as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    private String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * The date time of the start of the event as a date time object.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    private DateTime startDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     * The date time of the end of the event as a date time object.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    private DateTime endDate;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * Event class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @param from The date time of the start of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @param to The date time of the end of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        this.startDate \u003d new DateTime(from);","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"        this.endDate \u003d new DateTime(to);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"     * Event class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     * @param from The date time of the start of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"     * @param to The date time of the end of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        this.startDate \u003d new DateTime(from);","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"        this.endDate \u003d new DateTime(to);","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"                + \" (from: \" + this.startDate.formatDate() + \"hrs to: \"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"                + this.endDate.formatDate() + \"hrs)\";","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"        return \"E\" + super.toFileString() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"     * Gets the description, start date and end date of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"     * @return The task description, start date and end date.","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"    public String descriptionToString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"        return super.descriptionToString()","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"                + \" (from: \" + this.startDate.formatDate() + \"hrs to: \"","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"                + this.endDate.formatDate() + \"hrs)\";","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":83}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":" * A task created by the user to store in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     * The task description as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    private String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * Task class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * Task class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     * Marks whether a task has been done or not.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"     * @param isDone isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"                + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"        return \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"                + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"     * Checks if task description contains the given keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"     * @return A boolean value depending on whether the task description contains the keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"     * @return The task description.","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"    public String descriptionToString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"        return this.description;","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":77}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":" * The task list that holds all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * The task list which contains all the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * TaskList class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     * TaskList class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * @param taskArray The task list that is loaded into the TaskList constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"        this.taskList \u003d taskArray;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * Outputs the length of the task list as an integer.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     * @return The length of the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    public int length() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     * Returns the task list as an array list.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"     * Retrieves the task from the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"     * @param index The task index for which task is to be retrived.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"     * @return A boolean value representing whether the task list is empty or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"     * @param newTask The new task that is to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"     * Marks the task in the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"     * @param taskIndex The task index of the task that is to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"     * @param isMarked A variable that determines whether a task is to be marked or unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"     * @return A task that is marked or unmarked depending on the isMarked variable.","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"    public Task markTask(int taskIndex, boolean isMarked) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"        Task taskToMark \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"        taskToMark.setDone(isMarked);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"        return taskToMark;","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"     * Deletes the task in the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"     * @param taskIndex The task index of the task that is to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"     * @return The task that has been deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"        assert taskList.size() \u003e 0 : \"List is already empty.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.remove(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"     * Returns a task list of all tasks with the matching keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"     * @return The task list with matching keywords.","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"                arr.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"        TaskList foundTasks \u003d new TaskList(arr);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"        return foundTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"bertrandong"},"content":"     * Converts the list of tasks into a string.","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"bertrandong"},"content":"     * @return The list of tasks in string form.","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"bertrandong"},"content":"    public String listToString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"bertrandong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"bertrandong"},"content":"            return \"Your task list is empty.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"bertrandong"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"bertrandong"},"content":"            String s \u003d \"Here are the tasks in your list\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"bertrandong"},"content":"            for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"bertrandong"},"content":"                s \u003d s + (i + 1) + \". \" + this.taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"bertrandong"},"content":"            return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"bertrandong"},"content":"     * Converts the list of found tasks into a string.","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that is being filtered.","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"bertrandong"},"content":"     * @return The list of found tasks in string form.","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"bertrandong"},"content":"    public String findToString(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"bertrandong"},"content":"        TaskList foundTasks \u003d find(keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"bertrandong"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"bertrandong"},"content":"            return \"You have no matching tasks.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"bertrandong"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"bertrandong"},"content":"            String s \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"bertrandong"},"content":"            for (int i \u003d 0; i \u003c foundTasks.length(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"bertrandong"},"content":"                s \u003d s + (i + 1) + \". \" + foundTasks.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"bertrandong"},"content":"            return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"bertrandong"},"content":"     * Converts the number of tasks in the list into a string.","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"bertrandong"},"content":"     * @return The number of tasks in string form.","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"bertrandong"},"content":"    public String numTaskToString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"bertrandong"},"content":"        String s \u003d String.format(\"Now you have %d task(s) in the list\", this.taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"bertrandong"},"content":"        return s;","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":149}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":" * A task with no due date.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     * Todo class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     * Todo class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     * @return The task description.","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    public String descriptionToString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"        return super.descriptionToString();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":50}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":" * Responsible for interacting with the user through the command line interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    private StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"        output.append(\"Hello! I\u0027m TodoPal!\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * Returns the Ui response and resets the output String.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @return String that is passed into GUI.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public String getOutput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        String temp \u003d output.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assert !temp.equals(\"\") : \"Output should not be empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        output \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"        return temp;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":27}},{"path":"src/main/java/utilities/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":" * A DateTime object that interprets the specified date.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class DateTime {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * The date time string that the user inputs.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    private String dateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * The date time object after conversion.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    private LocalDateTime dateTimeData;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * DateTime class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @param dateTime The date time string that the user inputs.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"        this.dateTimeData \u003d LocalDateTime.parse(dateTime, inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * Formats the date from a date time object into a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @return The converted date time that is to be output by the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public String formatDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        return this.dateTimeData.format(outputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"bertrandong":36}},{"path":"src/main/java/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import command.AddCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import command.DeleteCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import command.FindCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import command.ListCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"import task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"import task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":" * Parser object that helps to interpret what the user inputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     * A method that helps to interpret what the user has keyed in the command line, and responds accordingly.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input that is entered by the user in the command line.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     * @return A command based on what the user has entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when the user enters an invalid input.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"            return new MarkCommand(userInput, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"            return new MarkCommand(userInput, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"            return findTask(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"            return addTodo(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"            return addDeadline(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"            return addEvent(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \"","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"                    + \"Please start with todo, deadline or event.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"    private static AddCommand addTodo(String userInput) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"            String description \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"            assert !description.isEmpty() : \"Description should not be empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"                Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"                return new AddCommand(newTodo);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"OOPS!!! Please follow the given todo format \u0027todo \u003ctask description\u003e\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"    private static AddCommand addDeadline(String userInput) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"            String description \u003d userInput.split(\" /by \")[0].split(\" \", 2)[1];","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"            assert !description.isEmpty() : \"Description should not be empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"                String by \u003d userInput.split(\" /by \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"                Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"                return new AddCommand(newDeadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"OOPS!!! Please follow the given deadline format \"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"                    + \"\u0027deadline \u003ctask description\u003e /by \u003cdeadline\u003e\u0027.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"Invalid date time provided!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"    private static AddCommand addEvent(String userInput) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"            String description \u003d userInput.split(\" /from \")[0].split(\" \", 2)[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"            assert !description.isEmpty() : \"Description should not be empty\";","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"                String from \u003d userInput.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"                String to \u003d userInput.split(\" /to \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"                Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"                return new AddCommand(newEvent);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"OOPS!!! Please follow the given event format \"","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"                    + \"\u0027event \u003ctask description\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"Invalid date time provided!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"    private static FindCommand findTask(String userInput) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"bertrandong"},"content":"            String keyword \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"bertrandong"},"content":"            if (keyword.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"Keyword cannot be empty. \"","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"bertrandong"},"content":"                        + \"Please follow the given find format \u0027find \u003ckeyword\u003e\u0027.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"bertrandong"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"bertrandong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"OOPS!!! Please follow the given find format \u0027find \u003ckeyword\u003e\u0027.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":115}},{"path":"src/main/java/utilities/SaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"import task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":" * SaveFile that stores the user\u0027s current task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"public class SaveFile {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     * The file name of the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    private String fileName;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * The directory path of where the save file is saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    private String directoryName;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     * SaveFile class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     * @param fileName The file name of the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     * @param directoryName The directory path of where the save file is saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    public SaveFile(String fileName, String directoryName) {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"        this.directoryName \u003d directoryName;","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"     * Method to create directory path if it does not already exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"    public void createDirectory() {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"        File directory \u003d new File(directoryName);","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"                System.err.println(\"Error creating directory\");","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"     * Method to create the save file if it does not already exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    public void createFile() {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"        File file \u003d new File(directoryName, fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"                System.out.println(\"Error generating task list\");","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"     * Writes the task list into the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that is to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"    public void saveToFile(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"            FileWriter fw \u003d new FileWriter(this.directoryName + \"/\" + this.fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"            for (Task t : taskList.getList()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"                fw.write(t.toFileString());","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"                fw.write((System.lineSeparator()));","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"            fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"            System.err.println(\"Error writing task list to file: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"     * Reads the task list from the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"     * @return The task list as an array list.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"            File f \u003d new File(this.directoryName + \"/\" + this.fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"                String data \u003d s.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"                boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"                if (data.split(\"[|]\")[1].equals(\"0\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"                    isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"                } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"                    isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"                if (data.startsWith(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d data.split(\"[|]\")[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"bertrandong"},"content":"                    Todo newTodo \u003d new Todo(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"bertrandong"},"content":"                    taskList.add(newTodo);","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"bertrandong"},"content":"                } else if (data.startsWith(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d data.split(\"[|]\")[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"bertrandong"},"content":"                    String by \u003d data.split(\"[|]\")[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"bertrandong"},"content":"                    Deadline newDeadline \u003d new Deadline(description, isDone, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"bertrandong"},"content":"                    taskList.add(newDeadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"bertrandong"},"content":"                } else if (data.startsWith(\"E\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d data.split(\"[|]\")[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"bertrandong"},"content":"                    String from \u003d data.split(\"[|]\")[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"bertrandong"},"content":"                    String to \u003d data.split(\"[|]\")[4];","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"bertrandong"},"content":"                    Event newEvent \u003d new Event(description, isDone, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"bertrandong"},"content":"                    taskList.add(newEvent);","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"bertrandong"},"content":"            s.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"bertrandong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"bertrandong"},"content":"            System.out.println(\"File does not exist.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"bertrandong"},"content":"        return taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bertrandong":126}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":" * The storage which helps to access the save file.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * The save file stored in the storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    private SaveFile saveFile;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * Storage class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param fileName The file name of the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @param directoryName The directory path of where the save file is saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    public Storage(String fileName, String directoryName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        this.saveFile \u003d new SaveFile(fileName, directoryName);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        this.saveFile.createDirectory();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"        this.saveFile.createFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * Save task list to save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list to be saved as a TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        this.saveFile.saveToFile(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"     * Load task list from save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     * @return The save file as an array list.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"        return this.saveFile.readFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":43}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"bertrandong":19}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[D][ ] return book (by: 24 Aug 2024, 2359hrs)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[D][X] return book (by: 24 Aug 2024, 2359hrs)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"D|0|return book|24/8/2024 2359\", deadline.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"D|1|return book|24/8/2024 2359\", deadline.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[E][ ] project meeting (from: 31 Aug 2024, 1400hrs to: 31 Aug 2024, 1600hrs)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        event.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[E][X] project meeting (from: 31 Aug 2024, 1400hrs to: 31 Aug 2024, 1600hrs)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"E|0|project meeting|31/8/2024 1400|31/8/2024 1600\", event.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        event.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"E|1|project meeting|31/8/2024 1400|31/8/2024 1600\", event.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import utilities.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public void get_validTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        Task expected \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        ArrayList\u003cTask\u003e taskList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        taskList1.add(expected);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        TaskList taskList2 \u003d new TaskList(taskList1);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"        assertEquals(expected, taskList2.getTask(0));","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    public void get_invalidTask_exceptionThrown() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"            Storage storage \u003d new Storage(\"duke.txt\", \"./src/main/data\");","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"            Command command \u003d Parser.parse(\"mark -1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"            command.execute(taskList, storage);","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"            fail();","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"            assertEquals(\"Invalid input. Please provide a valid task index or check that the task exists.\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    public void addTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"        Task dummy1 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"        Task dummy2 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy1);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy2);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"        assertEquals(2, taskList.length());","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"    public void delete_validTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"        Task dummy1 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        Task dummy2 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy1);","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy2);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"        assertEquals(0, taskList.length());","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":62}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[ ] study for finals\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        task.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[X] study for finals\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"|0|study for finals\", task.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        task.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"|1|study for finals\", task.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[T][ ] study for finals\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[T][X] study for finals\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"T|0|study for finals\", todo.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"T|1|study for finals\", todo.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"mark","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"delete","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"bertrandong":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"java -classpath ..\\bin gui.Todopal \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"bertrandong":1}}]
