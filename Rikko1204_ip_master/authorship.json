[{"path":"src/data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"E | 0 | project meeting | 2020-12-31 | 2021-10-20","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"T | 0 | food","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"D | 1 | movie | 2019-01-01","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"D | 0 | run | 2020-03-04","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":4}},{"path":"src/main/java/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class AddTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public AddTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException, TaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        taskList.addTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":11}},{"path":"src/main/java/Arona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.io.OutputStream;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"public class Arona {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    private String name;","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    private String filePath \u003d \"./src/data/tasklist.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public Arona() throws TaskException {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        System.setOut(new PrintStream(new OutputStream() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"            @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"            public void write(int b) {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"                // Do nothing","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        }));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"        this.name \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            this.taskList \u003d new TaskList(storage.load(), ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        } catch (FileException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"            this.taskList \u003d new TaskList(ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        ui.greetings();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"                Command command \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"            } catch (FileException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"            } catch (AronaException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"            } catch (TaskException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"                System.err.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"    public static void main(String[] args) throws TaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"        Arona arona \u003d new Arona();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"        arona.run();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Rikko1204":58,"-":2}},{"path":"src/main/java/AronaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class AronaException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public AronaException(String string) {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    protected String fullCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    protected boolean exit;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws FileException, TaskException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"        return this.exit;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":13}},{"path":"src/main/java/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public enum CommandEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    BYE,","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    LIST,","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    MARK,","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    UNMARK","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    private DateTimeFormatter targetFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by.format(targetFormatter) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        return super.getStatus();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":26}},{"path":"src/main/java/DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class DeleteTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public DeleteTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        int taskNum \u003d Integer.parseInt(fullCommand.split(\" \", 0)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        taskList.DeleteTask(taskNum);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        return this.exit;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    private DateTimeFormatter targetFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from.format(targetFormatter) + \" to: \" + this.to.format(targetFormatter) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":21}},{"path":"src/main/java/FileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class FileException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public FileException(String string) {","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class ListTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public ListTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        ui.printTasks(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":10}},{"path":"src/main/java/MarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class MarkTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public MarkTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        int taskNum \u003d Integer.parseInt(fullCommand.split(\" \", 0)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        taskList.changeTaskStatus(taskNum, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":12}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public static Command parseCommand(String fullCommand) throws AronaException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        String command \u003d fullCommand.split(\" \", 0)[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        switch(command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"                return new QuitApplication(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"            case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"                return new ListTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"                if (fullCommand.split(\" \", 0).length \u003d\u003d 1) throw new AronaException(\"Sensei! Please provide a task number!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"                return new MarkTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"                if (fullCommand.split(\" \", 0).length \u003d\u003d 1) throw new AronaException(\"Sensei! Please provide a task number!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"                return new UnmarkTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"                if (fullCommand.split(\" \", 0).length \u003d\u003d 1) throw new AronaException(\"Sensei! Please provide a task number!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"                return new DeleteTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"                return new AddTask(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    public static String taskToFileOutput(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"        String output \u003d task.userInputToString()","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[T]\", \"T\")","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[D]\", \"D\")","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[E]\", \"E\")","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[ ]\", \" \\\\| 0 \\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\[X]\", \" \\\\| 1 \\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\(by:\", \"\\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\)\", \"\")","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\(from:\", \"\\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"to:\", \"\\\\|\")","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"        return output;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"    public static String FileInputToTask(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"        String output \u003d input.replaceAll(\"\\\\| 0 \\\\|\", \"\")","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\| 1 \\\\|\", \"\")","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"\\\\|\", \"/\")","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"T\", \"todo\")","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"D\", \"deadline\")","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"E\", \"event\")","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                .replaceAll(\"  \", \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        return output;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"    public static boolean FileInputToTaskStatus(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        String taskStatus \u003d input.split(\"\\\\|\", 0)[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"        boolean isTaskDone \u003d taskStatus.trim().equals(\"1\") ? true : false;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"        return isTaskDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":64}},{"path":"src/main/java/QuitApplication.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class QuitApplication extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public QuitApplication(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        ui.quitApplication();","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":10}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cString\u003e text \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cBoolean\u003e status \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public TwoArrayList load() throws FileException {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"//                System.out.println(text.add(Parser.FileInputToTask(line)));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"//                System.out.println(status.add(Parser.FileInputToTaskStatus(line)));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"                text.add(Parser.FileInputToTask(line));","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"                status.add(Parser.FileInputToTaskStatus(line));","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"            reader.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"            return new TwoArrayList(text, status);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"            throw new FileException(\"Oops, Arona cannot find your task file!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"            throw new FileException(\"Sensei! There were some errors reading tasks from the file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws FileException {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"                // System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"                writer.write(Parser.taskToFileOutput(task));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"            writer.flush();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"            writer.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        } catch (IOException e ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"            throw new FileException(\"Sensei! There were some errors reading tasks from the file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":50}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        return description;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        return isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    public void setStatusIcon(boolean status) {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":34}},{"path":"src/main/java/TaskEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public enum TaskEnum {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    TODO,","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    EVENT","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public TaskException(String string) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(string);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Rikko1204":5}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    public TaskList(TwoArrayList tasksToAdd, Ui ui) throws TaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"        for (int i \u003d 0; i \u003c tasksToAdd.getList1().size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"            addTask(tasksToAdd.getList1().get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"            changeTaskStatus(i + 1, tasksToAdd.getList2().get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"    public void addTask(String input) throws TaskException {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"        String type \u003d splitInput[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"        if (splitInput.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"Sensei! Please enter some tasks!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        } else if (!containsEnumValue(TaskEnum.class, type)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"Sensei, Arona does not know what that means!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"        } else if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            throw new TaskException(\"Sensei! Please provide some task description!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"        String[] info \u003d splitInput[1].split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"        String description \u003d info[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        switch(type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"                tasks.add(new Todo(description));","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"                if (info.length \u003c 2) throw new TaskException(\"Sensei! Please provide a deadline!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"                String by \u003d info[1].replaceAll(\"by\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"                    LocalDate date \u003d Parser.parseDate(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"                    tasks.add(new Deadline(description, date));","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"                    throw new TaskException(\"Sensei! Arona does not recognise this date format!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"            case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"                if (info.length \u003c 3) throw new TaskException(\"Sensei! Please provide an event begin and deadline.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"                String from \u003d info[1].replaceAll(\"from\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"                by \u003d info[2].replaceAll(\"to\", \"\").trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"                    LocalDate dateFrom \u003d Parser.parseDate(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"                    LocalDate dateBy \u003d Parser.parseDate(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"                    tasks.add(new Event(description, dateFrom, dateBy));","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Rikko1204"},"content":"                    throw new TaskException(\"Sensei! Arona does not recognise this date format!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Rikko1204"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Rikko1204"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Rikko1204"},"content":"        ui.taskAdded(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"Rikko1204"},"content":"    public void DeleteTask(int taskNum) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"Rikko1204"},"content":"        if (taskNum \u003e tasks.size()) throw new IndexOutOfBoundsException(\"Sensei, the task doesn\u0027t exist!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"Rikko1204"},"content":"        int index \u003d taskNum - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"Rikko1204"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"Rikko1204"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"Rikko1204"},"content":"        ui.taskDeleted(task, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"Rikko1204"},"content":"    public void changeTaskStatus(int taskNum, boolean status) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"Rikko1204"},"content":"        if (taskNum \u003e tasks.size()) throw new IndexOutOfBoundsException(\"Sensei! The task doesn\u0027t exist!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"Rikko1204"},"content":"        int index \u003d taskNum - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"Rikko1204"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"Rikko1204"},"content":"        if (task.getStatus() \u003d\u003d status) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"Rikko1204"},"content":"            ui.alreadyMarked(status);","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"Rikko1204"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"Rikko1204"},"content":"        task.setStatusIcon(status);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"Rikko1204"},"content":"        if (status) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"Rikko1204"},"content":"            ui.markTask();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Rikko1204"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"Rikko1204"},"content":"            ui.unmarkTask();","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Rikko1204"},"content":"    private static \u003cE extends Enum\u003cE\u003e\u003e boolean containsEnumValue(Class\u003cE\u003e enumClass, String value) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"Rikko1204"},"content":"        for (Enum\u003cE\u003e enumConstant : enumClass.getEnumConstants()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"Rikko1204"},"content":"            if (enumConstant.name().equalsIgnoreCase(value)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Rikko1204"},"content":"                return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"Rikko1204"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"Rikko1204"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":112}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public String userInputToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Rikko1204":15}},{"path":"src/main/java/TwoArrayList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"public class TwoArrayList {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cString\u003e list1;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    private ArrayList\u003cBoolean\u003e list2;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public TwoArrayList(ArrayList\u003cString\u003e list1, ArrayList\u003cBoolean\u003e list2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        this.list1 \u003d list1;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        this.list2 \u003d list2;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"    public ArrayList\u003cString\u003e getList1() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"        return list1;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"    public ArrayList\u003cBoolean\u003e getList2() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"        return list2;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    private String logo \u003d        \"    _____ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"            /* */                \"   /  _  \\\\_______   ____   _____ _____ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"            /*   */              \"  /  /_\\\\  \\\\_  __  \\\\/  _ \\\\ /     \\\\___  \\\\ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"            /*   */              \" /    |    \\\\  | \\\\_ ( \u003c_\u003e )   |   \\\\/ __ \\\\_ \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"            /* */                \" \\\\____|__  /__|    \\\\____/|___|_  (____  / \\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"            /* */                \"         \\\\/                    \\\\/     \\\\/ \";","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    private String greetings \u003d \"こんにちは先生、私はアロナです. \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"            + \"どういうご用件ですか?　\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"            + \"ここで先生のスケジュールが決まります.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"    private String goodbye \u003d \"Goodbye sensei! Hope to see you soon!\";","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"    public void greetings() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"開始中... \\n\" + logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(greetings);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Rikko1204"},"content":"    public void quitApplication() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(goodbye);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Rikko1204"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Rikko1204"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Rikko1204"},"content":"        String fullCommand \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Rikko1204"},"content":"        return fullCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Rikko1204"},"content":"    public void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Sensei! Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Rikko1204"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Rikko1204"},"content":"            if (tasks.get(i) \u003d\u003d null) break;","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Rikko1204"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Rikko1204"},"content":"            System.out.println(i + 1 + \".\" + task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Rikko1204"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Rikko1204"},"content":"    public void taskAdded(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Arona has added this task to sensei\u0027s task list!: \");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Arona has counted \" + tasks.size() + \" tasks in the list!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Rikko1204"},"content":"    public void taskDeleted(Task task, int size) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Arona has removed this task!: \");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Arona has counted \" + size + \" tasks in the list!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Rikko1204"},"content":"    public void alreadyMarked(boolean status) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Sensei, the task has already been marked as \" + (status ? \"done!\" : \"not done!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Rikko1204"},"content":"    public void markTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"Congratulation, sensei! Arona has marked the task as done!:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Rikko1204"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Rikko1204"},"content":"        System.out.println(\"I understand, sensei! Arona has marked the task as not done!:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Rikko1204"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"Rikko1204"},"content":"    public String showLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"Rikko1204"},"content":"        return \"---------------------------------\";","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"Rikko1204":66}},{"path":"src/main/java/UnmarkTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"public class UnmarkTask extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"    public UnmarkTask(String fullCommand) {","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Rikko1204"},"content":"        super(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Rikko1204"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Rikko1204"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Rikko1204"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws FileException {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Rikko1204"},"content":"        int taskNum \u003d Integer.parseInt(fullCommand.split(\" \", 0)[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"        taskList.changeTaskStatus(taskNum, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Rikko1204":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rikko1204"},"content":"todo food","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Rikko1204"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Rikko1204":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Rikko1204"},"content":"@REM REM compile the code into the bin folder","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Rikko1204"},"content":"@REM javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Rikko1204"},"content":"@REM IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Rikko1204"},"content":"@REM     echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Rikko1204"},"content":"@REM     exit /b 1","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Rikko1204"},"content":"@REM )","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Rikko1204"},"content":"@REM REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Rikko1204"},"content":"java -classpath \"..\\out\\production\\Personal Project\" Arona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Rikko1204":8,"-":13}}]
