[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"# Bobby","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"Too much on your mind and want a useful chatbot to help you keep track of your tasks, deadlines and events?","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"Fret not, Bobby is here! ","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"Bobby helps to keep track of the things you need to do so that you can free your mind for other things.","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"## Installing Bobby","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"1. Download Bobby.jar [here](https://github.com/yapxuanxuan/ip/releases/tag/A-Jar)","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"1. Open the project by double-clicking on the file.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"1. Start typing your commands! For example:","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"   1. list (lists out all the tasks in your task list)","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"   2. todo [task description] (adds the todo task to your task list) \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"         todo buy 5 apples","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"   3. deadline [description] /by [date and time in the format DD-MM-YY HHmm] (adds the deadline task to your list) \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"         deadline cs2109s ps4 /by 24-02-2024 2359","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"   4. event [description] /from [start timing] /to [end timing] (adds the event task to your list) \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"         event career fest /from tuesday /to thursday ","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"   5. mark [task number] (marks the specified task in your list as done) \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"         mark 2","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"   6. unmark [task number] (unmarks the specified task in your list as done) \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"         unmark 2","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"   7. find [keyword] (finds the tasks in your list that match the keyword stated) \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"         find apples","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"   8. update [task number] /[attribute] [new information] \u003cbr\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"         update 1 /desc buy 3 apples","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"yapxuanxuan":23,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    mainClass.set(\"seedu.bobby.Launcher\")","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"    archiveBaseName \u003d \"bobby\"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yapxuanxuan":16,"-":40}},{"path":"data/Bobby.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":" E | 0 | project meeting | Mon 2pm | 4pm","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":" D | 1 | cs2109s ps3 | 21 Feb 2024 2359","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":" T | 0 | eat strawberry shortcake","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":" D | 0 | cs2109s ps4 | 24 Feb 2024 2359","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"yapxuanxuan":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"# Bobby User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"![Screenshot of Bobby Program](https://github.com/yapxuanxuan/ip/blob/master/docs/Ui.png?raw\u003dtrue) \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"Bobby is a chat bot that helps to **keep track of your tasks, deadlines and events via a Command Line Interface** (CLI)","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"while still having the benefits of a Graphical User Interface (GUI). Bobby helps you to remember your tasks so you can ","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"keep your mind free for other things!","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"## Adding a todo task: todo","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"Adds a todo task to your task list. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"- `todo buy 5 apples`","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"- `todo finish up presentation preparation`","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"## Listing all tasks: list","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"Lists out all the tasks in your task list, retrieving the information stored in your hard disk. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"Format: `list`","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"## Adding a deadline task: deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"Adds the deadline task to your task list. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"Note that the deadline date needs to be in dd-mm-YY format and the time needs to be in HHmm format. (24h clock) \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE_DATE DEADLINE_TIME`","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"- `deadline cs2109s ps4 /by 24-02-2024 2359`","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"- `deadline cs2106 lab2 /by 10-03-2024 2359`","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"## Adding an event task: event","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"Adds the event task to your task list. ","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"Format: `event EVENT_DESCRIPTION /from START_TIMING /to END_TIMING`","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"- `event career fest /from tuesday /to thursday`","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"- `event artbox /from 26 Jan /to 28 Jan`","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"## Marking a task as done: mark","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"Marks the specified task as done, as indicated by a \u0027X\u0027. Information is updated in the hard disk. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"Task number is the number of the task in your list. Enter list command to check the number.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"Format: `mark TASK_NUMBER`","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"- `mark 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"## Unmarking a task: unmark","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"Marks the specified task as undone. Information is updated in the hard disk. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"Task number is the number of the task in your list. Enter list command to check the number.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"Format: `unmark TASK_NUMBER`","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"- `unmark 2`","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"## Deleting a task: delete","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"Deletes the specified task from your task list. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"Task number is the number of the task in your list. Enter list command to check the number.","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"- `delete 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"## Finding tasks by keywords: find","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"Finds the matching tasks in your task list where the task description matches the keyword that you inputted.","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"Examples: ","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"- `find cs2109s`","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"- `find buy`","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"## Updating task information: update","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"Updates the task information based on the specified task number, task attribute and updated information. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"**Note that updated deadline information needs to be in the same format as when you are creating a deadline task. \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"Updated deadline information needs to follow the format: dd-mm-YY HHmm (24h clock)* \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"The different types of tasks have different attributes, as follows:","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"- Todo task: desc (description)","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"- Deadline task: desc (description), deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"- Event task: desc (description), from (start timing), to (end timing)","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"Format: `update TASK_NUMBER /TASK_ATTRIBUTE UPDATED_INFO`","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"- `update 1 /desc buy 3 apples`","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"- `update 2 /deadline 24-02-2024 1700`","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"- `update 3 /from 23 Jan`","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"- `update 3 /to 30 Jan`","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"## Exiting the program: bye","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"Prints out a bye message and exits the program after 1 second.","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"Format: `bye` \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"# Command Summary","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"| Command keyword | Format, examples                                                                                                    |","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"|-----------------|---------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"| **todo**        | `todo TASK_DESCRIPTION` \u003cbr\u003e e.g `todo sleep`                                                                       |","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"| **deadline**    | `deadline TASK_DESCRIPTION /by DEADLINE_DATE DEADLINE_TIME` \u003cbr\u003e e.g `deadline cs2109s ps4 /by 24-02-2024 2359`     |","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"| **event**       | `event EVENT_DESCRIPTION /from START_TIMING /to END_TIMING` \u003cbr\u003e e.g `event career fest /from tuesday /to thursday` |","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"| **list**        | `list`                                                                                                              |","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"| **mark**        | `mark TASK_NUMBER` \u003cbr\u003e e.g `mark 2`                                                                                |","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"| **unmark**      | `unmark TASK_NUMBER` \u003cbr\u003e e.g `unmark 2`                                                                            |","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"| **delete**      | `delete TASK_NUMBER` \u003cbr\u003e e.g `delete 2`                                                                            |","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"| **find**        | `find KEYWORD` \u003cbr\u003e e.g `find cs2109s`                                                                              |","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"| **update**      | `update TASK_NUMBER /TASK_ATTRIBUTE UPDATED_INFO` \u003cbr\u003e e.g `update 1 /desc buy 3 apples`                            |","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"| **bye**         | `bye`                                                                                                               |","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"yapxuanxuan":98,"-":14}},{"path":"src/main/java/seedu/bobby/Bobby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Timer;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.TimerTask;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e Bobby \u003c/h1\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":" * Bobby program is a chat bot that maintains your todo list of todo tasks, events and deadlines.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":" * Simply type \"todo //name of your task\" and Bobby, your friendly assistant will add it to","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":" * your task list and it will be stored in the data on your hard disk as well!","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":" * Type \"list\" to view all the tasks in your task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"public class Bobby {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    private static Storage store;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    private UI ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    public Bobby(String filePath) {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        //@@author bachletuankhai-reused","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        //Reused this code snippet that bachletuankhai shared on the github forum","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        //from https://github.com/nus-cs2103-AY2324S2/forum/issues/134 with minor modifications","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        store \u003d new Storage(filePath, taskList);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            store.loadFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns String of Bobby\u0027s response to commands, to be printed out in GUI.","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param input","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return String of response to various commands","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                return taskList.mark(Parser.parseNum(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                return taskList.unmark(Parser.parseNum(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"delete\")){","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                return taskList.delete(Parser.parseNum(input));","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                return taskList.addItem(new Task(Parser.parseTodo(input)), true);","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                String task \u003d Parser.parseDeadlineTask(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                LocalDateTime deadline \u003d Parser.parseDeadlineCommand(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                return taskList.addItem(new Deadline(task, deadline), true);","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                String[] parts \u003d Parser.parseEvent(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                return taskList.addItem(new Event(parts[0], parts[1], parts[2]), true);","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                return taskList.printList();","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                return Storage.findFromFile(Parser.parseFind(input));","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            } else if (input.startsWith(\"update\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                int taskNum \u003d Parser.parseNum(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                String[] parts \u003d Parser.parseUpdate(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                return taskList.update(taskNum, parts[0], parts[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            } else if (input.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                scheduleShutdown();","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                return UI.bye();","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                throw new BobbyException();","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (BobbyException | IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Schedules a 1 second timer. Starts the timer when user enters a \"bye\" command","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * and exits the program when the timer runs out. This 1 second timer is to ensure that the","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * user can see the bye message by Bobby before it shuts down.","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void scheduleShutdown() {","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            public void run() {","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }, 1000);","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yapxuanxuan":33,"-":80}},{"path":"src/main/java/seedu/bobby/BobbyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e DukeException \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":" * This DukeException class is a subclass of Exception and creates exceptions that","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":" * are tailored to the design of the chat bot user interface, adding lines to the error message","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":" * accordingly.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"public class BobbyException extends Exception{","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"    public BobbyException() {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"        super(\"Oops! I\u0027m afraid I don\u0027t understand what that means.\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"                + \"Try adding a todo task like this: todo buy strawberry shortcake\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    public BobbyException(String error) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        super(error);","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"yapxuanxuan":23}},{"path":"src/main/java/seedu/bobby/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"    private Circle circle \u003d new Circle();","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        double radius \u003d displayPicture.getBoundsInParent().getWidth() / 2.0;","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"        circle.setRadius(36.0);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"        // Set the position of the circle relative to the displayPicture","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        circle.setLayoutX(displayPicture.getLayoutX() + radius);","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"        circle.setLayoutY(displayPicture.getLayoutY() + radius);","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LAVENDERBLUSH, null, null)));","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"    public static DialogBox getBobbyDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"        db.flip();","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LAVENDER ,null, null)));","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"        return db;","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"yapxuanxuan":78}},{"path":"src/main/java/seedu/bobby/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"yapxuanxuan":10}},{"path":"src/main/java/seedu/bobby/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * A GUI for Bobby using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    private Bobby bobby \u003d new Bobby(\"./data/Bobby.txt\");","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"            stage.setTitle(\"Bobby\");","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBobby(bobby);","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"            stage.show();","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"yapxuanxuan":33}},{"path":"src/main/java/seedu/bobby/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    private Bobby bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    private Image bobbyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bobby.png\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"                DialogBox.getBobbyDialog(UI.intro(), bobbyImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    public void setBobby(Bobby d) {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"        bobby \u003d d;","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bobby\u0027s reply and then appends them to","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        String response \u003d bobby.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"                DialogBox.getBobbyDialog(response, bobbyImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"yapxuanxuan":56}},{"path":"src/main/java/seedu/bobby/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e Parser \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * This Parser class parses the user inputs of the Bobby program and returns","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * the required information. The outputs are then passed as arguments to the other functions","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" * from the other classes that produce the functionality of the program,","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * like marking the correct task number in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns an integer of the task to be deleted, marked or unmarked. It is used as an","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"     * argument for the TaskList class.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input the user input from system (command)","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"     * @return Integer parsed from the user input","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    public static int parseNum(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"        if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops! Please state the task number.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"            return Integer.parseInt(items[1].trim());","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the description of the todo task that can then be used","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"     * to initialise a Todo task and add it to the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input the user input from system (command)","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String parsed from the user input","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    public static String parseTodo(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"            UI.emptyDesc(\"todo\");","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        return items[1].trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the task description, which is then used","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"     * to initialise a Deadlines task and add it to the TaskList","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input the user input from system (command)","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String parsed from the user input, extracting only the description.","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"    public static String parseDeadlineTask(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"        String task \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"        if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"            UI.emptyDesc(\"deadline\");","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"        String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        task \u003d parts[0].replaceFirst(\"deadline \", \"\").trim();","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        return task;","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns LocalDateTime to be used as argument for creating Deadline object.","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"     * Called when creating a deadline task.","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input the user input from system (command)","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String array which contains elements parsed from the user input, extracting","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"     * only the required information, the description and deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"    public static LocalDateTime parseDeadlineCommand(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"        if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"            UI.emptyDesc(\"deadline\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"            String[] parts \u003d input.split(\"/by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(parts[1], formatter);","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"            return deadline;","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, please state your deadline in the format: dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns LocalDateTime after parsing the input string. Called when updating deadline information.","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input user input from system","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"     * @return LocalDateTime parsed from String","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"    public static LocalDateTime parseDeadline(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(input.trim(), formatter);","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"            return deadline;","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, please state your deadline in the format: dd-MM-yyyy HHmm\");","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string array that contains the description of the event,","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"yapxuanxuan"},"content":"     * start and end timing. Used to initialise a Events Task and add it to the TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input the user input from system (command)","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String array which contains elements parsed from user input. First element is the description of the event,","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"yapxuanxuan"},"content":"     * second element is the start timing and third element is the end timing of the event.","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-22"},{"lineNumber":124,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"yapxuanxuan"},"content":"    public static String[] parseEvent(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":126,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"yapxuanxuan"},"content":"            if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"yapxuanxuan"},"content":"                UI.emptyDesc(\"event\");","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"yapxuanxuan"},"content":"            String[] helper \u003d input.split(\"/from \");","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"yapxuanxuan"},"content":"            String[] parts \u003d new String[3];","lastModifiedDate":"2024-02-05"},{"lineNumber":134,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"yapxuanxuan"},"content":"            parts[0] \u003d helper[0].replaceFirst(\"event \", \"\"); //to store event description","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"yapxuanxuan"},"content":"            parts[1] \u003d helper[1].split(\"/to \")[0]; //to store event start timing","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"yapxuanxuan"},"content":"            parts[2] \u003d helper[1].split(\"/to \")[1]; //to store event end timing","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"yapxuanxuan"},"content":"            return parts;","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Please state the details like this: event event_name /from timing /to timing.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the description or keyword of the task to be found in task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input the user input from system (command)","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String parsed from the user input","lastModifiedDate":"2024-02-05"},{"lineNumber":150,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"yapxuanxuan"},"content":"    public static String parseFind(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"yapxuanxuan"},"content":"        if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, please state the description of the task you want to find.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"yapxuanxuan"},"content":"        return items[1];","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":162,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns an array of Strings where the first element is the task attribute and the","lastModifiedDate":"2024-02-23"},{"lineNumber":163,"author":{"gitId":"yapxuanxuan"},"content":"     * second element is the new information to be updated. These information are then","lastModifiedDate":"2024-02-23"},{"lineNumber":164,"author":{"gitId":"yapxuanxuan"},"content":"     * used to call TaskList\u0027s update method","lastModifiedDate":"2024-02-23"},{"lineNumber":165,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input user input from the system","lastModifiedDate":"2024-02-23"},{"lineNumber":166,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String array of information parsed from the user input","lastModifiedDate":"2024-02-23"},{"lineNumber":167,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":168,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":169,"author":{"gitId":"yapxuanxuan"},"content":"    public static String[] parseUpdate(String input) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"yapxuanxuan"},"content":"        assert !input.isEmpty() : \"unable to parse empty input\";","lastModifiedDate":"2024-02-17"},{"lineNumber":171,"author":{"gitId":"yapxuanxuan"},"content":"        String[] items \u003d input.split(\"/\", 2);","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"yapxuanxuan"},"content":"        if (items.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, please state the attribute you want to update \" +","lastModifiedDate":"2024-02-22"},{"lineNumber":174,"author":{"gitId":"yapxuanxuan"},"content":"                    \"and the information to update.\\n\" + \"Run your command like this:\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"yapxuanxuan"},"content":"                    \"update \u003ctaskNum\u003e /\u003cattribute\u003e \u003cnewInfo\u003e\");","lastModifiedDate":"2024-02-22"},{"lineNumber":176,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"yapxuanxuan"},"content":"        String[] parts \u003d items[1].split(\" \", 2);","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"yapxuanxuan"},"content":"        return parts;","lastModifiedDate":"2024-02-17"},{"lineNumber":179,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":180,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":181,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yapxuanxuan":181}},{"path":"src/main/java/seedu/bobby/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Event;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Deadline;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e Storage \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":" * This Storage class loads tasks from the data file on the hard disk on initialization","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":" * of the Bobby program. It also saves and stores the changes made to the tasks onto the same file in the hard disk","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":" * of the user, including the adding of new tasks, deleting and changing of markings.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"public class Storage {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    private static File f;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    private static String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    public Storage(String filePath, TaskList taskList) { //constructor","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"        Storage.taskList \u003d taskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"     * Scans the data from the file the holds the information of the existing tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"     * and adds it to the TaskList object.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws FileNotFoundException if the file does not exist in the file path.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"    public void loadFile() throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"        ArrayList\u003cTask\u003e tasksToLoad  \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        while(scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"            String task \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"            String[] taskDetails \u003d task.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"            Task newTask;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"            if (taskDetails.length \u003d\u003d 3) { //means that it is a todo task","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"                newTask \u003d new Task(taskDetails[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"            } else if (taskDetails.length \u003d\u003d 4) { //means that it is deadline","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"                LocalDateTime deadline \u003d LocalDateTime.parse(taskDetails[3], formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"                newTask \u003d new Deadline(taskDetails[2], deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"                newTask \u003d new Event(taskDetails[2], taskDetails[3], taskDetails[4]);","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"            if (taskDetails[1].equals(\"1\")) { //if task/event/deadline is marked","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"                newTask.markDone(false);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"            tasksToLoad.add(newTask);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"        tasksToLoad.forEach(x -\u003e Storage.taskList.addItem(x, false));","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"     * Writes the inputted string to the file on the hard disk.","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"     * @param textToAdd the information to be written to the file","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws IOException if an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"    public static void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"     * Deletes the line of information in the file that stores the details of the task at the index num","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"     * by rewriting a copy of the entire file to the same filepath and not writing the line that is to be deleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the line of information in the file that is to be deleted,","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"     *            corresponds with the index of the task in the task list to be deleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws IOException if an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"    public static void deleteFromFile(int num) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"        String newData \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"            String temp \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"            if (count !\u003d num) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"                newData +\u003d temp + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"            count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"        fw.write(newData);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"     * Updates the information stored in the file by rewriting a copy of the entire file to the","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"     * same file path and writing the new line of information where the information has changed.","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the line of information in the file that is to be updated, corresponds with","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"     *            the index of the task in the task list whose information is to be updated.","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"     * @param textToReplace the new text to replace the old line of code, which contains","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"     *                      the newly updated information. Taken from the Task objects toStore() function.","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws IOException if an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"    public static void updateFile(int num, String textToReplace) throws IOException {","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"        String newData \u003d \"\";","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"            String temp \u003d s.nextLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"            if (count !\u003d num) {","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"yapxuanxuan"},"content":"                newData +\u003d temp + \"\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"            } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"                newData +\u003d textToReplace;","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"yapxuanxuan"},"content":"            count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"yapxuanxuan"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"yapxuanxuan"},"content":"        fw.write(newData);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"yapxuanxuan"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns string response of the matching tasks in the task list that match the keyword","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"yapxuanxuan"},"content":"     * by looping through the stored data and checking for the keyword","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"yapxuanxuan"},"content":"     * @param input user input of the keyword to find matching tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the list of matching tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"yapxuanxuan"},"content":"    public static String findFromFile(String input) throws FileNotFoundException, BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"yapxuanxuan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"yapxuanxuan"},"content":"        String lowercaseInput \u003d input.toLowerCase();","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"yapxuanxuan"},"content":"        int ptr \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"yapxuanxuan"},"content":"        int count \u003d 0; //to keep track of the number of matching task to list out respectively","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"yapxuanxuan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"yapxuanxuan"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"yapxuanxuan"},"content":"            if (s.nextLine().toLowerCase().contains(lowercaseInput)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"yapxuanxuan"},"content":"                count++;","lastModifiedDate":"2024-02-05"},{"lineNumber":146,"author":{"gitId":"yapxuanxuan"},"content":"                if (count \u003d\u003d 1) {","lastModifiedDate":"2024-02-05"},{"lineNumber":147,"author":{"gitId":"yapxuanxuan"},"content":"                    result +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"yapxuanxuan"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"yapxuanxuan"},"content":"                result +\u003d taskList.getTask(ptr - 1).printMatchDesc(count);","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"yapxuanxuan"},"content":"            ptr++;","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":153,"author":{"gitId":"yapxuanxuan"},"content":"        //if no matching tasks found","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"yapxuanxuan"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"There was no matching tasks found in your list. Perhaps a typo?\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"yapxuanxuan"},"content":"            return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":160,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"yapxuanxuan"},"content":"     * Writes the information of the newly added task to the file","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"yapxuanxuan"},"content":"     * @param task the Task object whose information is to be stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":165,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"yapxuanxuan"},"content":"    public static void add(Task task) throws BobbyException { //to append items to taskList","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"yapxuanxuan"},"content":"            writeToFile(task.toStore());","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops something went wrong.\\n\" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"yapxuanxuan"},"content":"     * Deletes the information of the task to be deleted from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the index of the task to be deleted, which corresponds with the","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"yapxuanxuan"},"content":"     *            index of the line that contains the information to be deleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"yapxuanxuan"},"content":"    public static void delete(int num) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"yapxuanxuan"},"content":"            deleteFromFile(num);","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops something went wrong.\\n\" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":185,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yapxuanxuan":187}},{"path":"src/main/java/seedu/bobby/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.task.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e TaskList \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * This TaskList class is used to store all the Task class objects in an arraylist.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * When Storage class loads the existing tasks from the file, the tasks are created and added to","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" * TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    public TaskList() { //constructor","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"     * Adds the Task object to the arraylist and calls the function in Storage to store","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"     * the information of the newly added task in the file. Prints out the details of the","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"     * newly added task to be displayed to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"     * @param task Task object to be added to the arraylist.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"     * @param isNew boolean that indicates whether the task is an existing one loaded from","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"     *              the file or a newly added one.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    public String addItem(Task task, boolean isNew) { //to append items to tasks","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"        if (isNew) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"            String result \u003d \"Got it! I\u0027ve added this task:\\n\" + task.printFullDesc();","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"            result +\u003d String.format(\"Now you have %d %s in your task list.\\n\", tasks.size(),","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"                        (tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"            try {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"                Storage.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"                return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"            } catch (BobbyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"            return \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"     * Removes the Task object at the index of num from the arraylist and also calls the function in","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"     * Storage to delete the information of the task stored in the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num index of task to be deleted from the task list","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"    public String delete(int num) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 0 : \"task number should be a valid array index (\u003e\u003d0)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"        if (num - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, there isn\u0027t that task number in your list. Run list to check again.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        Task taskToDelete \u003d tasks.get(num - 1);","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        String result \u003d \"Got it. I\u0027ve removed this task:\\n\" + taskToDelete.printFullDesc();","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"        tasks.remove(num - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"        result +\u003d String.format(\"Now you have %d %s in the task list.\\n\", tasks.size(),","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"                    (tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"        Storage.delete(num - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"        return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"     * Updates the task indicated by the task number and modifies the attribute to the","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"     * updated information.","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the task number","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"     * @param attribute the task attribute to be updated","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"     * @param toUpdate the new information to update the specified task attribute","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the updated task description","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    public String update(int num, String attribute, String toUpdate) throws BobbyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 0 : \"task number should be a valid array index (\u003e\u003d0)\";","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"        if (num - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, there isn\u0027t that task number in your list. Run list to check again.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"        Task taskToUpdate \u003d tasks.get(num - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        taskToUpdate.update(attribute, toUpdate);","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"        String result \u003d \"Got it. I\u0027ve updated the task to this:\\n\" + taskToUpdate.printFullDesc();","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"        Storage.updateFile(num - 1, taskToUpdate.toStore());","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        return result;","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"     * Calls the mark function of the Task object and also calls the function in","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"     * Storage to update the information stored in the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num index of task to be marked done.","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"    public String mark(int num) throws BobbyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 0 : \"task number should be a valid array index (\u003e\u003d0)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"        if (num - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, there isn\u0027t that task number in your list. Run list to check again.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"        Task toMark \u003d tasks.get(num - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"        String result \u003d toMark.markDone(true);","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"        String toReplace \u003d toMark.toStore();","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"        Storage.updateFile(num - 1, toReplace);","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"        return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"     * Calls the unmark function of the Task object and also calls the function in","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"     * Storage to update the information stored in the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num index of task to be marked undone.","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"    public String unmark(int num) throws BobbyException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 0 : \"task number should be a valid array index (\u003e\u003d0)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"        if (num - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops, there isn\u0027t that task number in your list. Run list to check again.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"        Task toUnmark \u003d tasks.get(num - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"yapxuanxuan"},"content":"        String result \u003d toUnmark.unmark();","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"yapxuanxuan"},"content":"        String toReplace \u003d toUnmark.toStore();","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"yapxuanxuan"},"content":"        Storage.updateFile(num - 1, toReplace);","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"yapxuanxuan"},"content":"        return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns the Task object at the index position of the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"yapxuanxuan"},"content":"     * @param index the index of the task in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"yapxuanxuan"},"content":"     * @return Task object that is in the position of the index in the arraylist.","lastModifiedDate":"2024-02-05"},{"lineNumber":132,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":133,"author":{"gitId":"yapxuanxuan"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"yapxuanxuan"},"content":"        assert index \u003e\u003d 0 : \"task number should be a valid array index (\u003e\u003d0)\";","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"yapxuanxuan"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"yapxuanxuan"},"content":"     * Prints information of all the lists in the task list by calling their individual functions","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"yapxuanxuan"},"content":"     * from the Task class or its subclasses Deadlines and Events to print individual task descriptions.","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"yapxuanxuan"},"content":"     * Prints out that there is 0 tasks in the task list if the arraylist of tasks is empty.","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"yapxuanxuan"},"content":"    public String printList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"yapxuanxuan"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-05"},{"lineNumber":145,"author":{"gitId":"yapxuanxuan"},"content":"            return \"Currently you have 0 tasks in your task list!\\n\";","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"yapxuanxuan"},"content":"            String result \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"yapxuanxuan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"yapxuanxuan"},"content":"                result +\u003d tasks.get(i).printTaskDesc(i + 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"yapxuanxuan"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"yapxuanxuan"},"content":"            return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yapxuanxuan":154}},{"path":"src/main/java/seedu/bobby/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e UI \u003c/h1\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":" * This UI class deals with interaction with the user, like the introduction of the program","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":" * and the statements printed when the user ends the program.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"public class UI {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the introduction to Bobby to be printed out in GUI","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of introduction of Bobby","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    public static String intro() {","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"        return \"Hello, I\u0027m Bobby!\\n\" + \"What can I do for you today? :)\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"     * Throws a BobbyException when the user input did not state the description of the","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"     * todo task, deadline or event command that is tailored to the different cases.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"     * @param tasktype Type of task command that the user tried to call","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException which is printed out to the user","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    public static void emptyDesc(String tasktype) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        if (tasktype.equals(\"todo\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops! Please state the description of your todo task.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"        } else if (tasktype.equals(\"deadline\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops! Please state the description of your task and the deadline.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        } else if (tasktype.equals(\"event\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops! Please state the description of your event \" +","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"                    \"and provide the start and end timing.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"     * Prints out a bye message when the user ends the program by running the command bye","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"    public static String bye() {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        return \"Bye! Have a great day ahead :\u003e\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"yapxuanxuan":46}},{"path":"src/main/java/seedu/bobby/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.BobbyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.Parser;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e Deadline \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" * This Deadline class is a subclass of the Task class, holding all the attributes and methods","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * of its parent class. This program also has methods that overrides the methods from its parent class Task,","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" * to handle the cases differently when the task is a deadline and more specific than a normal todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":" * Deadline class objects have an attribute LocalDateTime deadline. This class handles all the functionalities","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":" * of a Deadline object, such as the printing of the task description and the function that returns the data to be stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    public Deadline(String task, LocalDateTime deadline) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"        super(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    public String getTag() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"        return \"D\";","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"     * Updates the task attribute of the Deadline object specified to the new information","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"     * @param attribute String of the task attribute to be updated, possible attributes for deadline task","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"     *                  are description and deadline.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"     * @param toUpdate String of the new information to be updated","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"    public void update(String attribute, String toUpdate) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"        if (attribute.equalsIgnoreCase(\"desc\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"            description \u003d toUpdate.trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"        } else if (attribute.equalsIgnoreCase(\"by\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"            deadline \u003d Parser.parseDeadline(toUpdate.trim());","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops. The task you want to update does not have a \" + attribute + \" attribute.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string that contains information of the Deadline task to be stored in the hard disk.","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"     * Used as an argument in Storage class to be written into the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String that represents information of the Deadline object.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"        return \" D | \" + (isDone ? \"1\" : \"0\") +  \" | \"  + description + \" | \" + parseDateTime() + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string that contains the deadline in a different format to be stored and shown","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"     * to the user when they display the tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String parsed from the deadline attribute of this Deadline object, representing","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"     * the date and time in a different format.","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"    private String parseDateTime() {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        return deadline.format(outputFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a String of the full task description. Called in TaskList\u0027s printList method,","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"     * called for each task in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the number of the task in the task list","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the task description of the Deadline object.","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"    public String printTaskDesc(int num){","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 1 : \"task number should be more than or equals to 1\";","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"            return String.format(\"Okies~ Here are the tasks in your list:\\n %d.[%s][%s] %s (by: %s)\\n\",","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"                    num, getTag(), getStatusIcon(), getDescription(), parseDateTime());","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"            return String.format(\" %d.[%s][%s] %s (by: %s)\\n\",","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"                    num, getTag(), getStatusIcon(), getDescription(), parseDateTime());","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a String of the description with the number of the matching task.","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"     * Called by the Storage findFromFile method.","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num number of the task in the matching task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"     * @return a String of the matching task description with the specified task number","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"    public String printMatchDesc(int num) {","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 1 : \"task number should be more than or equals to 1\";","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(\" %d.[%s][%s] %s (by: %s)\\n\",","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"                num, getTag(), getStatusIcon(), getDescription(), parseDateTime());","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the full description of task without any specified task number.","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"     * Called when updating, adding or deleting tasks to show the user the details of the task that","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"     * has been added, updated or deleted.","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the full description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"    public String printFullDesc() {","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(\" [%s][%s] %s (by: %s)\\n\",","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"                getTag(), getStatusIcon(), getDescription(), parseDateTime());","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yapxuanxuan":115}},{"path":"src/main/java/seedu/bobby/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.BobbyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e Event \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":" * This Event class is a subclass of the Task class, holding all the attributes and methods","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" * of its parent class. This program also has methods that overrides the methods from its parent class Task,","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * to handle the cases differently when the task is an event and more specific than a normal todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * Event class objects have an attribute from and to which represents the start and end timing of the","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" * event respectively. This class handles all the functionalities of an Event object, such as the","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * printing of the task description and the function that returns the data to be stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"    private String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    private String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"    public Event(String event, String from, String to) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"        super(event);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"        this.from \u003d from.trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"        this.to \u003d to.trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    public String getTag() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"        return \"E\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"     * Updates the task attribute of the event object specified to the new information","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"     * @param attribute String of the task attribute to be updated, possible attributes for event task","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"     *                  are description, from (start timing) and to (end timing).","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"     * @param toUpdate String of the new information to be updated","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    public void update(String attribute, String toUpdate) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"        if (attribute.equalsIgnoreCase(\"desc\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"            description \u003d toUpdate.trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"        } else if (attribute.equalsIgnoreCase(\"from\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"            from \u003d toUpdate.trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"        } else if (attribute.equalsIgnoreCase(\"to\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"            to \u003d toUpdate.trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops. The task you want to update does not have a \" + attribute + \" attribute.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string that contains information of the event task to be stored in the hard disk.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"     * Used as an argument in Storage class to be written into the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String that represents information of the Deadlines object.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"        return \" E | \" + (isDone ? \"1\" : \"0\") +  \" | \"  + description + \" | \" + from","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"                    + \" | \" + to + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a String of the full task description. Called in TaskList\u0027s printList method,","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"     * called for each task in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the number of the task in the task list","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the task description of the Deadline object.","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"    public String printTaskDesc(int num){","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 1 : \"task number should be more than or equals to 1\";","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"            return String.format(\"Okies~ Here are the tasks in your list:\\n %d.[%s][%s] %s (from: %s to: %s)\\n\",","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"                    num, getTag(), getStatusIcon(), getDescription(), from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"            return String.format(\" %d.[%s][%s] %s (from: %s to: %s)\\n\",","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"                    num, getTag(), getStatusIcon(), getDescription(), from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a String of the description with the number of the matching task.","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"     * Called by the Storage findFromFile method.","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num number of the task in the matching task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"     * @return a String of the matching task description with the specified task number","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"    public String printMatchDesc(int num) {","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 1 : \"task number should be more than or equals to 1\";","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(\" %d.[%s][%s] %s (from: %s to: %s)\\n\",","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"                num, getTag(), getStatusIcon(), getDescription(), from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the full description of task without any specified task number.","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"     * Called when updating, adding or deleting tasks to show the user the details of the task that","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"     * has been added, updated or deleted.","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the full description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"    public String printFullDesc() {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(\" [%s][%s] %s (from: %s to: %s)\\n\",","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"                getTag(), getStatusIcon(), getDescription(), from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yapxuanxuan":105}},{"path":"src/main/java/seedu/bobby/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby.task;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import seedu.bobby.BobbyException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":" * \u003ch1\u003e Task \u003c/h1\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":" * This Task class is a superclass of the Deadlines and Events classes. This class represents the individual Task objects","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":" * and has attributes description and isDone which represents the description of the task","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":" * and whether the task is completed respectively. This class handles all the functionalities of a Task object,","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":" * such as the marking, unmarking of the task and printing the task description to be displayed to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":" * @author Yap Xuan Xuan","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":" * @version 0.1","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    protected String description;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"     * Marks the attribute isDone of the Task and returns the string of the task description","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"     * and the updated marking","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"     * @param isNew boolean to indicate whether it is a new task marked or it is loading the","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"     *              tasks from the data file","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the task description and the updated marking","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    public String markDone(boolean isNew) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"        if (isNew) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"            return printMarking(this, getTag());","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"        return \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"     * Unmarks the attribute isDone of the Task and returns the string of the task description","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"     * and the updated marking","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the task description and the updated marking","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    public String unmark() {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"        return printMarking(this, getTag());","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string that contains information of the task to be stored in the hard disk.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"     * Used as an argument in Storage class to be written into the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String that represents information of the Task object.","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        return \" \" + getTag() +  \" | \" + (isDone? \"1\" : \"0\")","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"                +  \" | \"  + description + \"\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"        return description;","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"    public String getTag() {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"        return \"T\";","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"     * Updates the task attribute of the task object specified to the new information","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"     * @param attribute String of the task attribute to be updated, todo task only has description attribute.","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"     * @param toUpdate String of the new information to be updated","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"     * @throws BobbyException","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"    public void update(String attribute, String toUpdate) throws BobbyException {","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"        if (attribute.equalsIgnoreCase(\"desc\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"            description \u003d toUpdate.trim();","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"            throw new BobbyException(\"Oops. The task you want to update does not have a \" + attribute + \" attribute.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a String of the full task description. Called in TaskList\u0027s printList method,","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"yapxuanxuan"},"content":"     * called for each task in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num the number of the task in the task list","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the task description of the Deadline object.","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"yapxuanxuan"},"content":"    public String printTaskDesc(int num){","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 1 : \"task number should be more than or equals to 1\";","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"yapxuanxuan"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"yapxuanxuan"},"content":"            return String.format(\"Okies~ Here are the tasks in your list:\\n %d.[%s][%s] %s\\n\",","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"yapxuanxuan"},"content":"                    num, getTag(), getStatusIcon(), getDescription());","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"yapxuanxuan"},"content":"            return String.format(\" %d.[%s][%s] %s\\n\", num, getTag(), getStatusIcon(), getDescription());","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a string of the full description of task without any specified task number.","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"yapxuanxuan"},"content":"     * Called when updating, adding or deleting tasks to show the user the details of the task that","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"yapxuanxuan"},"content":"     * has been added, updated or deleted.","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"yapxuanxuan"},"content":"     * @return String of the full description of the task","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"yapxuanxuan"},"content":"    public String printFullDesc() {","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(\" [%s][%s] %s\\n\", getTag(), getStatusIcon(), getDescription());","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"yapxuanxuan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"yapxuanxuan"},"content":"     * Returns a String of the description with the number of the matching task.","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"yapxuanxuan"},"content":"     * Called by the Storage findFromFile method.","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"yapxuanxuan"},"content":"     * @param num number of the task in the matching task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"yapxuanxuan"},"content":"     * @return a String of the matching task description with the specified task number","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"yapxuanxuan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"yapxuanxuan"},"content":"    public String printMatchDesc(int num) {","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"yapxuanxuan"},"content":"        assert num \u003e\u003d 1 : \"task number should be more than or equals to 1\";","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"yapxuanxuan"},"content":"        return String.format(\" %d.[%s][%s] %s\\n\", num, getTag(), getStatusIcon(), getDescription());","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"yapxuanxuan"},"content":"    public String printMarking(Task task, String tag) {","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"yapxuanxuan"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"yapxuanxuan"},"content":"            return \"Wow, well done! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"yapxuanxuan"},"content":"                    String.format(\" [%s][%s] %s\\n\", tag, task.getStatusIcon(), task.getDescription());","lastModifiedDate":"2024-02-13"},{"lineNumber":128,"author":{"gitId":"yapxuanxuan"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"yapxuanxuan"},"content":"            return \"Ok, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"yapxuanxuan"},"content":"                    String.format(\" [%s][%s] %s\\n\", tag, task.getStatusIcon(), task.getDescription());","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yapxuanxuan":133}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"89.0\" fitWidth\u003d\"89.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"yapxuanxuan":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"            fx:controller\u003d\"seedu.bobby.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"        \u003c!--        Solution below using AnchorPane.Anchor* is inspired by","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"        https://github.com/nus-cs2103-AY2324S2/forum/issues/337--\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"                AnchorPane.rightAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"                    vvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"                    AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.0\" fitToWidth\u003d\"true\" fitToHeight\u003d\"true\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" VBox.vgrow\u003d\"always\"/\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"yapxuanxuan":30}},{"path":"src/test/java/seedu/bobby/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"package seedu.bobby;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseNum_success() throws Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(2, Parser.parseNum(\"delete 2\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(5, Parser.parseNum(\"mark 5\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseNum_emptyDesc() {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(0, Parser.parseNum(\"mark\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"yapxuanxuan"},"content":"            fail();","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"Oops! Please state the task number.\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseTodo_success() throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(\"eat apples\", Parser.parseTodo(\"todo eat apples\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(\"complete 5 assignments\", Parser.parseTodo(\"todo complete 5 assignments\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseTodo_emptyDesc() {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"\", Parser.parseTodo(\"todo\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"yapxuanxuan"},"content":"            fail();","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"Oops! Please state the description of your todo task.\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseDeadlineTask_success() throws Exception{","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"yapxuanxuan"},"content":"        assertEquals(\"cs2109s ps2\", Parser.parseDeadlineTask(\"deadline cs2109s ps2 /by 10-02-2024 2359\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseDeadlineTask_emptyDesc() {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"deadline cs2109s ps2 /by 10-02-2024 2359\",","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"yapxuanxuan"},"content":"                    Parser.parseDeadlineTask(\"deadline\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"yapxuanxuan"},"content":"            fail();","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"Oops! Please state the description of your task and the deadline.\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseEvent_success() throws Exception{","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"yapxuanxuan"},"content":"        String[] expected \u003d new String[3];","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"yapxuanxuan"},"content":"        expected[0] \u003d \"project meeting \";","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"yapxuanxuan"},"content":"        expected[1] \u003d \"Mon 2pm \";","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"yapxuanxuan"},"content":"        expected[2] \u003d \"4pm\";","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"yapxuanxuan"},"content":"        assertArrayEquals(expected, Parser.parseEvent(\"event project meeting /from Mon 2pm /to 4pm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseEvent_emptyDesc() {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"yapxuanxuan"},"content":"            String[] expected \u003d new String[3];","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(expected, Parser.parseEvent(\"event\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"yapxuanxuan"},"content":"            fail();","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"Oops! Please state the description of your event and provide the start \" +","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"yapxuanxuan"},"content":"                    \"and end timing.\", e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"yapxuanxuan"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"yapxuanxuan"},"content":"    public void parseEvent_exceptionThrown() {","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"yapxuanxuan"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"yapxuanxuan"},"content":"            String[] expected \u003d new String[2];","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(expected, Parser.parseEvent(\"event career fest /from 2pm\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"yapxuanxuan"},"content":"            fail();","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"yapxuanxuan"},"content":"        } catch (BobbyException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"yapxuanxuan"},"content":"            assertEquals(\"Please state the details like this: event event_name /from timing /to timing.\",","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"yapxuanxuan"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"yapxuanxuan"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"yapxuanxuan"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"yapxuanxuan"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"yapxuanxuan"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"yapxuanxuan":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yapxuanxuan"},"content":"todo borrow books","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yapxuanxuan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yapxuanxuan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yapxuanxuan"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yapxuanxuan"},"content":"mark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yapxuanxuan"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yapxuanxuan"},"content":"unmark 2","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yapxuanxuan"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yapxuanxuan"},"content":"todo","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yapxuanxuan"},"content":"nonsense","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yapxuanxuan"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yapxuanxuan"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yapxuanxuan"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yapxuanxuan"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yapxuanxuan"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yapxuanxuan"},"content":"bye","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yapxuanxuan":16}}]
