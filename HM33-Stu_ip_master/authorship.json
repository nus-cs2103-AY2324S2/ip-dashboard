[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"D | 1 | return library items | Friday","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"T | 1 | say hello","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"E | 1 | team brainstorming session  | 01 May 2024 09:00 | 01 May 2024 15:00","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"T | 0 | purchase groceries","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"T | 0 | start reading novel","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"E | 0 | finish reading novel  | 01/01/2023 to | 01/02/2023 23:59","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"D | 0 | complete assignment | tomorrow","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"T | 0 | finish reading novel","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"E | 0 | complete reading assignment  | 01 January 2022 10:00 | 01 February 2023 17:00","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":10}},{"path":"data/duketest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"E | 0 | netflix marathon | 01 December 2022 00:00 | 15 December 2022 23:59","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"Success!","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"# Duke User Guide","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"// Product intro goes here","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"## Adding deadlines","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"// Give examples of usage","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"```","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"expected output","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"```","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"## Feature ABC","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"// Feature details","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"## Feature XYZ","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"// Feature details","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":17,"-":13}},{"path":"src/main/java/duke/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.util.*;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":" * Processes user input according to available bot commands.","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"public class CommandParser {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"    public CommandParser(Scanner scanner, TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"     * Processes a single command.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"     * @param command input command","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"     * @return boolean indicating whether to continue processing","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"    public boolean processCommand(String command) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"            String cmd \u003d command.split(\" \")[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"            String params \u003d command.substring(cmd.length()).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"            switch (cmd) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"                case \"bye\":","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"Au revoir! Till we meet again!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"                    return false;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"                case \"list\":","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"                    parseList();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"                case \"find\":","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"                    parseFind(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"                case \"mark\":","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"                    parseMark(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"                case \"unmark\":","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"                    parseUnmark(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"                case \"delete\":","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"                    parseDelete(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"                case \"todo\":","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"                    parseTodo(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"                case \"deadline\":","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"                    parseDeadline(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"                case \"event\":","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"                    parseEvent(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"                case \"undo\":","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"                    parseUndo();","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"                default:","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"                    throw new DukeBotException.UnknownCommandException();","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"        } catch (DukeBotException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(e);","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Oops! An error occurred\");","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"        return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"    private void parseList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Here are the tasks:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"        taskList.printTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"    private void parseUndo() {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"        taskList.undo();","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"    private void parseFind(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.FindParamsException();","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"        String keyword \u003d params.trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"        taskList.findTasks(keyword);","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"    private void parseMark(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.MarkParamsException();","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"        int num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"        taskList.markTask(num);","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"        Task task \u003d taskList.getTask(num);","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Another one in the bag! Well done!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"    private void parseUnmark(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.MarkParamsException();","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"        int num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"        taskList.unmarkTask(num);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"HM33-Stu"},"content":"        Task task \u003d taskList.getTask(num);","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Oh dear, better get on it!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"HM33-Stu"},"content":"    private void parseDelete(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"HM33-Stu"},"content":"        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.DeleteParamsException();","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"HM33-Stu"},"content":"        int num \u003d Integer.valueOf(params);","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"HM33-Stu"},"content":"        Task toDelete \u003d taskList.getTask(num);","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"HM33-Stu"},"content":"        taskList.deleteTask(num);","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Task DELETE DELETE DELETE\");","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(toDelete);","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"HM33-Stu"},"content":"    private void parseTodo(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"HM33-Stu"},"content":"        Todo newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"HM33-Stu"},"content":"        if (params.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.TodoDescriptionMissingException();","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d params;","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"HM33-Stu"},"content":"        newTask \u003d new Todo(desc);","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"HM33-Stu"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"HM33-Stu"},"content":"    private void parseDeadline(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"HM33-Stu"},"content":"        DeadlineTask newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"HM33-Stu"},"content":"        if (!params.contains(\"/by\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.DeadlineDetailsMissingException();","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d params.split(\"/by\")[0].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"HM33-Stu"},"content":"        String by \u003d params.split(\"/by\")[1].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"HM33-Stu"},"content":"        // Check if by is in valid date format","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"HM33-Stu"},"content":"        if (DateHandler.isValidInputDate(by)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"HM33-Stu"},"content":"            LocalDateTime dateObj \u003d DateHandler.inputStrToDateTime(by);","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"HM33-Stu"},"content":"            newTask \u003d new DeadlineTask(desc, dateObj); // Create date object","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"HM33-Stu"},"content":"            newTask \u003d new DeadlineTask(desc, by);","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"HM33-Stu"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"HM33-Stu"},"content":"    private void parseEvent(String params) throws DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"HM33-Stu"},"content":"        EventTask newTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"HM33-Stu"},"content":"        if (!params.contains(\"/from\") || !params.contains(\"/to\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.EventDetailsMissingException();","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d params.split(\"/from\")[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"HM33-Stu"},"content":"        String from \u003d params.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"HM33-Stu"},"content":"        String to \u003d params.split(\"/to\")[1].trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"HM33-Stu"},"content":"        if (DateHandler.isValidInputDate(from) \u0026\u0026 DateHandler.isValidInputDate(to)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"HM33-Stu"},"content":"            LocalDateTime dateObjFrom \u003d DateHandler.inputStrToDateTime(from);","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"HM33-Stu"},"content":"            LocalDateTime dateObjTo \u003d DateHandler.inputStrToDateTime(to);","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"HM33-Stu"},"content":"            newTask \u003d new EventTask(desc, dateObjFrom, dateObjTo); // Create date object","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"HM33-Stu"},"content":"            newTask \u003d new EventTask(desc, from, to);","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":178,"author":{"gitId":"HM33-Stu"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(newTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":185}},{"path":"src/main/java/duke/DatabaseHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.io.File;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":" * Handles reading, writing, and deleting lines from the database file.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"public class DatabaseHandler {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"    private String databaseFilePath;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"     * Initializes the database handler with the specified file path.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"     * @param databaseFilePath the path to the database file","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    public DatabaseHandler(String databaseFilePath) {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"        this.databaseFilePath \u003d databaseFilePath;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"            File file \u003d new File(this.databaseFilePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Oops! Failed to create the database file: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"     * Reads all lines from the database file into a list of strings.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"     * @return a list of strings containing all lines from the database file","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"    public List\u003cString\u003e readLinesFromFile() {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"            return Files.readAllLines(Paths.get(this.databaseFilePath));","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Oops! Failed to read from the file: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"            return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"     * Writes the given list of strings to the database file.","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"     * @param stringList the list of strings to be written to the file","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"    public void writeLinesToFile(List\u003cString\u003e stringList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"            File file \u003d new File(this.databaseFilePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.databaseFilePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"            for (String line : stringList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"                fileWriter.write(line + \"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Oops! Failed to write to the file: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"     * Loads data from the database file and returns it as a list of strings.","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"     * @return a list of strings representing data loaded from the database file","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"    public List\u003cString\u003e loadData() {","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"        return readLinesFromFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"     * Clears the contents of the database file.","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"    public void clearDatabaseFile() {","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"            Files.write(Paths.get(databaseFilePath), new byte[0]);","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"        String databaseFilePath \u003d \"data/duketest.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        DatabaseHandler databaseHandler \u003d new DatabaseHandler(databaseFilePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"        // Clear and initialize data/duke.txt","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"        databaseHandler.clearDatabaseFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"        List\u003cString\u003e input \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"        input.add(\"E | 0 | netflix marathon | 01 December 2022 00:00 | 15 December 2022 23:59\");","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"        input.add(\"Success!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"        databaseHandler.writeLinesToFile(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"HM33-Stu"},"content":"        List\u003cString\u003e output \u003d databaseHandler.readLinesFromFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"HM33-Stu"},"content":"        for (String line : output) {","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(line);","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(Objects.equals(input, output));","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":112}},{"path":"src/main/java/duke/DateHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":" * Handles validation and formatting of date strings for input and database.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"public class DateHandler {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"    // Pattern for matching input dates in the format \"dd/MM/yyyy HHmm\"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    static final Pattern INPUT_DATE_PATTERN \u003d Pattern.compile(\"^(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[0-2])/\"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"            + \"(\\\\d{4}) (\\\\d{4}$)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    // Pattern for matching database dates in the format \"dd Month yyyy HH:mm\"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"    static final Pattern DB_DATE_PATTERN \u003d Pattern.compile(\"\\\\d{1,2} \"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"            + \"(January|February|March|April|May|June|July|August|September|October|November|December)\"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"            + \" \\\\d{4} \\\\d{2}:\\\\d{2}\");","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"    // Formatter for parsing datetime strings in input format to datetime objects","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    static final DateTimeFormatter INPUT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"    // Formatter for parsing datetime strings in database format to datetime objects","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"    static final DateTimeFormatter DB_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy HH:mm\");","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"     * Validates an input string representing a date in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"     * @param date the date string to validate.","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"     * @return true if the date string matches the expected format.","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"    public static boolean isValidInputDate(String date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"        Matcher matcher \u003d DateHandler.INPUT_DATE_PATTERN.matcher(date);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"        return matcher.matches();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"     * Checks if a date string matches the database date pattern \"dd Month yyyy HH:mm\".","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"     * @param date the date string to check.","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"     * @return true if the date string matches the expected format.","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"    public static boolean isValidDbDate(String date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"        Matcher matcher \u003d DateHandler.DB_DATE_PATTERN.matcher(date);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"        return matcher.matches();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"     * Converts a date string in input format to a LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"     * @param date the date string in \"dd/MM/yyyy HHmm\" format.","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"     * @return a LocalDateTime object representing the parsed date.","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"    public static LocalDateTime inputStrToDateTime(String date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"            return LocalDateTime.parse(date, DateHandler.INPUT_DATE_FORMATTER);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Error: Unable to read the date - \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"        return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"     * Converts a date string in database format to a LocalDateTime object.","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"     * @param date the date string in \"dd Month yyyy HH:mm\" format.","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"     * @return a LocalDateTime object representing the parsed date.","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"    public static LocalDateTime dbStrToDateTime(String date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"            return LocalDateTime.parse(date, DateHandler.DB_DATE_FORMATTER);","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Error: Unable to read the date - \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"        return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"     * Converts a LocalDateTime object to its database string representation.","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"     * @param datetime the LocalDateTime object to convert.","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"     * @return a string representation of the date in database format.","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"    public static String dateTimeToDbStr(LocalDateTime datetime) {","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"            return datetime.format(DateHandler.DB_DATE_FORMATTER);","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Error: Failed to format date - \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":95}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":" * Represents a task with a DeadlineTask.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    protected String deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"     * Default constructor with completion status set to false.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    public DeadlineTask(String description, String deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"     * Overloaded constructor allowing setting of completion status.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"     * @param isDone      completion status of the task","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"    public DeadlineTask(String description, Boolean isDone, String deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"     * Overloaded constructor for creating a deadline task with LocalDateTime deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"     * @param deadline    the deadline of the task as LocalDateTime","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"        this.deadline \u003d DateHandler.dateTimeToDbStr(deadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"     * Copy constructor for cloning a DeadlineTask object.","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"    public DeadlineTask(DeadlineTask deadlineTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"        super(deadlineTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"        this.deadline \u003d deadlineTask.deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"     * Converts the database representation of a deadline task to a DeadlineTask object.","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"     * @param dbDeadline the string representation of the deadline task in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"     * @return DeadlineTask the DeadlineTask object","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"    public static DeadlineTask dbToDeadlineTask(String dbDeadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"        String[] params \u003d dbDeadline.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"        Boolean isDone \u003d params[1].equals(\"1\");","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"        String deadline \u003d params[3];","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"        return new DeadlineTask(desc, isDone, deadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"     * Converts a DeadlineTask object to its database representation.","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"     * @param deadlineTask the DeadlineTask object","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"     * @return String the database representation of the DeadlineTask","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"    public static String deadlineTaskToDb(DeadlineTask deadlineTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"        String done \u003d deadlineTask.isTaskDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d deadlineTask.taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"        String deadline \u003d deadlineTask.deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"        return \"D\" + \" | \" + done + \" | \" + desc + \" | \" + deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"        String dbDeadline \u003d \"D | 0 | return book | July 17th\";","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"        DeadlineTask deadlineTask \u003d DeadlineTask.dbToDeadlineTask(dbDeadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"        deadlineTask.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(deadlineTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(DeadlineTask.deadlineTaskToDb(deadlineTask));","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        // Test creating a deadline task with valid date","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d \"Read book\";","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"        String validInputDate1 \u003d \"15/01/2023 1000\";","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"        if (DateHandler.isValidInputDate(validInputDate1)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"            LocalDateTime validDate1 \u003d DateHandler.inputStrToDateTime(validInputDate1);","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"            DeadlineTask d \u003d new DeadlineTask(desc, validDate1); // Create date object","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"            d.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(DeadlineTask.deadlineTaskToDb(d));","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":103}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"        final Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":64}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.io.OutputStream;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":" * A simple task manager application.","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":" * Handles initial setup for components of the main application.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"public class Duke {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"    //    public static final String DATABASE_PATH \u003d \"../data/duke.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    public static final String DATABASE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"    private DatabaseHandler DatabaseHandler;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    private Ui Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"    private CommandParser commandParser;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"     * Initializes a Duke instance, loads tasks and components before starting up the application.","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    public Duke() {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"        Ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"        DatabaseHandler \u003d new DatabaseHandler(DATABASE_PATH);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"            taskList \u003d new TaskList(DatabaseHandler.loadData());","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"            commandParser \u003d new CommandParser(new Scanner(System.in), this.taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"        } catch (DukeBotException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"            Ui.showLoadingError();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"     * Given a user input string, invokes the command parser and returns the output in the UI.","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"        // Create a StringBuilder to hold the output","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"        StringBuilder outputBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"        // Create a PrintStream that writes to the StringBuilder","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"        PrintStream ps \u003d new PrintStream(new OutputStream() {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"            @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"            public void write(int b) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"                outputBuilder.append((char) b);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"        // Save the original System.out","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"        PrintStream prev \u003d System.out;","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"        // Set the System.out to the custom PrintStream","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"        System.setOut(ps);","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"        // Process the user input","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"            this.commandParser.processCommand(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"            this.save();","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"        } finally {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"            // Restore the original System.out","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"            System.setOut(prev);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"        // Return the captured output","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"        return outputBuilder.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"     * Saves the current task list to the hard drive.","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"    private void save() {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"        for (Task task : this.taskList.taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"            String stringTask \u003d TaskList.taskToDbString(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"            lines.add(stringTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"        this.DatabaseHandler.writeLinesToFile(lines);","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"     * Starts up the application and sets up the command parser and user interface.","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"    public void run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"        String greeting \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"                + \" Hey! I\u0027m Hari!\"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"                + \" How may I be of service today?\"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"        String goodbye \u003d \" Au revoir! Till we meet again!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        Ui.greet();","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"        Scanner scanner \u003d new Scanner(System.in); // Create a Scanner object","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"        String line \u003d scanner.nextLine(); // Get first input","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"        while (this.commandParser.processCommand(line)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"            line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"        // Save the tasks from taskList to duke.DatabaseHandler","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"        this.save();","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"HM33-Stu"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":109}},{"path":"src/main/java/duke/DukeBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":" * Constructs exceptions specific to the Duke bot.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"public class DukeBotException extends Exception {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"    // unknown command","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"    //  todo - no description","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"    // event - no description, no from, no to","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    // deadline - no description, no by","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"    public DukeBotException(String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"        super(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when an unknown command is given to the bot.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"    public static class UnknownCommandException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"        public UnknownCommandException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"            super(\"Hmmmm...I don\u0027t understand\");","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when the arguments given to the find command are invalid.","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"    public static class FindParamsException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"        public FindParamsException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"            super(\"Oops! You need to enter a string for the find command!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when the arguments given to the mark command are invalid.","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"    public static class MarkParamsException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"        public MarkParamsException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"            super(\"Oops! You need to enter an integer for the unmark or mark command!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when the arguments given to the delete command are invalid.","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"    public static class DeleteParamsException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"        public DeleteParamsException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"            super(\"Oops! You need to enter an integer for the delete command!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when the arguments given to the todo command are invalid or missing.","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"    public static class TodoDescriptionMissingException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"        public TodoDescriptionMissingException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"            super(\"Oops! Description for a todo task cannot be empty\");","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when the arguments given to the event command are invalid or missing.","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"    public static class EventDetailsMissingException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"        public EventDetailsMissingException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"            super(\"An event task must have a description and a duration (\u0027from\u0027 and \u0027to\u0027)!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when the arguments given to the deadline command are invalid or missing.","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"    public static class DeadlineDetailsMissingException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"        public DeadlineDetailsMissingException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"            super(\"A deadline task must have a description and a deadline (\u0027by\u0027) !\");","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"     * Exception thrown when a task is not found based on the given index.","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"    public static class TaskNotFoundException extends DukeBotException {","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"        public TaskNotFoundException() {","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"            super(\"Oops! Could not find the task!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":87}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":" * Represents a task with a specific time range.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    protected String startTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"    protected String endTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"     * Default constructor with completion status set to false.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"    public EventTask(String description, String startTime, String endTime) {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"     * Overloaded constructor allowing setting of completion status.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"     * @param isDone      completion status of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"    public EventTask(String description, Boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"     * Overloaded constructor for creating an event task with LocalDateTime start and end time.","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"    public EventTask(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"        this.startTime \u003d DateHandler.dateTimeToDbStr(startTime);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"        this.endTime \u003d DateHandler.dateTimeToDbStr(endTime);","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"     * Copy constructor for cloning an EventTask object.","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"    public EventTask(EventTask event) {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"        super(event);","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"        this.startTime \u003d event.startTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"        this.endTime \u003d event.endTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"     * Converts the database representation of an event task to an EventTask object.","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"     * @param dbEvent the string representation of the event task in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"     * @return EventTask the EventTask object","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"    public static EventTask dbToEventTask(String dbEvent) {","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"        String[] params \u003d dbEvent.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"        Boolean isDone \u003d params[1].equals(\"1\");","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"        String startTime \u003d params[3];","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"        String endTime \u003d params[4];","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"        return new EventTask(desc, isDone, startTime, endTime);","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"     * Converts an EventTask object to its database representation.","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"     * @param eventTask the EventTask object","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"     * @return String the database representation of the EventTask","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"    public static String eventTaskToDb(EventTask eventTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"        String done \u003d eventTask.isTaskDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d eventTask.taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"        String startTime \u003d eventTask.startTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"        String endTime \u003d eventTask.endTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        return \"E\" + \" | \" + done + \" | \" + desc + \" | \" + startTime + \" | \" + endTime;","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"        String dbEvent \u003d \"E | 0 | project meeting | Aug 6th 2 | 4pm\";","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"        EventTask eventTask \u003d EventTask.dbToEventTask(dbEvent);","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"        eventTask.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(eventTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(EventTask.eventTaskToDb(eventTask));","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"        // Test creating an event task with valid date","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d \"Buy Bread\";","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"HM33-Stu"},"content":"        String validFromDate1 \u003d \"15/01/2023 1430\";","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"HM33-Stu"},"content":"        String validToDate1 \u003d \"17/01/2023 2359\";","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"HM33-Stu"},"content":"        if (DateHandler.isValidInputDate(validFromDate1) \u0026\u0026 DateHandler.isValidInputDate(validToDate1)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"HM33-Stu"},"content":"            LocalDateTime validFromDateObj1 \u003d DateHandler.inputStrToDateTime(validFromDate1);","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"HM33-Stu"},"content":"            LocalDateTime validToDateObj1 \u003d DateHandler.inputStrToDateTime(validToDate1);","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"HM33-Stu"},"content":"            EventTask e \u003d new EventTask(desc, validFromDateObj1, validToDateObj1); // Create date object","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"HM33-Stu"},"content":"            e.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(EventTask.eventTaskToDb(e));","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":115}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/Window.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"            fxmlLoader.\u003cMainDisplay\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"            stage.setTitle(\"hari\");","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"            stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":32}},{"path":"src/main/java/duke/MainDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"public class MainDisplay extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    public static final String USERIMGPATH \u003d \"/images/user.png\";","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"    public static final String HARIIMGPATH \u003d \"/images/hari.png\";","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USERIMGPATH));","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(HARIIMGPATH));","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":54}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":" * Represents a task with a description and a boolean indicating its completion status.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"public class Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"    protected String taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"     * Constructs a task with the specified description and sets its completion status to false.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"     * @param taskDescription the description of the task","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"     * Constructs a task with the specified description and completion status.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"     * @param taskDescription the description of the task","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"     * @param isTaskDone      the completion status of the task","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"    public Task(String taskDescription, Boolean isTaskDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"        this.isTaskDone \u003d isTaskDone;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"     * Constructs a task by cloning another task object.","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"     * @param task the task to be cloned","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"    public Task(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"        this.taskDescription \u003d task.taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"        this.isTaskDone \u003d task.isTaskDone;","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"     * Gets the status icon indicating the completion status of the task.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"     * @return \"X\" if the task is complete, otherwise \" \"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"        return (isTaskDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"     * Marks the task as complete.","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":68}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":" * Contains a list of Task objects and handles operations like getting, updating, and deleting them.","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"public class TaskList {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"    public ArrayList\u003cTask\u003e prevTaskList; // contains the taskList before mutation","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"    private Task prevTask; // contains the task involved in the previous operation","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"    private MutationOperation prevOp; // contains the previous operation that mutated taskList","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"     * Enum of operations that can mutate taskList.","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    private enum MutationOperation {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"        MARK,","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"        UNMARK,","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"        ADD,","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"        DELETE","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"    // Todo representation - 0 means not done, 1 means done","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"    // T | done? | desc","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"    // Deadline representation","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"    // D | done? | desc | by","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"    // Event representation","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"    // E | done? | desc | from | to","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"     * Constructs a new TaskList with an empty task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"     * Initializes the TaskManager with a list of strings representing tasks in their database representations.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"     * @param stringTasksList List of strings representing tasks in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"     * @throws DukeBotException.UnknownCommandException if an unknown command is encountered while parsing the tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"    public TaskList(List\u003cString\u003e stringTasksList) throws DukeBotException.UnknownCommandException {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"        for (String s : stringTasksList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"            this.taskList.add(parseStringToTask(s));","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"     * Finds tasks containing a specific keyword in their description.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"     * @param keyword The keyword to search for in task descriptions (case-sensitive)","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"    public void findTasks(String keyword) {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"        int num \u003d 0;","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Here\u0027s what we got\u0027\");","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"            Task t \u003d this.taskList.get(i);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"            if (t.taskDescription.contains(keyword)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println((num + 1) + \". \" + t);","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"                num++;","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"     * Retrieves a task from the task list by its index.","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"     * @param index The index of the task to retrieve","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"     * @return The task at the specified index","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"     * @throws DukeBotException.TaskNotFoundException if the index is out of bounds","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"    public Task getTask(int index) throws DukeBotException.TaskNotFoundException {","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"        if (index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"            return taskList.get(index - 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.TaskNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"     * @param task The task to be added","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        assert task !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"        prevTaskList \u003d cloneTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"     * Deletes a task from the task list by its index.","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"     * @param index The index of the task to delete","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"     * @throws DukeBotException.TaskNotFoundException if the index is out of bounds","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"HM33-Stu"},"content":"    public void deleteTask(int index) throws DukeBotException.TaskNotFoundException {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"HM33-Stu"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.TaskNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"HM33-Stu"},"content":"            prevTaskList \u003d cloneTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"HM33-Stu"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"HM33-Stu"},"content":"     * Marks a task as completed by its index.","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"HM33-Stu"},"content":"     * @param index The index of the task to mark as completed","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"HM33-Stu"},"content":"     * @throws DukeBotException.TaskNotFoundException if the index is out of bounds","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"HM33-Stu"},"content":"    public void markTask(int index) throws DukeBotException.TaskNotFoundException {","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"HM33-Stu"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.TaskNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"HM33-Stu"},"content":"            prevTaskList \u003d cloneTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"HM33-Stu"},"content":"            Task t \u003d this.getTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"HM33-Stu"},"content":"            t.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"HM33-Stu"},"content":"     * Unmarks a task as completed by its index.","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"HM33-Stu"},"content":"     * @param index The index of the task to unmark","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"HM33-Stu"},"content":"     * @throws DukeBotException.TaskNotFoundException if the index is out of bounds","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"HM33-Stu"},"content":"    public void unmarkTask(int index) throws DukeBotException.TaskNotFoundException {","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"HM33-Stu"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"HM33-Stu"},"content":"            throw new DukeBotException.TaskNotFoundException();","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"HM33-Stu"},"content":"            prevTaskList \u003d cloneTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"HM33-Stu"},"content":"            Task t \u003d this.getTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"HM33-Stu"},"content":"            t.unmarkAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"HM33-Stu"},"content":"     * Reverts the task list to its previous state before the last mutation.","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"HM33-Stu"},"content":"    public void undo() {","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"HM33-Stu"},"content":"        if (prevTaskList \u003d\u003d null) {","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Undo cannot be performed. There are no tasks to undo.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"HM33-Stu"},"content":"            ArrayList\u003cTask\u003e tmpTaskList \u003d cloneTaskList(taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"HM33-Stu"},"content":"            taskList \u003d prevTaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"HM33-Stu"},"content":"            prevTaskList \u003d tmpTaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Undo successful!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"HM33-Stu"},"content":"     * Prints out the contents of the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"HM33-Stu"},"content":"    public void printTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"HM33-Stu"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println((i + 1) + \". \" + this.taskList.get(i));","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"HM33-Stu"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"HM33-Stu"},"content":"     * @return The number of tasks in the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"HM33-Stu"},"content":"    public int size() {","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"HM33-Stu"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":178,"author":{"gitId":"HM33-Stu"},"content":"     * Converts the database representation of a task to a Task object.","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"HM33-Stu"},"content":"     * @param dbTask The string representation of the task in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"HM33-Stu"},"content":"     * @return The Task object","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"HM33-Stu"},"content":"     * @throws DukeBotException.UnknownCommandException if an unknown command is encountered while parsing the task","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"HM33-Stu"},"content":"    public static Task parseStringToTask(String dbTask) throws DukeBotException.UnknownCommandException {","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"HM33-Stu"},"content":"        String[] params \u003d dbTask.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"HM33-Stu"},"content":"        String type \u003d params[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"HM33-Stu"},"content":"        switch (type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"HM33-Stu"},"content":"            case \"T\": // To do","lastModifiedDate":"2024-02-12"},{"lineNumber":189,"author":{"gitId":"HM33-Stu"},"content":"                Todo todoTask \u003d Todo.db2Todo(dbTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"HM33-Stu"},"content":"                return todoTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":191,"author":{"gitId":"HM33-Stu"},"content":"            case \"D\": // Deadline","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"HM33-Stu"},"content":"                DeadlineTask deadlineTask \u003d DeadlineTask.dbToDeadlineTask(dbTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":193,"author":{"gitId":"HM33-Stu"},"content":"                return deadlineTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":194,"author":{"gitId":"HM33-Stu"},"content":"            case \"E\": // Event","lastModifiedDate":"2024-02-12"},{"lineNumber":195,"author":{"gitId":"HM33-Stu"},"content":"                EventTask eventTask \u003d EventTask.dbToEventTask(dbTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"HM33-Stu"},"content":"                return eventTask;","lastModifiedDate":"2024-02-12"},{"lineNumber":197,"author":{"gitId":"HM33-Stu"},"content":"            default:","lastModifiedDate":"2024-02-12"},{"lineNumber":198,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Unrecognized task type\");","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"HM33-Stu"},"content":"                throw new DukeBotException.UnknownCommandException();","lastModifiedDate":"2024-02-12"},{"lineNumber":200,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":201,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":202,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":203,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":204,"author":{"gitId":"HM33-Stu"},"content":"     * Converts a Task to its database representation.","lastModifiedDate":"2024-02-12"},{"lineNumber":205,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":206,"author":{"gitId":"HM33-Stu"},"content":"     * @param task The Task object","lastModifiedDate":"2024-02-12"},{"lineNumber":207,"author":{"gitId":"HM33-Stu"},"content":"     * @return The string representation of the Task in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":209,"author":{"gitId":"HM33-Stu"},"content":"    public static String taskToDbString(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":210,"author":{"gitId":"HM33-Stu"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-02-12"},{"lineNumber":211,"author":{"gitId":"HM33-Stu"},"content":"            Todo todoTask \u003d (Todo) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":212,"author":{"gitId":"HM33-Stu"},"content":"            return Todo.todo2Db(todoTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":213,"author":{"gitId":"HM33-Stu"},"content":"        } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"HM33-Stu"},"content":"            DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":215,"author":{"gitId":"HM33-Stu"},"content":"            return DeadlineTask.deadlineTaskToDb(deadlineTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":216,"author":{"gitId":"HM33-Stu"},"content":"        } else if (task instanceof EventTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":217,"author":{"gitId":"HM33-Stu"},"content":"            EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":218,"author":{"gitId":"HM33-Stu"},"content":"            return EventTask.eventTaskToDb(eventTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":219,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":220,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Could not add: \" + task);","lastModifiedDate":"2024-02-12"},{"lineNumber":221,"author":{"gitId":"HM33-Stu"},"content":"            return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":222,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":223,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":224,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":225,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":226,"author":{"gitId":"HM33-Stu"},"content":"     * Clones the task list for saving the previous state in case of an undo operation.","lastModifiedDate":"2024-02-12"},{"lineNumber":227,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":228,"author":{"gitId":"HM33-Stu"},"content":"     * @param taskList The task list to clone","lastModifiedDate":"2024-02-12"},{"lineNumber":229,"author":{"gitId":"HM33-Stu"},"content":"     * @return A deep copy of the task list","lastModifiedDate":"2024-02-12"},{"lineNumber":230,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":231,"author":{"gitId":"HM33-Stu"},"content":"    private ArrayList\u003cTask\u003e cloneTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":232,"author":{"gitId":"HM33-Stu"},"content":"        ArrayList\u003cTask\u003e newPrevTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":233,"author":{"gitId":"HM33-Stu"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":234,"author":{"gitId":"HM33-Stu"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-02-12"},{"lineNumber":235,"author":{"gitId":"HM33-Stu"},"content":"                Todo todoTask \u003d (Todo) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":236,"author":{"gitId":"HM33-Stu"},"content":"                newPrevTaskList.add(new Todo(todoTask));","lastModifiedDate":"2024-02-12"},{"lineNumber":237,"author":{"gitId":"HM33-Stu"},"content":"            } else if (task instanceof DeadlineTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":238,"author":{"gitId":"HM33-Stu"},"content":"                DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":239,"author":{"gitId":"HM33-Stu"},"content":"                newPrevTaskList.add(new DeadlineTask(deadlineTask));","lastModifiedDate":"2024-02-12"},{"lineNumber":240,"author":{"gitId":"HM33-Stu"},"content":"            } else if (task instanceof EventTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":241,"author":{"gitId":"HM33-Stu"},"content":"                EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":242,"author":{"gitId":"HM33-Stu"},"content":"                newPrevTaskList.add(new EventTask(eventTask));","lastModifiedDate":"2024-02-12"},{"lineNumber":243,"author":{"gitId":"HM33-Stu"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":244,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Could not add: \" + task);","lastModifiedDate":"2024-02-12"},{"lineNumber":245,"author":{"gitId":"HM33-Stu"},"content":"                return null;","lastModifiedDate":"2024-02-12"},{"lineNumber":246,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":247,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":248,"author":{"gitId":"HM33-Stu"},"content":"        return newPrevTaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":249,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":250,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":250}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":" * Represents a task with a description only.","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"     * Default constructor for Todo task, sets isDone to false.","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the Todo task","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"        super(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"     * Constructor for Todo task with specified completion status.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"     * @param description description of the Todo task","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"     * @param isDone      completion status of the Todo task","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"     * Constructor used to clone a Todo object.","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"     * @param todo the Todo object to clone","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"    public Todo(Todo todo) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"        super(todo);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"    public String toString() {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"     * Converts the database representation of a Todo task to a Todo object.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"     * @param dbTodo the string representation of the Todo task in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"     * @return the Todo object","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"    public static Todo db2Todo(String dbTodo) {","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"        // T | 0 | Buy Bread","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"        String[] params \u003d dbTodo.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"        Boolean isDone \u003d params[1].equals(\"1\"); // if \"1\", means isDone","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"        return new Todo(desc, isDone);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"     * Converts a Todo object to its database representation.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"     * @param todoTask the Todo task object","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"     * @return the string representation of the Todo task in the database","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"    public static String todo2Db(Todo todoTask) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"        // T | 0 | Buy Bread","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"        String done \u003d todoTask.isTaskDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"        String desc \u003d todoTask.taskDescription;","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"        return \"T | \" + done + \" | \" + desc;","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"        String dbTodo \u003d \"T | 0 | Buy Bread\";","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"        Todo todoTask \u003d Todo.db2Todo(dbTodo);","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"        todoTask.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(todoTask);","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(Todo.todo2Db(todoTask));","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":75}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":" * Deals with interactions from the user","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"public class Ui {","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"    private static String border \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"     * Prints a greeting for the user upon bot startup","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"    public void greet() {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(border);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Hey! I\u0027m Hari!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"How may I be of service today?\");","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(border);","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Error loading data from file. File may be corrupted.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"        ui.greet();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":27}},{"path":"src/main/resources/view/Dialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":16}},{"path":"src/main/resources/view/Window.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"HM33-Stu":19}}]
