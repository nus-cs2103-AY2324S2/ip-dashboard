[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"# duke.core.Duke project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"3. After that, locate the `src/main/java/duke.core.Duke.java` file, right-click it, and choose `Run duke.core.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"felixchanyy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    mainClass.set(\"duke.core.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"felixchanyy":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"D | 1 | return book | 2001-01-01 17:00","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"E | 0 | project meeting | 2001-01-01 17:00 - 2001-01-01 17:00","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"E | 0 | play | 2001-01-02 00:00 - 2001-01-03 17:00","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"D | 1 | buy books | 2001-01-02 17:00","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"E | 1 | 2 | 2001-03-08 17:00 - 2001-03-08 17:00","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"D | 1 | 3 | 2001-03-08 17:00","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"felixchanyy":9}},{"path":"src/main/java/duke/core/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.core;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public enum Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"            this.tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"        } catch (DukeException e){","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"            ui.displayError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    public void echo() {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"        while (ui.next()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            String msg \u003d ui.getInput();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            Parser parser \u003d new Parser(msg);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"                if (msg.equalsIgnoreCase(Command.BYE.name())) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"                    ui.exit();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"                } else if (msg.equalsIgnoreCase(Command.LIST.name())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"                    ui.formatReply(tasks.toDoList());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"                } else if (msg.toUpperCase().startsWith(Command.MARK.name())){","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"                    int taskIndex \u003d parser.parseMarkToDo();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"                    ui.formatReply(tasks.markToDo(taskIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"                    tasks.saveToStorage(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"                } else if (msg.toUpperCase().startsWith(Command.UNMARK.name())){","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                    int taskIndex \u003d parser.parseUnMarkToDo();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"                    ui.formatReply(tasks.unMarkToDo(taskIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"                    tasks.saveToStorage(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"                } else if (msg.toUpperCase().startsWith(Command.DELETE.name())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"                    int taskIndex \u003d parser.parseDeleteToDo();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"                    ui.formatReply(tasks.deleteToDo(taskIndex));","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"                    tasks.saveToStorage(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"                    Task t \u003d parser.parseAddToDo();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"                    ui.formatReply(tasks.addToDo(t));","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"                    tasks.saveToStorage(storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"                ui.displayError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        ui.closeScanner();","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"        ui.greetUser();","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        this.echo();","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"felixchanyy":87,"-":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"felixchanyy":6}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import duke.core.Duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    protected String command;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    public Parser (String command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"    public Task parseAddToDo() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"        if (command.toUpperCase().startsWith(Duke.Command.TODO.name())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"            return this.parseTodo();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"        } else if (command.toUpperCase().startsWith(Duke.Command.DEADLINE.name())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"            return this.parseDueDate();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        } else if (command.toUpperCase().startsWith(Duke.Command.EVENT.name())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"            return this.parseSchedule();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid format. Please use \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    public int parseDeleteToDo() throws DukeException{","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        String[] part \u003d command.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        if (part.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"            String index \u003d part[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"                return Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"                throw new DukeException(\"Invalid format. Please use integers only.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid format. Please use \u0027delete \u003cindex\u003e\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"    public int parseMarkToDo() throws DukeException{","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        String[] part \u003d command.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        if (part.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"            String index \u003d part[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"                return Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"                throw new DukeException(\"Invalid format. Please use integers only.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid format. Please use \u0027mark \u003cindex\u003e\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    public int parseUnMarkToDo() throws DukeException{","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"        String[] part \u003d command.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"        if (part.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"            String index \u003d part[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"                return Integer.parseInt(index) - 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"                throw new DukeException(\"Invalid format. Please use integers only.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid format. Please use \u0027unmark \u003cindex\u003e\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"    public Event parseSchedule() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"        String input \u003d command.substring(Duke.Command.EVENT.name().length()).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        int byIndex \u003d input.indexOf(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"        if (byIndex !\u003d 0 \u0026\u0026 byIndex !\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"            String description \u003d input.substring(0, byIndex).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"            String fromTo \u003d input.substring(byIndex + 6).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"            String[] part \u003d fromTo.split(\" /to \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"            if (part.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"                String from \u003d part[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"                String to \u003d part[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"                return new Event(description, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"        throw new DukeException(\"Invalid format. Please use \u0027event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e\u0027.\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"                \" Datetime format: \u003cyyyy-MM-dd HH:mm\u003e.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"    public Todo parseTodo() throws DukeException{","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"        String input \u003d command.substring(Duke.Command.TODO.name().length()).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"        String description \u003d input.trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid format. Please use \u0027todo \u003cdescription\u003e\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"        return new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"    public Deadline parseDueDate() throws DukeException{","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"        String input \u003d command.substring(Duke.Command.DEADLINE.name().length()).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"        int byIndex \u003d input.indexOf(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"        if ( byIndex !\u003d 0 \u0026\u0026 byIndex !\u003d -1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"            String description \u003d input.substring(0, byIndex).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"            String by \u003d input.substring(byIndex + 4).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid format. Please use \u0027deadline \u003cdescription\u003e /by \u003cdatetime\u003e\u0027.\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"                    \" Datetime format: \u003cyyyy-MM-dd HH:mm\u003e.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"felixchanyy":118}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"    protected Path filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    private boolean warningPrinted \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"       this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    private void printWarning() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        if (!warningPrinted) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"            System.err.println(\"Warning: Invalid input will be ignored and overwritten after new task is added.\\n\" +","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"                    \"To prevent overwriting, type \u0027bye\u0027 to quit.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"            warningPrinted \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private void prepareFile() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"                Files.createDirectories(filePath.getParent());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Unable to create task file in \" + this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        prepareFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"        try (Scanner myScannerObj \u003d new Scanner(filePath)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"            int lineNumber \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"            while (myScannerObj.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"                String line \u003d myScannerObj.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"                try {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"                    Task t \u003d this.load(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                    tasks.add(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"                    printWarning();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"                    System.err.println(lineNumber + \": \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"                lineNumber++;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Unable to load tasks from task file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"        prepareFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"            ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"                lines.add(t.toFileString());","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"            Files.write(filePath, lines, StandardOpenOption.TRUNCATE_EXISTING, StandardOpenOption.WRITE);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Unable to save tasks to task file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"    public Task load(String line) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"        if (parts.length \u003c 3 || !parts[1].matches(\"[01]\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid task format. Please check the task file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"felixchanyy"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"felixchanyy"},"content":"        boolean isDone \u003d Integer.parseInt(parts[1]) \u003d\u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"felixchanyy"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"felixchanyy"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"felixchanyy"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"felixchanyy"},"content":"                Task tT \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"felixchanyy"},"content":"                tT.setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"felixchanyy"},"content":"                return tT;","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"felixchanyy"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"felixchanyy"},"content":"                Task tD \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"felixchanyy"},"content":"                tD.setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"felixchanyy"},"content":"                return tD;","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"felixchanyy"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"felixchanyy"},"content":"                String[] time \u003d parts[3].split(\" - \");","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"felixchanyy"},"content":"                if (!(time.length \u003d\u003d 2)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"felixchanyy"},"content":"                    throw new DukeException(\"Invalid time format. \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"felixchanyy"},"content":"                            \"Please use \u003cdatetime\u003e - \u003cdatetime\u003e\" );","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"felixchanyy"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"felixchanyy"},"content":"                Task tE \u003d new Event(description,time[0], time[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"felixchanyy"},"content":"                tE.setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"felixchanyy"},"content":"                return tE;","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"felixchanyy"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"felixchanyy"},"content":"                throw new DukeException(\"Invalid task type \" + taskType);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"felixchanyy":118}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    protected DateTimeFormatter input \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    protected DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(by, input);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"            this.by \u003d date.format(output);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid time format. Please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        return \"D\" + super.toFileString() + \" | \" + LocalDateTime.parse(by, output).format(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"felixchanyy":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"    protected DateTimeFormatter input \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    protected DateTimeFormatter output \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"            LocalDateTime date1 \u003d LocalDateTime.parse(from, input);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"            LocalDateTime end1 \u003d LocalDateTime.parse(to, input);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"            this.from \u003d date1.format(output);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"            this.to \u003d end1.format(output);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"            if (!isBeforeDateTime(date1, end1)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"                throw new DukeException(\"Invalid date range. \u0027From\u0027 should be before \u0027To\u0027.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"Invalid time format. Please use yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"    private boolean isBeforeDateTime(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"        return from.isBefore(to) || from.isEqual(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        return \"E\" + super.toFileString() + \" | \" + LocalDateTime.parse(this.from, output).format(input) + \" - \"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"                + LocalDateTime.parse(this.to, output).format(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"felixchanyy":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    protected String getStatusSymbol() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        return (this.isDone ? \"1\" : \"0\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"        return \" | \" + this.getStatusSymbol() + \" | \" + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"felixchanyy":33}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    public void saveToStorage(Storage storage) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"    public String addToDo(Task t){","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"        tasks.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"   \" + t + \"\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"                + \" Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"    public String deleteToDo(int taskIndex) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"            Task t \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + \"   \" + t + \"\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"                    + \" Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"duke.task.Task not found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"    public String toDoList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"        StringBuilder str;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"felixchanyy"},"content":"            str \u003d new StringBuilder(\"There are no tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"felixchanyy"},"content":"            str \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"felixchanyy"},"content":"            int taskCount \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"felixchanyy"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"felixchanyy"},"content":"                str.append(\"\\n \").append(taskCount).append(\".\").append(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"felixchanyy"},"content":"                taskCount++;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"felixchanyy"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"felixchanyy"},"content":"        return str.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"felixchanyy"},"content":"    public String markToDo(int taskIndex) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"felixchanyy"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"felixchanyy"},"content":"            Task t \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"felixchanyy"},"content":"            t.setDone(true);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"felixchanyy"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + \"   \" + t;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"duke.task.Task not found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"felixchanyy"},"content":"    public String unMarkToDo(int taskIndex) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"felixchanyy"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"felixchanyy"},"content":"            Task t \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"felixchanyy"},"content":"            t.setDone(false);","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"felixchanyy"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + \"   \" + t;","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"felixchanyy"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"felixchanyy"},"content":"            throw new DukeException(\"duke.task.Task not found.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"felixchanyy"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"felixchanyy":88}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"felixchanyy":18}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"package duke.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"    private final Scanner myScannerObj;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"    private final String horizontalLine \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"        this.myScannerObj \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"felixchanyy"},"content":"    public void greetUser() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"felixchanyy"},"content":"        this.formatReply(\"Hello! I\u0027m Zenify\\n\" + \" What can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"    public void formatReply(String raw) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"felixchanyy"},"content":"        System.out.println(this.horizontalLine + \" \" + raw + \"\\n\" + this.horizontalLine);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"felixchanyy"},"content":"    public void formatError(String raw) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"felixchanyy"},"content":"        System.err.println(this.horizontalLine + \" \" + raw + \"\\n\" + this.horizontalLine);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"felixchanyy"},"content":"    public void exit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"felixchanyy"},"content":"        this.formatReply(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"felixchanyy"},"content":"    public void displayError(String errorMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"felixchanyy"},"content":"        this.formatError(\"Error: \" + errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"felixchanyy"},"content":"    public String getInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"felixchanyy"},"content":"        return myScannerObj.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"felixchanyy"},"content":"    public boolean next() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"felixchanyy"},"content":"        return myScannerObj.hasNextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"felixchanyy"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"felixchanyy"},"content":"        myScannerObj.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"felixchanyy"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"felixchanyy"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"felixchanyy":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"felixchanyy"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"felixchanyy"},"content":"todo borrow book","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"felixchanyy"},"content":"mark 1","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"felixchanyy"},"content":"event play games /from 2024-01-06 14:00 /to 2024-02-06 16:00","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"felixchanyy"},"content":"deadline play more /by 2025-01-22 23:00","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"felixchanyy"},"content":"mark 3","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"felixchanyy"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"felixchanyy"},"content":"unmark 3","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"felixchanyy"},"content":"delete 1","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"delete 1","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"felixchanyy"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"felixchanyy"},"content":"delete 1","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"felixchanyy":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"felixchanyy"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\core\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"java -classpath ..\\bin duke.core.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"felixchanyy":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"felixchanyy"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"felixchanyy"},"content":"# shellcheck disable\u003dSC2046","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"felixchanyy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ../src/main/java -name \"*.java\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"felixchanyy"},"content":"java -classpath ../bin duke.core.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"felixchanyy":4,"-":36}}]
