[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"## Productivity observation with AI assist","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"Using github copilot for autocomplete","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"### Performance","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"Does best when the structure of the top level codes are there,","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"hence providing a better context for the AI to work with.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"When there is no structure yet, it has higher chance of hallucinating","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"the wrong code.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"It is also a 60-40 mix of good and bad suggestions, sometimes the details are inaccurate.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"If you have coded similar function before, it will be able to suggest the right code when repeated.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"Thus, it is better with laborous tasks with certain existing code for better code suggestions.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"Personally think that it saves some time by helping you type similar code again ","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"or very trivial next few steps that you expect to take.","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"### Benefits","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"Helps to reduce cognitive load of typing and thinking of the variable names.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"Speed up refactoring of code when shifting to more OOP, and it will consider the","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"Original code written to suggest the right code in new classes.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"Speeds up writing comments with similar code and contexts. Though it is not detailed at times,","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"I can speed up the obvious parts and add on with more important details.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"### Limitations","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"Sometimes it is not able to suggest the right code, and you have to manually type it out.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"Sometimes it does not suggest everything previously written, so similar bugs might appear again.","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":30}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ys112":7,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     * Initializes a Deadline object with the given description and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * @param by Deadline of the task in LocalDate format.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     * @return task type","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        return \"D\";","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     * Returns the date of the task in LocalDate object.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @return date of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        return by;","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"     * Returns all the information of the task in String format.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"     * @return date of the task in String format","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":52}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" * Represents a duke chatbot that handles users input and add tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":" * It also saves the tasks to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * Creates a Duke chatbot object.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     * @param filePath the path of the file to save the tasks to","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     * Instantiates a Duke chatbot and runs it.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @param args the arguments passed in","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    public void run() {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"                Parser parser \u003d new Parser(ui.readCommand());","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"                String commandWord \u003d parser.getCommandWord();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"                switch (commandWord) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"                    isExit \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"                    ui.showBye();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"                case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"                    ui.showTaskList(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"                    Task markTask \u003d tasks.markDone(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                    ui.showDone(markTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"                    Task unmarkTask \u003d tasks.unmarkDone(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"                    ui.showUnmark(unmarkTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"                    Task deleteTask \u003d tasks.deleteTask(parser.getIndex());","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"                    ui.showDelete(deleteTask, tasks.getSize());","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"                case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"                    TaskList filteredTasks \u003d tasks.findTasks(parser.getDescription());","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"                    ui.showTaskList(filteredTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"                    Task task \u003d new Todo(parser.getDescription());","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"                    ui.showAddTask(task, tasks.getSize());","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"                    Task deadlineTask \u003d new Deadline(parser.getDescription(), parser.getBy());","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"                    tasks.addTask(deadlineTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"                    ui.showAddTask(deadlineTask, tasks.getSize());","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"                case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"                    Task eventTask \u003d new Event(parser.getDescription(), parser.getFromTo()[0], parser.getFromTo()[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"                    tasks.addTask(eventTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"                    ui.showAddTask(eventTask, tasks.getSize());","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"                default:","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"                    ui.commandNotUnderstood();","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                ui.showError(\"The index of a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"                    + \"Please use the following format: mark \u003cindex\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"                ui.showError(\"Please enter a valid number to modify task\");","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"                ui.showError(\"Please enter a valid date in the format dd-mm-yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"            ui.showError(\"Failed to save tasks to file\");","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ys112":115,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" * Represents an exception specific to Duke.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"     * Initializes a DukeException with the error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"     * @param message the error message","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" * Represents event task that handles start and end date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     * Initializes an Event with the description, start and end date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * @param from the start date of the event in LocalDate format","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     * @param to the end date of the event in LocalDate format","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        return \"E\";","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        return from;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        return to;","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"            + \" to: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"            + to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":42}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" * Represents a parser that handles users input and","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" * returns the respective commands and descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    private String input;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    private String commandWord;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"     * Initializes a Parser with the input from the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * @param input the input from the user","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"     * Returns the command word from the user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     * @return command word trimmed from user input","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the command word is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    public String getCommandWord() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Command cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        this.commandWord \u003d input.split(\" \")[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        return commandWord;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * Returns the description for the new task from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     * @return description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the description is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    public String getDescription() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        formatCheck(\"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"     * Returns the date for the deadline task from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     * @return date in LocalDate format","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the date is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"     * @throws DateTimeParseException if the date is not in the correct format","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    public LocalDate getBy() throws DukeException, DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        formatCheck(\"deadline\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        return Task.getInputDateFormat(input.split(\"/by \")[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"     * Returns the date in array form for the event task from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"     * The first element is the start date and the second element is the end date.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"     * @return array of dates in LocalDate format","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the date is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"     * @throws DateTimeParseException if the date is not in the correct format","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"    public LocalDate[] getFromTo() throws DukeException, DateTimeParseException {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        formatCheck(\"event\");","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        LocalDate from \u003d Task.getInputDateFormat(input.split(\"/from\")[1].split(\"/to\")[0].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"        LocalDate to \u003d Task.getInputDateFormat(input.split(\"/to\")[1].trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"        return new LocalDate[] {from, to};","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    private void formatCheck(String taskType) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"        String formatStringInfo \u003d \"Please use the following format:\" + taskType + \" \u003cdescription\u003e\";","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"            if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"The description of a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"            if (input.split(\" \", 2).length \u003d\u003d 1 || input.split(\"/by \").length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"The deadline and description for a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"                    + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"            } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"Invalid command for deadline. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo + \" /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"            if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"The date and description for an event cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo + \" /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"            } else if (!input.contains(\"/from\") || !input.contains(\"/to\") || input.split(\"/from \").length \u003e 2","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                || input.split(\"/to \").length \u003e 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"Invalid command for event. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"                    + formatStringInfo + \" /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"     * Returns the index of the task to be modified from user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"     * @return index of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the index is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"    public int getIndex() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"        if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"The index of a task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"        return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":125}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":" * Storage class to handle loading and saving of tasks to a text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     * Initializes a Storage object with file path to text file.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     * @param filePath the path of the file to save the tasks to","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     * Loads the tasks from the file, processing of text to task is done in parseTasksFromString.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     * @return the list of tasks loaded from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     * @throws IOException if there is an error reading the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the file could not be created.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException, DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"            boolean isCreated \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"            isCreated \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"            isCreated \u003d file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"            if (!isCreated) {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"                throw new DukeException(\"File could not be created.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"                Task task \u003d parseTasksFromString(line);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"                tasksList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"            s.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        return tasksList;","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"    private Task parseTasksFromString(String line) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        // common fields","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        String taskType \u003d split[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        boolean isDone \u003d split[1].equals(\"1\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        String description \u003d split[2];","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        // class specific fields","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"            String by \u003d split[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"            task \u003d new Deadline(description, Task.getInputDateFormat(by));","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"            String from \u003d split[3];","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"            String to \u003d split[4];","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"            task \u003d new Event(description, Task.getInputDateFormat(from), Task.getInputDateFormat(to));","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     * Writes the tasks to the file and overwrites the file if it already exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"     * @param tasksList the list of tasks to be written to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if there is an error writing to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"     * @throws IOException if there is an error writing to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"    public void writeToFile(TaskList tasksList) throws DukeException, IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"        for (int i \u003d 0; i \u003c tasksList.getSize(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"            Task task \u003d tasksList.getTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"                    task.getTaskType() + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"                    deadline.getTaskType() + \" | \" + (deadline.isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"                        + deadline.getDescription() + \" | \" + Task.getLocalDateOutputFormat(deadline.getBy()) + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"                    task.getTaskType() + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"                        + task.getDescription() + \" | \" + Task.getLocalDateOutputFormat(event.getFrom()) + \" | \"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"                        + Task.getLocalDateOutputFormat(event.getTo()) + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"        fileWriter.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":117}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":" * Represents a task that can store the description and status of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"     * Initializes a Task with the description and status of not done.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     * Accepts a date in String format of \"d-M-yyyy\" and returns the date in LocalDate format.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     * @param s date in String format of \"d-M-yyyy\"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"     * @return date of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    public static LocalDate getInputDateFormat(String s) throws DateTimeParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        return LocalDate.parse(s, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     * Accepts a date in LocalDate format and returns the date in String format of \"dd-MM-yyyy\".","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @param date date in LocalDate format","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * @return date of the task in String format of \"dd-MM-yyyy\"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    public static String getLocalDateOutputFormat(LocalDate date) throws DateTimeParseException {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"     * Returns X if the task is done, else return empty space.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     * @return status icon of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"     * Marks the task as not done yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"     * @return description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"        return description;","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"     * @return task type","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"        return \" \";","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"     * Returns all the information of the task in String format.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"     * @return all the information of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ys112":94}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":" * TaskList class to handle operations on the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"     * Initializes a TaskList object with a list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * Returns false if there is no Task given.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"     * @return true if the task is added successfully","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            return false;","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        return tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * @return the task that is deleted","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"     * Gets a task from the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"     * @param index the index of the task to be retrieved","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     * @return the task at the index","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"     * @throws DukeException if the task does not exist at the index","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"No task found at index \" + index + \".\");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     * Gets the size of the list of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    public Task markDone(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"     * Marks a task as not done yet.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    public Task unmarkDone(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        task.markAsUndone();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"     * Finds tasks with the description that contains the keyword given by user.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"     * @param description the keyword to be searched for","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"     * @return a list of tasks that contain the description","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"    public TaskList findTasks(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"        return new TaskList(filteredTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":97}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":" * Represents a todo task that can store the description and status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"     * Initializes a Todo with the description and status of not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"        return \"T\";","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"     * Initializes a new scanner for user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    public Ui() {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     * Reads the next line of user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * @return the next line of user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        System.out.println(\"User:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     * Closes the scanner.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    public void closeScanner() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     * Prints the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    private void botHeader() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"        System.out.print(\"DevGPT:\\n\\t\");","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"     * Provides bot name for the given messages.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    private void botHeader(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        System.out.print(\"DevGPT \" + message + \":\\n\\t\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     * Prints the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Hello! I\u0027m DevGPT\\n\\tWhat can I do for you?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"     * Prints the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"     * @param tasks the list of tasks to be printed.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    public void showTaskList(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"No tasks found.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"            System.out.println(doubleTab() + (i + 1) + \".\" + tasks.getTask(i));","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"     * Shows the task marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"     * @param markTask the task to be marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"    public void showDone(Task markTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"        System.out.println(doubleTab() + markTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"     * Shows the task marked as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"     * @param unmarkTask the task to be marked as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"    public void showUnmark(Task unmarkTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Got it! I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"        System.out.println(doubleTab() + unmarkTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"     * Shows that the task was deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"     * @param deleteTask the task to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"     * @param size the number of tasks in the task list after deletion.","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"    public void showDelete(Task deleteTask, int size) {","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Poof! I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"        System.out.println(doubleTab() + deleteTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"        System.out.println(doubleTab() + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"     * Shows that the task was added.","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"     * @param task the task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"     * @param size the number of tasks in the task list after adding tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"    public void showAddTask(Task task, int size) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"        System.out.println(doubleTab() + task);","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"        System.out.println(doubleTab() + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"    private String doubleTab() {","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"        return \"\\t\\t\";","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"     * Shows the error message with error header.","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"     * @param s the error message to be shown.","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"        botHeader(\"Error\");","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"ys112"},"content":"     * Shows error message for invalid command.","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"ys112"},"content":"    public void commandNotUnderstood() {","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"ys112"},"content":"        showError(\"Your message is not understood. Please use following:\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"ys112"},"content":"                + \"todo \u003cdescription\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"ys112"},"content":"                + \"deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"ys112"},"content":"                + \"event \u003cdescription\u003e /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"ys112"},"content":"                + \"list\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"ys112"},"content":"                + \"done \u003cindex\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"ys112"},"content":"                + \"delete \u003cindex\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"ys112"},"content":"                + \"find \u003ckeyword\u003e\\n\\t\"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"ys112"},"content":"                + \"bye\");","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"ys112"},"content":"     * Shows bye message.","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"ys112"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"ys112"},"content":"        botHeader();","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"ys112"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":157}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"class ParserTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    void getCommandWord_emptyInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"\");","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getCommandWord(),","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"            \"Command cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    void getCommandWord_spaceInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getCommandWord(),","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"            \"Command cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    void getCommandWord_success() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"todo test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        assertEquals(parser.getCommandWord(), \"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    void getDescription_emptyInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getDescription(),","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"            \"The description of a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: description \u003cdescription\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    void getDescription_success() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"todo test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        assertEquals(parser.getDescription(), \"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    void getBy_wrongByFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test by 23-12-2032\");","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"            \"Invalid command for deadline. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    void getBy_wrongDateFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 2032/12/13\");","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"            \"Invalid date format. Please use dd-mm-yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    void getBy_emptyInput() {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by\");","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"            \"The deadline and description for a task cannot be empty. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"    void getBy_multipleBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 23-12-2032 /by 2-2-2022\");","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        assertThrows(DukeException.class, () -\u003e parser.getBy(),","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"            \"Invalid command for deadline. \\n\\t\"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"                + \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    void getBy_success() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        Parser parser \u003d new Parser(\"deadline test /by 23-12-2032\");","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        assertEquals(parser.getBy(), Task.getInputDateFormat(\"23-12-2032\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":82}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package duke;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":" * Tests for TaskList class.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":" *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":" * @see TaskList","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"class TaskListTest {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"     * Tests for addTask method.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    void addTask_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        Task task \u003d new Todo(\"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        assertEquals(taskList.getSize(), 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     * Tests for addTask failure for null added.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    void addTask_fail() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        assertFalse(taskList.addTask(null));","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     * Tests for deleteTask method.","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    void deleteTask_success() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        Task task \u003d new Todo(\"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        assertEquals(taskList.deleteTask(0), task);","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     * Tests for deleteTask method.","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    void deleteTask_negativeIndex() {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        Task task \u003d new Todo(\"test\");","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(-100));","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"     * Tests for deleteTask failure for invalid index.","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    void deleteTask_fail() {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(100));","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ys112":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by 3-4-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from 27-1-2024 /to 30-2-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"find book","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"event project meeting /from 27-1-2024 /to 30-2-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"mark 3","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"unmark 3","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 03 2023","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"mark 999","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"delete 999","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":21}},{"path":"text-ui-test/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 Feb 2023","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"mark 8","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"delete 8","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ys112":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ys112":1,"-":20}}]
