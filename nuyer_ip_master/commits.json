{"authorDailyContributionsMap":{"nuyer":[{"date":"2024-01-25","commitResults":[{"hash":"d4447308f5bf1caef5a7ca5bef362873d962e8e4","isMergeCommit":false,"messageTitle":"Level 0. Rename, Greet, Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":6}}},{"hash":"87a6b7d3833b5656a6aebf77d77b415ccdeabb01","isMergeCommit":false,"messageTitle":"Level 1. Echo","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":4}}},{"hash":"e4321054e7d0ac6640be36e75036fddccac62496","isMergeCommit":false,"messageTitle":"Level 2. Add, List","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}},{"hash":"40161a419229320f7d9f7152485dc3ae271e0281","isMergeCommit":false,"messageTitle":"Level 3. Mark as Done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":16}}},{"hash":"5fd81e8bf274c8166fcad5b31ba5230d7d46eaa5","isMergeCommit":false,"messageTitle":"Level 4. ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":40}}}]},{"date":"2024-01-30","commitResults":[{"hash":"74f2e847115bfada9db60950aa9e20e74653461f","isMergeCommit":false,"messageTitle":"Level5. Handle Errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":43,"deletions":12}}}]},{"date":"2024-01-31","commitResults":[{"hash":"850e8ed72377afa5ae0cfb3866f42fa64251bea6","isMergeCommit":false,"messageTitle":"A-TextUiTesting: Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":1}}},{"hash":"f7e2b289eae5d2ceeedf7b26e93843c7a4f846f7","isMergeCommit":false,"messageTitle":"Level 6. Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"java":{"insertions":31,"deletions":19}}}]},{"date":"2024-02-04","commitResults":[{"hash":"34e615a19fe652a30270e873027826d5fe026a52","isMergeCommit":false,"messageTitle":"restructure Duke.java and add enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":57}}},{"hash":"0a2c2771d22a16cf785b4c107e196faf811bb56d","isMergeCommit":false,"messageTitle":"Implement Save to save and load tasks from cache","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":8}}},{"hash":"7fbf851da94d1d688bfb7e74f6ab02ef3ee6b69a","isMergeCommit":false,"messageTitle":"Change Enums to PascalCase","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"458ad38139dc739431be2a79155cc4efb0b24f8a","isMergeCommit":false,"messageTitle":"Correct indentation and coding style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":14}}}]},{"date":"2024-02-06","commitResults":[{"hash":"9c2de3795178a15a06bc46855ce284f3530a3480","isMergeCommit":false,"messageTitle":"Level 8. Dates and Times: store dates as a java.time.LocalDateTime","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":26}}},{"hash":"75d6eb6452afd1dee213e678780fed92aa6ba7e8","isMergeCommit":false,"messageTitle":"Create TaskList Class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":25}}},{"hash":"fba3b118cbc8e7b8203c1b6498d92096fabe7d19","isMergeCommit":false,"messageTitle":"Add storage class","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":51}}},{"hash":"275e04e2b208d6340727139b803b02110ca71fa4","isMergeCommit":false,"messageTitle":"Edit HORIZONTAL LINE constant","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"cfbaa88db2ca62e1ba6d9e766dc620bdf2f6b259","isMergeCommit":false,"messageTitle":"create tasks package and commands package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":35}}},{"hash":"20220b388bf76c2626a035a77625b466026da3f1","isMergeCommit":false,"messageTitle":"Create all command classes in command package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":236,"deletions":156}}},{"hash":"6099c328be0fc7f7a2323eb31dde1b7c8441811f","isMergeCommit":true,"messageTitle":"Merge commit \u0027a6f73244a20539e20c2189973ebf597df34ef631\u0027","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"701051a6b772ed697779bda4110ea36d70170d07","isMergeCommit":false,"messageTitle":"Setting up for JUnit: rearrange file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":482}}}]},{"date":"2024-02-07","commitResults":[{"hash":"79897393b03a83fa967e5fe55adbdba01db80bf2","isMergeCommit":false,"messageTitle":"Restructure Command package for JUnit Test: change return type Command.execute to List\u003cString\u003e","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":563,"deletions":0}}},{"hash":"20ffcc5a5af3c0687cb00858c3e2ad7f036f7c80","isMergeCommit":false,"messageTitle":"Create JUnit test for Event and DeadlineCommand","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":19}}},{"hash":"258f21412ddd75ee5ddb59b0782ae2958b3fa100","isMergeCommit":false,"messageTitle":"Reorder Imports and Add getDescription and getisDone method","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":35}}},{"hash":"47e0c5c8fa261d3b8ca83bd0fc151ade8a40e7cf","isMergeCommit":false,"messageTitle":"Create FindCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":4}}},{"hash":"91b972c2d28bd12be1a24dfd2737a0a5d749b52a","isMergeCommit":false,"messageTitle":"Edit Parser to Support Find Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"8bd1bd6b0f6065e9fe72060b24f6ba37333d9e8c","isMergeCommit":false,"messageTitle":"Edit FindCommand to show the order number","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"622b00f12a32c22fdc8d61d44b7fb50a75d21011","isMergeCommit":false,"messageTitle":"Add JavaDoc for classes and methods","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":180,"deletions":5}}},{"hash":"fa2613c1822a316c3102c6b59c2e5e7698d99eea","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027 into branch-A-JavaDoc","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-08","commitResults":[{"hash":"75310e1b2b74b3f7ca2a3b402310142a7a4b08cb","isMergeCommit":true,"messageTitle":"Reorder Imports and Add getDescription and getisDone method","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6117a5b688d971f6498fa1c1144b5f9bde91d188","isMergeCommit":false,"messageTitle":"Correct indentation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":7}}}]},{"date":"2024-02-13","commitResults":[{"hash":"ec5459ff6bd73f0102ea5e6746006290fa9b539b","isMergeCommit":false,"messageTitle":"Correct Coding Standard by using Checkstyle Reorder import in Duke.java","messageBody":"","tags":["A-Checkstyle"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":6}}},{"hash":"f6c1c0515703bfb2c2636d54aa600975c85395c6","isMergeCommit":false,"messageTitle":"Add javafx","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"0b3dc336532e57d4e20f7ee27e43d8c79b8bfbc4","isMergeCommit":false,"messageTitle":"Setup basic JavaFX for duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":46,"deletions":6}}},{"hash":"04a866150390a379ffcaa12084541bd9ac5914ab","isMergeCommit":false,"messageTitle":"Styling the UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"b740f8054d834759e2329060dcb9fe93e33fb90d","isMergeCommit":false,"messageTitle":"Add user input event handlers","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}}]},{"date":"2024-02-14","commitResults":[{"hash":"28116c74731bc11a9ccdec808ba44c421f54b42a","isMergeCommit":false,"messageTitle":"Add Dialog Boxes and Avatars","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":20}}},{"hash":"713a41d597604da23a5931e37ac0c3d9e8ad1599","isMergeCommit":false,"messageTitle":"Add flip method in DialogBox such that the image on the left for Dino\u0027s output","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}},{"hash":"0e7af6bd59f3371cf751f11ce4141df345ceae8f","isMergeCommit":false,"messageTitle":"Add padding in dialogbox annd clip avatar into a circle shape","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"9f0c87dc9f739cd5dc0c22d20f18705edaf588cf","isMergeCommit":false,"messageTitle":"Add background color to each dialog box","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}}]},{"date":"2024-02-15","commitResults":[{"hash":"21e6b1e58ab43a32e48e844b6c1aed72907ef6c2","isMergeCommit":false,"messageTitle":"Adding Dialog Boxes","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"fxml":{"insertions":46,"deletions":0},"java":{"insertions":125,"deletions":142}}},{"hash":"a488f72c2837f1f6593463dff7c2a43bb9fc877d","isMergeCommit":true,"messageTitle":"Merge Level-10 into master branch","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-23","commitResults":[{"hash":"63d99fd5540085bc0e65452b4d4c5964c908362b","isMergeCommit":false,"messageTitle":"Change filename and package name from duke to dino","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":104}}},{"hash":"10a642d66696ecd0bd979f9c985d2fcd492c7144","isMergeCommit":false,"messageTitle":"Improve Code quality: Extract some methods","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":140,"deletions":116}}},{"hash":"ee2a04d3257efb93420dac6b847d6790300aada1","isMergeCommit":false,"messageTitle":"Change Duke to Dino and Refactor","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":105,"deletions":105}}},{"hash":"7b0984e3580d1808bd7d167976211654c3975598","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-fix-duke-to-dino\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"e98b06c2e04a212698072ed9082ee20bb6dc537b","isMergeCommit":false,"messageTitle":"Change correct duke to dino for the messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1},"md":{"insertions":4,"deletions":4}}},{"hash":"b6a0e73879e9b27c5b25fd2d349670a945f474e4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodeQuality\u0027 into master","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"81312ba72dd4ca9322f8b9318953f060fcbd9278","isMergeCommit":false,"messageTitle":"Add assertions to processInput() method","messageBody":"The function processInput is responsible for parsing user input and returning the corresponding command object based on the input. It is essential to ensure that the input and instruction are not null to prevent unexpected behavior.\n\nAdding assertions for input and instruction checks enhances the robustness of the function and helps catch potential issues early.\n\n* Ensure input string is not null or empty.\n* Ensure Instruction enum is not null.\n\nThese assertions provide clarity and improve the reliability of the processInput function.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"eb5e396d8149ec83a4997966ddbaa95179950655","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-Assertions\u0027: Add assertions to enhance code reliability","messageBody":"The branch-A-Assertions introduces a series of assertions to the codebase, specifically within the processInput() methos. These assertions aim to improve the reliability  of the code.\n\nAssert that the input string provided to the processInput function is not null or empty.\nAssert that the Instruction enum obtained from the parsed input is not null.\nThese assertions serve as guardrails against unexpected behavior and programming errors, helping to catch potential issues early.\n\nBy merging branch-A-Assertions into the master branch, we integrate these enhancements into the main codebase, thereby improving its overall stability and maintainability.\n","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"nuyer":{"java":1025,"md":4,"fxml":46,"sh":1,"bat":1,"gradle":17,"txt":20}},"authorContributionVariance":{"nuyer":79780.67},"authorDisplayNameMap":{"nuyer":"CS2103T-F12-1 CHOW..AWIN"}}
