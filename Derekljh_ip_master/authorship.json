[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    static String name \u003d \"Lunaris\";","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    static String indentation \u003d \"  \";","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"    static String indentedLine \u003d \"  _________________________________________________________\";","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"    // Just for convenience of copy paste.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    // System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    static ArrayList\u003cTask\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    public enum Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"        BYE, LIST, UNMARK, MARK, DELETE, TODO, DEADLINE, EVENT, UNKNOWN","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"        // Print out greeting message","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"        System.out.println(indentation + \"Hey! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"                + indentation + \"Is there anything I can do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"            Command category \u003d getCommand(sc.next());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"            switch (category) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"                case BYE:","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation +","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Derekljh"},"content":"                            \"Leaving so soon? Alright, have a great day ahead!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Derekljh"},"content":"                    return;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Derekljh"},"content":"                case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Derekljh"},"content":"                    for (int i \u003d 0; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Derekljh"},"content":"                        Task currTask \u003d inputList.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + (i + 1) + \".\" + currTask.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"Derekljh"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"Derekljh"},"content":"                    addTask(inputList, category, sc);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"Derekljh"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"Derekljh"},"content":"    public static Command getCommand(String input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"Derekljh"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"Derekljh"},"content":"            return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"Derekljh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"Derekljh"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Derekljh"},"content":"    public static void addTask(ArrayList\u003cTask\u003e inputList, Command category, Scanner sc) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"Derekljh"},"content":"        switch (category) {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"Derekljh"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Derekljh"},"content":"                if (sc.hasNextInt()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"Derekljh"},"content":"                    int taskId \u003d sc.nextInt();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"Derekljh"},"content":"                    inputList.get(taskId - 1).markNotDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + \"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + inputList.get(taskId - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Derekljh"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, but which task do you want me to unmark?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"Derekljh"},"content":"            case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"Derekljh"},"content":"                if (sc.hasNextInt()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Derekljh"},"content":"                    int taskId \u003d sc.nextInt();","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"Derekljh"},"content":"                    inputList.get(taskId - 1).markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + inputList.get(taskId - 1).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"Derekljh"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, but which task do you want me to mark?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"Derekljh"},"content":"                        sc.next();","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Derekljh"},"content":"            case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"Derekljh"},"content":"                if (sc.hasNextInt()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"Derekljh"},"content":"                    int taskId \u003d sc.nextInt();","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + inputList.get(taskId - 1).toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"Derekljh"},"content":"                    inputList.remove(taskId - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + \"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"Derekljh"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"Derekljh"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, but which task do you want me to delete?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"Derekljh"},"content":"            case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"Derekljh"},"content":"                String toDoDescription \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"Derekljh"},"content":"                if (toDoDescription.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please give me a description of the todo as well! \u003e.\u003c\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"Derekljh"},"content":"                                indentation + \"Format should be todo (description)!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"Derekljh"},"content":"                ToDo toDo \u003d new ToDo(toDoDescription);","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Derekljh"},"content":"                inputList.add(toDo);","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentation + toDo);","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentation + \"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Derekljh"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"Derekljh"},"content":"                String deadlineDescription \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"Derekljh"},"content":"                if (!deadlineDescription.contains(\" /by \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please give me a description of the deadline as well! \u003e.\u003c\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"Derekljh"},"content":"                                indentation + \"Format should be deadline (description) /by (date)!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"Derekljh"},"content":"                String[] deadlineArguments \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"Derekljh"},"content":"                Deadline deadline \u003d new Deadline(deadlineArguments[0], deadlineArguments[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"Derekljh"},"content":"                inputList.add(deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentation + deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentation + \"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"Derekljh"},"content":"            case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"Derekljh"},"content":"                String eventDescription \u003d sc.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"Derekljh"},"content":"                if (!eventDescription.contains(\" /from \") || !eventDescription.contains(\" /to \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"Derekljh"},"content":"                    try {","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"Derekljh"},"content":"                        throw new DukeException(\"Sorry, please give me a description of the event as well! \u003e.\u003c\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"Derekljh"},"content":"                                indentation + \"Format should be event (description) /from (time) /to (time)!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"Derekljh"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Derekljh"},"content":"                        System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"Derekljh"},"content":"                        return;","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Derekljh"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"Derekljh"},"content":"                String[] eventArguments \u003d eventDescription.split(\" /from \");","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"Derekljh"},"content":"                String[] eventDuration \u003d eventArguments[1].split(\" /to \");","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"Derekljh"},"content":"                Event event \u003d new Event(eventArguments[0], eventDuration[0], eventDuration[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"Derekljh"},"content":"                inputList.add(event);","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentation + event);","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentation + \"Now you have \" + inputList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"Derekljh"},"content":"                System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"Derekljh"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"Derekljh"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"Derekljh"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"Derekljh"},"content":"                    throw new DukeException(\"Sorry, I cannot understand what this is!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"Derekljh"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentation + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"Derekljh"},"content":"                    System.out.println(indentedLine);","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"Derekljh"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"Derekljh"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Derekljh":184,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Derekljh":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"    // Method to mark whether task is done or not.","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Derekljh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Derekljh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Derekljh"},"content":"    // Mark done.","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Derekljh"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Derekljh"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Derekljh"},"content":"    // Unmark.","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Derekljh"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Derekljh"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Derekljh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Derekljh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Derekljh":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Derekljh"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Derekljh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Derekljh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Derekljh"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Derekljh"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Derekljh"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Derekljh"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Derekljh"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Derekljh":10}}]
