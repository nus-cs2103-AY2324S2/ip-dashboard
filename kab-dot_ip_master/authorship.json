[{"path":".data/text/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"T | 0 | read","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"D | 1 | read two books | 2022-09-01 1200","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"kab-dot":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kab-dot":25,"-":41}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"//package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"//import java.util.List;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"///**","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"// * Represents a command that can be executed by the Duke program.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"// */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"//public class Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"//    public enum CommandType {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"//        BYE, LIST, TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, FIND, INVALID","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"//     * Enumerates the possible types of commands.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"//    private CommandType type;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"//    private String argument;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"//     * Constructs a Command object with the specified type and argument.","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"//     * @param type     The type of the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"//     * @param argument The argument associated with the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"//    public Command(CommandType type, String argument) {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"//        this.type \u003d type;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"//        this.argument \u003d argument;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"//     * Executes the command based on its type.","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"//     * @param tasks   The TaskList on which the command operates.","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"//     * @param ui      The Ui used to interact with the user.","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"//     * @param storage The Storage used to save and load tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"//     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"//    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"//        switch (type) {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"//        case BYE:","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"//            ui.showGoodbye();","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"//        case LIST:","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"//            ui.showTaskList(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"//        case TODO:","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"//            tasks.addTask(new ToDo(argument));","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"//            ui.showTaskAdded(tasks.getTasks().get(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"//            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"//        case DEADLINE:","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"//            String[] deadlineDetails \u003d argument.split(\"/by\");","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"//            if (deadlineDetails.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"//                tasks.addTask(new Deadline(deadlineDetails[0].trim(), deadlineDetails[1].trim()));","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"//                ui.showTaskAdded(tasks.getTasks().get(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"//                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"//            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"//              //throw new DukeException(\"Invalid deadline format.","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"//              Please use: deadline \u003cdescription\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"//                /by \u003cdate/time\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"//            }","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"//        case EVENT:","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"//            // Handle event command","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"//            String[] eventDetails \u003d argument.split(\"/from|/to\");","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"//            if (eventDetails.length \u003d\u003d 3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"//                tasks.addTask(new Event(eventDetails[0].trim(), eventDetails[1].trim(), eventDetails[2].trim()));","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"//                ui.showTaskAdded(tasks.getTasks().get(tasks.getSize() - 1), tasks.getSize());","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"//                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"//            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"//                throw new DukeException(\"Invalid event format. Please use: event \u003cdescription\u003e \"","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"//                        + \"/from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"//            }","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"//        case DELETE:","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"//            // Handle delete command","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"//            int taskIndexDelete \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"//            tasks.deleteTask(taskIndexDelete, ui);","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"//            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"//        case MARK:","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"//            // Handle mark command","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"//            int markIndex \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"//            if (isValidIndex(markIndex, tasks.getSize())) {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"//                tasks.markTaskAsDone(markIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"//                ui.showTaskMarked(tasks.getTasks().get(markIndex));","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"//                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"//            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"//                ui.showInvalidTaskIndex();","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"//            }","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"//        case UNMARK:","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"//            // Handle unmark command","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"kab-dot"},"content":"//            int unmarkIndex \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"kab-dot"},"content":"//            if (isValidIndex(unmarkIndex, tasks.getSize())) {","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"kab-dot"},"content":"//                tasks.unmarkTaskAsDone(unmarkIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"kab-dot"},"content":"//                ui.showTaskUnmarked(tasks.getTasks().get(unmarkIndex));","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"kab-dot"},"content":"//                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"kab-dot"},"content":"//            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"//                ui.showInvalidTaskIndex();","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"//            }","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"//        case FIND:","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"//            // Handle FIND command","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"kab-dot"},"content":"//            List\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"kab-dot"},"content":"//            ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"kab-dot"},"content":"//            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"kab-dot"},"content":"//        case INVALID:","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"kab-dot"},"content":"//            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"kab-dot"},"content":"//        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"kab-dot"},"content":"//            throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"kab-dot"},"content":"//        }","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"kab-dot"},"content":"//     * Checks if the given index is valid for the current task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"kab-dot"},"content":"//     * @param index The index to be checked.","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"kab-dot"},"content":"//     * @param size  The size of the task list.","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"kab-dot"},"content":"//     * @return True if the index is valid, false otherwise.","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"kab-dot"},"content":"//    private boolean isValidIndex(int index, int size) {","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"//        return index \u003e\u003d 0 \u0026\u0026 index \u003c size;","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"kab-dot"},"content":"//}","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"kab-dot"},"content":" * Represents a command that can be executed by the Duke program.","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"kab-dot"},"content":"public class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"kab-dot"},"content":"     * * Enumerates the possible types of commands.","lastModifiedDate":"2024-02-14"},{"lineNumber":137,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"kab-dot"},"content":"    public enum CommandType {","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"kab-dot"},"content":"        BYE, LIST, TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, FIND, INVALID","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"kab-dot"},"content":"    private CommandType type;","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"kab-dot"},"content":"    private String argument;","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"kab-dot"},"content":"     * Constructs a Command object with the specified type and argument.","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"kab-dot"},"content":"     * @param type     The type of the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"kab-dot"},"content":"     * @param argument The argument associated with the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"kab-dot"},"content":"    public Command(CommandType type, String argument) {","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"kab-dot"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"kab-dot"},"content":"        this.argument \u003d argument;","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"kab-dot"},"content":"        assert argument !\u003d null : \"Argument should not be null or empty\";","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"kab-dot"},"content":"     * Executes the command based on its type.","lastModifiedDate":"2024-02-14"},{"lineNumber":158,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"kab-dot"},"content":"     * @param tasks   The TaskList on which the command operates.","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"kab-dot"},"content":"     * @param ui      The Ui used to interact with the user.","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"kab-dot"},"content":"     * @param storage The Storage used to save and load tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":162,"author":{"gitId":"kab-dot"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":163,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":164,"author":{"gitId":"kab-dot"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"kab-dot"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"kab-dot"},"content":"        switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"kab-dot"},"content":"        case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"kab-dot"},"content":"            response.append(\"Goodbye! Hope to see you again soon!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"kab-dot"},"content":"        case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"kab-dot"},"content":"            response.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"kab-dot"},"content":"            List\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"kab-dot"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"kab-dot"},"content":"                response.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"kab-dot"},"content":"        case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"kab-dot"},"content":"            ToDo todo \u003d new ToDo(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"kab-dot"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2024-02-10"},{"lineNumber":181,"author":{"gitId":"kab-dot"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"kab-dot"},"content":"            response.append(\"Got it. I\u0027ve added this task:\\n  \").append(todo)","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"kab-dot"},"content":"                    .append(\"\\nNow you have \").append(tasks.getSize()).append(\" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":184,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"kab-dot"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"kab-dot"},"content":"            String[] deadlineDetails \u003d argument.split(\"/by\", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"kab-dot"},"content":"            assert deadlineDetails.length \u003d\u003d 2 : \"Deadline argument should contain description \"","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"kab-dot"},"content":"                    + \"and date/time separated by \u0027/by\u0027\";","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"kab-dot"},"content":"            if (deadlineDetails.length !\u003d 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Invalid deadline format. Please use: deadline \u003cdescription\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"kab-dot"},"content":"            Deadline deadline \u003d new Deadline(deadlineDetails[0].trim(), deadlineDetails[1].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":193,"author":{"gitId":"kab-dot"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"kab-dot"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"kab-dot"},"content":"            response.append(\"Got it. I\u0027ve added this task:\\n  \").append(deadline)","lastModifiedDate":"2024-02-10"},{"lineNumber":196,"author":{"gitId":"kab-dot"},"content":"                    .append(\"\\nNow you have \").append(tasks.getSize()).append(\" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"kab-dot"},"content":"        case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"kab-dot"},"content":"            String[] eventDetails \u003d argument.split(\"/from|/to\", 3);","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"kab-dot"},"content":"            if (eventDetails.length !\u003d 3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Invalid event format. Please use: event \u003cdescription\u003e \"","lastModifiedDate":"2024-02-14"},{"lineNumber":202,"author":{"gitId":"kab-dot"},"content":"                        + \"/from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-14"},{"lineNumber":203,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"kab-dot"},"content":"            Event event \u003d new Event(eventDetails[0].trim(), eventDetails[1].trim(), eventDetails[2].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":205,"author":{"gitId":"kab-dot"},"content":"            tasks.addTask(event);","lastModifiedDate":"2024-02-10"},{"lineNumber":206,"author":{"gitId":"kab-dot"},"content":"            storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"kab-dot"},"content":"            response.append(\"Got it. I\u0027ve added this task:\\n  \").append(event)","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"kab-dot"},"content":"                    .append(\"\\nNow you have \").append(tasks.getSize()).append(\" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":209,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"kab-dot"},"content":"        case DELETE:","lastModifiedDate":"2024-02-10"},{"lineNumber":211,"author":{"gitId":"kab-dot"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":212,"author":{"gitId":"kab-dot"},"content":"                int indexToDelete \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":213,"author":{"gitId":"kab-dot"},"content":"                assert isValidIndex(indexToDelete, tasks.getSize()) : \"Index out of bounds\";","lastModifiedDate":"2024-02-15"},{"lineNumber":214,"author":{"gitId":"kab-dot"},"content":"                Task taskToDelete \u003d tasks.deleteTask(indexToDelete);","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"kab-dot"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"kab-dot"},"content":"                response.append(\"Noted. I\u0027ve removed this task:\\n  \").append(taskToDelete)","lastModifiedDate":"2024-02-10"},{"lineNumber":217,"author":{"gitId":"kab-dot"},"content":"                        .append(\"\\nNow you have \").append(tasks.getSize()).append(\" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":218,"author":{"gitId":"kab-dot"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":219,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Please specify a valid task number to delete.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":220,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"kab-dot"},"content":"        case MARK:","lastModifiedDate":"2024-02-10"},{"lineNumber":223,"author":{"gitId":"kab-dot"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":224,"author":{"gitId":"kab-dot"},"content":"                int indexToMark \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":225,"author":{"gitId":"kab-dot"},"content":"                Task markedTask \u003d tasks.markTaskAsDone(indexToMark);","lastModifiedDate":"2024-02-10"},{"lineNumber":226,"author":{"gitId":"kab-dot"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"kab-dot"},"content":"                response.append(\"Nice! I\u0027ve marked this task as done:\\n  \").append(markedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":228,"author":{"gitId":"kab-dot"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":229,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Please specify a valid task number to mark as done.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":230,"author":{"gitId":"kab-dot"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":231,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Task not found. Please specify a valid task number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":232,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":233,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":234,"author":{"gitId":"kab-dot"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"kab-dot"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":236,"author":{"gitId":"kab-dot"},"content":"                int indexToUnmark \u003d Integer.parseInt(argument) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":237,"author":{"gitId":"kab-dot"},"content":"                Task unmarkedTask \u003d tasks.unmarkTaskAsDone(indexToUnmark);","lastModifiedDate":"2024-02-10"},{"lineNumber":238,"author":{"gitId":"kab-dot"},"content":"                storage.saveTasks(tasks.getTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":239,"author":{"gitId":"kab-dot"},"content":"                response.append(\"Okay! I\u0027ve marked this task as not done:\\n  \").append(unmarkedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":240,"author":{"gitId":"kab-dot"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":241,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Please specify a valid task number to unmark.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":242,"author":{"gitId":"kab-dot"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":243,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"Task not found. Please specify a valid task number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":244,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":245,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"kab-dot"},"content":"        case FIND:","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"kab-dot"},"content":"            List\u003cTask\u003e matchingTasks \u003d tasks.findTasksByKeyword(argument);","lastModifiedDate":"2024-02-10"},{"lineNumber":248,"author":{"gitId":"kab-dot"},"content":"            if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":249,"author":{"gitId":"kab-dot"},"content":"                response.append(\"No matching tasks found.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":250,"author":{"gitId":"kab-dot"},"content":"            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":251,"author":{"gitId":"kab-dot"},"content":"                response.append(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":252,"author":{"gitId":"kab-dot"},"content":"                for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":253,"author":{"gitId":"kab-dot"},"content":"                    response.append(i + 1).append(\". \").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":254,"author":{"gitId":"kab-dot"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":255,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":256,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"kab-dot"},"content":"        case INVALID:","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"kab-dot"},"content":"            response.append(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-10"},{"lineNumber":259,"author":{"gitId":"kab-dot"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":260,"author":{"gitId":"kab-dot"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":261,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"Unexpected command type: \" + type);","lastModifiedDate":"2024-02-10"},{"lineNumber":262,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":263,"author":{"gitId":"kab-dot"},"content":"        return response.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":264,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"kab-dot"},"content":"    private boolean isValidIndex(int index, int size) {","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"kab-dot"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c size;","lastModifiedDate":"2024-01-31"},{"lineNumber":268,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":269,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":270,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"kab-dot":270}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"//import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"//import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"//import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"////public class Deadline extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"////    protected String by;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"////    //private LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"////","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"////    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"////        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"////        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"////    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"////","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"////    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"////    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"////        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"////    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"////","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"////","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"////}","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"//public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"//    private LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"//    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"//        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"//        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"//    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"//        return by;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"//    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"//    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"//        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"//                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"//    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"//    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"//        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" +","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"//                by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"//}","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":" * Represents a task with a deadline in the Duke program.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"     * @param by The deadline of the task in the format \"yyyy-MM-dd HHmm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"     * @throws DateTimeException If there is an error parsing the deadline format.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"    public Deadline(String description, String by) throws DateTimeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"            System.out.println(\"Invalid date/time format. Please use: yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"            throw e;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"     * @return The LocalDateTime representing the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"        return by;","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"     * @return A string in the format \"[D][Status] Description (by: Deadline)\".","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"kab-dot"},"content":"     * Returns a string representation of the Deadline object for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"kab-dot"},"content":"     * @return A string in the format \"D | Status | Description | Deadline\".","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"kab-dot"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \"","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kab-dot":105}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kab-dot":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"//import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":" * Aether is a task-management chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":" * It allows users to add, delete, mark tasks as done, and view the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":" * It also supports todo, deadline and event tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":" * Duke also supports saving and loading tasks from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"     * Constructs a Duke object with the specified file path for task storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"     * @param filePath The file path for task storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"            List\u003cTask\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"            this.tasks \u003d new TaskList(loadedTasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"            this.tasks \u003d new TaskList(); // Ensure tasks is always initialized to prevent NullPointerException","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"    //        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"    //            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"    //        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"    //            ui.showLoadingError();","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"    //            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"    //  }","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"     * Initializes a new Duke application instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"     * Sets up the user interface, storage system with a default file path, and an empty task list.","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"    public Duke() {","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"        String defaultFilePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-14"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"        this.storage \u003d new Storage(defaultFilePath);","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-14"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"     * Runs the Duke program, starting the chatbot interaction.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"        ui.showSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"        String input;","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"        ui.showSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"        do {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"            processCommand(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"        } while (!input.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"kab-dot"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"kab-dot"},"content":"     * Processes the user command and executes the corresponding action.","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"     * @param input The user\u0027s input command.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"    private void processCommand(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"kab-dot"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"kab-dot"},"content":"            Command command \u003d parser.parse();","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"kab-dot"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"kab-dot"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"kab-dot"},"content":"            ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"kab-dot"},"content":"     * The main method to start the Duke program.","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"kab-dot"},"content":"     * @param args The command-line arguments (not used in this program).","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"kab-dot"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"kab-dot"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"kab-dot"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"kab-dot"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"kab-dot"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"kab-dot"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"kab-dot"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"kab-dot"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"kab-dot"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"kab-dot"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"kab-dot"},"content":"        stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"kab-dot"},"content":"        //...","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"kab-dot"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"kab-dot"},"content":"        stage.setTitle(\"Aether\");","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"kab-dot"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"kab-dot"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"kab-dot"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"kab-dot"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"kab-dot"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"kab-dot"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"kab-dot"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"kab-dot"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"kab-dot"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"kab-dot"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"kab-dot"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"kab-dot"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"kab-dot"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"kab-dot"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"kab-dot"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"kab-dot"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"kab-dot"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"kab-dot"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"kab-dot"},"content":"        //More code to be added here later","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"kab-dot"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":174,"author":{"gitId":"kab-dot"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"kab-dot"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-08"},{"lineNumber":176,"author":{"gitId":"kab-dot"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":177,"author":{"gitId":"kab-dot"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":178,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":179,"author":{"gitId":"kab-dot"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":180,"author":{"gitId":"kab-dot"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-08"},{"lineNumber":181,"author":{"gitId":"kab-dot"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":182,"author":{"gitId":"kab-dot"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":183,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":184,"author":{"gitId":"kab-dot"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-08"},{"lineNumber":185,"author":{"gitId":"kab-dot"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-08"},{"lineNumber":186,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":187,"author":{"gitId":"kab-dot"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":188,"author":{"gitId":"kab-dot"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-08"},{"lineNumber":189,"author":{"gitId":"kab-dot"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":190,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":191,"author":{"gitId":"kab-dot"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":192,"author":{"gitId":"kab-dot"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-08"},{"lineNumber":193,"author":{"gitId":"kab-dot"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":194,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":195,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":197,"author":{"gitId":"kab-dot"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-08"},{"lineNumber":198,"author":{"gitId":"kab-dot"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-08"},{"lineNumber":199,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"kab-dot"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-08"},{"lineNumber":201,"author":{"gitId":"kab-dot"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-08"},{"lineNumber":202,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":203,"author":{"gitId":"kab-dot"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-08"},{"lineNumber":204,"author":{"gitId":"kab-dot"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-08"},{"lineNumber":205,"author":{"gitId":"kab-dot"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-08"},{"lineNumber":206,"author":{"gitId":"kab-dot"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":207,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":208,"author":{"gitId":"kab-dot"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-08"},{"lineNumber":209,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":210,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":211,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":212,"author":{"gitId":"kab-dot"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-08"},{"lineNumber":213,"author":{"gitId":"kab-dot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":214,"author":{"gitId":"kab-dot"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":215,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":216,"author":{"gitId":"kab-dot"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":217,"author":{"gitId":"kab-dot"},"content":"        String userMessage \u003d userInput.getText(); // Retrieve user input text","lastModifiedDate":"2024-02-08"},{"lineNumber":218,"author":{"gitId":"kab-dot"},"content":"        Label userTextLabel \u003d new Label(userMessage); // Create a Label with user input text","lastModifiedDate":"2024-02-08"},{"lineNumber":219,"author":{"gitId":"kab-dot"},"content":"        Label dukeTextLabel \u003d new Label(getResponse(userMessage)); // Create a Label with Duke\u0027s response","lastModifiedDate":"2024-02-08"},{"lineNumber":220,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":221,"author":{"gitId":"kab-dot"},"content":"        // Create DialogBox instances using the user input text and images","lastModifiedDate":"2024-02-08"},{"lineNumber":222,"author":{"gitId":"kab-dot"},"content":"        DialogBox userDialogBox \u003d DialogBox.getUserDialog(userMessage, user);","lastModifiedDate":"2024-02-08"},{"lineNumber":223,"author":{"gitId":"kab-dot"},"content":"        DialogBox dukeDialogBox \u003d DialogBox.getDukeDialog(dukeTextLabel.getText(), duke);","lastModifiedDate":"2024-02-08"},{"lineNumber":224,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":225,"author":{"gitId":"kab-dot"},"content":"        // Add the DialogBox instances to the dialogContainer","lastModifiedDate":"2024-02-08"},{"lineNumber":226,"author":{"gitId":"kab-dot"},"content":"        dialogContainer.getChildren().addAll(userDialogBox, dukeDialogBox);","lastModifiedDate":"2024-02-08"},{"lineNumber":227,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":228,"author":{"gitId":"kab-dot"},"content":"        // Clear the user input TextField","lastModifiedDate":"2024-02-08"},{"lineNumber":229,"author":{"gitId":"kab-dot"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":230,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":231,"author":{"gitId":"kab-dot"},"content":"    //    public String getResponse(String input, TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":232,"author":{"gitId":"kab-dot"},"content":"    //        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":233,"author":{"gitId":"kab-dot"},"content":"    //            Parser parser \u003d new Parser(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":234,"author":{"gitId":"kab-dot"},"content":"    //            Command command \u003d parser.parse();","lastModifiedDate":"2024-02-10"},{"lineNumber":235,"author":{"gitId":"kab-dot"},"content":"    //            return command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":236,"author":{"gitId":"kab-dot"},"content":"    //        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":237,"author":{"gitId":"kab-dot"},"content":"    //            return \"Error: \" + e.getMessage();","lastModifiedDate":"2024-02-10"},{"lineNumber":238,"author":{"gitId":"kab-dot"},"content":"    //        }","lastModifiedDate":"2024-02-10"},{"lineNumber":239,"author":{"gitId":"kab-dot"},"content":"    //  }","lastModifiedDate":"2024-02-10"},{"lineNumber":240,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":241,"author":{"gitId":"kab-dot"},"content":"    * Gets the response from the user input.","lastModifiedDate":"2024-02-14"},{"lineNumber":242,"author":{"gitId":"kab-dot"},"content":"    *","lastModifiedDate":"2024-02-14"},{"lineNumber":243,"author":{"gitId":"kab-dot"},"content":"    * @param input The user input","lastModifiedDate":"2024-02-14"},{"lineNumber":244,"author":{"gitId":"kab-dot"},"content":"    * @return String representation of the response","lastModifiedDate":"2024-02-14"},{"lineNumber":245,"author":{"gitId":"kab-dot"},"content":"    */","lastModifiedDate":"2024-02-14"},{"lineNumber":246,"author":{"gitId":"kab-dot"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":247,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":248,"author":{"gitId":"kab-dot"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":249,"author":{"gitId":"kab-dot"},"content":"            Command command \u003d parser.parse();","lastModifiedDate":"2024-02-10"},{"lineNumber":250,"author":{"gitId":"kab-dot"},"content":"            return command.execute(tasks, ui, storage); // Use the class member directly","lastModifiedDate":"2024-02-10"},{"lineNumber":251,"author":{"gitId":"kab-dot"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":252,"author":{"gitId":"kab-dot"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2024-02-10"},{"lineNumber":253,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":254,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":255,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":256,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":257,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":258,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":259,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"kab-dot":259}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"//package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"///**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"// * DukeException is an exception class for handling exceptions.","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"// * It extends the general Exception class.","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"// */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"//public class DukeException extends Exception {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"//    * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"//    *","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"//    * @param message The error message associated with the exception.","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"//    */","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"//    public DukeException(String message) {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"//        super(message);","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"//}","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":" * DukeException is an exception class for handling exceptions in the Duke program.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":" * It extends the general Exception class.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    private String errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"     * @param errorMessage The error message associated with the exception.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"     * Get the error message associated with this exception.","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"     * @return The error message.","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        return errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"     * Set a new error message for this exception.","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"     * @param errorMessage The new error message to set.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    public void setErrorMessage(String errorMessage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"    public String toString() {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        return \"DukeException: \" + errorMessage;","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"kab-dot":61}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":" * Represents an event task with a specific start and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":" * Extends the Task class and includes functionality to parse and handle date/time information.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"     * @param startTime   The start time of the event in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"     * @param endTime     The end time of the event in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     * @throws DateTimeParseException If there is an issue parsing the date/time strings.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"            this.startTime \u003d LocalDateTime.parse(startTime, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"            this.endTime \u003d LocalDateTime.parse(endTime, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"            System.out.println(\"Invalid date/time format. Please use: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"            // Handle the exception as needed, e.g., log it or inform the user","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"            throw e;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"     * @return The start time as a LocalDateTime object.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        assert startTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"        return startTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"     * @return The end time as a LocalDateTime object.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        assert endTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        return endTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"     * Returns a string representation of the Event, including its description, start time, and end time.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"     * @return A string representation of the Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"        assert startTime !\u003d null \u0026\u0026 endTime !\u003d null : \"Start and end times should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"        String formattedStartTime \u003d startTime.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"        String formattedEndTime \u003d endTime.format(formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStartTime + \" to: \" + formattedEndTime + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kab-dot":70}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kab-dot":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"            stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kab-dot":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    @FXML","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"        // Retrieve user input text","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        // Assuming \u0027duke\u0027 is already initialized and available in this context","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"        String response \u003d duke.getResponse(input); // Now just pass the input","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        // Create dialog boxes and append them to the dialog container","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        );","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        // Clear the user input","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kab-dot":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":" * Represents a parser for processing user commands in the Duke program.","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"     * Constructs a Parser object with the specified input string.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"     * @param input The input string to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"     * Parses the input string and returns the corresponding command.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     * @return A Command object representing the parsed user command.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     * @throws DukeException If there is an error parsing the input.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.BYE, null);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.LIST, null);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"            // Check if the todo description is empty","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"            String description \u003d input.substring(4).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.TODO, description);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.DEADLINE, input.substring(9).trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.EVENT, input.substring(6).trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.DELETE, input.substring(7).trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.MARK, input.substring(5).trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"            return new Command(Command.CommandType.UNMARK, input.substring(7).trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"            return parseFindCommand(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"    private Command parseFindCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"        String keyword \u003d input.substring(4).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"OOPS!!! The keyword for find cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        return new Command(Command.CommandType.FIND, keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kab-dot":60}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":" * Manages the loading and saving of tasks from/to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    private static final String FILE_PATH \u003d \".data/text/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     * @param filePath The file path to load and save tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"     * Loads tasks from the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"     * @throws DukeException If an error occurs while loading tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"                Task task \u003d Task.createTaskFromFileString(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"     * Saves a list of tasks to the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"                writer.write(task.toFileString());","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kab-dot":62}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":" * Represents a task in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"     * Constructs a task with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"     * Gets the status icon indicating whether the task is done or not.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"     * @return The status icon as a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"     * Returns a string representation of the task for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"     * @return The string representation of the task for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"     * Creates a task from a string when loading from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"     * @param fileString The string representation of the task from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"     * @return The Task object created from the file string.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"    public static Task createTaskFromFileString(String fileString) {","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"        String[] parts \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"        if (parts.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"            Task task \u003d new Task(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"            if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"            return task;","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"        return null;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kab-dot":90}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"     * Constructs an empty task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"     * Constructs a task list with the specified list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"     * @param tasks The list of tasks to initialize the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"        if (this.tasks \u003d\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e(); // Initialize the list if it\u0027s null","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"        assert tasks.contains(task) : \"Task should be added to the list\";","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"     * Gets the list of tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"    public Task markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Index should be within the list range\";","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"            return task;","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"     * Marks a task at the specified index as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"    public Task unmarkTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"            return task;","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"kab-dot"},"content":"     * Deletes a task at the specified index and displays the deletion message using the given UI.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"kab-dot"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"    //    public void deleteTask(int taskIndex, Ui ui) {","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"    //        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"    //            Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"    //            ui.showTaskDeleted(removedTask, tasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"    //        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"kab-dot"},"content":"    //            ui.showInvalidTaskIndex();","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"kab-dot"},"content":"    //        }","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"kab-dot"},"content":"    //  }","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"kab-dot"},"content":"    public Task deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"kab-dot"},"content":"        assert taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size() : \"taskIndex should be within the valid range\";","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"kab-dot"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c this.tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"kab-dot"},"content":"            return this.tasks.remove(taskIndex);","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"kab-dot"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"kab-dot"},"content":"            throw new DukeException(\"Invalid task index.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"kab-dot"},"content":"     * Searches for tasks with descriptions containing the specified keyword.","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"kab-dot"},"content":"     * @param keyword The keyword to match in task descriptions.","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"kab-dot"},"content":"     * @return List of matching {@link Task} objects, or an empty list if no matches found.","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"kab-dot"},"content":"        return tasks.stream()","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"kab-dot"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"kab-dot"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kab-dot":131}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"     * Constructs a to-do task with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"     * @return A string representing the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kab-dot":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"//package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"//import java.util.List;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"///**","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"// * Represents the user interface of the Duke chatbot.","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"// */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"//public class Ui {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"//    private StringBuilder responseBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"//    public void showMessage(String message) {","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"//        responseBuilder.append(message).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"//     * Displays a welcome message.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"//    public void showWelcome() {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Hello! I\u0027m Aether!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"//     * Displays an error message for failed task loading.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"//    public void showLoadingError() {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Error loading tasks from file.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"kab-dot"},"content":"//     * Displays a separator line.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"kab-dot"},"content":"//    public void showSeparator() {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"kab-dot"},"content":"//     * Displays an error message.","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"kab-dot"},"content":"//     * @param errorMessage The error message to display.","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"kab-dot"},"content":"//    public void showErrorMessage(String errorMessage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"kab-dot"},"content":"//     * Displays the list of tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"kab-dot"},"content":"//     * @param taskList The task list to display.","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"kab-dot"},"content":"//    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"kab-dot"},"content":"//        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"kab-dot"},"content":"//        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"kab-dot"},"content":"//            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"kab-dot"},"content":"//        }","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"kab-dot"},"content":"//     * Displays a message indicating a task has been added.","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"kab-dot"},"content":"//     * @param task       The added task.","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"kab-dot"},"content":"//     * @param taskCount  The total number of tasks after adding.","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"kab-dot"},"content":"//    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"  \" + task);","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"kab-dot"},"content":"//     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"kab-dot"},"content":"//     * @param deletedTask      The deleted task.","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"kab-dot"},"content":"//     * @param remainingTasks   The remaining number of tasks after deletion.","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"kab-dot"},"content":"//    public void showTaskDeleted(Task deletedTask, int remainingTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"  \" + deletedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Now you have \" + remainingTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"kab-dot"},"content":"//     * Displays a message for an invalid task index.","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"kab-dot"},"content":"//    public void showInvalidTaskIndex() {","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Invalid task index. Please provide a valid task index.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"kab-dot"},"content":"//     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"kab-dot"},"content":"//     * @param markedTask The marked task.","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"kab-dot"},"content":"//    public void showTaskMarked(Task markedTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"  \" + markedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"kab-dot"},"content":"//     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"kab-dot"},"content":"//     *","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"kab-dot"},"content":"//     * @param unmarkedTask The unmarked task.","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"kab-dot"},"content":"//    public void showTaskUnmarked(Task unmarkedTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"  \" + unmarkedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"kab-dot"},"content":"//    public void showMatchingTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"kab-dot"},"content":"//        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"kab-dot"},"content":"//            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"kab-dot"},"content":"//        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"kab-dot"},"content":"//            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"kab-dot"},"content":"//            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"kab-dot"},"content":"//                System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"kab-dot"},"content":"//            }","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"kab-dot"},"content":"//        }","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"kab-dot"},"content":"//    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"kab-dot"},"content":"//     * Displays a goodbye message.","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"kab-dot"},"content":"//     */","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"kab-dot"},"content":"//    public void showGoodbye() {","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"Goodbye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"kab-dot"},"content":"//        System.out.println(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"kab-dot"},"content":"//    public String getResponseAndClear() {","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"kab-dot"},"content":"//        String response \u003d responseBuilder.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"kab-dot"},"content":"//        responseBuilder.setLength(0); // Clear the builder after retrieving the response","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"kab-dot"},"content":"//        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"kab-dot"},"content":"//    }","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"kab-dot"},"content":"//","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"kab-dot"},"content":"//}","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"kab-dot"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"kab-dot"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"kab-dot"},"content":" * Represents the user interface of the Aether chatbot.","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"kab-dot"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"kab-dot"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"kab-dot"},"content":"    private StringBuilder responseBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"kab-dot"},"content":"    // Use this method to add messages to the responseBuilder with a newline","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"kab-dot"},"content":"    private void addMessage(String message) {","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"kab-dot"},"content":"        responseBuilder.append(message).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":156,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"kab-dot"},"content":"     * Displays a welcome message.","lastModifiedDate":"2024-02-14"},{"lineNumber":160,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":161,"author":{"gitId":"kab-dot"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-10"},{"lineNumber":162,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Hello! I\u0027m Aether!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":163,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"What can I do for you?\");","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":167,"author":{"gitId":"kab-dot"},"content":"     * Displays an error message for failed task loading.","lastModifiedDate":"2024-02-14"},{"lineNumber":168,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":169,"author":{"gitId":"kab-dot"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Error loading tasks from file.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":174,"author":{"gitId":"kab-dot"},"content":"     * Displays a separator line.","lastModifiedDate":"2024-02-14"},{"lineNumber":175,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":176,"author":{"gitId":"kab-dot"},"content":"    public void showSeparator() {","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":181,"author":{"gitId":"kab-dot"},"content":"     * Displays an error message.","lastModifiedDate":"2024-02-14"},{"lineNumber":182,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":183,"author":{"gitId":"kab-dot"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2024-02-14"},{"lineNumber":184,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":185,"author":{"gitId":"kab-dot"},"content":"    public void showErrorMessage(String errorMessage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":191,"author":{"gitId":"kab-dot"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-02-14"},{"lineNumber":192,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":193,"author":{"gitId":"kab-dot"},"content":"     * @param taskList The task list to display.","lastModifiedDate":"2024-02-14"},{"lineNumber":194,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":195,"author":{"gitId":"kab-dot"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"kab-dot"},"content":"        StringBuilder tasksMessage \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"kab-dot"},"content":"        tasksMessage.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":198,"author":{"gitId":"kab-dot"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"kab-dot"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"kab-dot"},"content":"            tasksMessage.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"kab-dot"},"content":"        tasksMessage.append(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":203,"author":{"gitId":"kab-dot"},"content":"        addMessage(tasksMessage.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":204,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":207,"author":{"gitId":"kab-dot"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2024-02-14"},{"lineNumber":208,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":209,"author":{"gitId":"kab-dot"},"content":"     * @param task       The added task.","lastModifiedDate":"2024-02-14"},{"lineNumber":210,"author":{"gitId":"kab-dot"},"content":"     * @param taskCount  The total number of tasks after adding.","lastModifiedDate":"2024-02-14"},{"lineNumber":211,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":212,"author":{"gitId":"kab-dot"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":214,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"  \" + task);","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":216,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":217,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":218,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":219,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":220,"author":{"gitId":"kab-dot"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":221,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":222,"author":{"gitId":"kab-dot"},"content":"     * @param deletedTask      The deleted task.","lastModifiedDate":"2024-02-14"},{"lineNumber":223,"author":{"gitId":"kab-dot"},"content":"     * @param remainingTasks   The remaining number of tasks after deletion.","lastModifiedDate":"2024-02-14"},{"lineNumber":224,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":225,"author":{"gitId":"kab-dot"},"content":"    public void showTaskDeleted(Task deletedTask, int remainingTasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"  \" + deletedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":228,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Now you have \" + remainingTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":229,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":230,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":232,"author":{"gitId":"kab-dot"},"content":"     * Displays a message for an invalid task index.","lastModifiedDate":"2024-02-14"},{"lineNumber":233,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":234,"author":{"gitId":"kab-dot"},"content":"    public void showInvalidTaskIndex() {","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Invalid task index. Please provide a valid task index.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":236,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":239,"author":{"gitId":"kab-dot"},"content":"     * Displays a message indicating a task has been marked as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":240,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":241,"author":{"gitId":"kab-dot"},"content":"     * @param markedTask The marked task.","lastModifiedDate":"2024-02-14"},{"lineNumber":242,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":243,"author":{"gitId":"kab-dot"},"content":"    public void showTaskMarked(Task markedTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":245,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"  \" + markedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":246,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":247,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":250,"author":{"gitId":"kab-dot"},"content":"     * Displays a message indicating a task has been marked as not done.","lastModifiedDate":"2024-02-14"},{"lineNumber":251,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":252,"author":{"gitId":"kab-dot"},"content":"     * @param unmarkedTask The unmarked task.","lastModifiedDate":"2024-02-14"},{"lineNumber":253,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":254,"author":{"gitId":"kab-dot"},"content":"    public void showTaskUnmarked(Task unmarkedTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":256,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"  \" + unmarkedTask);","lastModifiedDate":"2024-02-10"},{"lineNumber":257,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":258,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":260,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":261,"author":{"gitId":"kab-dot"},"content":"     * Displays matching tasks or a message if none are found.","lastModifiedDate":"2024-02-14"},{"lineNumber":262,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":263,"author":{"gitId":"kab-dot"},"content":"     * Iterates over a list of tasks, appending each to a message if the list is not empty.","lastModifiedDate":"2024-02-14"},{"lineNumber":264,"author":{"gitId":"kab-dot"},"content":"     * If the list is empty, a message indicating no matches is displayed. Always ends by","lastModifiedDate":"2024-02-14"},{"lineNumber":265,"author":{"gitId":"kab-dot"},"content":"     * adding a separator line.","lastModifiedDate":"2024-02-14"},{"lineNumber":266,"author":{"gitId":"kab-dot"},"content":"     *","lastModifiedDate":"2024-02-14"},{"lineNumber":267,"author":{"gitId":"kab-dot"},"content":"     * @param matchingTasks List of tasks that match a certain criterion.","lastModifiedDate":"2024-02-14"},{"lineNumber":268,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":269,"author":{"gitId":"kab-dot"},"content":"    public void showMatchingTasks(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":270,"author":{"gitId":"kab-dot"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":271,"author":{"gitId":"kab-dot"},"content":"            addMessage(\"No matching tasks found.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":272,"author":{"gitId":"kab-dot"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"kab-dot"},"content":"            StringBuilder matchingTasksMessage \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":274,"author":{"gitId":"kab-dot"},"content":"            matchingTasksMessage.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":275,"author":{"gitId":"kab-dot"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":276,"author":{"gitId":"kab-dot"},"content":"                matchingTasksMessage.append(task).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":277,"author":{"gitId":"kab-dot"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":278,"author":{"gitId":"kab-dot"},"content":"            addMessage(matchingTasksMessage.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":279,"author":{"gitId":"kab-dot"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":280,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":281,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":282,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":283,"author":{"gitId":"kab-dot"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":284,"author":{"gitId":"kab-dot"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2024-02-14"},{"lineNumber":285,"author":{"gitId":"kab-dot"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":286,"author":{"gitId":"kab-dot"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":287,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"Goodbye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":288,"author":{"gitId":"kab-dot"},"content":"        addMessage(\"_____________________________\");","lastModifiedDate":"2024-02-10"},{"lineNumber":289,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":290,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":291,"author":{"gitId":"kab-dot"},"content":"    public String getResponseAndClear() {","lastModifiedDate":"2024-02-10"},{"lineNumber":292,"author":{"gitId":"kab-dot"},"content":"        String response \u003d responseBuilder.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":293,"author":{"gitId":"kab-dot"},"content":"        responseBuilder.setLength(0); // Clear the builder after retrieving the response","lastModifiedDate":"2024-02-10"},{"lineNumber":294,"author":{"gitId":"kab-dot"},"content":"        return response;","lastModifiedDate":"2024-02-10"},{"lineNumber":295,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":296,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"kab-dot":296}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kab-dot":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"kab-dot":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"public class EventTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"    void testToString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"        // Creating an Event instance with a specific start and end time","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"        String description \u003d \"Sample Event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"        String startTime \u003d \"2022-01-01 12:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"        String endTime \u003d \"2022-01-01 14:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"        Event event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"        // Expected string representation based on the provided start and end time","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"        String expectedToString \u003d \"[E][ ] Sample Event (from: Jan 01 2022 12:00 to: Jan 01 2022 14:00)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"        // Testing the toString method","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"        assertEquals(expectedToString, event.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kab-dot":23}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kab-dot"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kab-dot"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kab-dot"},"content":"    public void addTaskShouldIncreaseSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kab-dot"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kab-dot"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kab-dot"},"content":"        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kab-dot"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kab-dot"},"content":"        assertEquals(initialSize + 1, taskList.getSize());","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kab-dot"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kab-dot"},"content":"    //    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"kab-dot"},"content":"    //    public void deleteTaskShouldRemoveTask() {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"kab-dot"},"content":"    //        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"kab-dot"},"content":"    //        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"kab-dot"},"content":"    //        taskList.addTask(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"kab-dot"},"content":"    //","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"kab-dot"},"content":"    //        int initialSize \u003d taskList.getSize();","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"kab-dot"},"content":"    //        taskList.deleteTask(0, new Ui());","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"kab-dot"},"content":"    //","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"kab-dot"},"content":"    //        assertEquals(initialSize - 1, taskList.getSize());","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"kab-dot"},"content":"    //    }","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"kab-dot"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kab-dot"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kab-dot":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kab-dot"},"content":"todo eat lunch","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"kab-dot"},"content":"deadline submit papers /by Monday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"kab-dot"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"kab-dot"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"kab-dot"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kab-dot":5}}]
