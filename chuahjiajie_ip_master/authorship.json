[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"# BalkanBot project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"3. After that, locate the `src/main/java/BalkanBot.java` file, right-click it, and choose `Run BalkanBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuahjiajie":2,"-":22}},{"path":"src/main/java/BalkanBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"public class BalkanBot {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"    private static final String line \u003d \"------------------------------------------\";","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"    public static void printComplexTask(Task[] arr, int current) {","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(\"Got it I\u0027ve now added this task:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(arr[current - 1].toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(\"Now you have \" + current + \" task(s) in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"chuahjiajie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chuahjiajie"},"content":"        String line \u003d \"------------------------------------------\";","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chuahjiajie"},"content":"        Task[] listOfInputs \u003d new Task[100];","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"        int current \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chuahjiajie"},"content":"        String state \u003d \"Now you have \" + current + 1 + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chuahjiajie"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(\"I\u0027m Balkan Bot\\n\" + \"Jebem ti mat\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"chuahjiajie"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"chuahjiajie"},"content":"        while(true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"chuahjiajie"},"content":"            String command \u003d input.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"chuahjiajie"},"content":"            if(command.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(\"Јебаћу ти бабицу\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"chuahjiajie"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"chuahjiajie"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"chuahjiajie"},"content":"            else if(command.equals(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"chuahjiajie"},"content":"                StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"chuahjiajie"},"content":"                for(int i \u003d 0; i \u003c listOfInputs.length; i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"chuahjiajie"},"content":"                    if(listOfInputs[i] \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"chuahjiajie"},"content":"                    } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"chuahjiajie"},"content":"                        listOutput.append(i + 1).append(\". \").append(listOfInputs[i].toString())","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"chuahjiajie"},"content":"                                .append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"chuahjiajie"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(\"Here is your list of tasks:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(listOutput);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"chuahjiajie"},"content":"                System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"chuahjiajie"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"chuahjiajie"},"content":"            else {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"chuahjiajie"},"content":"                String[] brokenCommand \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"chuahjiajie"},"content":"                String advancedCommand \u003d brokenCommand[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"chuahjiajie"},"content":"                String[] details \u003d Arrays.copyOfRange(brokenCommand, 1, brokenCommand.length);","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"chuahjiajie"},"content":"                switch (advancedCommand) {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"chuahjiajie"},"content":"                    case \"mark\": {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"chuahjiajie"},"content":"                        int index \u003d Integer.parseInt(brokenCommand[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"chuahjiajie"},"content":"                        listOfInputs[index].mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"chuahjiajie"},"content":"                        System.out.println(\"Dje si pizda materina! I\u0027ve marked this task as done:\" + \"\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"chuahjiajie"},"content":"                                listOfInputs[index].toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"chuahjiajie"},"content":"                    case \"unmark\": {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"chuahjiajie"},"content":"                        int index \u003d Integer.parseInt(brokenCommand[1]) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"chuahjiajie"},"content":"                        listOfInputs[index].unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"chuahjiajie"},"content":"                        System.out.println(\"Baga-mi-as pula, it\u0027s been undone\" + \"\\n\" +","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"chuahjiajie"},"content":"                                listOfInputs[index].toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"chuahjiajie"},"content":"                    case \"todo\": {","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"chuahjiajie"},"content":"                        String taskDescription \u003d String.join(\" \", details);","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"chuahjiajie"},"content":"                        listOfInputs[current] \u003d new ToDo(taskDescription);","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"chuahjiajie"},"content":"                        current++;","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"chuahjiajie"},"content":"                        printComplexTask(listOfInputs, current);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"chuahjiajie"},"content":"                    case \"deadline\": {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"chuahjiajie"},"content":"                        StringBuilder taskDescription \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"chuahjiajie"},"content":"                        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"chuahjiajie"},"content":"                        boolean foundDeadline \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"chuahjiajie"},"content":"                        for (String currentString : details) {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"chuahjiajie"},"content":"                            if (foundDeadline) {","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"chuahjiajie"},"content":"                                deadline.append(currentString).append(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"chuahjiajie"},"content":"                            } else if (currentString.charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"chuahjiajie"},"content":"                                foundDeadline \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"chuahjiajie"},"content":"                            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"chuahjiajie"},"content":"                                taskDescription.append(currentString).append(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"chuahjiajie"},"content":"                            }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"chuahjiajie"},"content":"                        }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"chuahjiajie"},"content":"                        listOfInputs[current] \u003d new Deadline(taskDescription.toString(), deadline.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"chuahjiajie"},"content":"                        current++;","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"chuahjiajie"},"content":"                        printComplexTask(listOfInputs, current);","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"chuahjiajie"},"content":"                    case \"event\": {","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"chuahjiajie"},"content":"                        StringBuilder taskDescription \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"chuahjiajie"},"content":"                        StringBuilder from \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"chuahjiajie"},"content":"                        StringBuilder to \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"chuahjiajie"},"content":"                        boolean foundFrom \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"chuahjiajie"},"content":"                        boolean foundTo \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"chuahjiajie"},"content":"                        for (String currentString : details) {","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"chuahjiajie"},"content":"                            if (foundTo) {","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"chuahjiajie"},"content":"                                to.append(currentString).append(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"chuahjiajie"},"content":"                            } else if (foundFrom) {","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"chuahjiajie"},"content":"                                if (currentString.charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"chuahjiajie"},"content":"                                    foundTo \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"chuahjiajie"},"content":"                                } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"chuahjiajie"},"content":"                                    from.append(currentString).append(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"chuahjiajie"},"content":"                                }","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"chuahjiajie"},"content":"                            } else if (currentString.charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"chuahjiajie"},"content":"                                foundFrom \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"chuahjiajie"},"content":"                            } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"chuahjiajie"},"content":"                                taskDescription.append(currentString).append(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"chuahjiajie"},"content":"                            }","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"chuahjiajie"},"content":"                        }","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"chuahjiajie"},"content":"                        listOfInputs[current] \u003d new Event(taskDescription.toString(), from.toString(), to.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"chuahjiajie"},"content":"                        current++;","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"chuahjiajie"},"content":"                        printComplexTask(listOfInputs, current);","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"chuahjiajie"},"content":"                    }","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"chuahjiajie"},"content":"                    default:","lastModifiedDate":"2024-02-06"},{"lineNumber":121,"author":{"gitId":"chuahjiajie"},"content":"                        listOfInputs[current] \u003d new Task(command);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"chuahjiajie"},"content":"                        current++;","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"chuahjiajie"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"chuahjiajie"},"content":"                        System.out.println(\"Added: \" + command);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"chuahjiajie"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"chuahjiajie"},"content":"                        break;","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"chuahjiajie"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"chuahjiajie"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"chuahjiajie"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":131}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"    protected String by;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"        this.by \u003d cleanWhiteSpace(by);","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chuahjiajie"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chuahjiajie"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chuahjiajie"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"    protected String from;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"    protected String to;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"        this.from \u003d cleanWhiteSpace(from);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"        this.to \u003d cleanWhiteSpace(to);","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chuahjiajie"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chuahjiajie"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chuahjiajie"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"        this.description \u003d cleanWhiteSpace(description);","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"chuahjiajie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"chuahjiajie"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"chuahjiajie"},"content":"    public void mark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"chuahjiajie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"chuahjiajie"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"chuahjiajie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"chuahjiajie"},"content":"    public String cleanWhiteSpace(String word) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"chuahjiajie"},"content":"        if (word.charAt(word.length() - 1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"chuahjiajie"},"content":"            return word.substring(0, word.length() - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"chuahjiajie"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"chuahjiajie"},"content":"        else {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"chuahjiajie"},"content":"            return word;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"chuahjiajie"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"chuahjiajie"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"chuahjiajie"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"chuahjiajie"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":34}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chuahjiajie"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"chuahjiajie"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"chuahjiajie"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"chuahjiajie"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"chuahjiajie"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"chuahjiajie"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"chuahjiajie"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"chuahjiajie"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"chuahjiajie":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chuahjiajie"},"content":"java -classpath ..\\bin BalkanBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuahjiajie":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"chuahjiajie"},"content":"java -classpath ../bin BalkanBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chuahjiajie":1,"-":37}}]
