[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"    protected String deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"        return \"D\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \" + this.deadline + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"    protected String start;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"    protected String end;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    public Event(String description,  String start, String end) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"        return \"E\";","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description + \"(from: \" + this.start + \"to:\" + this.end + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"youdonnnn":17}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"        return \"T\";","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"        return \"[\" + this.getTypeIcon() + \"][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":14}},{"path":"src/main/java/Youdon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"public class Youdon {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    // function to detect when task desc is missing","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    public static void detectMissingDesc(String input) throws YoudonException.EmptyDescException {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"        if ((input.equals(\"todo\")) || (input.equals(\"deadline\")) || (input.equals(\"event\"))) {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"            throw new YoudonException.EmptyDescException(\"Hey! The task description is empty!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    // function to detect when command is invalid","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"    public static void detectInvalidCommand(String input) throws YoudonException.InvalidCommandException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"        for (validCommands command: validCommands.values()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"            if (input.contains(command.getCommand())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"        throw new YoudonException.InvalidCommandException(\"Sorry, I do not recognise that command.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"youdonnnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"youdonnnn"},"content":"        // initialise array and index","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"youdonnnn"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"youdonnnn"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"youdonnnn"},"content":"        // string constants","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"youdonnnn"},"content":"        String line \u003d \"----------------------------------------------------------------\";","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"youdonnnn"},"content":"        String welcomeMsg \u003d \"Hello! I\u0027m Youdon!\\nWhat can I do for you?\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"youdonnnn"},"content":"        String byeMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"youdonnnn"},"content":"        // chatbot welcome message","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(welcomeMsg);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"youdonnnn"},"content":"        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"youdonnnn"},"content":"        // scan input","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"youdonnnn"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"youdonnnn"},"content":"        String data \u003d input.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"youdonnnn"},"content":"        // when there is input present","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"youdonnnn"},"content":"        while (!(data.isEmpty())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"youdonnnn"},"content":"            // try-catch block for exceptions","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"youdonnnn"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"youdonnnn"},"content":"                detectMissingDesc(data);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"youdonnnn"},"content":"                detectInvalidCommand(data);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"youdonnnn"},"content":"            } catch (YoudonException.EmptyDescException | YoudonException.InvalidCommandException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"youdonnnn"},"content":"                // print out error message","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"youdonnnn"},"content":"                // update data to next input","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"youdonnnn"},"content":"                if (input.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d input.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"youdonnnn"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"youdonnnn"},"content":"            // if input \u003d\u003d \"bye\", print chatbot bye message","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"youdonnnn"},"content":"            if (data.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(byeMsg);","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"youdonnnn"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"youdonnnn"},"content":"            // if input \u003d\u003d \"list\", return tasklist","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"youdonnnn"},"content":"            if (data.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"youdonnnn"},"content":"                for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println((i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"youdonnnn"},"content":"                System.out.println(line);","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"youdonnnn"},"content":"                // wait for next input","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"youdonnnn"},"content":"                if (input.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d input.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"youdonnnn"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"youdonnnn"},"content":"                continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"youdonnnn"},"content":"            if (data.contains(\" \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"youdonnnn"},"content":"                // if input data has 2 parts, split into command \u0026 task number","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"youdonnnn"},"content":"                String[] parts \u003d data.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"youdonnnn"},"content":"                String command \u003d parts[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"youdonnnn"},"content":"                String task \u003d parts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"youdonnnn"},"content":"                // if input \u003d\u003d \"mark\", mark the specified task as done","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"youdonnnn"},"content":"                    // mark task as done in array","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"youdonnnn"},"content":"                    int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"youdonnnn"},"content":"                    taskList.get(taskNumber - 1).isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"youdonnnn"},"content":"                    // print out changes","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"Nicely done! The task has been marked as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"  \" + taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"youdonnnn"},"content":"                    // wait for next input","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"youdonnnn"},"content":"                    if (input.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d input.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"youdonnnn"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"youdonnnn"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"youdonnnn"},"content":"                // if input \u003d\u003d \"unmark\", mark the specified task as undone","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"youdonnnn"},"content":"                    // mark task as undone in array","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"youdonnnn"},"content":"                    int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"youdonnnn"},"content":"                    taskList.get(taskNumber - 1).isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"youdonnnn"},"content":"                    // print out changes","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"Okies! The task has been marked as undone:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"  \" + taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"youdonnnn"},"content":"                    // wait for next input","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"youdonnnn"},"content":"                    if (input.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d input.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"youdonnnn"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"youdonnnn"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"youdonnnn"},"content":"                // if input \u003d\u003d \"delete\", delete the specified task","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"youdonnnn"},"content":"                    int taskNumber \u003d Integer.parseInt(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"youdonnnn"},"content":"                    // print out changes","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"Alright! The task has been deleted:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"  \" + taskList.get(taskNumber - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"youdonnnn"},"content":"                    // delete task and fix indexing","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"youdonnnn"},"content":"                    taskList.remove(taskNumber - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"youdonnnn"},"content":"                    index--;","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"youdonnnn"},"content":"                    // wait for next input","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"youdonnnn"},"content":"                    if (input.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d input.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"youdonnnn"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"youdonnnn"},"content":"                        data \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"youdonnnn"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"youdonnnn"},"content":"                // differentiate between type of tasks and add to tasklist","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"youdonnnn"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"youdonnnn"},"content":"                    // add to tasklist","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"youdonnnn"},"content":"                    taskList.add(new Todo(task));","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"youdonnnn"},"content":"                    // print out task added","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"Alright! Task added:\\n  \" + taskList.get(index).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(\"You now have \" + (index + 1) + \" task(s) in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"youdonnnn"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"youdonnnn"},"content":"                    index++;","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"youdonnnn"},"content":"                // if task has \"by\", split into task and deadline","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"youdonnnn"},"content":"                if (task.contains(\"/by \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"youdonnnn"},"content":"                    String[] chunks \u003d task.split(\"/by \");","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"youdonnnn"},"content":"                    if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"youdonnnn"},"content":"                        // add to tasklist","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"youdonnnn"},"content":"                        String taskDesc \u003d chunks[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"youdonnnn"},"content":"                        String deadline \u003d chunks[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"youdonnnn"},"content":"                        taskList.add(new Deadline(taskDesc, deadline));","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"youdonnnn"},"content":"                        // print out task added","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Alright! Task added:\\n  \" + taskList.get(index).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"You now have \" + (index + 1) + \" task(s) in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"youdonnnn"},"content":"                        index++;","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"youdonnnn"},"content":"                if (task.contains(\"/from \")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"youdonnnn"},"content":"                    String[] sections \u003d task.split(\"/from |/to\");","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"youdonnnn"},"content":"                    if (command.equals(\"event\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"youdonnnn"},"content":"                        // add to tasklist","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"youdonnnn"},"content":"                        String taskDesc \u003d sections[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"youdonnnn"},"content":"                        String start \u003d sections[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"youdonnnn"},"content":"                        String end \u003d sections[2];","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"youdonnnn"},"content":"                        taskList.add(new Event(taskDesc, start, end));","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"youdonnnn"},"content":"                        // print out task added","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"Alright! Task added:\\n  \" + taskList.get(index).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(\"You now have \" + (index + 1) + \" task(s) in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"youdonnnn"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"youdonnnn"},"content":"                        index++;","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"youdonnnn"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":198,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"youdonnnn"},"content":"                // wait for next input","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"youdonnnn"},"content":"                if (input.hasNextLine()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":201,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d input.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"youdonnnn"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":203,"author":{"gitId":"youdonnnn"},"content":"                    data \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":204,"author":{"gitId":"youdonnnn"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":205,"author":{"gitId":"youdonnnn"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":208}},{"path":"src/main/java/YoudonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"public class YoudonException {","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"    public static class EmptyDescException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"        public EmptyDescException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    public static class InvalidCommandException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"        public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":13}},{"path":"src/main/java/validCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"public enum validCommands {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"    LIST(\"list\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"    DELETE(\"delete\");","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"youdonnnn"},"content":"    private final String command;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"youdonnnn"},"content":"    validCommands(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"youdonnnn"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"youdonnnn"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"youdonnnn"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"        return this.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"youdonnnn"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"youdonnnn"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"youdonnnn":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"youdonnnn"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"youdonnnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"youdonnnn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"youdonnnn"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"youdonnnn"},"content":"mark 2","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"youdonnnn"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"youdonnnn"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"youdonnnn"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"youdonnnn"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"youdonnnn":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"youdonnnn"},"content":"java -classpath ..\\bin Youdon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"youdonnnn":1,"-":20}}]
