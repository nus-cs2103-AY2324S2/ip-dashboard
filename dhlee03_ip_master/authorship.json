[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"# friendlytool.process.Duke project template","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"3. After that, locate the `src/main/java/friendlytool.process.Duke.java` file, right-click it, and choose `Run friendlytool.process.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dhlee03":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    mainClass.set(\"friendlytool.process.Launcher\")","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    archiveBaseName \u003d \"friendlytool\"","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"checkstyle {","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"dhlee03":21,"-":41}},{"path":"src/main/java/friendlytool/command/CommandTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Enum for all the command types.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public enum CommandTypes {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    TODO, DEADLINE, EVENT, LIST, BYE, MARK, UNMARK, DELETE, FIND, SORT","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"dhlee03":8}},{"path":"src/main/java/friendlytool/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.command;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import friendlytool.process.FtException;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" * Parser for identifying commands.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"public class Parser {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Identifies the type of command from the input.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * @param s user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @return type of command.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public static CommandTypes parseType(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        StringTokenizer st \u003d new StringTokenizer(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        return CommandTypes.valueOf(st.nextToken().toUpperCase());","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     * parses toDo tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"     * @param s user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     * @return name of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public static String parseToDo(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        StringBuilder sbTd \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        StringTokenizer st \u003d new StringTokenizer(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        st.nextToken();","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            String token \u003d st.nextToken().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            sbTd.append(\" \").append(token);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        return sbTd.toString().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"     * parses DeadLine tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"     * @param s user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"     * @return string array containing name and by date.","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    public static String[] parseDeadline(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        StringTokenizer st \u003d new StringTokenizer(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        st.nextToken();","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        StringBuilder sbDl \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        StringBuilder sbBy \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"            String token \u003d st.nextToken().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"            if (token.equals(\"/by\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"                while (st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"                    sbBy.append(\" \").append(st.nextToken());","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"                sbDl.append(\" \").append(token);","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        String dt \u003d sbDl.toString().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"        String by \u003d sbBy.toString().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"        return new String[]{dt, by};","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"     * Parses Event tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"     * @param s user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"     * @return string array containing name, from date, and to date.","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"    public static String[] parseEvent(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"        StringTokenizer st \u003d new StringTokenizer(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        st.nextToken();","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        StringBuilder sbFrom \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        StringBuilder sbTo \u003d new StringBuilder();","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"            String token \u003d st.nextToken().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"            if (token.equals(\"/from\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"                while (st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"                    String curr \u003d st.nextToken().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"                    if (curr.equals(\"/to\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"                        while (st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"                            sbTo.append(\" \").append(st.nextToken());","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"                        }","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"                    } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"                        sbFrom.append(\" \").append(curr);","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"                    }","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"            } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"                sb.append(\" \").append(token);","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"        String name \u003d sb.toString().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"        String from \u003d sbFrom.toString().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        String to \u003d sbTo.toString().trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"        return new String[]{name, from, to};","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"     * Parses the text the in the save file.","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"     * @param s text in the save file.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"     * @return string array containing data for the task","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"    public static String[] parseSave(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"        String[] elements \u003d s.split(\"\\\\|\");","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        elements \u003d Arrays.stream(elements).map(String::trim).toArray(String[]::new);","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"        return elements;","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"     * Converts the string to number index.","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"     * @param s user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"     * @return index for finding tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if no index is provided","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"    public static int parseNumber(String s) throws FtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"        StringTokenizer st \u003d new StringTokenizer(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"        st.nextToken();","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"        if (!st.hasMoreTokens()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error: No index provided\");","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"        return Integer.parseInt(st.nextToken());","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"     * Converts the string to boolean.","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"     * @param s user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"     * @return boolean value for isDone.","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"    public static Boolean parseBool(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"dhlee03"},"content":"        return Boolean.parseBoolean(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"     * Parse the input to find keyword","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"dhlee03"},"content":"     * @param s user input","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"     * @return keyword that user provided","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if the number of words is incorrect","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"dhlee03"},"content":"    public static String parseKeyword(String s) throws FtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"        String[] strings \u003d s.split(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"        if (strings.length \u003c 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Please provide keyword!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"        } else if (strings.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"            return strings[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Please provide one word\");","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"dhlee03":160}},{"path":"src/main/java/friendlytool/process/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Class for managing date used for tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class Date {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    private LocalDateTime date;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private String dateStr;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Constructs the Date Object.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @param date date provided by the user.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public Date(String date) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        this.dateStr \u003d date;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        this.date \u003d LocalDateTime.parse(date.trim());","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     * Changes date\u0027s format into a readable format.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"     * @return String representing date.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"     * Provides date format for saving.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     * @return string format of date.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        return dateStr;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    public int compareTo(Date another) {","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        return this.date.compareTo(another.date);","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"dhlee03":47}},{"path":"src/main/java/friendlytool/process/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":" * A dialog box consisting of an ImageView to represent speaker and label","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        dialog.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    private void flip() {","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        db.flip();","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        return db;","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"dhlee03":61}},{"path":"src/main/java/friendlytool/process/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.CommandTypes;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.Parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Main class for this app.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    private boolean isActive;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Constructs FriendlyTool.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * @param isActive indicates whether program is active or not","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public Duke(Boolean isActive) {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"            Storage.loadTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    public Duke() {","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        this(true);","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     * Decides the next action based on the input.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"     * @param input user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    private String findNextAction(String input) throws FtException {","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        String response;","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error: Please Type Command\");","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"            CommandTypes command \u003d Parser.parseType(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"            assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"            switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"            case BYE:","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"                this.isActive \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"                response \u003d UI.getByeMsg();","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"            case LIST:","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"                response \u003d UI.getListMsg(tasks);","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"            case MARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.mark(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.unmark(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"            case TODO:","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.addTask(input, CommandTypes.TODO);","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.addTask(input, CommandTypes.DEADLINE);","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"            case EVENT:","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.addTask(input, CommandTypes.EVENT);","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"            case DELETE:","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.deleteTask(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"            case FIND:","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"                response \u003d TaskFinder.findTask(tasks, input);","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"            case SORT:","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"                response \u003d tasks.sortTask();","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"                Storage.updateTask(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"                throw new FtException(\"Unknown Command: Please use a correct command\");","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"            assert response !\u003d null : \"Response should not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"            return response;","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Unknown Command: Please use a correct command\");","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"     * @param input user input","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"     * @return response from the chatbot.","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"            return findNextAction(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"            return UI.getErrorMsg(e);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"dhlee03":105,"-":2}},{"path":"src/main/java/friendlytool/process/FtException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Class for handling exceptions","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public class FtException extends Exception {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"     * Constructs FtException","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     * @param message message that needs to be displayed","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public FtException(String message) {","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        super(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":15}},{"path":"src/main/java/friendlytool/process/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * A launcher class to start FriendlyTool.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class Launcher {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"dhlee03":12}},{"path":"src/main/java/friendlytool/process/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    private Duke friendlytool \u003d new Duke();","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * Starts the GUI of FriendlyTool","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     * @param stage stage of FriendlyTool","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFt(friendlytool);","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showGreeting();","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            stage.show();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"dhlee03":36}},{"path":"src/main/java/friendlytool/process/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    private Duke friendlytool;","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private Image ftImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/friendlytool.png\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    public void setFt(Duke ft) {","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        friendlytool \u003d ft;","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"     * greets users when the program is first opened.","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    public void showGreeting() {","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"                DialogBox.getDukeDialog(UI.getInitMsg(), ftImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        );","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing FriendlyTool\u0027s response.","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"     * Clears the user input after receiving response.","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        String response \u003d friendlytool.getResponse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"                DialogBox.getDukeDialog(response, ftImage)","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        );","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"dhlee03":60}},{"path":"src/main/java/friendlytool/process/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.io.File;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.Parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Event;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.ToDo;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":" * A class that manages storing data for future use,","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"public class Storage {","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     * Loads Tasks to the list from the saved file. If not exists, create a new file in the directory.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"     * @param myList lists that will receive tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if file is corrupted or missing","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public static void loadTask(TaskList myList) throws FtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"            File save \u003d new File(\"./data/myTask.txt\");","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            if (!save.exists()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"                save.getParentFile().mkdirs();","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"                boolean isSuccessful \u003d save.createNewFile();","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"                UI.getCreateSaveMsg(isSuccessful);","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"                UI.getLoadSaveMsg();","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            Scanner s \u003d new Scanner(save);","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"                String[] parsedSave \u003d Parser.parseSave(s.nextLine());","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"                String taskType \u003d parsedSave[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"                case \"T\":","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"                    myList.add(new ToDo(parsedSave[2], Parser.parseBool(parsedSave[1])));","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"                case \"D\":","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"                    myList.add(new Deadline(parsedSave[2], Parser.parseBool(parsedSave[1]),","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"                            new Date(parsedSave[3])));","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"                case \"E\":","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"                    myList.add(new Event(parsedSave[2], Parser.parseBool(parsedSave[1]), new Date(parsedSave[3]),","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"                            new Date(parsedSave[4])));","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"                    break;","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"                default:","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"                    throw new FtException(\"    Warning: The file is corrupted. Please delete the file\");","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"                s.nextLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"File not found\");","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"     * Updates the save file based on the given list.","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"     * @param list given list with tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if file is not updated","lastModifiedDate":"2024-02-21"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"    public static void updateTask(TaskList list) throws FtException {","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/myTask.txt\");","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"                Task task \u003d list.get(i);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"                fw.write(task.toSaveFormat() + \"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"            fw.close();","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error in updating the task\");","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"dhlee03":80}},{"path":"src/main/java/friendlytool/process/TaskFinder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.Parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * A class that helps finding tasks using keyword.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class TaskFinder {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"     * Finds the task based on the given keyword from a list.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"     * @param tasks given task","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * @param input keyword","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * @return found task","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if keyword is not found","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public static String findTask(TaskList tasks, String input) throws FtException {","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        String keyword \u003d Parser.parseKeyword(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assert keyword !\u003d null : \"Keyword should not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        UI.prepareMatchingMsg();","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"            if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"                counter++;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                UI.prepareFindTaskMsg(counter, task);","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        return UI.getFound();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":32}},{"path":"src/main/java/friendlytool/process/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.CommandTypes;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.Parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.ToDo;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":" * List that can store different types of task, and provide important features to modify them.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"public class TaskList {","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    private List\u003cTask\u003e myList;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     * Constructs the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        this.myList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"     * Adds the task to the list","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     * @param s  string containing information of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     * @param ct command type.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     * @return a string that the task is added.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if no description is provided.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    public String addTask(String s, CommandTypes ct) throws FtException {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        Task task;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        boolean isMissingElement \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        switch (ct) {","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        case TODO:","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"            String todo \u003d Parser.parseToDo(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"            isMissingElement \u003d todo.isEmpty();","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"            if (isMissingElement) {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"                throw new FtException(\"Error: Please tell me what you have TO DO\");","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"            task \u003d new ToDo(todo, false);","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"            String[] parsedDl \u003d Parser.parseDeadline(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"            String dt \u003d parsedDl[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"            String by \u003d parsedDl[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"            isMissingElement \u003d dt.isEmpty() || by.isEmpty();","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"            if (isMissingElement) {","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"                throw new FtException(\"Error: Please tell me your task and its deadline\");","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"                task \u003d new Deadline(dt, false, new Date(by));","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"                throw new FtException(\"Invalid date format. Please follow yyyy-mm-ddThh:mm format.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        case EVENT:","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"            String[] parsedEvent \u003d Parser.parseEvent(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"            String name \u003d parsedEvent[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"            String from \u003d parsedEvent[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            String to \u003d parsedEvent[2];","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"            isMissingElement \u003d name.isEmpty() || from.isEmpty() || to.isEmpty();","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"            if (isMissingElement) {","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"                throw new FtException(\"Error: Please tell me your event and its from/to dates\");","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"            try {","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"                task \u003d new Event(name, false, new Date(from), new Date(to));","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"                throw new FtException(\"Invalid date format. Please follow yyyy-mm-ddThh:mm format.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"            break;","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"        default:","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error: Invalid Task Type\");","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        myList.add(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"        return UI.getUpdateTaskMsg(task, myList.size());","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"     * Mark the task as done, based on the given index.","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"     * @param s index for the task, in the string format.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"     * @return string that the task is marked.","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if invalid index is provided.","lastModifiedDate":"2024-02-21"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"    public String mark(String s) throws FtException {","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"        int i \u003d Parser.parseNumber(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"        boolean isInvalidIndex \u003d (i \u003c\u003d 0) || (i \u003e myList.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"        if (isInvalidIndex) {","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error: Please provide valid index\");","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"        Task task \u003d myList.get(i - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"        task.mark();","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        return UI.getMarkMsg(task);","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"     * Unmarks the task based on the given index.","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"     * @param s index for the task, in the string format.","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"     * @return string that the task is unmarked.","lastModifiedDate":"2024-02-21"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if invalid index is provide.","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"    public String unmark(String s) throws FtException {","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"        int i \u003d Parser.parseNumber(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"        boolean isInvalidIndex \u003d (i \u003c\u003d 0) || (i \u003e myList.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"        if (isInvalidIndex) {","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error: Please provide valid index\");","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"        Task task \u003d myList.get(i - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"        task.unmark();","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"        return UI.getUnmarkMsg(task);","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"     * Deletes the task based on the given index.","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"     * @param s index for the task, in the string format.","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"     * @return string that the task is deleted.","lastModifiedDate":"2024-02-21"},{"lineNumber":140,"author":{"gitId":"dhlee03"},"content":"     * @throws FtException if invalid index is provided.","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"dhlee03"},"content":"    public String deleteTask(String s) throws FtException {","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"        int i \u003d Parser.parseNumber(s);","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"        boolean isInvalidIndex \u003d (i \u003c\u003d 0) || (i \u003e myList.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"dhlee03"},"content":"        if (isInvalidIndex) {","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"            throw new FtException(\"Error: Please provide valid index\");","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"dhlee03"},"content":"        String task \u003d myList.remove(i - 1).toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"        return UI.getDeleteMsg(task, myList.size());","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"     * Provides the number of elements in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"dhlee03"},"content":"     * @return number of elements.","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"dhlee03"},"content":"    public int size() {","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"dhlee03"},"content":"        return myList.size();","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"dhlee03"},"content":"     * Provides the task based on the given index.","lastModifiedDate":"2024-02-09"},{"lineNumber":165,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"dhlee03"},"content":"     * @param i index","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"dhlee03"},"content":"     * @return task based on the index.","lastModifiedDate":"2024-02-09"},{"lineNumber":168,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"dhlee03"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"dhlee03"},"content":"        return myList.get(i);","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":174,"author":{"gitId":"dhlee03"},"content":"     * Adds task to the list","lastModifiedDate":"2024-02-09"},{"lineNumber":175,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":176,"author":{"gitId":"dhlee03"},"content":"     * @param task task given.","lastModifiedDate":"2024-02-09"},{"lineNumber":177,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":178,"author":{"gitId":"dhlee03"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-08"},{"lineNumber":179,"author":{"gitId":"dhlee03"},"content":"        myList.add(task);","lastModifiedDate":"2024-02-08"},{"lineNumber":180,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":181,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"dhlee03"},"content":"     * Sorts the list so that todo comes first and sort rest by chronological order.","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"dhlee03"},"content":"     * @return string that task is sorted","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"dhlee03"},"content":"    public String sortTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"dhlee03"},"content":"        myList.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"dhlee03"},"content":"            @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"dhlee03"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"dhlee03"},"content":"                if (t1 instanceof ToDo \u0026\u0026 t2 instanceof ToDo) {","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"dhlee03"},"content":"                    return 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"dhlee03"},"content":"                } else if (t1 instanceof ToDo) {","lastModifiedDate":"2024-02-23"},{"lineNumber":194,"author":{"gitId":"dhlee03"},"content":"                    return -1;","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"dhlee03"},"content":"                } else if (t2 instanceof ToDo) {","lastModifiedDate":"2024-02-23"},{"lineNumber":196,"author":{"gitId":"dhlee03"},"content":"                    return 1;","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"dhlee03"},"content":"                } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":198,"author":{"gitId":"dhlee03"},"content":"                    Date d1 \u003d t1.getEndTime();","lastModifiedDate":"2024-02-23"},{"lineNumber":199,"author":{"gitId":"dhlee03"},"content":"                    Date d2 \u003d t2.getEndTime();","lastModifiedDate":"2024-02-23"},{"lineNumber":200,"author":{"gitId":"dhlee03"},"content":"                    return d1.compareTo(d2);","lastModifiedDate":"2024-02-23"},{"lineNumber":201,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":202,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":203,"author":{"gitId":"dhlee03"},"content":"        });","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"dhlee03"},"content":"        return UI.getSortTaskMsg();","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"dhlee03":206}},{"path":"src/main/java/friendlytool/process/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import friendlytool.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * UI for the program. Provides instructions to users.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class UI {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    private static StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"     * Provides a response to user\u0027s input","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * @return Provides a cumulated response,","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public static String getResponse() {","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        String response \u003d sb.toString();","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        return response;","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"     * Provides a welcome message.","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     * @return welcome message.","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public static String getInitMsg() {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                .append(\"    Hello! I\u0027m FriendlyTool\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"                .append(\"    What can I do for you?\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"                .append(\"    ____________________________________________________________\");","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     * Provides a bye message.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"     * @return bye message.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    public static String getByeMsg() {","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"                .append(\"    Bye. Hope to see you again soon!\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"                .append(\"    ____________________________________________________________\");","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"     * Prints task updated message.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     * @param task task updated.","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"     * @param size number of elements in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"     * @return string that the task is updated.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    public static String getUpdateTaskMsg(Task task, int size) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"                .append(\"    Completed. I\u0027ve added this task: \\n    \")","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"                .append(task)","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"                .append(\"\\n    Now you have \" + size + \" tasks in the list.\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"     * Provides a string that a task is marked as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"     * @param task task given.","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"     * @return string that task is marked.","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"    public static String getMarkMsg(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"                .append(\"    Nice! I\u0027ve marked this task as done:\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"                .append(\"      \" + task.toString())","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"                .append(\"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"     * Provides a string that a task is unmarked.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"     * @param task task given.","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"     * @return string that task is unmarked","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"    public static String getUnmarkMsg(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"                .append(\"    OK, I\u0027ve marked this task as not done yet:\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"                .append(\"      \" + task.toString())","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"                .append(\"\\n    ____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"     * Provides a string that the task is deleted.","lastModifiedDate":"2024-02-21"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"     * @param task task deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"     * @param size number of elements in the list.","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"     * @return string that the task is deleted.","lastModifiedDate":"2024-02-21"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"    public static String getDeleteMsg(String task, int size) {","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"                .append(\"    Great!, You have completed the task:\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"                .append(\"      \" + task)","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"                .append(\"\\n    Now you have \" + size + \" tasks in the list.\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"                .append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"     * Provides a string whether the save data is created or not.","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"     * @param isSuccessful save data creation is successful or not","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"    public static void getCreateSaveMsg(Boolean isSuccessful) {","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    There was no save data.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        System.out.println(isSuccessful ? \"    New save data file created.\" : \"    Failed to create a new save data\");","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"     * Prints that save data is loaded.","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"    public static void getLoadSaveMsg() {","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"        System.out.println(\"    Successfully loaded the save data. \");","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"     * Prints the whole list with index.","lastModifiedDate":"2024-02-21"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"     * @param list list to be printed.","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"     * @return string of list","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"    public static String getListMsg(TaskList list) {","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"                .append(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 1; i \u003c list.size() + 1; i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"            Task task \u003d list.get(i - 1);","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"            sb.append(\"    \").append(i).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"dhlee03"},"content":"     * prepares string that there are matching tasks in the string builder.","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"    public static void prepareMatchingMsg() {","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"dhlee03"},"content":"                .append(\"These are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"dhlee03"},"content":"     * Prepares the found task in the string builder.","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"     * @param i    current index","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"     * @param task task found","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"    public static void prepareFindTaskMsg(int i, Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"    \").append(i).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"dhlee03"},"content":"     * Prints out a dotted line.","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":161,"author":{"gitId":"dhlee03"},"content":"     * @return dotted line","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"dhlee03"},"content":"    public static String getFound() {","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":166,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":167,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":168,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"dhlee03"},"content":"     * Provides Error message.","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"dhlee03"},"content":"     * @param e error given","lastModifiedDate":"2024-02-21"},{"lineNumber":172,"author":{"gitId":"dhlee03"},"content":"     * @return error message","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":174,"author":{"gitId":"dhlee03"},"content":"    public static String getErrorMsg(FtException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"dhlee03"},"content":"        assert e !\u003d null : \"Error should not be null\";","lastModifiedDate":"2024-02-22"},{"lineNumber":176,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"____________________________________________________________\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"dhlee03"},"content":"                .append(e.getMessage()).append(\"\\n\")","lastModifiedDate":"2024-02-16"},{"lineNumber":178,"author":{"gitId":"dhlee03"},"content":"                .append(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-16"},{"lineNumber":180,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":181,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":182,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":183,"author":{"gitId":"dhlee03"},"content":"     * Provides a message that task is sorted.","lastModifiedDate":"2024-02-23"},{"lineNumber":184,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":185,"author":{"gitId":"dhlee03"},"content":"     * @return a message that task is sorted","lastModifiedDate":"2024-02-23"},{"lineNumber":186,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":187,"author":{"gitId":"dhlee03"},"content":"    public static String getSortTaskMsg() {","lastModifiedDate":"2024-02-23"},{"lineNumber":188,"author":{"gitId":"dhlee03"},"content":"        sb.append(\"____________________________________________________________\\n\")","lastModifiedDate":"2024-02-23"},{"lineNumber":189,"author":{"gitId":"dhlee03"},"content":"                .append(\"    OK, I\u0027ve sorted your tasks!\\n\")","lastModifiedDate":"2024-02-23"},{"lineNumber":190,"author":{"gitId":"dhlee03"},"content":"                .append(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":191,"author":{"gitId":"dhlee03"},"content":"        return UI.getResponse();","lastModifiedDate":"2024-02-23"},{"lineNumber":192,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":193,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"dhlee03":193}},{"path":"src/main/java/friendlytool/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import friendlytool.process.Date;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Class for managing deadline tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    private Date by;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"     * Constructs a Deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * @param name   name of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * @param isDone completed or not.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @param by     due date.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public Deadline(String name, boolean isDone, Date by) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     * Converts a deadline to a readable format.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     * @return string format of a deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     * Converts a deadline to a save format.","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"     * @return save format of a deadline.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        return \"D \" + super.toSaveFormat() + \" | \" + by.toSaveFormat() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    public Date getEndTime() {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        return by;","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":49}},{"path":"src/main/java/friendlytool/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import friendlytool.process.Date;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * Class for managing Event tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    private Date from;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    private Date to;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Constructs a Event.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * @param name   name of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @param isDone completed or not.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * @param from   the start date.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     * @param to     the end date.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public Event(String name, boolean isDone, Date from, Date to) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     * Converts an event to a readable format.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"     * @return string format of an event.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"     * Converts an event to a save format.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"     * @return save format of an event.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        return \"E \" + super.toSaveFormat() + \" | \" + from.toSaveFormat() + \" | \" + to.toSaveFormat() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    public Date getEndTime() {","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        return this.to;","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":51}},{"path":"src/main/java/friendlytool/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import friendlytool.process.Date;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Class that manages tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    private String name;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Constructs task.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @param name   name of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * @param isDone completed or not.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"     * Mark the task as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    public void mark() {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"     * mark the task as not done.","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"     * Checks whether the task is done or not.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"     * @return boolean value.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"     * Provides name of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"     * @return name of the task.","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    public String getName() {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        return this.name;","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"     * Converts a task into a readable format.","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"     * @return string format of a task.","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"     * Converts a task to a save format.","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"     * @return save format of a task.","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        return \"| \" + (isDone ? \"true\" : \"false\") + \" | \" + name;","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"    public Date getEndTime() {","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        return null;","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":86}},{"path":"src/main/java/friendlytool/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.task;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" * Class for managing ToDo tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"     * Constructs a ToDo task.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"     * @param name   name of the task","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"     * @param isDone completed or not.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     * Converts a todo task to a readable format.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"     * @return string format of a todo task.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     * Converts a todo task to a save format.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     * @return todo task in a save format.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        return \"T \" + super.toSaveFormat() + \"\\n\";","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"85.0\" fitWidth\u003d\"85.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"dhlee03":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"friendlytool.process.MainWindow\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"dhlee03":19}},{"path":"src/test/java/friendlytool/process/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package friendlytool.process;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import friendlytool.command.CommandTypes;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void addToDoTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            list.addTask(\"todo task1\", CommandTypes.TODO);","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"            String expected \u003d \"task1\";","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"            assertEquals(expected, list.get(0).getName());","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"            list.addTask(\"deadline /from 2014\", CommandTypes.DEADLINE);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Error: Please tell me your task and its deadline\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public void addEventTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            list.addTask(\"event longEvent /from 2014-02-03T16:00 /to 2019-03-01T17:00\", CommandTypes.EVENT);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"longEvent\", list.get(0).getName());","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"            list.addTask(\"event longEvent2 /from 2014-02-03T16:00 /to 2019-03\", CommandTypes.EVENT);","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Invalid date format. Please follow yyyy-mm-ddThh:mm format.\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"    public void markTest() {","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            list.addTask(\"event longEvent /from 2014-02-03T16:00 /to 2019-03-01T17:00\", CommandTypes.EVENT);","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"            list.mark(\"mark 1\");","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"            assertTrue(list.get(0).isDone());","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"            list.mark(\"mark 2\");","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        } catch (FtException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Error: Please provide valid index\", e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"dhlee03":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"deadline finish homework /by Monday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"event Group project meeting /from Friday 3pm /to 6pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"dhlee03":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"l","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"java -classpath ..\\bin friendlytool.process.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dhlee03":2,"-":19}}]
