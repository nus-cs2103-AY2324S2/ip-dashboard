[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"    toolVersion \u003d \"10.2\"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yadunut":6,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.storage.FileStorage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"class DukeConfig {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    public DukeConfig(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"    public static DukeConfig Default() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"        return new DukeConfig(\"./data/duke.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"    public String getFilePath() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"        return filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"public class Duke {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"    private final TextUi ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"    Duke(DukeConfig config) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"        storage \u003d new FileStorage(config.getFilePath());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"            ui.showFileLoadingError();","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"    void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"yadunut"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"yadunut"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"yadunut"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"yadunut"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"yadunut"},"content":"                ui.showLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"yadunut"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"yadunut"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"yadunut"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"yadunut"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"yadunut"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"yadunut"},"content":"            } finally {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"yadunut"},"content":"                ui.showLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"yadunut"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"yadunut"},"content":"        new Duke(DukeConfig.Default()).run();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yadunut":64,"-":2}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"        ui.showBye();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":" * The specification for the command classes.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":" * By default, the command is not an exit command.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"     * Executes the command with the given task list, user interface and storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"     * @param ui The user interface to write results to","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"     * @param storage The storage to save the tasks to","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"    public abstract void execute(TaskList tasks, TextUi ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"     * Returns whether the command is an exit command. Only true for the ByeCommand.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"     * @return whether the command is an exit command","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":35}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"    private final String task;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    private final LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    public DeadlineCommand(String task, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"        Task curr \u003d new Deadline(task, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"        tasks.add(curr);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"        ui.showTask(curr, tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    private final int id;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        this.id \u003d id;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        Task task \u003d tasks.getTask(id);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        tasks.remove(id);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"        ui.removeTask(task, tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":23}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    private final String task;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    public EventCommand(String task, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"        Task curr \u003d new Event(task, from, to);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"        tasks.add(curr);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"        ui.showTask(curr, tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    private final String param;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    public FindCommand(String param) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"        this.param \u003d param;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"        if (param \u003d\u003d \"\") {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"            ui.foundTasks(tasks.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"        List\u003cTask\u003e filteredList \u003d tasks.getTasks().stream()","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"                .filter(task -\u003e task.getTask().contains(param))","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"        ui.foundTasks(filteredList);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":32}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"        ui.showHelpCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":14}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"        ui.showTasks(tasks.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":12}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"        tasks.markAsDone(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        ui.showMarked(tasks.getTask(taskNumber));","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":20}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    private final String todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    public TodoCommand(String command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        this.todo \u003d command;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        Task curr \u003d new Todo(todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        tasks.add(curr);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"        ui.showTask(curr, tasks.size());","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":23}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    public void execute(TaskList tasks, TextUi ui, Storage storage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"        tasks.unmarkAsDone(taskNumber);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        ui.showUnmarked(tasks.getTask(taskNumber));","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":20}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.utils.Util;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":" * Parses user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"     * @param input full user input string","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"     * @return the command based on the user input","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"     * @throws DukeException if the user input does not conform the expected format","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"        String method \u003d split[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"        String params \u003d split.length \u003d\u003d 1 ? \"\" : split[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"        switch (method) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"            case \"list\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"            case \"mark\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"                if (params.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The id of a mark cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"                return new MarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"            case \"unmark\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"                if (params.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The id of an unmark cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"                return new UnmarkCommand(Integer.parseInt(split[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"            case \"todo\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"                if (params.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"                return new TodoCommand(params);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"yadunut"},"content":"            case \"deadline\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"yadunut"},"content":"                if (params.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"yadunut"},"content":"                String[] split1 \u003d params.split(\" /by \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"yadunut"},"content":"                if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"yadunut"},"content":"                System.out.println(split1[1].strip());","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"yadunut"},"content":"                return new DeadlineCommand(split1[0], Util.parseDate(split1[1].strip()));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"yadunut"},"content":"            case \"event\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"yadunut"},"content":"                if (params.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"yadunut"},"content":"                String[] split1 \u003d params.split(\" /from \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"yadunut"},"content":"                if (split1.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The from of an event cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"yadunut"},"content":"                String[] split2 \u003d split1[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"yadunut"},"content":"                if (split2.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The to of an event cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"yadunut"},"content":"                return new EventCommand(split1[0], Util.parseDate(split2[0]), Util.parseDate(split2[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"yadunut"},"content":"            case \"delete\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"yadunut"},"content":"                if (params.equals(\"\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"yadunut"},"content":"                    throw new DukeException(\"The id of a delete cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"yadunut"},"content":"                return new DeleteCommand(Integer.parseInt(params) - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"yadunut"},"content":"            case \"find\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"yadunut"},"content":"                return new FindCommand(params.trim());","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"yadunut"},"content":"            case \"bye\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"yadunut"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"yadunut"},"content":"            case \"help\":","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"yadunut"},"content":"            // Fallthrough","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"yadunut"},"content":"            default: {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"yadunut"},"content":"                return new HelpCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":93}},{"path":"src/main/java/duke/storage/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.utils.Util;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"import java.io.Writer;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":" * A file based storage implementation.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"public class FileStorage implements Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    private final File file;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"    public FileStorage(String filepath) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"        Path path \u003d Paths.get(filepath);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"        File directory \u003d path.getParent().toFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"        directory.mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"        this.file \u003d path.toFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"        this.file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"     * Saves the tasklist to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"     * @param taskList The tasklist to save to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"     * @throws DukeException Throws an exception if there is an error saving the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"        file.delete();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"            Writer fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"                fileWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"            fileWriter.flush();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"yadunut"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"yadunut"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"yadunut"},"content":"            throw new DukeException(\"Error saving file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"yadunut"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"yadunut"},"content":"     * Loads the TaskList from the file. The state is quite handwritten but it\u0027s a simple format.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"yadunut"},"content":"     * Optimally, the file storage should implement how the TaskList is saved and loaded.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"yadunut"},"content":"     * Currently, the saving format is done by the task itself.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"yadunut"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"yadunut"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"yadunut"},"content":"     * @throws IOException   In the event of an error reading the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"yadunut"},"content":"     * @throws DukeException If the file is corrupted. This is a recoverable error where the file is overwritten on the","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"yadunut"},"content":"     * next save.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"yadunut"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"yadunut"},"content":"    public List\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"yadunut"},"content":"        Scanner fileScanner \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"yadunut"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"yadunut"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"yadunut"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"yadunut"},"content":"                String[] split \u003d fileScanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"yadunut"},"content":"                TodoState state \u003d split[1].equals(\"1\") ? TodoState.DONE : TodoState.UNDONE;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"yadunut"},"content":"                switch (split[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"yadunut"},"content":"                    case \"T\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"yadunut"},"content":"                        tasks.add(new Todo(split[2], state));","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"yadunut"},"content":"                    case \"D\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"yadunut"},"content":"                        tasks.add(new Deadline(split[2], Util.parseDate(split[3]), state));","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"yadunut"},"content":"                    case \"E\": {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"yadunut"},"content":"                        tasks.add(new Event(split[2], Util.parseDate(split[3]), Util.parseDate(split[4]), state));","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"yadunut"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"yadunut"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"yadunut"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"yadunut"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"yadunut"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"yadunut"},"content":"            throw new DukeException(\"File is corrupted\");","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"yadunut"},"content":"        } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"yadunut"},"content":"            fileScanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"yadunut"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":92}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":" * The interface for storage. It is used to save and load the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"public interface Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"    void save(TaskList taskList) throws DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    List\u003cTask\u003e load() throws DukeException, IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.utils.Util;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"    final LocalDate deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    public Deadline(String task, LocalDate deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"        super(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    public Deadline(String task, LocalDate deadline, TodoState todoState) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"        super(task, todoState);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"        return \"D | \" + (todoState \u003d\u003d TodoState.DONE ? \"1\" : \"0\") + \" | \" + task + \" | \" + Util.formatDate(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.utils.Util;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"    final LocalDate start;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    final LocalDate end;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    public Event(String task, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        super(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    public Event(String task, LocalDate start, LocalDate end, TodoState todoState) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        super(task, todoState);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"        return \"[E] \" + super.toString() + \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"        return \"E | \" + (todoState \u003d\u003d TodoState.DONE ? \"1\" : \"0\") + \" | \" + task + \" | \" + Util.formatDate(start)","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"                + \" | \" + Util.formatDate(end);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"    TodoState todoState;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"    final String task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"        return task;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        this.todoState \u003d TodoState.UNDONE;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    public Task(String task, TodoState todoState) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"        this.todoState \u003d todoState;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"        return \"[\" + (todoState \u003d\u003d TodoState.DONE ? \"X\" : \" \") + \"] \" + task;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":27}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    public Task getTask(int id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"        return this.tasks.get(id);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"    public void markAsDone(int id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"        this.tasks.get(id).todoState \u003d TodoState.DONE;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"    public void unmarkAsDone(int id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"        this.tasks.get(id).todoState \u003d TodoState.UNDONE;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"    public int size() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"    public void remove(int id) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"        this.tasks.remove(id);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":45}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"        super(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"    public Todo(String task, TodoState todoState) {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"        super(task, todoState);","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        return \"T | \" + (todoState \u003d\u003d TodoState.DONE ? \"1\" : \"0\") + \" | \" + task;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":21}},{"path":"src/main/java/duke/task/TodoState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"public enum TodoState {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"    UNDONE, DONE","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":5}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"public class TextUi {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"    public TextUi() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"    public void showFileLoadingError() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Error loading file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Hello! I\u0027m Brian\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"    public void showLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"    public void showTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"            System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"    public void foundTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"yadunut"},"content":"        showTasks(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"yadunut"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"yadunut"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"yadunut"},"content":"    public void showUnmarked(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Okay! I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"yadunut"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"yadunut"},"content":"    public void showHelpCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"yadunut"},"content":"    public void showTask(Task task, int size) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"yadunut"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"yadunut"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", size);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"yadunut"},"content":"    public void removeTask(Task task, int size) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"yadunut"},"content":"        System.out.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"yadunut"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", size);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"yadunut"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"yadunut"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":80}},{"path":"src/main/java/duke/utils/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":7}},{"path":"src/main/java/duke/utils/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.utils;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"public class Util {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"    static final DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    public static LocalDate parseDate(String date) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"            return LocalDate.parse(date, dateFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"            throw new DukeException(\"Invalid date format. Please use dd/MM/yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"    public static String formatDate(LocalDate date) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        return date.format(dateFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":21}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"package duke.parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"import duke.command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"import duke.utils.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"yadunut"},"content":"    void parse() throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"list\").getClass(), ListCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"mark 1\").getClass(), MarkCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"        DukeException markException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"        assertEquals(markException.getMessage(), \"The id of a mark cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"unmark 1\").getClass(), UnmarkCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"        DukeException unmarkException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"unmark\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"yadunut"},"content":"        assertEquals(unmarkException.getMessage(), \"The id of an unmark cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"todo 1\").getClass(), TodoCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"yadunut"},"content":"        DukeException todoException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"yadunut"},"content":"        assertEquals(todoException.getMessage(), \"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"deadline 1 /by 25/08/2025\").getClass(), DeadlineCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"yadunut"},"content":"        DukeException deadlineDescException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"yadunut"},"content":"        assertEquals(deadlineDescException.getMessage(), \"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"yadunut"},"content":"        DukeException deadlineByException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline description\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"yadunut"},"content":"        assertEquals(deadlineByException.getMessage(), \"The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"event 1 /from 25/08/2025 /to 26/08/2025\").getClass(), EventCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"yadunut"},"content":"        DukeException eventDescException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"        assertEquals(eventDescException.getMessage(), \"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"        DukeException eventFromException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event desc\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"        assertEquals(eventFromException.getMessage(), \"The from of an event cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"        DukeException eventToException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"event desc /from 25/08/2025\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"        assertEquals(eventToException.getMessage(), \"The to of an event cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"delete 1\").getClass(), DeleteCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"yadunut"},"content":"        DukeException deleteException \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"yadunut"},"content":"        assertEquals(deleteException.getMessage(), \"The id of a delete cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"bye\").getClass(), ByeCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"help\").getClass(), HelpCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"yadunut"},"content":"        assertEquals(Parser.parse(\"asdasdad\").getClass(), HelpCommand.class);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"yadunut"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"yadunut"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"yadunut":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yadunut"},"content":"todo first","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"yadunut"},"content":"deadline second /by 01/02/2025","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"yadunut"},"content":"event third /from 05/12/2025 /to 13/12/2025","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"yadunut"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"yadunut"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"yadunut"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"yadunut"},"content":"unmark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"yadunut"},"content":"delete 2","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"yadunut"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"yadunut"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"yadunut":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yadunut"},"content":"if [ -e \"data/duke.txt\" ]","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"yadunut"},"content":"then","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"yadunut"},"content":"  rm \"data/duke.txt\"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"yadunut"},"content":"fi","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"yadunut"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"yadunut"},"content":"if [ -e \"data/duke.txt\" ]","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"yadunut"},"content":"then","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"yadunut"},"content":"  rm \"data/duke.txt\"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"yadunut"},"content":"fi","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"yadunut"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"yadunut":12,"-":37}}]
