[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"    mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"    archiveFileName \u003d \u0027Duke.jar\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kailinteoo":24,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" * Extends the base Task class and includes additional information about the deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"public class Deadline extends Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"     * The deadline date and time","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"     * The day of the week if the deadline is specified as a day (e.g., Monday).","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    protected DayOfWeek dayOfWeek;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"     * @param by          The deadline in string format.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        parseDeadline(by.trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"     * Parses the deadline string to determine the deadline date and time or day of the week.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"     * @param by The deadline in string format.","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"    private void parseDeadline(String by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"            this.by \u003d LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"                // If parsing as specific date/time format fails, try parsing as day of the week","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"                DateTimeFormatter dayOfWeekFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE\");","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"                this.dayOfWeek \u003d DayOfWeek.from(dayOfWeekFormatter.parse(by));","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"            } catch (DateTimeParseException error) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"                System.err.println(\"Error: Invalid input. Please provide a valid period of the week again.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"     * @return A formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"                    + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dayOfWeek + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":76}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kailinteoo":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":" * Represents the main class for the Duke program, a task management application.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    private Image dukeImage \u003d new Image(getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"     * Initializes Duke with storage and other components.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    public Duke() {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        tasks \u003d Storage.loadTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"        if (tasks \u003d\u003d null) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"            tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"        launch(args);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"        stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"     * Displays the welcome message when Duke starts.","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"    public String displayWelcomeMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"        return ui.message();","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"     * Processes user input and returns a boolean indicating whether to continue accepting input.","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"     * @return true to continue accepting input, false otherwise.","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"        Parser parser \u003d new Parser(input, tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"        String result \u003d parser.parseCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"            return ui.finalMessage();","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"        return result;","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":131}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":" * Custom exception class for Duke program.","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":" * Represents exceptions specific to the Duke task management program.","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" *","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" * DukeException extends the standard Java Exception class.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":" * It is used to handle and propagate exceptions that may occur during the execution of the Duke program.","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":" * The exception contains a message describing the specific error or issue encountered.","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"     * @param message The error message describing the exception.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"        super(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":23}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * Extends the base Task class and includes additional information about the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"public class Event extends Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"     * The start time of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    protected String from;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"     * The end time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    protected String to;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"     * @param from        The start time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"     * @param to          The end time of the event.","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"     * @return A formatted string representation of the Event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \" )\";","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":45}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kailinteoo":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"            stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"            controller.setDuke(duke);","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"            // Display welcome message","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"            controller.showWelcomeMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kailinteoo":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"     * Handles user input by sending it to Duke for processing and displaying the response.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"     * Displays the welcome message when Duke starts.","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"        String welcomeText \u003d duke.displayWelcomeMessage();","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeText, dukeImage));","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"        // Display user and Duke dialogue boxes","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        // Clear user input after processing","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kailinteoo":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * Deals with parsing and interpreting user commands for task management.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * Parses the user input and executes corresponding actions on the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"    private String userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    private ArrayList\u003cTask\u003e myList;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a Parser with the specified user input and task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"     * @param myList    The list of tasks to be managed.","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    public Parser(String userInput, ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"     * Parses and executes the user command based on the provided input.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"     * @return True if the program should continue processing commands, false if the program should exit.","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    public String parseCommand() {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"        // Split input into \"command\" and \"parameters\"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"        String restOfInputs \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"            TaskList taskList \u003d new TaskList(myList);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"            return taskList.list();","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"            TaskList taskList \u003d new TaskList(myList);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"            return taskList.find(parts);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        } else if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"            return ui.commandError();","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"            TaskList taskList \u003d new TaskList(myList);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"            return taskList.unmarkList(parts);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"            TaskList taskList \u003d new TaskList(myList);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"            return taskList.markList(parts);","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"            TaskList taskList \u003d new TaskList(myList);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"            return taskList.remove(parts);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"            TaskList taskList \u003d new TaskList(myList);","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"            return taskList.add(command, restOfInputs);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"        return ui.blank();","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":75}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":" * Handles the storage of tasks to and from a file.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":" * Provides methods to save and load tasks from a specified file path.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"     * The default file path for storing tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a storage instance with the specified file path.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"     * Ensures the existence of the folder and file for storing tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"     * If the folder or file does not exist, it creates them.","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    private static void ensureFolderAndFileExists() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"        File folder \u003d new File(\"./data\");","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        File file \u003d new File(folder, \"/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"            // Creates the directory named by this abstract pathname,","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            // including any necessary but nonexistent parent directories","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"                System.err.println(\"Error creating new file; \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"     * Saves the provided list of tasks to the specified file path.","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"        ensureFolderAndFileExists();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        // OOS writes primitive data types and graphs of Java objects to an OutputStream","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"        // Both FileInputStream and FileOutputStream create byte streams linked to files","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(FILE_PATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"            // Open an OOS for writing to the files","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"            // Catch any IOException that might occur during the file writing process","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"            System.err.println(\"Error saving tasks:\" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"     * Loads the list of tasks from the specified file path.","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"     * @return The list of tasks loaded from the file, or null if an error occurs.","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(FILE_PATH))) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"            System.out.println(\"No existing data file found. Starting with an empty task list\");","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"            System.err.println(\"Error loading tasks: Corrupted data file. Starting with an empty task list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":95}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" * Represents a generic tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":" * Provides basic functionality for managing tasks, such as marking as done,","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":" * retrieving status, and obtaining a string representation.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"     * The description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"     * Indicates whether the task is marked as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     * The deadline at the task (if applicable).","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a Task with the specified description, and default isDone status.","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a Task with the specified description, deadline and default isDone status.","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    public Task(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"     * Returns an icon indicating the status of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"     * @return The status icon (\"[X]\" for done, \"[]\" for not done).","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"        return description;","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"     * @return The deadline of the task, or null if there is no deadline.","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"        return deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"     * @return A formatted string representing the task, including status, description, and deadline (if applicable)","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"        String status \u003d getStatusIcon();","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"        String deadlineString \u003d (deadline !\u003d null) ? \" (by: \"","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\" : \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"        return status + \" \" + getDescription() + deadlineString;","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":102}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * Represents a list of tasks with various operations such as marking, unmarking, listing, removing and adding tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * Provides methods to interact with and manipulate the list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    private ArrayList\u003cTask\u003e myList;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a TaskList instance with the provided list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"     * @param myList The list of tasks to be managed.","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"     * Marks a specified task in the list as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"     * @param parts An array containing the command and task number.","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the information about the marked task.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    public String markList(String[] parts) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"        //System.out.println(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c myList.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"            Task task \u003d myList.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"            return ui.markInfo(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"            return ui.invalidNum();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"     * Marks a specified task in the list as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"     * @param parts An array containing the command and task number.","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the information about the unmarked.","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"    public String unmarkList(String[] parts) {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"        //System.out.println(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c myList.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"            Task task \u003d myList.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"            return ui.unmarkInfo(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"            return ui.invalidNum();","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"     * Lists all tasks in the current list.","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the list of tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"    public String list() {","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"        StringBuilder result \u003d new StringBuilder(ui.listDetails()); // Start with the UI details","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"        result.append(ui.separationLine());","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"        for (Task task : myList) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"            // Append each item from the loop to the result string","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"            result.append((myList.indexOf(task) + 1)).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"        result.append(ui.separationLine()); // Append the separation line","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"        return result.toString(); // Convert StringBuilder to String and return","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"     * Removes a specified task from the list.","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"     * @param parts An array containing the command and the task number.","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the information about the removed task.","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"    public String remove(String[] parts) {","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"        int removed \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"        if (removed \u003e\u003d 0 \u0026\u0026 removed \u003c myList.size()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"            Task item \u003d myList.get(removed);","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"            myList.remove(removed);","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"            return ui.removeTop(item) + ui.removeBottom(myList.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"            return ui.invalidNum();","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"     * Finds tasks containing a specified keyword and prints them to the console.","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"     * @param parts An array containing the command and the keyword to search for.","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the list of tasks containing the keyword.","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"    public String find(String[] parts) {","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"        StringBuilder result \u003d new StringBuilder(ui.findListDetails()); // Start with the UI details","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"        for (Task task : myList) {","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"                result.append((myList.indexOf(task) + 1))","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"                        .append(\".\").append(task).append(\"\\n\"); // Append each item from the loop to the result string","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"        result.append(ui.separationLine()); // Append the separation line","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"        return result.toString(); // Convert StringBuilder to String and return","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"     * Adds a new task to the task list based on the provided command and input.","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"     * @param command The command indicating the type of task to add (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"     * @param restOfInputs The rest of the user input containing task details (e.g., task description, deadline).","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the information about the added task.","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"    public String add(String command, String restOfInputs) {","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"kailinteoo"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"kailinteoo"},"content":"                    if (restOfInputs \u003d\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"kailinteoo"},"content":"                        String errorMessage \u003d ui.emptyErrorMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"kailinteoo"},"content":"                        throw new DukeException(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"kailinteoo"},"content":"                        Todo newTodo \u003d new Todo(restOfInputs);","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"kailinteoo"},"content":"                        myList.add(newTodo);","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"kailinteoo"},"content":"                        int size \u003d myList.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"kailinteoo"},"content":"                        return ui.todoInfo(newTodo, size);","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"kailinteoo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"kailinteoo"},"content":"                    ui.errorEncounter(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"kailinteoo"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":153,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"kailinteoo"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"kailinteoo"},"content":"                    if (restOfInputs \u003d\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"kailinteoo"},"content":"                        String errorMessage \u003d ui.emptyErrorMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"kailinteoo"},"content":"                        throw new DukeException(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"kailinteoo"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"kailinteoo"},"content":"                        String[] item \u003d restOfInputs.split(\"/by\");","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"kailinteoo"},"content":"                        String items \u003d item[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"kailinteoo"},"content":"                        String time \u003d item[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":164,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"kailinteoo"},"content":"                        Deadline newDeadline \u003d new Deadline(items, time);","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"kailinteoo"},"content":"                        myList.add(newDeadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"kailinteoo"},"content":"                        int size \u003d myList.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"kailinteoo"},"content":"                        return ui.deadlineInfo(newDeadline, size);","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"kailinteoo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"kailinteoo"},"content":"                    ui.errorEncounter(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":175,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"kailinteoo"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":178,"author":{"gitId":"kailinteoo"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"kailinteoo"},"content":"                    if (restOfInputs \u003d\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"kailinteoo"},"content":"                        String errorMessage \u003d ui.emptyErrorMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"                        throw new DukeException(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"kailinteoo"},"content":"                    } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"kailinteoo"},"content":"                        String[] item \u003d restOfInputs.split(\"/from\");","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"kailinteoo"},"content":"                        String items \u003d item[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"kailinteoo"},"content":"                        String time \u003d item[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":188,"author":{"gitId":"kailinteoo"},"content":"                        String[] period \u003d time.split(\"/to\");","lastModifiedDate":"2024-02-09"},{"lineNumber":189,"author":{"gitId":"kailinteoo"},"content":"                        String from \u003d period[0];","lastModifiedDate":"2024-02-09"},{"lineNumber":190,"author":{"gitId":"kailinteoo"},"content":"                        String to \u003d period[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":191,"author":{"gitId":"kailinteoo"},"content":"                        Event newEvent \u003d new Event(items, from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"kailinteoo"},"content":"                        myList.add(newEvent);","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"kailinteoo"},"content":"                        int size \u003d myList.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"kailinteoo"},"content":"                        return ui.eventInfo(newEvent, size);","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"kailinteoo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"kailinteoo"},"content":"                    ui.errorEncounter(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"kailinteoo"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"kailinteoo"},"content":"                throw new DukeException(ui.errorMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"kailinteoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"kailinteoo"},"content":"            ui.errorEncounter(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"kailinteoo"},"content":"        return ui.blank();","lastModifiedDate":"2024-02-12"},{"lineNumber":210,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":211}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * Represents a simple to-do task without a specific deadline or event time.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * Inherits from the Task class and implements Serializable for object serialization.","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"public class Todo extends Task implements Serializable {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"     * Constructs a Todo instance with the provided description.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"     * Returns a string representation of the to-do task, including its type indicator.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     * @return A string representing the to-do task.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":31}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":" * Represents the user interface for the Duke program, providing methods for","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * displaying messages and information to the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"     * Displays the Duke logo and an initial message to the user.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"     * @return The initial message to the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    public String message() {","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"        // Displaying Duke logo and initial message","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"        String logo \u003d \" KASSIM \";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"        return \"YOO I AM \" + logo + \"\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"     * Displays an error message encountered during the Duke program execution.","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"     * @param e The DukeException containing the error message.","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    public void errorEncounter(DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"     * Returns a message indicating that a task description is empty.","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"     * @return The error message for an empty task description.","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"    public String emptyErrorMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"        return \"yes u have your task, but what your task plan to do? please indicate it.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"     * Returns a general error message for unexpected inputs.","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"     * @return The general error message for unexpected inputs.","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"    public String errorMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"        return \"what? please check your input.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"     * Displays an error message for an unrecognized command.","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"     * @return The error message for an unrecognized command.","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"    public String commandError() {","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"        return \"SORRY! but are you sure you enter the correct command? please check!\";","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"     * Displays information that a task has been marked as done","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating the task has been marked as done.","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"    public String markInfo(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task;","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"     * Displays information that a task has been marked as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating the task has been marked as not done.","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"    public String unmarkInfo(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"        return \"Ok, I\u0027ve marked this task as not done yet: \\n\" + task;","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"     * Displays a message for an invalid task number.","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"     * @return The error message for an invalid task number.","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"    public String invalidNum() {","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"        return \"Invalid task number.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"     * Displays the header for the list of tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating the list of tasks is shown.","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"    public String listDetails() {","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"        return \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"     * Prints a header indicating the start of the list of matching tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating the list of tasks user are finding.","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"    public String findListDetails() {","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"        return \"Here are the matching tasks in your list: \";","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"     * Displays information about the removal of a task.","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"     * @param task The task that has been removed.","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating the task removed.","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"    public String removeTop(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\" + task;","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"     * Displays information about the updated task list size after task removal.","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"     * @param size The updated size of the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating the number of tasks left in the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"    public String removeBottom(int size) {","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"        return \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"     * Displays information about the addition of a to-do task.","lastModifiedDate":"2024-02-06"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"     * @param newTodo The new to-do task that has been added.","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"     * @param size    The updated size of the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating what todo task is added into the task and the number of tasks left in the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"    public String todoInfo(Todo newTodo, int size) {","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"kailinteoo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newTodo","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"kailinteoo"},"content":"     * Displays information about the addition of a deadline task.","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"kailinteoo"},"content":"     * @param newDeadline The new deadline task that has been added.","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"     * @param size        The updated size of the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":141,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating what deadline task is added into the task and the number of task left in the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":143,"author":{"gitId":"kailinteoo"},"content":"    public String deadlineInfo(Deadline newDeadline, int size) {","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"kailinteoo"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + newDeadline","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"kailinteoo"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"kailinteoo"},"content":"     * Displays information about the addition of an event task.","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"kailinteoo"},"content":"     * @param newEvent The new event task that had been added.","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"kailinteoo"},"content":"     * @param size     The updated size of the task list.","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating what event task is added into the task and the number of task left in the list.","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"kailinteoo"},"content":"    public String eventInfo(Event newEvent, int size) {","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"kailinteoo"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" + newEvent","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"kailinteoo"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"kailinteoo"},"content":"     * Displays a final goodbye message when the user exits the Duke program.","lastModifiedDate":"2024-02-06"},{"lineNumber":162,"author":{"gitId":"kailinteoo"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"kailinteoo"},"content":"     * @return Last message for the user before they exit the program.","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":165,"author":{"gitId":"kailinteoo"},"content":"    public String finalMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"kailinteoo"},"content":"        return \"Bye! Hope to see you again!!\";","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":170,"author":{"gitId":"kailinteoo"},"content":"     * Prints a blank line.","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"kailinteoo"},"content":"     * @return A message indicating user enter a blank command.","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"kailinteoo"},"content":"    public String blank() {","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"kailinteoo"},"content":"        return \"what?\";","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":176,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"kailinteoo"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":178,"author":{"gitId":"kailinteoo"},"content":"     * Prints a separation line to visually separate different sections of output.","lastModifiedDate":"2024-02-06"},{"lineNumber":179,"author":{"gitId":"kailinteoo"},"content":"     * @return A separation line to separate the section.","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"kailinteoo"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"    public String separationLine() {","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"        return \"------------------------------------------------------------\";","lastModifiedDate":"2024-02-12"},{"lineNumber":183,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"kailinteoo":184}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"85.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kailinteoo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"kailinteoo":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"    public void validDateTimeInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"        Deadline deadline \u003d new Deadline(\"Finish project\", \"15/02/2024 2359\");","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"        assert(LocalDateTime.of(2024, 2, 15, 23, 59).equals(deadline.by));","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"        assert(deadline.dayOfWeek) \u003d\u003d null;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"    public void validDayOfWeekInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"        Deadline deadline \u003d new Deadline(\"Submit report\", \"Monday\");","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"        assert(deadline.by) \u003d\u003d null;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"        assert(DayOfWeek.MONDAY.equals(deadline.dayOfWeek));","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    public void invalidInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"        Deadline deadline \u003d new Deadline(\"Monday\", \"hello\");","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"    public void toString_withDateTime() {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        Deadline deadline \u003d new Deadline(\"Finish assignment\", \"24/01/2025 1400\");","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"        String expected \u003d \"[D][ ] Finish assignment (by: 24 Jan 2025 2:00 PM)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"        assert(expected.equals(deadline.toString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"    public void toString_withDayOfWeek() {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        Deadline deadline \u003d new Deadline(\"Meeting\", \"Wednesday\");","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"        String expected \u003d \"[D][ ] Meeting (by: WEDNESDAY)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        assert(expected.equals(deadline.toString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"kailinteoo":46}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"    public void todoToStringTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"        Todo todo \u003d new Todo(\"Buy candy\");","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"        assert(\"[T][ ] Buy candy\".equals(todo.toString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    public void todoMarkAsDoneTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"        Todo todo \u003d new Todo(\"Read a book\");","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"        todo.markAsDone();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"        assert(\"[T][X] Read a book\".equals(todo.toString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"kailinteoo":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":2}},{"path":"data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"kailinteoo":0}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"kailinteoo":0}}]
