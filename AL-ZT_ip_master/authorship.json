[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"# Miku project template","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"3. After that, locate the `src/main/java/duke.Launcher.java` file, right-click it, and choose `Run duke.Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"   ![](docs/Ui.png)","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"AL-ZT":3,"-":14}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"checkstyle {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"    archiveBaseName \u003d \"Miku\"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"    archiveVersion \u003d \"v1.1.0\"","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AL-ZT":23,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"# Miku User Guide","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"![Product Screenshot](Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"# Task Features","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"Adding a task: `todo`, `deadline`, `event`","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"Format: ","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"`todo \u003cname\u003e`: Saves a todo task.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"`deadline \u003cname\u003e /by \u003cdue date\u003e`: Saves a deadline.","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"`event \u003cname\u003e /from \u003cstart date\u003e /to \u003cend date\u003e`: Saves an event.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"## List tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"List out all stored tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"Format: `list`","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"## Mark / Unmark task completion","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"Marks / unmarks status of task.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"Format:","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"`mark \u003cindex\u003e`: Marks task as completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"`unmark \u003cindex\u003e`: Marks task as not completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"Example as demonstrated in the picture [above](#miku-user-guide).","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"## Delete task","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"Delete task off the TaskList.","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"Format:","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"`delete \u003cindex\u003e`: Delete task.","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"Refer to [mark](#mark--unmark-task-completion) for its similar usage.","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"## Find task","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"Find tasks matching the specified keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"Format:","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"`find \u003ckeyword\u003e`: Find tasks that matches with its name.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"# Loan Features","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"## Track given loan","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"Adds a given loan to the loan record.","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"Format:","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"`lend \u003cloan details\u003e /amount \u003camount lent\u003e`: Tracks a loan given to a specified party.","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"## Track taken loan","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"Adds a taken loan to the loan record.","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"Format:","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"`owe \u003cloan details\u003e /amount \u003camount taken\u003e`: Tracks a loan taken from a specified party.","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"## Mark loan as returned","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"AL-ZT"},"content":"Marks loan as returned, either from or to the party attached to the loan.","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"AL-ZT"},"content":"Format:","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"AL-ZT"},"content":"`paid \u003cloan index\u003e`: Mark loan as returned.","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"AL-ZT":58,"-":23}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e encapsulates the main command and the arguments needed for execution.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"public class Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"    private String command;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"    private String[] arguments;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a valid \u003ccode\u003eCommand\u003c/code\u003e for execution. It however, does not take into account","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"     * the validity of arguments specified by the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"     * @param cmd Main command.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"     * @param args Supplied arguments.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"    protected Command(String cmd, String... args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"        command \u003d cmd;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"        arguments \u003d args;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"     * Executes the command attached to the \u003ccode\u003eCommand\u003c/code\u003e instance.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"     * @param tl \u003ccode\u003eTaskList\u003c/code\u003e instance to update tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e instance to update file for persistence of task data.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If command fails.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"    protected String execute(TaskList tl, LoanRecords loans, Storage st) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"            String res \u003d tl.list() + \"\\n\";","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"            return res + loans.list();","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"            return tl.unmark(st, arguments);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"            return tl.mark(st, arguments);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"            return tl.deleteTask(st, arguments);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"            return tl.find(arguments[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"lend\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"            return loans.giveLoan(st, arguments);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"owe\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"            return loans.takeLoan(st, arguments);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"        } else if (command.equals(\"paid\")) {","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"            return loans.returnLoan(st, arguments);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"            return tl.addTask(st, command, arguments);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"AL-ZT":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":" * Main program of Duke that runs the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"public class Duke {","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"    private LoanRecords loans;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e to start the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"     * @param taskDataPath Tasks data path for persistent task storage.","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"     * @param loanRecordsPath Loan records path for persistent task storage.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    public Duke(String taskDataPath, String loanRecordsPath) {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"        storage \u003d new Storage(taskDataPath, loanRecordsPath);","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"            loans \u003d new LoanRecords(storage.loadLoans());","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"            loans \u003d new LoanRecords();","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"        assert tasks !\u003d null : \"TaskList should not be null!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"        assert loans !\u003d null : \"Loan Records should not be null!\";","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"     * Runs an instance of \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"    public String greet() {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"        return \"Hello! I\u0027m Hatsune Miku!\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"                + \" What can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"     * Returns a goodbye message.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"     * @return Goodbye message string.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"    public String goodbye() {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"        return \"Bye, Hope to see you again soon!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"     * Reads command String off of user input in \u003ccode\u003eMainWindow\u003c/code\u003e.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"     * @param command command String to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke after command processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"    public String readCommand(String command) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"            Command c \u003d Parser.parse(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"            return c.execute(tasks, loans, storage);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"            return de.getMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":65}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"public class Launcher {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"AL-ZT":12}},{"path":"src/main/java/duke/LoanRecords.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"import duke.loans.Loan;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":" * A Loan Record that holds all loans, whether given or taken by the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"public class LoanRecords {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"    private ArrayList\u003cLoan\u003e loans;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a Loan Record to store all loans related to the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"     * @param l \u003ccode\u003eArrayList\u003c/code\u003e of loans.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    protected LoanRecords(ArrayList\u003cLoan\u003e l) {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"        loans \u003d l;","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"     * Constructs an empty Loan Record when persistent file data is not found.","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"    protected LoanRecords() {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"        loans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"     * Specifies the loan given out by the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e for data persistence.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"     * @param args \u003ccode\u003eCommand\u003c/code\u003e arguments.","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"     * @return Output for Miku.","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If arguments are invalid.","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"    protected String giveLoan(Storage st, String... args) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"        BigDecimal amount \u003d new BigDecimal(args[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"        String detail \u003d args[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"        loans.add(new Loan(amount, detail, false));","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"        st.saveLoans(loans);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"        return \"Loan of $\" + amount + \" given for \" + detail + \"!\";","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"     * Specifies the loan taken by the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e for data persistence.","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"     * @param args \u003ccode\u003eCommand\u003c/code\u003e arguments.","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"     * @return Output for Miku.","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If arguments are invalid.","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"    protected String takeLoan(Storage st, String... args) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"        BigDecimal amount \u003d new BigDecimal(args[1]);","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"        String detail \u003d args[0];","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"        loans.add(new Loan(amount, detail, true));","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"        st.saveLoans(loans);","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"        return \"Loan of $\" + amount + \" taken for \" + detail + \"!\";","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"     * Specifies the loan that has been returned.","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e for data persistence.","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"     * @param args \u003ccode\u003eCommand\u003c/code\u003e arguments","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"     * @return Output for Miku.","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If index specified is out of bounds.","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"AL-ZT"},"content":"    protected String returnLoan(Storage st, String... args) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"AL-ZT"},"content":"            Loan l \u003d loans.get(Integer.parseInt(args[0]) - 1);","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"            l.returnLoan();","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"AL-ZT"},"content":"            st.saveLoans(loans);","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"AL-ZT"},"content":"            return \"Loan has been returned:\\n\"","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"AL-ZT"},"content":"                    + l;","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"AL-ZT"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"AL-ZT"},"content":"            throw new DukeException(\"Index number cannot be out of bounds.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"AL-ZT"},"content":"     * Lists down all saved loans.","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"AL-ZT"},"content":"     * @return Output for Miku.","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"AL-ZT"},"content":"    protected String list() {","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"AL-ZT"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"AL-ZT"},"content":"        String res \u003d \"Here are the loans in your list:\";","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"AL-ZT"},"content":"        for (Loan l : loans) {","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"AL-ZT"},"content":"            count++;","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"AL-ZT"},"content":"            res \u003d res.concat(\"\\n\" + count + \". \" + l);","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"AL-ZT"},"content":"        return res;","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"AL-ZT":98}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"import duke.javafx.MainWindow;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\", \"./data/loans.txt\");","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"            stage.setTitle(\"Miku - ChatBot\");","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/botReply.jpg\")));","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"            stage.show();","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"AL-ZT":35}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.InvalidCmdException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":" * Interprets a \u003ccode\u003eString\u003c/code\u003e input from the command-line and formats the main command","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":" *     and arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"public class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"    private static final HashMap\u003cString, List\u003cString\u003e\u003e CMD_LIST \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"            put(\"todo\", Arrays.asList(\"todo\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"            put(\"deadline\", Arrays.asList(\"deadline\", \"/by\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"            put(\"event\", Arrays.asList(\"event\", \"/from\", \"/to\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"            put(\"list\", null);","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"            put(\"mark\", Arrays.asList(\"mark\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"            put(\"unmark\", Arrays.asList(\"unmark\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"            put(\"delete\", Arrays.asList(\"delete\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"            put(\"find\", Arrays.asList(\"find\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"            put(\"lend\", Arrays.asList(\"lend\", \"/amount\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"            put(\"owe\", Arrays.asList(\"owe\", \"/amount\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"            put(\"paid\", Arrays.asList(\"paid\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"            put(\"bye\", null);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"        }};","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     * Returns a Command class for execution after parsing the command","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"     * string with relevant arguments.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"     * @param input String to parse into \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"     * @return Command class for execution.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"     * @throws InvalidCmdException If command is unknown, or if parameters / arguments are","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"     *     missing.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"    protected static Command parse(String input) throws InvalidCmdException {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"        String verifiedCommand \u003d verifyMainCommand(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"        List\u003cString\u003e parameters \u003d Parser.CMD_LIST.get(verifiedCommand);","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"        return new Command(verifiedCommand, getArguments(parameters, input));","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"    private static String verifyMainCommand(String input) throws InvalidCmdException {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"        String[] token \u003d input.split(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"        String possibleCommand \u003d token[0];","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"        if (!Parser.CMD_LIST.containsKey(possibleCommand)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"            throw new InvalidCmdException(\"Unknown command, please try again.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"        return possibleCommand;","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"    private static String[] getArguments(List\u003cString\u003e parameters, String input) throws InvalidCmdException {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"        String delimiter \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"        if (parameters !\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"            int count \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"            for (String param : parameters) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"                if (!input.contains(param)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"                    throw new InvalidCmdException(\"Missing parameter: \" + param);","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"                if (count \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"                    delimiter \u003d delimiter.concat(param + \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"                    delimiter \u003d delimiter.concat(\"| \\\\\" + param + \" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"                count++;","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"            String[] token \u003d input.split(delimiter);","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"            if (token.length !\u003d parameters.size() + 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"AL-ZT"},"content":"                throw new InvalidCmdException(\"Missing arguments in parameters.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"AL-ZT"},"content":"            return Arrays.copyOfRange(token, 1, token.length);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"AL-ZT"},"content":"        return new String[0];","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"AL-ZT":76}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"import duke.loans.Loan;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":" * Handles data storage using file IO.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    private String taskFilePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    private String loanFilePath \u003d \"./data/loans.txt\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    private FileWriter data;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a new \u003ccode\u003eStorage\u003c/code\u003e that stores tasks and loans from specified file.","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     * @param specifiedTaskFilePath Task data file to be written.","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"     * @param specifiedLoanFilePath Loan data file to be written.","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"    protected Storage(String specifiedTaskFilePath, String specifiedLoanFilePath) {","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"        taskFilePath \u003d specifiedTaskFilePath;","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"        loanFilePath \u003d specifiedLoanFilePath;","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"     * Loads, parses and returns task data from specified tasks file.","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"     * @return \u003ccode\u003eArrayList\u003c/code\u003e of tasks.","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"     * @throws IOException When \u003ccode\u003eScanner\u003c/code\u003e does not find the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"    protected ArrayList\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"        File tasksFile \u003d new File(taskFilePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"        if (!tasksFile.exists()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"            tasksFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"        Scanner sc \u003d new Scanner(tasksFile);","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"            String[] token \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"            if (token[0].equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"                arr.add(new Todo(token[1], Boolean.parseBoolean(token[2])));","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"            } else if (token[0].equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"                arr.add(new Deadline(token[1], Boolean.parseBoolean(token[2]), LocalDate.parse(token[3], formatter)));","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"            } else if (token[0].equals(\"E\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"                arr.add(new Event(token[1], Boolean.parseBoolean(token[2]), token[3], token[4]));","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"        sc.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"        return arr;","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"     * Loads, parses and returns loan data from specified loans file.","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"AL-ZT"},"content":"     * @return \u003ccode\u003eArrayList\u003c/code\u003e of loans.","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"     * @throws IOException When \u003ccode\u003eScanner\u003c/code\u003e does not find the file.","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"    protected ArrayList\u003cLoan\u003e loadLoans() throws IOException {","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"AL-ZT"},"content":"        ArrayList\u003cLoan\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"        File loansFile \u003d new File(loanFilePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"AL-ZT"},"content":"        if (!loansFile.exists()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"AL-ZT"},"content":"            loansFile.getParentFile().mkdirs();","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"AL-ZT"},"content":"            loansFile.createNewFile();","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"AL-ZT"},"content":"        Scanner sc \u003d new Scanner(loansFile);","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"AL-ZT"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"AL-ZT"},"content":"            String[] token \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"AL-ZT"},"content":"            boolean taken \u003d (token[2].equals(\"given\")) ? false : true;","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"AL-ZT"},"content":"            arr.add(new Loan(new BigDecimal(token[0]), token[1],","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"AL-ZT"},"content":"                    taken, Boolean.parseBoolean(token[3])));","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"AL-ZT"},"content":"        sc.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"AL-ZT"},"content":"        return arr;","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"AL-ZT"},"content":"     * Saves current tasks in instance to specified file.","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"AL-ZT"},"content":"     * @param taskList \u003ccode\u003eArrayList\u003c/code\u003e of tasks to store.","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If there is error in IO.","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"AL-ZT"},"content":"    protected void saveTasks(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"AL-ZT"},"content":"            data \u003d new FileWriter(taskFilePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":100,"author":{"gitId":"AL-ZT"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"AL-ZT"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"AL-ZT"},"content":"                    data.write(String.format(\"T|%s|%s\\n\", task.getTaskName(), task.isDone()));","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"AL-ZT"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"AL-ZT"},"content":"                    Deadline d \u003d (Deadline) task;","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"AL-ZT"},"content":"                    data.write(String.format(\"D|%s|%s|%s\\n\", d.getTaskName(), d.isDone(),","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"AL-ZT"},"content":"                            d.getBy().format(DateTimeFormatter.ISO_LOCAL_DATE)));","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"AL-ZT"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"AL-ZT"},"content":"                    Event e \u003d (Event) task;","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"AL-ZT"},"content":"                    data.write(String.format(\"E|%s|%s|%s|%s\\n\",","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"AL-ZT"},"content":"                            e.getTaskName(), e.isDone(), e.getFrom(), e.getTo()));","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"AL-ZT"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"AL-ZT"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"AL-ZT"},"content":"            data.close();","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"AL-ZT"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"AL-ZT"},"content":"            throw new DukeException(\"Unable to save! Reason: \" + ie.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"AL-ZT"},"content":"     * Saves current loans in instance to specified file.","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"AL-ZT"},"content":"     * @param loanRecord \u003ccode\u003eArrayList\u003c/code\u003e of loans to store.","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If there is error in IO.","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"AL-ZT"},"content":"    protected void saveLoans(ArrayList\u003cLoan\u003e loanRecord) throws DukeException {","lastModifiedDate":"2024-02-20"},{"lineNumber":126,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"AL-ZT"},"content":"            data \u003d new FileWriter(loanFilePath);","lastModifiedDate":"2024-02-20"},{"lineNumber":128,"author":{"gitId":"AL-ZT"},"content":"            for (Loan loan : loanRecord) {","lastModifiedDate":"2024-02-20"},{"lineNumber":129,"author":{"gitId":"AL-ZT"},"content":"                data.write(String.format(\"%s|%s|%s|%s\\n\",","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"AL-ZT"},"content":"                        loan.getAmount(), loan.getDetails(), loan.getType(), loan.getReturnStatus()));","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"AL-ZT"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"AL-ZT"},"content":"            data.close();","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"AL-ZT"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2024-02-20"},{"lineNumber":134,"author":{"gitId":"AL-ZT"},"content":"            throw new DukeException(\"Unable to save! Reason: \" + ie.getMessage());","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":136,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"AL-ZT":137}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.InvalidTaskException;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":" * Holds an array of \u003ccode\u003eTask\u003c/code\u003e that actively keeps track of stored tasks in runtime.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e with no tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    protected TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e with specified task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"     * @param tasks \u003ccode\u003eArrayList\u003c/code\u003e of tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"    protected TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"     * Adds relevant task to \u003ccode\u003eTaskList\u003c/code\u003e and updates file from \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"     * @param st Stores task after update.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"     * @param task Task type.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"     * @param args Arguments for the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If arguments for the task are not in a specific format.","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"    protected String addTask(Storage st, String task, String... args) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"        if (task.equals(\"todo\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"            t \u003d createTodoTask(args[0]);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"        } else if (task.equals(\"deadline\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"            t \u003d createDeadlineTask(args[0], args[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"        } else if (task.equals(\"event\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"            t \u003d createEventTask(args[0], args[1], args[2]);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"            throw new InvalidTaskException(\"Invalid task syntax for \" + task + \".\");","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"        tasks.add(t);","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"        st.saveTasks(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"                + t + \"\\n\"","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"    private Task createTodoTask(String name) {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"        return new Todo(name);","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"    private Task createDeadlineTask(String name, String deadline) throws InvalidTaskException {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"AL-ZT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"AL-ZT"},"content":"            LocalDate d \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"            return new Deadline(name, d);","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"AL-ZT"},"content":"        } catch (DateTimeParseException de) {","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"            throw new InvalidTaskException(\"Date not in format: yyyy-MM-dd, please try again.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"AL-ZT"},"content":"    private Task createEventTask(String name, String from, String to) {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"AL-ZT"},"content":"        return new Event(name, from, to);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"AL-ZT"},"content":"     * Deletes tasks from \u003ccode\u003eTaskList\u003c/code\u003e and updates file from \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e instance to update.","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"AL-ZT"},"content":"     * @param args Contains index for specifying task.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"AL-ZT"},"content":"    protected String deleteTask(Storage st, String... args) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"AL-ZT"},"content":"        Task t \u003d tasks.get(Integer.parseInt(args[0]) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"AL-ZT"},"content":"        tasks.remove(t);","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"AL-ZT"},"content":"        st.saveTasks(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"AL-ZT"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"AL-ZT"},"content":"                + t + \"\\n\"","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"AL-ZT"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"AL-ZT"},"content":"     * Lists down all saved tasks in \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"AL-ZT"},"content":"    protected String list() {","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"AL-ZT"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"AL-ZT"},"content":"        String res \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"AL-ZT"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"AL-ZT"},"content":"            count++;","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"AL-ZT"},"content":"            res \u003d res.concat(\"\\n\" + count + \". \" + t);","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"AL-ZT"},"content":"        return res;","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"AL-ZT"},"content":"     * Marks specified task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e for file update.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"AL-ZT"},"content":"     * @param args Index for specified task.","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If \u003ccode\u003eTaskList\u003c/code\u003e index is out of bounds.","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"AL-ZT"},"content":"    protected String mark(Storage st, String... args) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"AL-ZT"},"content":"            Task t \u003d tasks.get(Integer.parseInt(args[0]) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":125,"author":{"gitId":"AL-ZT"},"content":"            t.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"AL-ZT"},"content":"            st.saveTasks(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":127,"author":{"gitId":"AL-ZT"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"AL-ZT"},"content":"                    + t;","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"AL-ZT"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"AL-ZT"},"content":"            throw new DukeException(\"Index number cannot be out of bounds.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"AL-ZT"},"content":"     * Marks specified task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"AL-ZT"},"content":"     * @param st \u003ccode\u003eStorage\u003c/code\u003e for file update.","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"AL-ZT"},"content":"     * @param args Index for specified task.","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":140,"author":{"gitId":"AL-ZT"},"content":"     * @throws DukeException If \u003ccode\u003eTaskList\u003c/code\u003e index is out of bounds.","lastModifiedDate":"2024-02-17"},{"lineNumber":141,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"AL-ZT"},"content":"    protected String unmark(Storage st, String... args) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"AL-ZT"},"content":"            Task t \u003d tasks.get(Integer.parseInt(args[0]) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"AL-ZT"},"content":"            t.markUndone();","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"AL-ZT"},"content":"            st.saveTasks(tasks);","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"AL-ZT"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":148,"author":{"gitId":"AL-ZT"},"content":"                    + t;","lastModifiedDate":"2024-02-05"},{"lineNumber":149,"author":{"gitId":"AL-ZT"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"AL-ZT"},"content":"            throw new DukeException(\"Index number cannot be out of bounds.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"AL-ZT"},"content":"     * Allows one to find tasks in TaskList with specified keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"AL-ZT"},"content":"     * @param key keyword to filter \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialogue for Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"AL-ZT"},"content":"    protected String find(String key) {","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"AL-ZT"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"AL-ZT"},"content":"        String res \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"AL-ZT"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"AL-ZT"},"content":"            if (t.getTaskName().contains(key)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"AL-ZT"},"content":"                res \u003d res.concat(\"\\n\" + count + \". \" + t);","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"AL-ZT"},"content":"                count++;","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"AL-ZT"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"AL-ZT"},"content":"        return res;","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"AL-ZT":171}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":" * Superclass exception that handles all things Duke-related.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eDukeException\u003c/code\u003e of all exceptions Duke related.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"     * @param msg Exception message.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"        super(\"_____________!!!!_____________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"                + msg);","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"AL-ZT":16}},{"path":"src/main/java/duke/exceptions/InvalidCmdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":" * Issues an Invalid Command Exception if the Duke command cannot be completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"public class InvalidCmdException extends DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"     * Constructs an \u003ccode\u003eInvalidCmdException\u003c/code\u003e if given Duke command is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"     * This could mean if the command cannot be parsed, or if arguments provided are invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"     * @param msg Exception message.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"    public InvalidCmdException(String msg) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"        super(msg);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":16}},{"path":"src/main/java/duke/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":" * Issues an Invalid Task Exception when a \u003ccode\u003eTask\u003c/code\u003e constructed is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"     * Constructs an \u003ccode\u003eInvalidTaskException\u003c/code\u003e when a \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"     * constructed is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"     * @param msg Exception message.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"        super(msg);","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":16}},{"path":"src/main/java/duke/javafx/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.javafx;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"    private void flip() {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"     * Creates a dialog box containing the input and image","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"     * for the user when input is entered.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"     * @param text Command from user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"     * @param img User image.","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"    protected static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"     * Creates a dialog box containing the reply and image","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"     * for \u003ccode\u003eDuke\u003c/code\u003e when command is processed.","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"     * @param text Reply from processed command.","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"     * @param img Duke image.","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"AL-ZT"},"content":"     * @return Dialog box.","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"AL-ZT"},"content":"    protected static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"AL-ZT"},"content":"        db.flip();","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"        return db;","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"AL-ZT":77}},{"path":"src/main/java/duke/javafx/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.javafx;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/literallyMe.jpg\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/botReply.jpg\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"    private void initialize() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"     * Sets \u003ccode\u003eDuke\u003c/code\u003e instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"     * @param d \u003ccode\u003eDuke\u003c/code\u003e Object.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"                DialogBox.getDukeDialog(duke.greet(), dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"                    DialogBox.getDukeDialog(duke.goodbye(), dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"            );","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"        String response \u003d duke.readCommand(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"        );","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"AL-ZT":65}},{"path":"src/main/java/duke/loans/Loan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.loans;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":" * A loan that could either be taken or given by the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"public class Loan {","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"    protected BigDecimal amount;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"    private String details;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    private boolean isTaken;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"    private boolean isReturned \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eLoan\u003c/code\u003e that keeps track of user\u0027s given / taken loans.","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"     * @param amt Loan amount.","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"     * @param d The details of the loan.","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"     * @param taken If loan was taken by the user, it is \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"     *              Otherwise, if it was given, it should be \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    public Loan(BigDecimal amt, String d, boolean taken) {","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"        amount \u003d amt;","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"        details \u003d d;","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"        isTaken \u003d taken;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a loan and specifies if the loan has been returned.","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"     * @param amt Loan amount.","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"     * @param d Details of the loan.","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"     * @param taken If loan was taken by the user, it is \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"     *              Otherwise, if it was given, it should be \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"     * @param returned Boolean if loan has been returned.","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"    public Loan(BigDecimal amt, String d, boolean taken, boolean returned) {","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"        amount \u003d amt;","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"        details \u003d d;","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"        isTaken \u003d taken;","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"        isReturned \u003d returned;","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"     * Sets loan as returned.","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"    public void returnLoan() {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"        isReturned \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"     * Get loan details.","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"     * @return Loan description.","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"    public String getDetails() {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"        return details;","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"     * Get the loan amount in text.","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"     * @return Loan amount.","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"    public String getAmount() {","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"        return amount.toString();","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":71,"author":{"gitId":"AL-ZT"},"content":"     * Get status on whether the loan is returned.","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"AL-ZT"},"content":"     * @return Return status of loan.","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":75,"author":{"gitId":"AL-ZT"},"content":"    public boolean getReturnStatus() {","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"AL-ZT"},"content":"        return isReturned;","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":80,"author":{"gitId":"AL-ZT"},"content":"     * Get the loan type, either the loan was \"given\" or \"taken\" by the user.","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-02-20"},{"lineNumber":82,"author":{"gitId":"AL-ZT"},"content":"     * @return Loan type.","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":84,"author":{"gitId":"AL-ZT"},"content":"    public String getType() {","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"AL-ZT"},"content":"        if (isTaken) {","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"AL-ZT"},"content":"            return \"taken\";","lastModifiedDate":"2024-02-20"},{"lineNumber":87,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":88,"author":{"gitId":"AL-ZT"},"content":"        return \"given\";","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"AL-ZT"},"content":"    @Override","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"AL-ZT"},"content":"    public String toString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"AL-ZT"},"content":"        String taken \u003d (isTaken) ? \"T\" : \"G\";","lastModifiedDate":"2024-02-20"},{"lineNumber":94,"author":{"gitId":"AL-ZT"},"content":"        String returned \u003d (isReturned) ? \"Returned\" : \" \";","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"AL-ZT"},"content":"        return String.format(\"[%s][%s] %s\", returned, taken, details);","lastModifiedDate":"2024-02-20"},{"lineNumber":96,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"AL-ZT":97}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":" * Subclass of \u003ccode\u003eTask\u003c/code\u003e that has an extra parameter for due date.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e with a name and when it is due.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified deadline name.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"     * @param by Due date.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"    public Deadline(String n, LocalDate by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"        super(n);","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e with a name, when it is due,","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"     * and whether it has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified deadline name.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"     * @param d If deadline is done.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"     * @param by Due date.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"    public Deadline(String n, boolean d, LocalDate by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"        super(n, d);","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"     * Returns a \u003ccode\u003eLocalDate\u003c/code\u003e of the due date.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"     * @return Due date of deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"        return this.by;","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"                                super.toString(),","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"                                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"                            );","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":52}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":" * Subclass of \u003ccode\u003eTask\u003c/code\u003e that specifies when the event starts and ends.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"    protected String from;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"    protected String to;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"     * Constructs an \u003ccode\u003eEvent\u003c/code\u003e with an event name and timespan.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified event name.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"     * @param from Date string from which the event starts.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"     * @param to Date string of when the event ends.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"    public Event(String n, String from, String to) {","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"        super(n);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"     * Constructs an \u003ccode\u003eEvent\u003c/code\u003e with an event name, timespan and","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"     * if the event has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified event name.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"     * @param d If the event is done.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"     * @param from Date string from which the event starts.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"     * @param to Date string of when the event ends.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"    public Event(String n, boolean d, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"        super(n, d);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"     * Returns the date string of when the event starts.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"     * @return Event start date.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"    public String getFrom() {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"        return this.from;","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"     * Returns the date string of when the event ends.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"     * @return Event end date.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"    public String getTo() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"        return this.to;","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":60}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":" * Bare task that has a task name and a boolean condition on whether the task is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"    protected String name;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a task with task name appended, not completed by default.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    public Task(String n) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"        this.name \u003d n;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a task specifying a name and if it is complete.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"     * @param d Specifying if the task is done.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"    public Task(String n, boolean d) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"        name \u003d n;","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"        isDone \u003d d;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"        String d \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"        return String.format(\"[%s] %s\", d, name);","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AL-ZT"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AL-ZT"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"AL-ZT"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AL-ZT"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AL-ZT"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"AL-ZT"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AL-ZT"},"content":"     * Returns the task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AL-ZT"},"content":"     * @return Task name.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AL-ZT"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"AL-ZT"},"content":"        return name;","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AL-ZT"},"content":"     * Returns true if task is done, false otherwise.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AL-ZT"},"content":"     * @return True or false.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AL-ZT"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"AL-ZT"},"content":"        return isDone;","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":68}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":" * Subclass of \u003ccode\u003eTask\u003c/code\u003e that has a different \u003ccode\u003etoString()\u003c/code\u003e.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"     * {@inheritDoc}","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"     * This subclass \u003ccode\u003eTodo\u003c/code\u003e behaves the same as \u003ccode\u003eTask\u003c/code\u003e, but with","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"     * a different \u003ccode\u003etoString()\u003c/code\u003e.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified todo name.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"    public Todo(String n) {","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"        super(n);","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e specifying a name and if it is complete.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"     * @param n Specified todo name.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"     * @param d If the task is done.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    public Todo(String n, boolean d) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"        super(n, d);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"AL-ZT":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"\u003c!--Dialog box design adapted from https://github.com/ngchisern/ip/blob/master/src/main/resources/view/DialogBox.fxml--\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: lightblue; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"                \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"            \u003c/font\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"AL-ZT":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.javafx.MainWindow\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" pannable\u003d\"true\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"AL-ZT":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.InvalidCmdException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    void parse_unknownCommand() {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"            Parser.parse(\"what is this command\");","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"        } catch (InvalidCmdException ce) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"            assertEquals(\"_____________!!!!_____________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"                    + \"Unknown command, please try again.\", ce.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"    void parse_commandWithDifferentParameters() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"            Parser.parse(\"event project meeting /by Aug 6th /to Aug 7th\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"        } catch (InvalidCmdException ce) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"            assertEquals(\"_____________!!!!_____________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"                    + \"Missing parameter: /from\", ce.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"AL-ZT":32}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AL-ZT"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"AL-ZT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"AL-ZT"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"AL-ZT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"AL-ZT"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"AL-ZT"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"AL-ZT"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"AL-ZT"},"content":"    void deadline_wrongDateFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"AL-ZT"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"AL-ZT"},"content":"            tasks.addTask(null, \"deadline\", \"testing title\", \"Oct 09 2024\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"AL-ZT"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"AL-ZT"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"AL-ZT"},"content":"            assertEquals(de.getMessage(), \"_____________!!!!_____________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"AL-ZT"},"content":"                    + \"Date not in format: yyyy-MM-dd, please try again.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"AL-ZT"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"AL-ZT"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"AL-ZT"},"content":"    void input_taskId_outOfBounds() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"AL-ZT"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"AL-ZT"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"AL-ZT"},"content":"            tasks.mark(null, \"-1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"AL-ZT"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"AL-ZT"},"content":"            assertEquals(de.getMessage(), \"_____________!!!!_____________\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"AL-ZT"},"content":"                    + \"Index number cannot be out of bounds.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"AL-ZT"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"AL-ZT"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"AL-ZT"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"AL-ZT":34}}]
