[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"    protected String byDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"    public Deadline(String description, String byDate) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"        return String.format(\"[D]\" + super.toString() +\" (by: %s)\",this.byDate);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"import java.util.*;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"    private static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"    private static void greeting() {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"Hello! I\u0027m Pengu\\n\" + \"What can I do for you?\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"                \"\\nDid you know that the noise penguins make are called \\\"honks\\\"\");","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"―――――――――――――――――――――――――――――――――――\");","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    private static void exit() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"Bye. Hope to see you again soon! **HONK HONK**\");","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"―――――――――――――――――――――――――――――――――――\");","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    private static void addTask(String description) throws DukeException{","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"        Task newTask;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"        validTaskCommand(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"        if (description.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"            String[] descriptionArr \u003d description.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"            StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d 1; k \u003c descriptionArr.length; k++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d descriptionArr.length - 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"                    descBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"nigel27022001"},"content":"                    descBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"nigel27022001"},"content":"            newTask \u003d new ToDo(descBuilder.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"nigel27022001"},"content":"        } else if (description.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"nigel27022001"},"content":"            String[] descriptionArr \u003d description.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"nigel27022001"},"content":"            int byIndex \u003d Arrays.asList(descriptionArr).indexOf(\"/by\");","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"nigel27022001"},"content":"            StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d 1; k \u003c byIndex; k++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d byIndex - 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"nigel27022001"},"content":"                    descBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"nigel27022001"},"content":"                    descBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"nigel27022001"},"content":"            StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d byIndex + 1; k \u003c descriptionArr.length; k++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d descriptionArr.length - 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"nigel27022001"},"content":"                    byBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"nigel27022001"},"content":"                    byBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"nigel27022001"},"content":"            /*if (descriptionArr[2].toLowerCase().equals(\"/by\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"nigel27022001"},"content":"                System.out.println(\"*HONKS ANGRILIY* Pengu thinks that the description of the deadline has to be followed by \u0027/by\u0027\");","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"nigel27022001"},"content":"            }*/","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"nigel27022001"},"content":"            newTask \u003d new Deadline(descBuilder.toString(), byBuilder.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"nigel27022001"},"content":"            String[] descriptionArr \u003d description.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"nigel27022001"},"content":"            int fromIndex \u003d Arrays.asList(descriptionArr).indexOf(\"/from\");","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"nigel27022001"},"content":"            StringBuilder descBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d 1; k \u003c fromIndex; k++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d fromIndex - 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"nigel27022001"},"content":"                    descBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"nigel27022001"},"content":"                    descBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"nigel27022001"},"content":"            int toIndex \u003d Arrays.asList(descriptionArr).indexOf(\"/to\");","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"nigel27022001"},"content":"            StringBuilder fromBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d fromIndex + 1; k \u003c toIndex; k++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d toIndex - 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"nigel27022001"},"content":"                    fromBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"nigel27022001"},"content":"                    fromBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"nigel27022001"},"content":"            StringBuilder toBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"nigel27022001"},"content":"            for (int k \u003d toIndex + 1; k \u003c descriptionArr.length; k++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"nigel27022001"},"content":"                if (k \u003d\u003d descriptionArr.length - 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"nigel27022001"},"content":"                    toBuilder.append(descriptionArr[k]);","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"nigel27022001"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"nigel27022001"},"content":"                    toBuilder.append(descriptionArr[k] + \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"nigel27022001"},"content":"            newTask \u003d new Event(descBuilder.toString(), fromBuilder.toString(), toBuilder.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"nigel27022001"},"content":"        Duke.storage.add(newTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(String.format(\"*Honk! Honk!* Pengu has added this task:\\n\" + newTask.toString()","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"nigel27022001"},"content":"                + \"\\nGet back to work! you have %s tasks in the list\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"nigel27022001"},"content":"                + \"―――――――――――――――――――――――――――――――――――\", Duke.storage.size()));","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"nigel27022001"},"content":"    private static void listTasks() {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"nigel27022001"},"content":"        int storageSize \u003d Duke.storage.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"*Honk!* Pengu has listed your current tasks below:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"nigel27022001"},"content":"        for (int k \u003d 0; k \u003c storageSize; k++){","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"nigel27022001"},"content":"            int curr \u003d k + 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"nigel27022001"},"content":"            Task currTask \u003d storage.get(k);","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"nigel27022001"},"content":"            System.out.println(curr + \". \" + currTask.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"―――――――――――――――――――――――――――――――――――\");","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"nigel27022001"},"content":"    private static void markTask(int index) {","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"nigel27022001"},"content":"        Task currTask \u003d storage.get(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"nigel27022001"},"content":"        currTask.updateTask(true);","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"*Honk!* Good Job!, Pengu has marked this task as done:\\n\" + currTask.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"―――――――――――――――――――――――――――――――――――\");","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"nigel27022001"},"content":"    private static void unmarkTask(int index) {","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"nigel27022001"},"content":"        Task currTask \u003d storage.get(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"nigel27022001"},"content":"        currTask.updateTask(false);","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"*Honk!* Pengu has marked this task as not done yet:\\n\" + currTask.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"―――――――――――――――――――――――――――――――――――\");","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"nigel27022001"},"content":"    private static void deleteTask(int index) {","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"nigel27022001"},"content":"        Task deletedTask \u003d storage.remove(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(String.format(\"*Honk* Pengu has removed the following task:\\n\" + deletedTask.toString()","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"nigel27022001"},"content":"                + \"\\nNow you have %s tasks left\", storage.size()));","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"nigel27022001"},"content":"        System.out.println(\"―――――――――――――――――――――――――――――――――――\");","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"nigel27022001"},"content":"    private static boolean validTaskCommand(String str) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"nigel27022001"},"content":"        List\u003cString\u003e strArr \u003d Arrays.asList(str.split(\" \"));","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"nigel27022001"},"content":"        String keyword \u003d str.split(\" \")[0].toLowerCase();","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"nigel27022001"},"content":"        if (!(keyword.equals(\"todo\") || keyword.equals(\"deadline\") || keyword.equals(\"event\"))){","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu has never seen such a command before, some commands Pengu can do are: list, todo, deadline\");","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"todo\") \u0026\u0026 !(strArr.size() \u003e 1)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu needs a To Do Task description to record this down\");","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"deadline\") \u0026\u0026 !(strArr.contains(\"/by\"))) {","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu needs a /by followed by a end date for your task\");","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"event\") \u0026\u0026 !(strArr.contains(\"/from\") \u0026\u0026 (strArr.contains(\"/to\")))) {","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*HONK* Pengu needs a /from followed by a from date and a /to followed by a end date for your task\");","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"deadline\") \u0026\u0026 strArr.get(1).equals(\"/by\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"Honk* Pengu cannot accept a deadline task without a description\");","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"nigel27022001"},"content":"        } else if (keyword.equals(\"event\") \u0026\u0026 (strArr.get(1).equals(\"/from\") || strArr.get(1).equals(\"/to\"))) {","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"nigel27022001"},"content":"            throw new DukeException(\"*Honk* Pengu cannot accept a event without a description\");","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"nigel27022001"},"content":"            return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"nigel27022001"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"nigel27022001"},"content":"        greeting();","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"nigel27022001"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"nigel27022001"},"content":"        while (true){","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"nigel27022001"},"content":"            String userInput \u003d s.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"nigel27022001"},"content":"            if (userInput.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"nigel27022001"},"content":"                exit();","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"nigel27022001"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"nigel27022001"},"content":"            } else if (userInput.toLowerCase().equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"nigel27022001"},"content":"                listTasks();","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"nigel27022001"},"content":"                continue;","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"nigel27022001"},"content":"            } else if (userInput.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"nigel27022001"},"content":"                String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"nigel27022001"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"nigel27022001"},"content":"                    int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"nigel27022001"},"content":"                    markTask(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"nigel27022001"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"nigel27022001"},"content":"                    throw new DukeException(\"*HONK* Pengu thinks you need a valid task number to mark, \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"nigel27022001"},"content":"                            \"consider checking the list command\");","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"nigel27022001"},"content":"                continue;","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"nigel27022001"},"content":"            } else if (userInput.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"nigel27022001"},"content":"                String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"nigel27022001"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"nigel27022001"},"content":"                    int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"nigel27022001"},"content":"                    unmarkTask(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"nigel27022001"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"nigel27022001"},"content":"                    throw new DukeException(\"*HONK* Pengu thinks you need a valid task number to unmark, \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"nigel27022001"},"content":"                            \"consider checking the list command\");","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"nigel27022001"},"content":"                continue;","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"nigel27022001"},"content":"            } else if (userInput.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"nigel27022001"},"content":"                String[] inputArr \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"nigel27022001"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"nigel27022001"},"content":"                    int index \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"nigel27022001"},"content":"                    deleteTask(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"nigel27022001"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"nigel27022001"},"content":"                    throw new DukeException(\"*HONK* Pengu thinks you need a valid task number to delete, \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"nigel27022001"},"content":"                            \"consider checking the list command\");","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"nigel27022001"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"nigel27022001"},"content":"                continue;","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"nigel27022001"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"nigel27022001"},"content":"            addTask(userInput);","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nigel27022001":183,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"    protected String fromDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"    protected String byDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"    public Event(String description, String fromDate, String byDate) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"        return String.format(\"[E]\" + super.toString() + \" (from: %s to: %s)\", this.fromDate, this.byDate);","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"nigel27022001"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"nigel27022001"},"content":"    public void updateTask(boolean status) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"nigel27022001"},"content":"        if (status \u003d\u003d true){","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"nigel27022001"},"content":"            isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"nigel27022001"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"nigel27022001"},"content":"            isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"nigel27022001"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":26}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"nigel27022001"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"nigel27022001"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nigel27022001"},"content":"todo homework","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"nigel27022001"},"content":"deadline assignment /by thursday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"nigel27022001"},"content":"event exam /from may /to june","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"nigel27022001"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"nigel27022001"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"nigel27022001"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"nigel27022001"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"nigel27022001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"nigel27022001"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"nigel27022001":9}}]
