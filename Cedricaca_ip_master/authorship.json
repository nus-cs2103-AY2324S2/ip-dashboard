[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Cedricaca":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"    manifest {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Duke\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"javadoc {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"    options.addStringOption(\u0027Xdoclint:none\u0027, \u0027-quiet\u0027)","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"-":41,"Cedricaca":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"# duke.Duke User Guide","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"-":29,"Cedricaca":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":" * Main class of the duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"     * Runs the application and starts input and output","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"        parser.display(\"Hello! I\u0027m Dukey.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"        parser.display(\"What can I do for you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"        while (!parser.getIsEnded()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"            parser.interpret();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"        duke.run();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"Cedricaca":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":" * Parser class coordinates the ui, tasklist and storage to interpret user input","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"    private Ui screen \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"     * Constructor for parser checks for the storage file/folder existence then moves information to tasklist","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    public Parser() {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        storage.check();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"        String currentLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        int currLine \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        while ((currentLine \u003d storage.read(currLine)) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"            Matcher mTodo2 \u003d pTodo2.matcher(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"            Matcher mEvent2 \u003d pEvent2.matcher(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"            Matcher mDeadline2 \u003d pDeadline2.matcher(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"            Matcher mUnmarked \u003d pUnmarked.matcher(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"            Matcher mMarked \u003d pMarked.matcher(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"            if (mTodo2.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"                if (mMarked.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"                    Todo n \u003d new Todo(currentLine.substring(6), true);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"                    n.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"                } else if (mUnmarked.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"                    Todo n \u003d new Todo(currentLine.substring(6), false);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"                    n.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"            } else if (mDeadline2.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"                int finalIndex \u003d currentLine.indexOf(by) + by.length();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"                String dL \u003d currentLine.substring(finalIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"                // Define the format of the input string","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"                LocalDateTime ldt \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"                    ldt \u003d LocalDateTime.parse(dL, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"error in deadline\");","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"                String newInput \u003d currentLine.substring(currentLine.indexOf(deadline) + deadline.length() - 1, currentLine.indexOf(by));","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"                if (mMarked.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"                    Deadline n \u003d new Deadline(newInput, true, ldt);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"                    n.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"                } else if (mUnmarked.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"                    Deadline n \u003d new Deadline(newInput, false, ldt);","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"                    n.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"            } else if (mEvent2.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"                int startIndex \u003d currentLine.indexOf(from);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"                int startIndexTo \u003d currentLine.indexOf(to);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"                String subFrom \u003d currentLine.substring(startIndex + from.length(), startIndexTo);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"                String subTo \u003d currentLine.substring(startIndexTo + to.length());","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"                String newInput \u003d currentLine.substring(currentLine.indexOf(event) + event.length() + 2, startIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"                LocalDateTime ldt \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"                LocalDateTime ldt2 \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"                    ldt \u003d LocalDateTime.parse(subFrom, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"                    ldt2 \u003d LocalDateTime.parse(subTo, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"error in event\");","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"                if (mMarked.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Cedricaca"},"content":"                    Event n \u003d new Event(newInput, true, ldt, ldt2);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Cedricaca"},"content":"                    n.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"                } else if (mUnmarked.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"                    Event n \u003d new Event(newInput, false, ldt, ldt2);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"                    n.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Cedricaca"},"content":"            currLine \u003d currLine + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Cedricaca"},"content":"    private String find \u003d \"find\";","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Cedricaca"},"content":"    private String mark \u003d \"mark (\\\\d+)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Cedricaca"},"content":"    private String unmark \u003d \"unmark (\\\\d+)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Cedricaca"},"content":"    private String delete \u003d \"delete (\\\\d+)\";","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Cedricaca"},"content":"    private String todo \u003d \"todo\";","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Cedricaca"},"content":"    private String deadline \u003d \"deadline\";","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Cedricaca"},"content":"    private String event \u003d  \"event\";","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Cedricaca"},"content":"    private String by \u003d \"/by\";","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Cedricaca"},"content":"    private String from \u003d \"/from\";","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Cedricaca"},"content":"    private String to \u003d \"/to\";","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Cedricaca"},"content":"    private String todo2 \u003d \"[T]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Cedricaca"},"content":"    private String deadline2 \u003d \"[D]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Cedricaca"},"content":"    private String event2 \u003d \"[E]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Cedricaca"},"content":"    private String unmarked \u003d \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Cedricaca"},"content":"    private String marked \u003d \"[X]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pFind \u003d Pattern.compile(find);","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pMark \u003d Pattern.compile(mark);","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pUnmark \u003d Pattern.compile(unmark);","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pTodo \u003d Pattern.compile(todo);","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pDeadline \u003d Pattern.compile(deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pEvent \u003d Pattern.compile(event);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pBy \u003d Pattern.compile(by);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pFrom \u003d Pattern.compile(from);","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pTo \u003d Pattern.compile(to);","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pDelete \u003d Pattern.compile(delete);","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pTodo2 \u003d Pattern.compile(todo2);","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pDeadline2 \u003d Pattern.compile(deadline2);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pEvent2 \u003d Pattern.compile(event2);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pUnmarked \u003d Pattern.compile(unmarked);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Cedricaca"},"content":"    private Pattern pMarked \u003d Pattern.compile(marked);","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Cedricaca"},"content":"    private boolean ended \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Cedricaca"},"content":"    public boolean getIsEnded() {","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Cedricaca"},"content":"        return ended;","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Cedricaca"},"content":"     * Receives input from Ui then interprets it before calling functions from tasklist, ui and storage","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Cedricaca"},"content":"    public void interpret() {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Cedricaca"},"content":"        String input \u003d screen.receive();","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Cedricaca"},"content":"        Matcher mMark \u003d pMark.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Cedricaca"},"content":"        Matcher mUnmark \u003d pUnmark.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Cedricaca"},"content":"        Matcher mTodo \u003d pTodo.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Cedricaca"},"content":"        Matcher mDeadline \u003d pDeadline.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"Cedricaca"},"content":"        Matcher mEvent \u003d pEvent.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Cedricaca"},"content":"        Matcher mBy \u003d pBy.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"Cedricaca"},"content":"        Matcher mFrom \u003d pFrom.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"Cedricaca"},"content":"        Matcher mTo \u003d pTo.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Cedricaca"},"content":"        Matcher mDelete \u003d pDelete.matcher(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Cedricaca"},"content":"        Matcher mFind \u003d pFind.matcher(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Cedricaca"},"content":"        if (input.equals(\"reset\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Cedricaca"},"content":"            taskList.clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Cedricaca"},"content":"            storage.clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Cedricaca"},"content":"            screen.display(\"List cleared!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Cedricaca"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Cedricaca"},"content":"            screen.display(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"Cedricaca"},"content":"            ended \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Cedricaca"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"Cedricaca"},"content":"            if (taskList.getLength() \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"You have no tasks in your list!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Here are your tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"Cedricaca"},"content":"                for (int x \u003d 0; x \u003c taskList.getLength(); x++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"Cedricaca"},"content":"                    Task item \u003d taskList.get(x);","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"Cedricaca"},"content":"                    int numeric \u003d x + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"Cedricaca"},"content":"                    System.out.println(numeric + \".\" + item.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"Cedricaca"},"content":"        } else if (mFind.find()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Cedricaca"},"content":"            String newInput \u003d input.replace(find, \"\").trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Cedricaca"},"content":"            if (newInput.trim().equals(\"\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Search cannot be empty!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Cedricaca"},"content":"                int currentLine \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Cedricaca"},"content":"                ArrayList\u003cTask\u003e tasks \u003d taskList.find(newInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"Cedricaca"},"content":"                if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"You have no matching tasks in your list!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"Cedricaca"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"Cedricaca"},"content":"                    for (int i \u003d0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Cedricaca"},"content":"                        Task task \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Cedricaca"},"content":"                        screen.display(currentLine + \". \" + task.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Cedricaca"},"content":"                        currentLine \u003d currentLine + 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"Cedricaca"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Cedricaca"},"content":"        } else if (mDelete.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"Cedricaca"},"content":"            String captured \u003d mDelete.group(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"Cedricaca"},"content":"            int number \u003d Integer.parseInt(captured);","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"Cedricaca"},"content":"            if (number \u003e 0 \u0026\u0026 number \u003c\u003d taskList.getLength()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"Cedricaca"},"content":"                Task t \u003d taskList.delete(number-1);","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"OK! I have deleted this task:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"Cedricaca"},"content":"                screen.display(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"Cedricaca"},"content":"                storage.delete(number-1);","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Please input a valid number.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"Cedricaca"},"content":"        } else if (mUnmark.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"Cedricaca"},"content":"            String captured \u003d mUnmark.group(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"Cedricaca"},"content":"            int number \u003d Integer.parseInt(captured);","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"Cedricaca"},"content":"            Task t;","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"Cedricaca"},"content":"            if (number \u003e 0 \u0026\u0026 number \u003c\u003d taskList.getLength()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":198,"author":{"gitId":"Cedricaca"},"content":"                t \u003d taskList.get(number - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"Cedricaca"},"content":"                t.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Oh no! I have marked this as not done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"Cedricaca"},"content":"                screen.display(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"Cedricaca"},"content":"                storage.edit(number-1, t.export());","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Please input a valid number.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"Cedricaca"},"content":"        } else if (mMark.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"Cedricaca"},"content":"            String captured \u003d mMark.group(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"Cedricaca"},"content":"            int number \u003d Integer.parseInt(captured);","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"Cedricaca"},"content":"            Task t;","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"Cedricaca"},"content":"            if (number \u003e 0 \u0026\u0026 number \u003c\u003d taskList.getLength()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"Cedricaca"},"content":"                t \u003d taskList.get(number -1);","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"Cedricaca"},"content":"                t.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Nice! I have marked this as done:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"Cedricaca"},"content":"                screen.display(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"Cedricaca"},"content":"                storage.edit(number-1, t.export());","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Please input a valid number.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"Cedricaca"},"content":"        } else if (mTodo.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"Cedricaca"},"content":"            String newInput \u003d input.replace(todo, \"\");","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"Cedricaca"},"content":"            Todo n \u003d new Todo(newInput, false);","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"Cedricaca"},"content":"            if (newInput.trim().equals(\"\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"Task cannot be empty!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":224,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"Cedricaca"},"content":"                taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"OK, I have added this task :\");","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"Cedricaca"},"content":"                screen.display(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":228,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"You now have \" + taskList.getLength() + \" items in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":229,"author":{"gitId":"Cedricaca"},"content":"                storage.add(n.export());","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"Cedricaca"},"content":"        } else if (mEvent.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"Cedricaca"},"content":"            if (mFrom.find() \u0026\u0026 mTo.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"Cedricaca"},"content":"                int startIndex \u003d input.indexOf(from);","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"Cedricaca"},"content":"                int startIndexTo \u003d input.indexOf(to);","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"Cedricaca"},"content":"                String subFrom \u003d input.substring(startIndex + from.length(), startIndexTo).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"Cedricaca"},"content":"                String subTo \u003d input.substring(startIndexTo + to.length()).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":238,"author":{"gitId":"Cedricaca"},"content":"                String newInput \u003d input.substring(input.indexOf(event) + event.length(), startIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"Cedricaca"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"Cedricaca"},"content":"                LocalDateTime ldt;","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"Cedricaca"},"content":"                LocalDateTime ldt2;","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"Cedricaca"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"Cedricaca"},"content":"                    // Parse the string into a LocalDate object","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"Cedricaca"},"content":"                    ldt \u003d LocalDateTime.parse(subFrom, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"Cedricaca"},"content":"                    ldt2 \u003d LocalDateTime.parse(subTo, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"Cedricaca"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"Cedricaca"},"content":"                    // Handle parsing exceptions","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"Please enter a valid date/time\");","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"Cedricaca"},"content":"                    return;","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"Cedricaca"},"content":"                if (newInput.trim().equals(\"\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"Task cannot be empty!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":253,"author":{"gitId":"Cedricaca"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"Cedricaca"},"content":"                    Event n \u003d new Event(newInput, false, ldt, ldt2);","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":256,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"OK, I have added this task :\");","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":258,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"You now have \" + taskList.getLength() + \" items in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":259,"author":{"gitId":"Cedricaca"},"content":"                    storage.add(n.export());","lastModifiedDate":"2024-02-02"},{"lineNumber":260,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":261,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":262,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"pls input your start and end of the event.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":264,"author":{"gitId":"Cedricaca"},"content":"        } else if (mDeadline.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":265,"author":{"gitId":"Cedricaca"},"content":"            if (mBy.find()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":266,"author":{"gitId":"Cedricaca"},"content":"                int finalIndex \u003d input.indexOf(by) + by.length();","lastModifiedDate":"2024-02-02"},{"lineNumber":267,"author":{"gitId":"Cedricaca"},"content":"                String dL \u003d input.substring(finalIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":268,"author":{"gitId":"Cedricaca"},"content":"                String newInput \u003d input.substring(input.indexOf(deadline) + deadline.length(), input.indexOf(by));","lastModifiedDate":"2024-02-02"},{"lineNumber":269,"author":{"gitId":"Cedricaca"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\" yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":270,"author":{"gitId":"Cedricaca"},"content":"                LocalDateTime ldt;","lastModifiedDate":"2024-02-02"},{"lineNumber":271,"author":{"gitId":"Cedricaca"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"Cedricaca"},"content":"                    // Parse the string into a LocalDate object","lastModifiedDate":"2024-02-02"},{"lineNumber":273,"author":{"gitId":"Cedricaca"},"content":"                    ldt \u003d LocalDateTime.parse(dL, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":274,"author":{"gitId":"Cedricaca"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"Please enter a valid date/time\");","lastModifiedDate":"2024-02-02"},{"lineNumber":276,"author":{"gitId":"Cedricaca"},"content":"                    return;","lastModifiedDate":"2024-02-02"},{"lineNumber":277,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":278,"author":{"gitId":"Cedricaca"},"content":"                if (newInput.trim().equals(\"\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":279,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"Task cannot be empty!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":280,"author":{"gitId":"Cedricaca"},"content":"                } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":281,"author":{"gitId":"Cedricaca"},"content":"                    Deadline n \u003d new Deadline(newInput, false, ldt);","lastModifiedDate":"2024-02-02"},{"lineNumber":282,"author":{"gitId":"Cedricaca"},"content":"                    taskList.add(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":283,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"OK, I have added this task :\");","lastModifiedDate":"2024-02-02"},{"lineNumber":284,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":285,"author":{"gitId":"Cedricaca"},"content":"                    screen.display(\"You now have \" + taskList.getLength() + \" items in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":286,"author":{"gitId":"Cedricaca"},"content":"                    storage.add(n.export());","lastModifiedDate":"2024-02-02"},{"lineNumber":287,"author":{"gitId":"Cedricaca"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":288,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":289,"author":{"gitId":"Cedricaca"},"content":"                screen.display(\"please include a deadline\");","lastModifiedDate":"2024-02-02"},{"lineNumber":290,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":291,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":292,"author":{"gitId":"Cedricaca"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":293,"author":{"gitId":"Cedricaca"},"content":"            screen.display(\"Sorry, no idea what u talking about lulz\");","lastModifiedDate":"2024-02-02"},{"lineNumber":294,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":295,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":296,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":297,"author":{"gitId":"Cedricaca"},"content":"    public void display(Object n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":298,"author":{"gitId":"Cedricaca"},"content":"        screen.display(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":299,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":300,"author":{"gitId":"Cedricaca"},"content":"    public void receive() {","lastModifiedDate":"2024-02-02"},{"lineNumber":301,"author":{"gitId":"Cedricaca"},"content":"        screen.receive();","lastModifiedDate":"2024-02-02"},{"lineNumber":302,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":303,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":303}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":" * Stores the list for future calls of the duke function to retain the list of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    private File folder \u003d new File(\"data\");","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    private File file \u003d new File(folder, \"data.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"     * Checks that the file and folder exists, else creates them","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    public void check() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"            folder.mkdir();","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"            file \u003d new File(folder, \"data.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"            file \u003d new File(folder, \"data.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"     * Clears the txt file","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"    public void clear() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"            folder.mkdir();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"            file \u003d new File(folder, \"data.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"            try (PrintWriter writer \u003d new PrintWriter(file)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"                writer.print(\"\"); // This clears all lines in the file","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"     * Writes a line to the txt file then calls newline","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"     * @param n the String to write","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"    public void add(String n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"            writer.write(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"            writer.newLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"            System.err.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"     * finds the line to delete and rewrites txt with all other lines","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"     * @param number the line to delete","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"    public void delete(int number) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"        // Read the content of the file","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"        String currentLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"        int currLine \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"        while ((currentLine \u003d read(currLine)) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"            // Check if the line should be deleted","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"            if (currLine !\u003d number) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"                lines.add(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"            currLine \u003d currLine + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"        clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"        for (String Line : lines) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Cedricaca"},"content":"            add(Line);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"     * Reads and returns the nth line in the storage","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"     * @param n the line which to return","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"     * @return returns the string found","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"    public String read(int n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"            String currentLine \u003d null;","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Cedricaca"},"content":"            int currLine \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Cedricaca"},"content":"            while (currLine \u003c\u003d n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Cedricaca"},"content":"                currentLine \u003d reader.readLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Cedricaca"},"content":"                currLine \u003d currLine + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Cedricaca"},"content":"            return currentLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Cedricaca"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Cedricaca"},"content":"            System.err.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Cedricaca"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Cedricaca"},"content":"     * finds the input line, replaces it with String L, and rewrites the whole file","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Cedricaca"},"content":"     * @param number line to edit","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Cedricaca"},"content":"     * @param L String to change the line into","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Cedricaca"},"content":"    public void edit(int number, String L) {","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Cedricaca"},"content":"        // Read the content of the file","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Cedricaca"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Cedricaca"},"content":"        String currentLine;","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Cedricaca"},"content":"        int currLine \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Cedricaca"},"content":"        while ((currentLine \u003d read(currLine)) !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Cedricaca"},"content":"            // Check if the line should be deleted","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Cedricaca"},"content":"            if (currLine !\u003d number) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Cedricaca"},"content":"                lines.add(currentLine);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Cedricaca"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Cedricaca"},"content":"                lines.add(L);","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Cedricaca"},"content":"            currLine \u003d currLine + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Cedricaca"},"content":"        clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Cedricaca"},"content":"        for (String Line : lines) {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Cedricaca"},"content":"            add(Line);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":125}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":" * Task class that encapsulates an entry in the tasklist.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"    private String action;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"     * Constructor specifying action and isDone","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"     * @param action String as described by user","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"     * @param isDone if action is marked as done or not","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    public Task(String action, Boolean isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"        this.action \u003d action;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"     * Custom toString() method to display isDone status","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"     * @return Description of the return value.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"            return \"[X]\" + action;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"            return \"[ ]\" + action;","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"     * Marks task as done","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"    public void mark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"     * Marks task as not done","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"    public void unmark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"     * Dummy function to be overridden by subclasses, specifically for writing to the storage","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"     * @return String to be written to storage","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"    public String export() {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"        return toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":" * Event task that has additional time entries from and to","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"     * Constructor which also includes time from and to","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"     * @param input Description of the user input task","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"     * @param isDone whether task is done or not","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"     * @param from time from as described by user","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"     * @param to time to as described by user","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"    public Event(String input, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"        super(input, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Cedricaca"},"content":"     * Custom toString() including task type, from and to","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Cedricaca"},"content":"     * @return String to be displayed to user","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Cedricaca"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Cedricaca"},"content":"        String s \u003d super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Cedricaca"},"content":"        return \"[E]\" + s + \"(from \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:ss\")).replace(\"T\", \" \") + \" to \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:ss\")).replace(\"T\", \" \") + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Cedricaca"},"content":"     * different string to be generated and written into storage","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Cedricaca"},"content":"     * @return String to be written into storage","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Cedricaca"},"content":"    public String export() {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Cedricaca"},"content":"        String s \u003d super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Cedricaca"},"content":"        return \"[E]\" + s + \"/from\" + from.toString().replace(\"T\", \" \") + \"/to\" + to.toString().replace(\"T\" , \" \") ;","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Cedricaca"},"content":" * Todo task with no time specifications","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Cedricaca"},"content":"class Todo extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Cedricaca"},"content":"    public Todo(String input, boolean isDone) {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Cedricaca"},"content":"        super(input, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Cedricaca"},"content":"     * Adds task type to the string","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Cedricaca"},"content":"     * @return returns String displaying task type","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Cedricaca"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Cedricaca"},"content":"        String s \u003d super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Cedricaca"},"content":"        return \"[T]\" + s;","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Cedricaca"},"content":"     * Doesnt change anything as todo has no extra requirements","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Cedricaca"},"content":"     * @return String to be written to storage","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Cedricaca"},"content":"    public String export() {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Cedricaca"},"content":"        return toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Cedricaca"},"content":" * Deadline task with a specific deadline by","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Cedricaca"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Cedricaca"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Cedricaca"},"content":"     * Constructor with time by for the deadline task","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Cedricaca"},"content":"     * @param input User input task","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Cedricaca"},"content":"     * @param isDone if the task is done","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Cedricaca"},"content":"     * @param by deadline due date/time","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Cedricaca"},"content":"    public Deadline(String input, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Cedricaca"},"content":"        super(input, isDone);","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Cedricaca"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Cedricaca"},"content":"     * Custom toString() including task type and deadline due","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Cedricaca"},"content":"     * @return String to be displayed to user","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Cedricaca"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Cedricaca"},"content":"        String s \u003d super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Cedricaca"},"content":"        return \"[D]\" + s + \"(by:\" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:ss\")).replace(\"T\", \" \") +\")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Cedricaca"},"content":"     * Rewrites string to be exported to storage","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Cedricaca"},"content":"     * @return String to be written to storage","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Cedricaca"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Cedricaca"},"content":"    public String export() {","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"Cedricaca"},"content":"        String s \u003d super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"Cedricaca"},"content":"        return \"[D]\" + s + \"/by\" + by.toString().replace(\"T\", \" \") ;","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":153}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":" * Simple arraylist stores tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"    private int length \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"     * Clears the tasklist","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"    public void clear() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"        taskList.clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"        length \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"     * Adds a task to the list","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"     * @param t the task to be added","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"        taskList.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Cedricaca"},"content":"        length \u003d length + 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"     * Deletes a task from the list","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"     * @param numberToDelete the task to delete based on sequence","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"     * @returns task that was deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"    public Task delete(int numberToDelete) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"        if (numberToDelete \u003c length \u0026\u0026 numberToDelete \u003e\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"            Task t \u003d taskList.remove(numberToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"            length \u003d length - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"            return t;","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Cedricaca"},"content":"     * Gets a task from the list","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Cedricaca"},"content":"     * @param numberToGet the task to be returned based on sequence","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Cedricaca"},"content":"     * @returns the task that was found","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Cedricaca"},"content":"    public Task get(int numberToGet) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Cedricaca"},"content":"        if (numberToGet \u003c length \u0026\u0026 numberToGet \u003e\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Cedricaca"},"content":"            return taskList.get(numberToGet);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Cedricaca"},"content":"        return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Cedricaca"},"content":"     * returns length of list","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Cedricaca"},"content":"     * @returns length of list","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Cedricaca"},"content":"    public int getLength() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Cedricaca"},"content":"        return length;","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Cedricaca"},"content":"     * returns an arraylist of all tasks found that contains the input String L","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Cedricaca"},"content":"     * @param L the string to find in the tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Cedricaca"},"content":"     * @return the arraylist containing the tasks found","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Cedricaca"},"content":"    public ArrayList\u003cTask\u003e find(String L) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Cedricaca"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Cedricaca"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Cedricaca"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Cedricaca"},"content":"            String action \u003d t.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Cedricaca"},"content":"            String export \u003d t.export();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Cedricaca"},"content":"            if (action.contains(L) || export.contains(L)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Cedricaca"},"content":"                tasks.add(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Cedricaca"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Cedricaca"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Cedricaca"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":74}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":" * Class encapsulating the displaying and receiving of user input and output","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":" * @author Cedric","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"     * Receive method simply calls scanner.nextLine() for user input","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"     * @return returns the user input as a String","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"    public String receive() {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"     * Displays user output as a println","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"     * @param n Object that will be displayed in its toString() form","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Cedricaca"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Cedricaca"},"content":"    public void display(Object n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Cedricaca"},"content":"        System.out.println(n.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":23}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"    public void addDeleteTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(t.length(), 0);","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"        Todo L \u003d new Todo(\"bruh\", false);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"        t.add(L);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(t.length(), 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"        Task L2 \u003d t.delete(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(t.length(), 0);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(L, L2);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":18}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"    public void markTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Cedricaca"},"content":"        Todo T \u003d new Todo(\"allo\", false);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Cedricaca"},"content":"        T.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Cedricaca"},"content":"        System.out.println(T.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Cedricaca"},"content":"        assertEquals(T.toString(), \"[T][X]allo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Cedricaca"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Cedricaca"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Cedricaca":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cedricaca"},"content":"reset","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"Cedricaca"},"content":"todo bruh","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Cedricaca"},"content":"event nig /from asd /to lalala","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Cedricaca"},"content":"deadline laugh /by tomorrow","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Cedricaca"},"content":"mark 2","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Cedricaca"},"content":"unmark 2","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Cedricaca"},"content":"delete 3","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Cedricaca"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Cedricaca"},"content":"bye","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Cedricaca":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cedricaca"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Cedricaca":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Cedricaca"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Cedricaca"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Cedricaca"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Cedricaca"},"content":"then","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Cedricaca"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Cedricaca"},"content":"    exit 0","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Cedricaca"},"content":"else","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Cedricaca"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Cedricaca"},"content":"    exit 1","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Cedricaca"},"content":"fi","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Cedricaca"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"Cedricaca"},"content":"java -classpath /Users/cedrictan/git/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Cedricaca":12}}]
