[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"lokidoki102":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import duke.commands.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import duke.commands.CommandException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import duke.commands.ParseCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public Duke() throws FileNotFoundException {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        tasks \u003d Storage.init();","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     * Returns a response using the provided input.","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"     * @param input String input.","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"     * @return String output of the command executed.","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        String[] strArrCommand \u003d ui.readCommand(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        String response;","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"            Command command \u003d ParseCommand.parse(strArrCommand);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"            command.execute(tasks, strArrCommand);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"            response \u003d command.getCommandResponse();","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        } catch (CommandException | IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"            return Ui.printOutput(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        return response;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"lokidoki102":38}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Main;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"public class Launcher {","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"     * Launcher for GUI.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"lokidoki102":14}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":" * The AddDeadlineCommand class is responsible for executing the command to add a deadline task to a","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":" * list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * Adds a deadline task to a list of tasks, validates the input format, updates the storage, and","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * prints the updated task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects, representing the current list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     * @param input A String[] that contains the details of the task being executed.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"     * @throws CommandException for invalid input.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        String pattern \u003d \"([^/]+)\\\\s+/by\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}\\\\s+\\\\d{4})\";","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        if(!isValidCommand(pattern, input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"                    \"Wrong format! (format: deadline \u003cyour task\u003e /by \u003cdd/MM/yyyy HHmm\u003e)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        String[] deadlineDetails \u003d input[1].split(\"/by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        if (!Utils.isValidDateTimeFormat(deadlineDetails[1])) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"                    \"Datetime is in the wrong format. (format: deadline \u003cyour task\u003e /by \u003cdd/MM/yyyy HHmm\u003e)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineDetails[0].trim(),","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"                Utils.parseDateTime(deadlineDetails[1].trim()));","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        Storage.writeToStorage(deadlineTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(\"Got it. I\u0027ve added this task:\\n\" + deadlineTask.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":55}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":" * The AddEventCommand class is responsible for executing the command to add an event task to a list","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":" * of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * Adds an event task to a list of tasks, validates the input format, update the storage, and prints","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * the updated task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects, representing the current list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"     * @param input The input parameter is an array of strings that represents the user\u0027s input. It","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"     *              contains the details of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     * @throws CommandException for invalid input.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        String pattern \u003d","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"                \"([^/]+)\\\\s+/from\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}\"","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"                        + \"\\\\s+\\\\d{4})\\\\s+/to\\\\s+(\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}\\\\s+\\\\d{4})\";","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        if(!isValidCommand(pattern, input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"                    \"Wrong format! (format: event \u003cyour task\u003e /from \u003cdd/MM/yyyy HHmm\u003e /to \u003cdd/MM/yyyy HHmm\u003e)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        String[] eventDetails \u003d input[1].split(\"/from|/to\");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        if (!Utils.isValidDateTimeFormat(eventDetails[1], eventDetails[2])) {","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"                    \"Datetime is in the wrong format. (format: event \u003cyour task\u003e\"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"                            + \" /from \u003cdd/MM/yyyy HHmm\u003e /to \u003cdd/MM/yyyy HHmm\u003e)\");","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        Event eventTask \u003d new Event(eventDetails[0].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"                Utils.parseDateTime(eventDetails[1].trim()),","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"                Utils.parseDateTime(eventDetails[2].trim()));","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(eventTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        Storage.writeToStorage(eventTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(\"Got it. I\u0027ve added this task:\\n\" + eventTask.toString(),","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/main/java/duke/commands/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input) throws CommandException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        // TODO change checker later","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d+)\\\\s+(#[\\\\w\\\\d]+\\\\s*)+\");","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"                    \"Wrong format! (format: tag \u003ctask no.\u003e #tag1 #tag2 #tag3)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        Matcher matcher \u003d pattern.matcher(input[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"                    \"Wrong format! (format: tag \u003ctask no.\u003e #tag1 #tag2 #tag3)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        String[] tagDetails \u003d input[1].split(\" \");","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        int index \u003d Integer.parseInt(tagDetails[0]) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"Task not found!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        tasks.get(index).addTags(tagDetails);","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(\"I have added the tags:\", tasks.get(index).toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        Storage.writeToStorage(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"lokidoki102":44}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":" * The AddToDoCommand class is a Java class that represents a command to add a new ToDo task to a","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":" * list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * Adds a ToDo task to a list of tasks, validates the input format, updates the storage and","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     * prints the updated task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects, representing the current list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of strings representing the user\u0027s input.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     * @throws CommandException for invalid input.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidCommandLength(input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"                    \"Please add the task description. (format: todo \u003ctask description\u003e)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        ToDo todoTask \u003d new ToDo(input[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(todoTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        Storage.writeToStorage(todoTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(\"Got it. I\u0027ve added this task:\\n\" + todoTask.toString(),","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"                \"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":42}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"public class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    protected String commandResponse;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * Executes the command given by the input.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * It is meant to be overridden by subclasses of `Command` to perform specific actions based on the input.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks ArrayList of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     * @param input the details of the task being executed.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * @throws CommandException if there is some invalid input.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     * @throws IOException if there is some error in reading/writing to file.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        this.commandResponse \u003d Ui.printOutput(\"I\u0027m sorry, but I have zero idea what you\u0027re asking from me...\");","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    };","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    protected boolean isValidCommand(String pattern, String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        return isValidCommandLength(input) \u0026\u0026 isValidCommandFormat(pattern, input);","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"     * Checks if the size of the array of string is \u003e\u003d 2.","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"     * @param input The String[] input containing the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"     * @return true if size \u003e\u003d 2.","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    protected boolean isValidCommandLength(String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        return input.length \u003e\u003d 2;","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"     * Checks if the command in the String[] input matches the correct format.","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"     * @param pattern The pattern to check the format against with.","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"     * @param input The String[] input containing the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"     * @return true if command matches the format.","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    protected boolean isValidCommandFormat(String pattern, String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        Pattern regex \u003d Pattern.compile(pattern);","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        Matcher matcher \u003d regex.matcher(input[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        return matcher.matches();","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"     * Returns the corresponding response to the command executed.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a String, containing the response.","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"    public String getCommandResponse() {","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        return this.commandResponse;","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":64}},{"path":"src/main/java/duke/commands/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":" * The CommandException class is a custom exception class in Java that extends the Exception class and","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":" * allows for the creation of exceptions with a specific error message.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"    public CommandException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"lokidoki102":11}},{"path":"src/main/java/duke/commands/CommandsEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":" * The type of commands the chatbot is able to execute.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"public enum CommandsEnum {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"    INSERT_TODO, VIEW_LIST, INSERT_DEADLINE, INSERT_EVENT, SET_MARK, SET_UNMARK, EXIT, DELETE_TASK, FIND,","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"    ADD_TAG, REMOVE_TAG, DEFAULT;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"     * Takes a string input and returns the corresponding command enum based on the","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"     * input.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"     * @param in The parameter \"in\" is a string that represents a command input.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a CommandsEnum value.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public static CommandsEnum getCommandEnum(String in) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        in \u003d in.toLowerCase();","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        switch (in) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"            return INSERT_TODO;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        case \"list\":","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"            return VIEW_LIST;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"            return INSERT_DEADLINE;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        case \"event\":","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"            return INSERT_EVENT;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"            return SET_MARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"            return SET_UNMARK;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"            return EXIT;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"            return DELETE_TASK;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"            return FIND;","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        case \"tag\":","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"            return ADD_TAG;","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        case \"removetag\":","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"            return REMOVE_TAG;","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        default:","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            return DEFAULT;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"lokidoki102":47}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":" * The DeleteCommand class is responsible for deleting tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * Deletes a task from an ArrayList of tasks based on the user\u0027s input, and updates the storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects, representing the list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of string, representing the user\u0027s input.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     * @throws CommandException for invalid input.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidCommandLength(input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"                    \"Please specify which task to delete. (format: delete \u003ctask no.\u003e)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        if (Integer.parseInt(input[1]) \u003e tasks.size() || Integer.parseInt(input[1]) \u003c 0) {","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"The tasks you indicated does not exist\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(\"Noted. I\u0027ve removed this task: \",","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"                tasks.get(Integer.parseInt(input[1]) - 1).toString(),","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"                \"Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        tasks.remove(Integer.parseInt(input[1]) - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        Storage.writeToStorage(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":42}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":" * The ExitCommand class is responsible for exiting the application.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"     * The function prints a goodbye message and exits the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects. Can enter empty tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of strings representing the user\u0027s input. ","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     *              Can enter empty input.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(\"Goodbye my friend. See you soon!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":25}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":" * This class represents the command that finds tasks that matches the keyword input.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * Finds a task that contains a keyword similar to the user\u0027s input.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of input containing the keyword.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidCommandLength(input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"                    \"Please specify the keyword. (Format: find \u003ckeyword\u003e)\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        HashSet\u003cTask\u003e matchingTasks \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"            if (task.getDescription().contains(input[1].trim())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"            if (input[1].charAt(0) \u003d\u003d \u0027#\u0027 \u0026\u0026 task.getTags().contains(input[1].trim())) {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        if (!matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"            super.commandResponse \u003d Ui.printList(new ArrayList\u003c\u003e(matchingTasks));","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"            super.commandResponse \u003d Ui.printOutput(String.format(","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"                    \"Hmmm... I can\u0027t find any task that corresponds to the keyword \u0027%s\u0027\",","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"                    input[1]));","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":47}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":" * The MarkCommand class is responsible for marking a task as done in a task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * Marks the task as done in a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects. This represents the list of tasks that the user","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     *              has.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of strings representing the user\u0027s input. This contains the index-1","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     *              of the task being marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidCommandLength(input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"                    \"Please specify which task. (format: mark \u003ctask no.\u003e)\");","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        if (!Utils.isInteger(input[1])) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"Task number not found! (format: mark \u003ctask no.\u003e)\");","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        // check if index is within bounds","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"Task not found!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        // check if there\u0027s no change in status","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        if (tasks.get(index).getIsMarked()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"                    \"The task was already marked as done. I\u0027m not changing anything.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"            tasks.get(index).setMarked(true);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"            super.commandResponse \u003d Ui.printOutput(","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"                    \"Nice! I\u0027ve marked this task as done:\", tasks.get(index).toString());","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":52}},{"path":"src/main/java/duke/commands/ParseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":" * The ParseCommand class is responsible for parsing user input and returning the corresponding","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * Command object.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class ParseCommand {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"     * The function takes in user input and a list of tasks, and returns the corresponding command","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"     * object based on the input.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of strings representing the user\u0027s input. The first element of the array is","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     *          the command, and the subsequent elements are any additional arguments or parameters for","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     *          the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @return Command object based on the input command.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    public static Command parse(String[] input) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        assert input !\u003d null: \"input[] should never be null\";","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        CommandsEnum command \u003d CommandsEnum.getCommandEnum(input[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        case VIEW_LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"            return new ViewTaskListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        case EXIT:","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        case SET_MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"            return new MarkCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        case SET_UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        case INSERT_TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"            return new AddToDoCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        case INSERT_DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"            return new AddDeadlineCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        case INSERT_EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"            return new AddEventCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        case DELETE_TASK:","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"            return new DeleteCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"            return new FindCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        case ADD_TAG:","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            return new AddTagCommand();","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        case REMOVE_TAG:","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"            return new RemoveTagCommand();","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"            return new Command();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":52}},{"path":"src/main/java/duke/commands/RemoveTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"public class RemoveTagCommand extends Command {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input) throws CommandException, IOException {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"        Pattern pattern \u003d Pattern.compile(\"(\\\\d+)\\\\s+(#[\\\\w\\\\d]+\\\\s*)+\");","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"                    \"Wrong format! (format: removetag \u003ctask no.\u003e #tag1 #tag2 #tag3)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        Matcher matcher \u003d pattern.matcher(input[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"                    \"Wrong format! (format: removetag \u003ctask no.\u003e #tag1 #tag2 #tag3)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        String[] tagDetails \u003d input[1].split(\" \");","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        int index \u003d Integer.parseInt(tagDetails[0]) - 1;","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"Task not found!\");","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        tasks.get(index).removeTags(tagDetails);","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printOutput(","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"                \"Okay the tags are now removed. \" + \"\\nYour task looks like this now:\",","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"                tasks.get(index).toString());","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        Storage.writeToStorage(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"lokidoki102":43}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":" * The UnmarkCommand class represents a command to unmark a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * Marks a task as not done yet in a task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects, representing a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     * @param input Contains the index of the task being marked.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidCommandLength(input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"                    \"Please specify which task. (format: unmark \u003ctask no.\u003e)\");","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        if (!Utils.isInteger(input[1])) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"Task number not found! (format: unmark \u003ctask no.\u003e)\");","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        // check if index is within bounds","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(\"Task not found!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        // check if there\u0027s no change in status","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        if (!tasks.get(index).getIsMarked()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"            throw new CommandException(","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"                    \"The task you\u0027re unmarking was not marked to begin with... I\u0027m not changing anything.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            tasks.get(index).setMarked(false);","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            super.commandResponse \u003d Ui.printOutput(\"OK, I\u0027ve marked this task as not done yet: \",","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"                    tasks.get(index).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":50}},{"path":"src/main/java/duke/commands/ViewTaskListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":" * The ViewTaskListCommand is responsible for showing all the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"public class ViewTaskListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"     * This function executes a command to print a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects. This represents the list of tasks that the program","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     *              currently has.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of strings representing user input commands or arguments. Can be empty.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, String[] input)","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"            throws CommandException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        super.commandResponse \u003d Ui.printList(tasks);","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":25}},{"path":"src/main/java/duke/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.common;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * The Utils class provides various utility methods for working with date, time, and integer values.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Utils {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    private static final String FORMAT \u003d \"d/M/yyyy HHmm\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"     * Checks if a given string represents a valid date and time in a specific format.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * @param dateTime The dateTime parameter is a string representing a date and time in a specific","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     *                  format.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a boolean value. It returns true if the given dateTime string is","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     *         a valid date and time according to the specified format, and false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidDateTimeFormat(String dateTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        dateTime \u003d dateTime.trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(FORMAT);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"            LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        return true;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"     * The function checks if two date-time strings are valid and if the \"from\" date-time is before or","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"     * equal to the \"to\" date-time.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"     * @param fromDateTime The starting date and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"     * @param toDateTime The ending date and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a boolean value. It returns true if the fromDateTime is before or","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"     *         equal to the toDateTime, and false otherwise. If either of the date strings cannot be","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"     *         parsed into LocalDateTime objects, it returns false.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isValidDateTimeFormat(String fromDateTime, String toDateTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        fromDateTime \u003d fromDateTime.trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        toDateTime \u003d fromDateTime.trim();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(FORMAT);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromDateTime, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toDateTime, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"            return (from.isBefore(to) || from.isEqual(to)) ? true : false;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"     * Returns a formatted string representation of the date in the format \"dd MMMM yyyy\".","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"     * @param dateTime The `dateTime` parameter is a `LocalDateTime` object representing a specific date","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"     *        and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a formatted string representation of the given LocalDateTime","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"     *         object. The format of the string is \"dd MMMM yyyy\", which represents the day of the","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"     *         month, the full month name, and the year.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"     * Returns a formatted string representation of the date and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"     * @param dateTime A LocalDateTime object representing a date and time.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a formatted string representation of the given LocalDateTime","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"     *         object.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"    public static String inputFormat(LocalDateTime dateTime) {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(FORMAT));","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"     * Takes a string representation of a date and time and returns a `LocalDateTime` object.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"     * @param dateTime A string representation of a date and time in a specific format.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a LocalDateTime object.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(FORMAT);","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"     * Checks if a given string can be parsed into an integer.","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"     * @param input The input parameter is a string that represents a number.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a boolean value. It returns true if the input string can be","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"     *         parsed into an integer, and false if it cannot.","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"    public static boolean isInteger(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"lokidoki102":105}},{"path":"src/main/java/duke/resources/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"event~0~cs2103 tutorial~11/11/2011 1111~11/11/2012 1111","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"todo~0~event1~1~#test~#hello","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"todo~1~event2","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"todo~0~1","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"todo~0~whatever im doing today","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"deadline~0~ip week 1~11/11/2011 1111~#this~5~#testing~#is~#working","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"lokidoki102":6}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":" * The `Storage` class provides methods for reading and writing tasks to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    private static final String FILE_PATH \u003d \"src/main/java/duke/resources/data.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    private static final String DELIMITER \u003d \"~\";","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"     * An empty constructor for Storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    public Storage() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"     * Initialises an ArrayList of Task objects by either reading from a storage file or creating a new","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"     * ArrayList if the file does not exist.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning an ArrayList of task. This contains tasks from previous","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"     *         application session if there\u0027s any.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"     * @throws FileNotFoundException if the FILE_PATH does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    public static ArrayList\u003cTask\u003e init() throws FileNotFoundException {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        if (new File(FILE_PATH).exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"            return Storage.readFromStorage();","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"            assert file.getParentFile().exists() : \"Parent folder of data.txt, resources,\"","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"                    + \" should always exist after calling init()\";","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"     * Reads tasks from a file and returns them as an ArrayList.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning an ArrayList of Task objects.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"     * @throws FileNotFoundException if the FILE_PATH does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    public static ArrayList\u003cTask\u003e readFromStorage() throws FileNotFoundException {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"                String[] input \u003d sc.nextLine().split(DELIMITER);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"                Task task \u003d parseInput(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"                    tasks.add(task);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"            sc.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"            return tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"            throw new FileNotFoundException(\"Unable to find the file path...\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"     * Takes an array of strings as input and returns a `Task` object based on the command and data","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"     * provided in the input.","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"     * @param input An array of strings representing the input data for a task. The first element of the","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"     *        array is the command, and the subsequent elements contain the necessary information for","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"     *        creating the task object.","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"     * @return The method `parseInput` returns a `Task` object.","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"    private static Task parseInput(String[] input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"        String command \u003d input[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"        switch (command) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"lokidoki102"},"content":"        case \"event\":","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"lokidoki102"},"content":"            return getEventFromFile(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"lokidoki102"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"lokidoki102"},"content":"            return getTodoFromFile(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"lokidoki102"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"lokidoki102"},"content":"            return getDeadlineFromFile(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"lokidoki102"},"content":"        default:","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"lokidoki102"},"content":"            System.out.println(\"Error in loading task: \" + input[0]);","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"lokidoki102"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"lokidoki102"},"content":"    private static boolean isValidFileLineInput(int numOfDelimiter, String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"lokidoki102"},"content":"        return input.length \u003e numOfDelimiter \u0026\u0026 (input[1].equals(\"0\") || input[1].equals(\"1\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"lokidoki102"},"content":"    private static ToDo getTodoFromFile(String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"lokidoki102"},"content":"        // format: todo~status~description","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidFileLineInput(2, input)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"lokidoki102"},"content":"            // corrupted data","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"lokidoki102"},"content":"            System.out.println(\"Error in loading a todo task...\");","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"lokidoki102"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"lokidoki102"},"content":"        ToDo todo \u003d new ToDo(input[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"lokidoki102"},"content":"        todo.setMarked(input[1].equals(\"1\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"lokidoki102"},"content":"      ","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"lokidoki102"},"content":"        if (input.length \u003e 3) {","lastModifiedDate":"2024-02-22"},{"lineNumber":120,"author":{"gitId":"lokidoki102"},"content":"            todo.addTags(Arrays.copyOfRange(input, 3, input.length));","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":122,"author":{"gitId":"lokidoki102"},"content":"      ","lastModifiedDate":"2024-02-22"},{"lineNumber":123,"author":{"gitId":"lokidoki102"},"content":"        return todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"lokidoki102"},"content":"    private static Event getEventFromFile(String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"lokidoki102"},"content":"        // format: event~status~description~\u003cdate\u003e~\u003cdate\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidFileLineInput(4, input) || !Utils.isValidDateTimeFormat(input[3], input[4])) {","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"lokidoki102"},"content":"            // corrupted data","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"lokidoki102"},"content":"            System.out.println(\"Error in loading an event task...\");","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"lokidoki102"},"content":"            return null;","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"lokidoki102"},"content":"        Event event \u003d new Event(input[2], Utils.parseDateTime(input[3]),","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"lokidoki102"},"content":"                Utils.parseDateTime(input[4]));","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"lokidoki102"},"content":"        event.setMarked(input[1].equals(\"1\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":137,"author":{"gitId":"lokidoki102"},"content":"  ","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"lokidoki102"},"content":"        if (input.length \u003e 5) {","lastModifiedDate":"2024-02-22"},{"lineNumber":139,"author":{"gitId":"lokidoki102"},"content":"            event.addTags(Arrays.copyOfRange(input, 5, input.length));","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"lokidoki102"},"content":"  ","lastModifiedDate":"2024-02-22"},{"lineNumber":142,"author":{"gitId":"lokidoki102"},"content":"        return event;","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":144,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":145,"author":{"gitId":"lokidoki102"},"content":"    private static Deadline getDeadlineFromFile(String[] input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":146,"author":{"gitId":"lokidoki102"},"content":"        // format: deadline~status~description~\u003cdate\u003e","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"lokidoki102"},"content":"        if (!isValidFileLineInput(3, input) || !Utils.isValidDateTimeFormat(input[3])) {","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"lokidoki102"},"content":"            // corrupted data","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"lokidoki102"},"content":"            System.out.println(\"Error in loading a deadline task...\");","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"lokidoki102"},"content":"            return null;","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"lokidoki102"},"content":"        Deadline deadline \u003d new Deadline(input[2], Utils.parseDateTime(input[3]));","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"lokidoki102"},"content":"        deadline.setMarked(input[1].equals(\"1\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":155,"author":{"gitId":"lokidoki102"},"content":"  ","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"lokidoki102"},"content":"        if (input.length \u003e 4) {","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"lokidoki102"},"content":"            deadline.addTags(Arrays.copyOfRange(input, 4, input.length ));","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":159,"author":{"gitId":"lokidoki102"},"content":"  ","lastModifiedDate":"2024-02-22"},{"lineNumber":160,"author":{"gitId":"lokidoki102"},"content":"        return deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"lokidoki102"},"content":"     * Writes a list of tasks to a storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks An ArrayList of Task objects that need to be written to storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"lokidoki102"},"content":"    public static void writeToStorage(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"lokidoki102"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"lokidoki102"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"lokidoki102"},"content":"                fw.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"lokidoki102"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"lokidoki102"},"content":"            fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":177,"author":{"gitId":"lokidoki102"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"lokidoki102"},"content":"            throw new IOException();","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"lokidoki102"},"content":"     * Writes a task object to a file in storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"lokidoki102"},"content":"     * @param task The parameter `task` is of type `Task`, which is an object representing a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"lokidoki102"},"content":"    public static void writeToStorage(Task task) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"lokidoki102"},"content":"        assert task !\u003d null : \"Task being written to storage should never be null\";","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"lokidoki102"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"lokidoki102"},"content":"            fw.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"lokidoki102"},"content":"            fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":196,"author":{"gitId":"lokidoki102"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":197,"author":{"gitId":"lokidoki102"},"content":"            throw new IOException(\"file not found\");","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"lokidoki102":200}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * The Deadline class represents a task with a specific deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * Defines a constructor for the `Deadline` class.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     * @param dateBy The deadline date of the task.","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    public Deadline(String description, LocalDateTime dateBy) {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        this.by \u003d dateBy;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"     * Converts the object\u0027s data into a formatted string for storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a formatted string that represents the object\u0027s data in a","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     *         storage-friendly format.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        int statusValue \u003d this.getIsMarked() ? 1 : 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assert statusValue \u003d\u003d 0 || statusValue \u003d\u003d 1 : \"Status value must be equal to 0 or 1\";","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"      ","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        sb.append(String.format(\"deadline~%d~%s~%s\", statusValue, this.description,","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"                Utils.inputFormat(this.by)));","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        for (String tag : this.getTags()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"            sb.append(\"~\").append(tag);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"     * Returns a string representation of a Deadline with its status and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a string representation of a Deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Utils.dateTimeToString(this.by) + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"lokidoki102":58}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * The Event class represents an event task with a start and end time.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"     * Converts an event object into a string representation for storage, including its status,","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"     * description, and time range.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a formatted string that represents the object\u0027s data in a","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"     *         storage-friendly format.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        int statusValue \u003d this.getIsMarked() ? 1 : 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        assert statusValue \u003d\u003d 0 || statusValue \u003d\u003d 1 : \"Status value must be equal to 0 or 1\";","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        ","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        sb.append(String.format(\"event~%d~%s~%s~%s\", statusValue, this.description,","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"                Utils.inputFormat(this.from), Utils.inputFormat(this.to)));","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        for (String tag : this.getTags()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"            sb.append(\"~\").append(tag);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"     * Returns a string representation of an Event with its status and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a string representation of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + Utils.dateTimeToString(this.from)","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"                + \" to: \" + Utils.dateTimeToString(this.to) + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"lokidoki102":55}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":" * The Task class represents a task with a description and a status, and provides methods to set and","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" * get the status, convert the task to a string representation, and convert the task to a storage","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":" * string.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    protected final String description;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    private HashSet\u003cString\u003e tags;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public void setMarked(boolean status) {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        this.isMarked \u003d status;","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        return this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    public boolean getIsMarked() {","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        return this.isMarked;","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    public HashSet\u003cString\u003e getTags() {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        return this.tags;","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"     * Adds tag(s) to a task. Duplicate tags are ignored on addition.","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"     * @param tagDetails the array which contains the #tags of the task.","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    public void addTags(String[] tagDetails) {","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        for (String tag : tagDetails) {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"            this.tags.add(tag);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"     * Removes tag(s) from a task. Non-existent tags are ignored.","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"     * @param tags the array of strings which contains the tags to remove.","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    public void removeTags(String[] tags) {","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        for (String tag : tags) {","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"            this.tags.remove(tag);","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"     * Converts a task object to its string representation for storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"     * @return An empty string is being returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"        return \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"     * Returns a string representation of a task with its status and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a string representation of a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        String checkBox \u003d \"[ ]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"        if (isMarked) {","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"            checkBox \u003d \"[X]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"        sb.append(checkBox).append(\" \").append(description);","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        for (String tag : tags) {","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"            sb.append(\" \").append(tag);","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"lokidoki102":91}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import duke.common.Utils;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":" * The ToDo class represents a task with a description only.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     * Converts the tasks\u0027s status and description into a formatted string for storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     * @return The method is returning a string representation of the task for storage purposes. The","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"     *         string is formatted as \"todo~statusValue~description\", where statusValue is either 1 or 0","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"     *         depending on the status of the task, and description is the description of the task.","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    public String toStorageString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        int statusValue \u003d this.getIsMarked() ? 1 : 0;","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assert statusValue \u003d\u003d 0 || statusValue \u003d\u003d 1 : \"Status value must be equal to 0 or 1\";","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        sb.append(String.format(\"todo~%d~%s\", statusValue, this.description));","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        for (String tag : this.getTags()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"            sb.append(\"~\").append(tag);","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"     * Returns a string representation of a ToDo with its status and description.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a string representation of a Todo.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"lokidoki102":46}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        dialog.setPadding(new Insets(5));","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        displayPicture.setFitHeight(40);","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        displayPicture.setFitWidth(40);","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"        displayPicture.setClip(new Circle(20,20,20));","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"    private void flip() {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"        db.flip();","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"        return db;","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"lokidoki102":67}},{"path":"src/main/java/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    public Main() throws FileNotFoundException {","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"            stage.show();","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"lokidoki102":37}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/huhcat.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    private Image luckyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Lucky.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        dialogContainer","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"                .getChildren()","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"                .add(DialogBox.getDukeDialog(\"Hello! I\u0027m Lucky the cat\\nWhat can I do for you?\", luckyImage));","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        scrollPane.setStyle(\"-fx-background: #0a1526;\");","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"                DialogBox.getDukeDialog(response, luckyImage)","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"        );","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"lokidoki102":59}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"     * Returns the output of the chatbot in formatted form.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"     * @param msg The message to output.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a String, containing the response.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public static String printOutput(String... msg) {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        for (String string : msg) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"            sb.append(string).append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"     * Prints the list of tasks in the provided ArrayList of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"     * @param tasks ArrayList of task to output.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns a String, containing the response.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    public static String printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"            sb.append(i).append(\".\").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"            i++;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"     * Reads the command input of the user and returns it.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"     * @return Returns an array of String, containing the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"    public String[] readCommand(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        String[] inputArray \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        assert inputArray.length \u003c\u003d 2 : \"Input array should always of size \u003c 2 after splitting\";","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        return inputArray;","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":55}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #183a6e; -fx-label-padding: 4; -fx-text-fill: #ffffff; -fx-background-radius: 15;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"      \u003cPane prefHeight\u003d\"40.0\" prefWidth\u003d\"6.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40\" fitWidth\u003d\"40\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"      \u003cPane prefHeight\u003d\"40.0\" prefWidth\u003d\"3.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"lokidoki102":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #1a283d; -fx-border-color: #1a283d;\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"326.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"74.0\" style\u003d\"-fx-background-color: #1a283d; -fx-border-color: #656970; -fx-text-fill: #ffffff;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #1a283d; -fx-border-width: 0; -fx-border-color: #1a283d;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"387.0\" style\u003d\"-fx-background-color: #0a1526;\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"7.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"316.0\" style\u003d\"-fx-background-color: #1a283d; -fx-text-fill: #ffffff; -fx-border-color: #1a283d;\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"lokidoki102":19}},{"path":"src/test/java/duke/commands/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"deadline\", \"Finish project /by 31/12/2024 2359\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e addDeadlineCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidInput_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"deadline\", \"Invalid input\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e addDeadlineCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidDateTimeFormat_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"deadline\", \"Finish project /by 31/31/2024\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e addDeadlineCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":44}},{"path":"src/test/java/duke/commands/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"event\", \"Attend meeting /from 02/02/2024 0900 /to 02/02/2024 1000\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e addEventCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidInput_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"event\", \"Invalid input\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e addEventCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidDateTimeFormat_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"event\", \"Attend party /from 31/31/2024 /to 31/31/2024\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e addEventCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":41}},{"path":"src/test/java/duke/commands/AddToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"public class AddToDoCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        AddToDoCommand addToDoCommand \u003d new AddToDoCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"todo\", \"finish JUnit testing );\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e addToDoCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidInput_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        AddToDoCommand addToDoCommand \u003d new AddToDoCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"todo\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e addToDoCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":32}},{"path":"src/test/java/duke/commands/CommandExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"public class CommandExceptionTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_withMessage_messageIsSet() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"        String errorMessage \u003d \"Test error message\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        CommandException commandException \u003d new CommandException(errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(errorMessage, commandException.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"    public void constructor_withoutMessage_defaultMessageIsNull() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        CommandException commandException \u003d new CommandException(null);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        assertNull(commandException.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":24}},{"path":"src/test/java/duke/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"public class CommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public void execute_defaultBehavior_outputMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unknownCommand\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e command.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":21}},{"path":"src/test/java/duke/commands/CommandsEnumTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"public class CommandsEnumTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"    public void getCommandEnum_validInput_returnCorrectEnum() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"        String input \u003d \"todo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"        CommandsEnum result \u003d CommandsEnum.getCommandEnum(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(CommandsEnum.INSERT_TODO, result);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public void getCommandEnum_invalidInput_returnDefaultEnum() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        String input \u003d \"invalid\";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        CommandsEnum result \u003d CommandsEnum.getCommandEnum(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(CommandsEnum.DEFAULT, result);","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"    public void getCommandEnum_inputWithDifferentCases_returnCorrectEnum() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        String input \u003d \"DeADline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        CommandsEnum result \u003d CommandsEnum.getCommandEnum(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(CommandsEnum.INSERT_DEADLINE, result);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":29}},{"path":"src/test/java/duke/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() throws IOException, CommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(new Task(\"Sample task\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"delete\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e deleteCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidInput_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"delete\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    public void execute_nonExistentTaskIndex_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"delete\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":44}},{"path":"src/test/java/duke/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() throws IOException, CommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        Task task \u003d new Task(\"Sample task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d { \"mark\", \"1\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e markCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(task.getIsMarked());","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidInput_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d { \"mark\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e markCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    public void execute_nonExistentTaskIndex_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d { \"mark\", \"1\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e markCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    public void execute_alreadyMarkedTask_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"        Task task \u003d new Task(\"Sample task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        task.setMarked(true);","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d { \"mark\", \"1\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e markCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":58}},{"path":"src/test/java/duke/commands/ParseCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"public class ParseCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"    public void parse_viewListCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"list\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof ViewTaskListCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"    public void parse_exitCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"bye\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof ExitCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    public void parse_markCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"mark\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof MarkCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    public void parse_unmarkCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof UnmarkCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"    public void parse_addToDoCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"todo\", \"Buy groceries\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof AddToDoCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"    public void parse_addDeadlineCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"deadline\", \"Submit report /by 2024/12/31\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof AddDeadlineCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"lokidoki102"},"content":"    public void parse_addEventCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"event\", \"Movie night /from 2022/12/31 18:00 /to 2022-12-31 22:00\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof AddEventCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"lokidoki102"},"content":"    public void parse_deleteCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"delete\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof DeleteCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"lokidoki102"},"content":"    public void parse_defaultCommand_success() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unknownCommand\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"lokidoki102"},"content":"        Command result \u003d ParseCommand.parse(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"lokidoki102"},"content":"        assertTrue(result instanceof Command);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":91}},{"path":"src/test/java/duke/commands/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() throws IOException, CommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        Task task \u003d new Task(\"Sample task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"        task.setMarked(true);","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e unmarkCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"lokidoki102"},"content":"        assertFalse(task.getIsMarked());","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"lokidoki102"},"content":"    public void execute_invalidInput_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"lokidoki102"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unmark\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e unmarkCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"lokidoki102"},"content":"    public void execute_nonExistentTaskIndex_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"lokidoki102"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e unmarkCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"lokidoki102"},"content":"    public void execute_alreadyUnmarkedTask_throwsCommandException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"lokidoki102"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"lokidoki102"},"content":"        Task task \u003d new Task(\"Sample task\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"lokidoki102"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d {\"unmark\", \"1\"};","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"lokidoki102"},"content":"        assertThrows(CommandException.class, () -\u003e unmarkCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":60}},{"path":"src/test/java/duke/commands/ViewTaskListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"package duke.commands;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"public class ViewTaskListCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"lokidoki102"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"lokidoki102"},"content":"    public void execute_validInput_success() throws IOException, CommandException {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"lokidoki102"},"content":"        // Arrange","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"lokidoki102"},"content":"        ViewTaskListCommand viewTaskListCommand \u003d new ViewTaskListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"lokidoki102"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"lokidoki102"},"content":"        String[] input \u003d { \"list\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"lokidoki102"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"lokidoki102"},"content":"        assertDoesNotThrow(() -\u003e viewTaskListCommand.execute(tasks, input));","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"lokidoki102"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"lokidoki102"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"lokidoki102":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"todo finish A-TextUiTesting","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"deadline ip week 1 /by 11/11/2011 1111","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"event cs2103 tutorial /from 11/11/2011 1111 /to 11/11/2012 1111","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"lokidoki102"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"lokidoki102"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"lokidoki102"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"lokidoki102"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"lokidoki102"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"lokidoki102"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"lokidoki102"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"lokidoki102"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"lokidoki102":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lokidoki102"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"lokidoki102":1}},{"path":"text-ui-test/src/main/java/duke/resources/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lokidoki102"},"content":"todo~0~finish A-TextUiTesting","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"lokidoki102"},"content":"deadline~0~ip week 1~11/11/2011 1111","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"lokidoki102"},"content":"event~0~cs2103 tutorial~11/11/2011 1111~11/11/2012 1111","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"lokidoki102":3}}]
