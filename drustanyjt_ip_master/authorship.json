[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"# Using AI","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"When starting on Duke in week 2,","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"I wanted to try to learn how to effectively use","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"GitHub CoPilot to help me write code.","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"I had heard about it from a friend and was curious","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"to see how it would work.","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"(This Markdown file was","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"written with CoPilot\u0027s help.)","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"I also used ChatGPT for refactoring to use handlers.","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":12}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"    public Deadline (String description, String by) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(Task.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"enum Command {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    BYE, LIST, MARK, UNMARK, DEADLINE, EVENT, TODO, DELETE, DEFAULT","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"class Duke {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    private final ArrayList\u003cTask\u003e userInputLog;","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    private boolean isAcceptingInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public Duke() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        this.userInputLog \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"        this.isAcceptingInput \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public void initChat() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Hello! I\u0027m Fluffy.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        while (isAcceptingInput) {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"            System.out.print(\"$ \");","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"                processUserInput(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"                // Ask for new user input","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"                // Clears scanner buffer","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"                scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"    private void processUserInput(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        // Main event handler","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"        String input \u003d scanner.next();","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"        Command command \u003d getCommand(input);","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        switch (command) {","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"            case BYE:","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"                handleBye();","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"            case LIST:","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"                handleList();","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"            case MARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"                handleMark(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"                handleUnmark(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"                handleDeadline(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"            case EVENT:","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"                handleEvent(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"            case TODO:","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"                handleTodo(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"            case DELETE:","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"                handleDelete(scanner);","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"            default:","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"                handleDefault();","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"        autoSave();","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"    private Command getCommand(String input) {","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"            return Command.valueOf(input.toUpperCase());","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"            return Command.DEFAULT;","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"    private void handleBye() {","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"drustanyjt"},"content":"        isAcceptingInput \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":97,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"drustanyjt"},"content":"    private void handleList() {","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"drustanyjt"},"content":"        for (int i \u003d 0; i \u003c userInputLog.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(i + 1 + \". \" + userInputLog.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"drustanyjt"},"content":"    private void handleMark(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"drustanyjt"},"content":"            int indexToMark \u003d scanner.nextInt();","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"drustanyjt"},"content":"            userInputLog.get(indexToMark - 1).markAsDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(userInputLog.get(indexToMark - 1));","lastModifiedDate":"2024-01-22"},{"lineNumber":111,"author":{"gitId":"drustanyjt"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for marking. Please provide a valid task index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"drustanyjt"},"content":"        } catch (InputMismatchException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for marking. Please provide an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":117,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"drustanyjt"},"content":"    private void handleUnmark(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"drustanyjt"},"content":"            int indexToUnmark \u003d scanner.nextInt();","lastModifiedDate":"2024-01-22"},{"lineNumber":121,"author":{"gitId":"drustanyjt"},"content":"            userInputLog.get(indexToUnmark - 1).markAsNotDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as undone:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(userInputLog.get(indexToUnmark - 1));","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"drustanyjt"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException | IllegalStateException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for unmarking. Please provide a valid task index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"drustanyjt"},"content":"    private void handleDeadline(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"drustanyjt"},"content":"            String deadlineDescription \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"drustanyjt"},"content":"            String[] deadlineDescriptionArray \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"drustanyjt"},"content":"            if (deadlineDescriptionArray.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"drustanyjt"},"content":"                throw new DukeException(\"Invalid deadline format. \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"drustanyjt"},"content":"                                        \"Please provide a description followed by \u0027/by\u0027 and the deadline.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"drustanyjt"},"content":"            Task deadlineTask \u003d new Deadline(deadlineDescriptionArray[0], deadlineDescriptionArray[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"drustanyjt"},"content":"            userInputLog.add(deadlineTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(deadlineTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Now you have \" + userInputLog.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"drustanyjt"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid deadline format. \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"drustanyjt"},"content":"                                    \"Please provide a description followed by \u0027/by\u0027 and the deadline.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"drustanyjt"},"content":"        * Handles the event command. It takes in a scanner object and parses the input to create an event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"drustanyjt"},"content":"        * The event task is then added to the user input log.","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"drustanyjt"},"content":"        *","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"drustanyjt"},"content":"        * @param scanner The scanner object to parse the user input.","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"drustanyjt"},"content":"        * @throws DukeException If the user input is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"drustanyjt"},"content":"    private void handleEvent(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"drustanyjt"},"content":"            String eventDescription \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"drustanyjt"},"content":"            String[] eventDescriptionArray \u003d eventDescription.split(\" /from \");","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"drustanyjt"},"content":"            if (eventDescriptionArray.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"drustanyjt"},"content":"                throw new DukeException(\"Invalid event format. \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"drustanyjt"},"content":"                                        \"Please provide a description followed by \u0027/from\u0027 \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"drustanyjt"},"content":"                                        \"and the start time \u0027/to\u0027 and the end time.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"drustanyjt"},"content":"            String eventTitle \u003d eventDescriptionArray[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"drustanyjt"},"content":"            eventDescriptionArray \u003d eventDescriptionArray[1].split(\" /to \");","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"drustanyjt"},"content":"            if (eventDescriptionArray.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"drustanyjt"},"content":"                throw new DukeException(\"Invalid event format. \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"drustanyjt"},"content":"                                        \"Please provide a description followed by \u0027/from\u0027 \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"drustanyjt"},"content":"                                        \"and the start time \u0027/to\u0027 and the end time.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"drustanyjt"},"content":"            Task eventTask \u003d new Event(eventTitle, eventDescriptionArray[0], eventDescriptionArray[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"drustanyjt"},"content":"            userInputLog.add(eventTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":174,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(eventTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":175,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Now you have \" + userInputLog.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"drustanyjt"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":177,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid event format. \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"drustanyjt"},"content":"                                    \"Please provide a description followed by \u0027/from\u0027 \" +","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"drustanyjt"},"content":"                                    \"and the start time \u0027/to\u0027 and the end time.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"drustanyjt"},"content":"    private void handleTodo(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"drustanyjt"},"content":"        String todoDescription \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"drustanyjt"},"content":"        if (todoDescription.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid todo format. Please provide a description for the todo task.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":187,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"drustanyjt"},"content":"        Task todoTask \u003d new Todo(todoDescription);","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"drustanyjt"},"content":"        userInputLog.add(todoTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(todoTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Now you have \" + userInputLog.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":195,"author":{"gitId":"drustanyjt"},"content":"    private void handleDelete(Scanner scanner) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":197,"author":{"gitId":"drustanyjt"},"content":"            int indexToDelete \u003d scanner.nextInt();","lastModifiedDate":"2024-01-22"},{"lineNumber":198,"author":{"gitId":"drustanyjt"},"content":"            Task deletedTask \u003d userInputLog.remove(indexToDelete - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":200,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(deletedTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":201,"author":{"gitId":"drustanyjt"},"content":"            System.out.println(\"Now you have \" + userInputLog.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":202,"author":{"gitId":"drustanyjt"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException | IllegalStateException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":203,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for deletion. Please provide a valid task index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":204,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":205,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"drustanyjt"},"content":"    private void handleDefault() throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":208,"author":{"gitId":"drustanyjt"},"content":"        throw new DukeException(\"Invalid instruction. Please provide a valid command.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":210,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"drustanyjt"},"content":"    private void autoSave() throws DukeException{","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"drustanyjt"},"content":"        Path path \u003d Paths.get(\".\", \"data\", \"duke.txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"drustanyjt"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"drustanyjt"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"drustanyjt"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"drustanyjt"},"content":"            PrintWriter writer \u003d new PrintWriter(path.toFile(), StandardCharsets.UTF_8);","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"drustanyjt"},"content":"            for (Task task : userInputLog) {","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"drustanyjt"},"content":"                writer.println(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"drustanyjt"},"content":"            writer.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"drustanyjt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":225,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":226,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"drustanyjt"},"content":"        Duke fluffyInstance \u003d new Duke();","lastModifiedDate":"2024-01-22"},{"lineNumber":230,"author":{"gitId":"drustanyjt"},"content":"        fluffyInstance.initChat();","lastModifiedDate":"2024-01-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"drustanyjt":228,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"        super(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"drustanyjt":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":" * The Event class is a subclass of Task and represents a task that starts","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":" * at a specific time and ends at a specific time.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":" * It takes in a LocalData as the start time and end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"     * Constructs Event object with description, from and to as Strings.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(Task.DATE_TIME_FORMATTER) +","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"               \" to: \" + to.format(Task.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d false; // Task is not done by default","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        // Mark task as done","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        // Mark task as done","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        // Return task description","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        return this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        // Return task status icon and description","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":1}}]
