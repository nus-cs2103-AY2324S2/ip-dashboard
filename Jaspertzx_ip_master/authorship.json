[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    mainClassName \u003d \u0027Duke\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jaspertzx":3,"-":41}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"ToDo|1|homework","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jaspertzx":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * The main user interface for the \"ChatBot\", promptly named BobBot.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * This class is a front to manage user input, displaying the corresponding output, ","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * and managed the conditional statements for the prompting.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import parser.ParseExecutionable;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import task.ActionTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import task.TaskStorage;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import util.DataReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import util.DataWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import util.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import util.TextUi;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"        TextUi textUi \u003d new TextUi();","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        textUi.printMessage(Messages.MESSAGE_START_BOT);","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"        TaskStorage ts \u003d new DataReader().readDataFile(textUi);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"        ParseExecutionable actionable \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        Boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"        do {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"            String userInput \u003d textUi.readNextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"            actionable \u003d parser.parseInput(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"            textUi.printMessage(actionable.execute(ts));","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"            if (actionable instanceof ActionTask) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"                ActionTask actionTask \u003d (ActionTask) actionable;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"                isExit \u003d actionTask.isExit;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        } while (!isExit);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"        DataWriter dataWriter \u003d new DataWriter();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        dataWriter.saveData(ts);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        textUi.closeReader();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jaspertzx":33,"-":4}},{"path":"src/main/java/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"ToDo|1|homework","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":1}},{"path":"src/main/java/parser/ParseExecutionable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * The ParseExecutionable interface is to handle the outcomes of parsing operations within the application. ","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * Objects implementing of this interface encapsulate different types of actions into the TaskStorage,","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * such as creating tasks, executing changes, or indicating TaskErrors.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"package parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import task.TaskStorage;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"public interface ParseExecutionable {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"     * Executes the necessary action created from the parsed results. ","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"     * To be overidden with the exact operation required from each Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskStorage The storage space where the action will take place.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    public String execute(TaskStorage taskStorage);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":17}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * The parser class is responsible for interpreting and converting","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * user input into executionable actions in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * This class supports parsing descriptions that can either represent","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" * commands (like list, mark task, etc). Corresponding to the input, the","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":" * parser produces a result that encapsulates the intended action.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"**/","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"package parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import task.IncorrectTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import task.ActionTask;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"import task.ActionTask.ActionType;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"import util.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"public class Parser { ","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    final static DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the provided user input and returns an ParseExecutionable","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"     * that represents either a command to be executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"     * The method analyzes the input to determine its command type. ","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"     * Unrecognized inputs are handled, returning a UNRECOGNIZED ActionTask.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     * The other recognized inputs are handled with their corresponding actions.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute the user input to be parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"     * @return an instance of ParseExecutionable to encapsulate the necessary action.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable parseInput(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        String[] userInputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        String commandType \u003d userInputSplit[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        switch (commandType) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"            case ToDo.TASK_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"                return this.createToDo(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"            case Deadline.TASK_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"                return this.createDeadlines(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"            case Event.TASK_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"                return this.createEvents(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"            case ActionTask.LIST_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"                return new ActionTask(ActionType.LIST);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"            case ActionTask.MARK_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"                return this.createMarkAction(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"            case ActionTask.UNMARK_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"                return this.createUnmarkAction(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"            case ActionTask.DELETE_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"                return this.createDeleteAction(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"            case ActionTask.BYE_TYPE:","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"                return new ActionTask(ActionType.BYE);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        return new ActionTask(ActionType.UNRECOGNIZED);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the user input into a ToDo Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute user\u0027s input in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"     * @return the ParseExecutionable that when excuted, creates a ToDo object.","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable createToDo(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        String[] taskName \u003d userInput.split(\"todo \");","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        if (taskName.length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"            return new IncorrectTask(Messages.MESSAGE_WRONG_PARAMETERS);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        Task t \u003d new ToDo(taskName[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"        return t;","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the user input into a Deadline Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute user\u0027s input in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"     * @return the ParseExecutionable that when excuted, creates a Deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable createDeadlines(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"        String[] newSplit \u003d userInput.split(\"/\");","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"        String[] taskName \u003d newSplit[0].split(\"deadline \");","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"        String dateString \u003d userInput.split(\"by \")[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"        LocalDateTime dateTime \u003d parseDate(dateString);","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"        if (newSplit.length !\u003d 2 || (newSplit[1].split(\"by \").length !\u003d 2)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"            return new IncorrectTask(Messages.MESSAGE_WRONG_PARAMETERS);","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        return new Deadline(taskName[1], dateTime);","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the user input into a Event Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute user\u0027s input in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"     * @return the ParseExecutionable that when excuted, creates a Event object.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable createEvents(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"        String[] newSplit \u003d userInput.split(\"/\");","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"        String[] taskName \u003d newSplit[0].split(\"event \");","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"        int fromLength \u003d newSplit[1].split(\"from \").length;","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        int toLength \u003d newSplit[2].split(\"to \").length;","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"        if (newSplit.length !\u003d 3 || fromLength !\u003d 2 || toLength !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"            return new IncorrectTask(Messages.MESSAGE_WRONG_PARAMETERS);","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Jaspertzx"},"content":"        return new Event(taskName[1], newSplit[1], newSplit[2]);","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the user input into a mark action","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute user\u0027s input in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"Jaspertzx"},"content":"     * @return the ParseExecutionable that when excuted, marks the specified object.","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable createMarkAction(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Jaspertzx"},"content":"        String[] inputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"Jaspertzx"},"content":"        if (inputSplit.length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Jaspertzx"},"content":"            return new IncorrectTask(Messages.MESSAGE_WRONG_PARAMETERS);","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Jaspertzx"},"content":"        int commandId \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Jaspertzx"},"content":"        ActionTask t \u003d new ActionTask(ActionType.MARK, commandId);","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Jaspertzx"},"content":"        return t;","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the user input into a unmark action","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute user\u0027s input in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"Jaspertzx"},"content":"     * @return the ParseExecutionable that when excuted, unmarks the specified object.","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable createUnmarkAction(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Jaspertzx"},"content":"        String[] inputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"Jaspertzx"},"content":"        if (inputSplit.length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Jaspertzx"},"content":"            return new IncorrectTask(Messages.MESSAGE_WRONG_PARAMETERS);","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Jaspertzx"},"content":"        int commandId \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Jaspertzx"},"content":"        return new ActionTask(ActionType.UNMARK, commandId);","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Jaspertzx"},"content":"     * Parses the user input into a delete action","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Jaspertzx"},"content":"     * @param userInpute user\u0027s input in the main application.","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"Jaspertzx"},"content":"     * @return the ParseExecutionable that when excuted, deletes the specified object.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"Jaspertzx"},"content":"    public ParseExecutionable createDeleteAction(String userInput) {","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"Jaspertzx"},"content":"        String[] inputSplit \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"Jaspertzx"},"content":"        if (inputSplit.length !\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"Jaspertzx"},"content":"            return new IncorrectTask(Messages.MESSAGE_WRONG_PARAMETERS);","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"Jaspertzx"},"content":"        int commandId \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"Jaspertzx"},"content":"        return new ActionTask(ActionType.DELETE, commandId);","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"Jaspertzx"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Jaspertzx"},"content":"     * @param the String to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Jaspertzx"},"content":"     * @return the corrsponding LocalDateTime object created.","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Jaspertzx"},"content":"    public LocalDateTime parseDate(String dateString) {","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Jaspertzx"},"content":"        return LocalDateTime.parse(dateString, DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"Jaspertzx"},"content":"    } ","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":169}},{"path":"src/main/java/task/ActionTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents an ActionTask.","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * This class is the representation of a ActionTask, that defines a certain action.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * It implements from ParseExecutionable to execute it\u0027s required action after being parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import parser.ParseExecutionable;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import util.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"public class ActionTask implements ParseExecutionable {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    public static final String LIST_TYPE \u003d \"list\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    public static final String DELETE_TYPE \u003d \"delete\";","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MARK_TYPE \u003d \"mark\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    public static final String UNMARK_TYPE \u003d \"unmark\";","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    public static final String BYE_TYPE \u003d \"bye\";","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    public static enum ActionType {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        LIST, DELETE, MARK, UNMARK, BYE, UNRECOGNIZED","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    private ActionType action;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    private int taskId;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    public boolean isExit;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a ActionTask object.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"     * This constructor is primarily used for actions that do not specify a specific Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * @param action The ActionType of the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    public ActionTask(ActionType action) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        this.action \u003d action;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a ActionTask object.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"     * This constructor is primarily used for actions that specify a specific Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"     * @param action The ActionType of the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskId The specified Id for the action.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    public ActionTask(ActionType action, int taskId) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        this.action \u003d action;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"     * Executes the necessary action created from the parsed results. ","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"     * Will have different actions depending on the ActionType that is set in the object.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskStorage The storage space where the action will take place.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"    public String execute(TaskStorage taskStorage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"        String printMessage \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"        switch (this.action) { ","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"            case LIST:","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"                if (taskStorage.size() \u003e 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"                    return taskStorage.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"                return Messages.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"            case MARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"                printMessage +\u003d \"Nicely done! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"                String resultMessage \u003d taskStorage.markTask(this.taskId, true);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"                if (resultMessage.equals(Messages.MESSAGE_NO_SUCH_ELEMENTS)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"                    return resultMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"                printMessage +\u003d resultMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"                return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"                printMessage +\u003d \"Hey you! I\u0027ve marked this task as not done, yet: \\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"                resultMessage \u003d taskStorage.markTask(this.taskId, false);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"                if (resultMessage.equals(Messages.MESSAGE_NO_SUCH_ELEMENTS)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"                    return resultMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"                printMessage +\u003d resultMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"                return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"            case DELETE:","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"                printMessage +\u003d \"Alright-o, I have deleted the following task: \\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"                resultMessage \u003d taskStorage.removeTask(this.taskId);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"                if (resultMessage.equals(Messages.MESSAGE_NO_SUCH_ELEMENTS)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"                    return resultMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"                printMessage +\u003d resultMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"                return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"            case BYE:","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"                this.isExit \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"                printMessage \u003d \"Bye, hope to see you again soon!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"                return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"            case UNRECOGNIZED:","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"                return \"Unrecognized command\";","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":98}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * This class is the representation of a Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * It extends from its parent class the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    final static DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    public static final String TASK_TYPE \u003d \"deadline\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"     * Will call the super constructor with the task name variable.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"     * @param c The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"     * @param end The end of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    public Deadline(String c, LocalDateTime endDateTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        super(c);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"     * Will call the super constructor with the task name variable.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     * @param c The name of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     * @param end The end of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     * @param mark To indicate if this is marked or not.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"    public Deadline(String c, String end, String mark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        super(c);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        this.endDateTime \u003d LocalDateTime.parse(end.trim(), DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"            super.mark();","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Deadlines object for storage in DataWriter.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"     * This includes the formating required for the reader to split and read it.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"     * @return a formatted string representation of this object. ","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    public String formatDataLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        return \"Deadlines|\" + super.getCompleted() + \"|\" + super.command + \"|\" + this.endDateTime.format(DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Deadlines.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"     * This includes an indicator that this is a Deadlines object.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"     * @return a string representation of this Deadlines object.","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        String s \u003d \"[D]\" + super.toString() + \"(by: \" + this.endDateTime.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        return s;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"     * Executes the necessary action created from the parsed results. ","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"     * In this case, will add the Deadline object to the TaskStorage of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskStorage The storage space where the action will take place.","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    public String execute(TaskStorage taskStorage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        String printMessage \u003d \"Gotchu! I\u0027ve added this task:\";","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        printMessage +\u003d \"\\n\" + this + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        printMessage +\u003d \"You now have \" + taskStorage.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"        return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":84}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents a Events Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * This class is the representation of a Events task.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * It extends from its parent class the Task class.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    private String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    private String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    final static DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    public static final String TASK_TYPE \u003d \"event\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a Events object.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"     * Will call the super constructor with the task name variable.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     * @param c The name of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"     * @param from The start of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"     * @param to The end of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    public Event(String c, String from, String to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        super(c);","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        this.from \u003d from.split(\"from \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        this.to \u003d to.split(\"to \")[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(from.split(\"from \")[1].trim(), DATE_FORMAT);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        this.toDateTime \u003d LocalDateTime.parse(to.split(\"to \")[1].trim(), DATE_FORMAT);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"    public Event(String c, String from, String to, String mark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        super(c);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        this.from \u003d from.split(\"from \")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        this.to \u003d to.split(\"to \")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(from.split(\"from \")[1].trim(), DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"        this.toDateTime \u003d LocalDateTime.parse(to.split(\"to \")[1].trim(), DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"            super.mark();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Events object for storage in DataWriter.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"     * This includes the formating required for the reader to split and read it.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"     * @return a formatted string representation of this object. ","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"    public String formatDataLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        return \"Events|\" + super.getCompleted() + \"|\" + super.command + \"|from \" + this.from + \"|to \" + this.to ;","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Events.","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"     * This includes an indicator that this is a Events object.","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"     * @return a string representation of this Events object.","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        String s \u003d \"[E]\" + super.toString() + \"(from: \" + this.fromDateTime.format(DATE_FORMAT) + \" to: \" + this.toDateTime.format(DATE_FORMAT) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        return s;","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"     * Executes the necessary action created from the parsed results. ","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * In this case, will add the Event object to the TaskStorage of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskStorage The storage space where the action will take place.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    public String execute(TaskStorage taskStorage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        String printMessage \u003d \"Gotchu! I\u0027ve added this task:\";","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        printMessage +\u003d \"\\n\" + this + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"        printMessage +\u003d \"You now have \" + taskStorage.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"        return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jaspertzx":85}},{"path":"src/main/java/task/IncorrectTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents an incorrect task when parsing input.","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * This object is used to handle situations where the input is not valid or recognized.","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import parser.ParseExecutionable;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"public class IncorrectTask implements ParseExecutionable{","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"    private String message;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a ActionTask object.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"     * Will save the error message in it to print when executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"     * @param message The error message to print.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    public IncorrectTask(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     * To execute the necessary action by printing out the error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskStorage The storage space where the action will take place.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    public String execute(TaskStorage taskStorage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        return this.message;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":32}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents a generic Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * This class acts as a base for all specific Task types (e.g., Event, Todo, Deadline).","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * It can be extended to create the corresponding Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import parser.ParseExecutionable;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"public abstract class Task implements ParseExecutionable{","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"    String command;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    boolean completed;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Task for storage in DataWriter.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"     * This includes the formating required for the reader to split and read it.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"     * @return a formatted string representation of this object. ","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    public abstract String formatDataLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a Task object with the task name.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the completed to a default value of false.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"     * @param command The name of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    public Task(String command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     * Changes the Task\u0027s completedness to marked.","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"     * Changes the completedness to true.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     * Changes the Task\u0027s completedness to unmarked.","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"     * Sets the completedness of the object to false.","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    public String getCompleted() {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"        if (this.completed) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"            return \"1\";","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"        return \"0\";","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"     * This includes the completedness indicator and the Task name.","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"     * @return a string representation of this Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        String checkIfCompleted \u003d \"X\";","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        if (!this.completed) {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"            checkIfCompleted \u003d \" \";","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        String s \u003d \"[\"+ checkIfCompleted +\"] \" + this.command;","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"        return s;","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jaspertzx":75}},{"path":"src/main/java/task/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * This Object stores all Task objects created in the main interface.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * Uses the ArrayList data structure to store the Task, and allows for manipulation,","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * such as addition, deletion, and editing Tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import util.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"public class TaskStorage {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    public ArrayList\u003cTask\u003e sl;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"     * Constructs an empty ArrayList to store Task objects.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    public TaskStorage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"        this.sl \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    public TaskStorage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"            this.sl \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        else {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"            this.sl \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"     * Adds an Task object to the end of the ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     * @param t The Task object to be added to the ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        this.sl.add(t);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"     * Removes an Task object from the ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * @param id The id number of element to be removed from the ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"    public String removeTask(int id) {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        Task t;","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"            t \u003d this.sl.get(id - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"            return Messages.MESSAGE_NO_SUCH_ELEMENTS;","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        this.sl.remove(id - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"        return t.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"     * Edits the specified Task to change its completedness.","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"     * @param id The id number of element to be edited.","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"     * @param mark To mark as complete or to unmark.","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"    public String markTask(int id, boolean mark) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        Task t;","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"            t \u003d this.sl.get(id - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"            return Messages.MESSAGE_NO_SUCH_ELEMENTS;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        if (mark) {","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"            t.mark();","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"        else {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"            t.unmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"        return t.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"     * Returns the size of the ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"    public int size() {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"        return this.sl.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this TaskStorage.","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"     * This includes all the Task name, and conditions of each task.","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"     * @return a string representation of this TaskStorage.","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"        String totalAns \u003d \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"        for (int i \u003d 0; i \u003c sl.size(); i ++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"            totalAns +\u003d (i + 1) + \".\" + sl.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"            if (i !\u003d sl.size() - 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"                totalAns +\u003d \"\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"        return totalAns;","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jaspertzx":101}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents a ToDo Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * This class is the representation of a Todo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * It extends from its parent class the Task class.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"    public static final String TASK_TYPE \u003d \"todo\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"     * Will call the super constructor with the task name variable.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"     * @param c The name of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    public ToDo(String c) {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"        super(c);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    public ToDo(String c, String mark) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        super(c);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"        if (mark.equals(\"1\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"            super.mark();","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this Todo object for storage in DataWriter.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     * This includes the formating required for the reader to split and read it.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"     * @return a formatted string representation of this object. ","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"    public String formatDataLine() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        return \"ToDo|\" + super.getCompleted() + \"|\" + super.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"     * Returns a string representation of this ToDo.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"     * This includes an indicator that this is a ToDo object.","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"     * @return a string representation of this ToDo object.","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        String s \u003d \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        return s;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"     * Executes the necessary action created from the parsed results. ","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"     * In this case, will add the ToDo object to the TaskStorage of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"     * @param taskStorage The storage space where the action will take place.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"    public String execute(TaskStorage taskStorage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"        String printMessage \u003d \"Gotchu! I\u0027ve added this task:\";","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"        printMessage +\u003d \"\\n\" + this +\"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"        printMessage +\u003d \"You now have \" + taskStorage.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"        return printMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jaspertzx":66}},{"path":"src/main/java/util/DataReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents a FileReader object for Duke bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * Handles reading of text data from files within the /resources directory, at data.txt.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * Class is created to abstract the details of file output operations.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package util;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"import task.TaskStorage;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"import task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"public class DataReader {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    private static final String SAVED_DATA_FILE \u003d \"data.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    private static final String SAVED_DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    final static DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"     * Reads the file line-by-line to create an ArrayList of Task and TaskStorage object.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"     * Uses the convertDataFile to help convert each String line to it\u0027s corresponding Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"     * @return A TaskStorage object with the saved tasks in it.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"    public TaskStorage readDataFile(TextUi textUi) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"        String currentDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(currentDirectory, SAVED_DATA_DIRECTORY, SAVED_DATA_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        ","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        boolean fileExists \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        ArrayList\u003cString\u003e fileLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        try(BufferedReader br \u003d new BufferedReader(new FileReader(path.toString()))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"                fileLines.add(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"            fileExists \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        if (fileExists) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"            ArrayList\u003cTask\u003e taskList \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"                taskList \u003d convertDataFile(fileLines);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"                textUi.printMessage(Messages.MESSAGE_SAVE_CORRUPTED);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"                return new TaskStorage();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Jaspertzx"},"content":"            if (taskList \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"Jaspertzx"},"content":"                textUi.printMessage(Messages.MESSAGE_SAVE_CORRUPTED);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Jaspertzx"},"content":"                return new TaskStorage();","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"Jaspertzx"},"content":"            TaskStorage taskStorage \u003d new TaskStorage(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"Jaspertzx"},"content":"            if (taskStorage.size() !\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"Jaspertzx"},"content":"                String message \u003d Messages.MESSAGE_SAVE_FOUND + \"\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Jaspertzx"},"content":"                textUi.printMessage(message + taskStorage);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Jaspertzx"},"content":"            return taskStorage;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Jaspertzx"},"content":"        else {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Jaspertzx"},"content":"            return new TaskStorage();","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Jaspertzx"},"content":"     * Takes in an ArrayList of Strings, and converts each string to a Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Jaspertzx"},"content":"     * Saves the tasks into a ArrayList that will be used to create a TaskStorage object in the future.","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Jaspertzx"},"content":"     * @return An ArrayList of Tasks that were saved in the data.txt file.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Jaspertzx"},"content":"    public ArrayList\u003cTask\u003e convertDataFile(ArrayList\u003cString\u003e s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Jaspertzx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Jaspertzx"},"content":"        for (String line: s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Jaspertzx"},"content":"            Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Jaspertzx"},"content":"            String[] splitLines \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Jaspertzx"},"content":"            if (splitLines[0].equals(\"ToDo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Jaspertzx"},"content":"                task \u003d new ToDo(splitLines[2], splitLines[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"Jaspertzx"},"content":"            else if (splitLines[0].equals(\"Deadlines\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"Jaspertzx"},"content":"                task \u003d new Deadline(splitLines[2], splitLines[3], splitLines[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"Jaspertzx"},"content":"            else if (splitLines[0].equals(\"Events\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"Jaspertzx"},"content":"                task \u003d new Event(splitLines[2], splitLines[3], splitLines[4], splitLines[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"Jaspertzx"},"content":"            else {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"Jaspertzx"},"content":"                return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"Jaspertzx"},"content":"            taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Jaspertzx"},"content":"        return taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Jaspertzx"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Jaspertzx"},"content":"     * ","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Jaspertzx"},"content":"     * @param the String to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Jaspertzx"},"content":"     * @return the corrsponding LocalDateTime object created.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Jaspertzx"},"content":"    public LocalDateTime parseDate(String dateString) {","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Jaspertzx"},"content":"        return LocalDateTime.parse(dateString, DATE_FORMAT);","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Jaspertzx"},"content":"    } ","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jaspertzx":109}},{"path":"src/main/java/util/DataWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * Represents a FileWriter object for Duke bot.","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" * Handles writing of created Tasks information to the /resources directory, at data.txt.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":" * Class is created to abstract the details of file input operations.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"package util;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"import task.TaskStorage;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"public class DataWriter {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    private static final String SAVED_DATA_FILE \u003d \"data.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    private static final String SAVED_DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"     * Writes into the /resources/data.txt file line-by-line to save the created Tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"     * Note that it will override the text file, thus ensuring that it\u0027s updated to the latest copy.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"     * @return A boolean value on whether the writing is successful or not.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    public boolean saveData(TaskStorage taskStorage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        String currentDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        java.nio.file.Path directory \u003d java.nio.file.Paths.get(currentDirectory, SAVED_DATA_DIRECTORY);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        File f \u003d new File(directory.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        f.mkdir();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(currentDirectory, SAVED_DATA_DIRECTORY, SAVED_DATA_FILE);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        ","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        ArrayList\u003cTask\u003e taskList \u003d taskStorage.sl;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        boolean isSuccessful \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(path.toString(), false))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"                writer.write(task.formatDataLine());","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"            isSuccessful \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        return isSuccessful;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Jaspertzx":49}},{"path":"src/main/java/util/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":" * The Message class provides a centralized repository of  strings used throughout ","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":" * the application to display various forms of messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"package util;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"public class Messages {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_WRONG_PARAMETERS \u003d \"Incorrect parameters\";","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_NO_SUCH_ELEMENTS \u003d \"Index number does not exists, please use an index that exists in list.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"There are no elements in the list, try adding some!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_SAVE_CORRUPTED \u003d \"Save file has been corrupted, starting anew.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_SAVE_FOUND \u003d \"Save file found and loaded.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_END_LINE \u003d \"______________________________________\";","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    public static final String MESSAGE_START_BOT \u003d  \"Hellooo! I\u0027m \\n\" ","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    + \"  ____        _     ____        _   \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    + \" |  _ \\\\      | |   |  _ \\\\      | |  \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    + \" | |_) | ___ | |__ | |_) | ___ | |_ \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    + \" |  _ \u003c / _ \\\\| \u0027_ \\\\|  _ \u003c / _ \\\\| __|\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    + \" | |_) | (_) | |_) | |_) | (_) | |_ \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    + \" |____/ \\\\___/|_.__/|____/ \\\\___/ \\\\__|\\n\" ","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    +\"As I am a Chatbot, I therefore have no arms.\\n\" + ","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    \"Knock knock, who\u0027s there? Definitely not BobBot!\" ","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    + \"Jokes aside, what can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":25}},{"path":"src/main/java/util/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"package util;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"public class TextUi {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"    private Scanner textReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"    public TextUi() {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"        this.textReader \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"    public String readNextLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"        return this.textReader.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    public void printMessage(String messages) {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"        System.out.println(messages);","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"        System.out.println(Messages.MESSAGE_END_LINE);","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    public void closeReader() {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"        this.textReader.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Jaspertzx":24}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    public void deadlineConstructTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"2025-01-01 0000\", dateFormat);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new Deadline(\"Homework Test\", dueDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(task.toString(), \"[D][ ] Homework Test(by: \" + dueDate.format(dateFormat)+ \")\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"    public void deadlineFormatPrintTest(){","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        LocalDateTime dueDate \u003d LocalDateTime.parse(\"2025-01-01 0000\", dateFormat);","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new Deadline(\"Homework Test 2\", dueDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        task.mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(task.formatDataLine(), \"Deadlines|\" + task.getCompleted() + \"|Homework Test 2|\" + dueDate.format(dateFormat));","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jaspertzx":32}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import parser.ParseExecutionable;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import task.TaskStorage;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"    public void parserReadTodoTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"        ParseExecutionable parseExecutionable \u003d parser.parseInput(\"todo Homework!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"        parseExecutionable.execute(taskStorage);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(taskStorage.size(), 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    public void parserMarkTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new ToDo(\"Homework Test\");","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        ParseExecutionable parseExecutionable \u003d parser.parseInput(\"mark 1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        parseExecutionable.execute(taskStorage);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(taskStorage.toString(), \"1.\" + task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jaspertzx":33}},{"path":"src/test/java/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"import task.TaskStorage;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"public class TaskStorageTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"    public void taskStorageTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"        Task t1Task \u003d new ToDo(\"Test\");","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        Task t2Task \u003d new ToDo(\"Test 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"        Task t3Task \u003d new ToDo(\"Test 3\");","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t1Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t2Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t3Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(taskStorage.size(), 3);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"    public void taskStorageDeleteTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"        Task t1Task \u003d new ToDo(\"Test\");","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"        Task t2Task \u003d new ToDo(\"Test 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"        Task t3Task \u003d new ToDo(\"Test 3\");","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t1Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t2Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t3Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.removeTask(2);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        String checkAnswer \u003d \"1.\" + t1Task + \"\\n2.\" + t3Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(taskStorage.toString(), checkAnswer);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"Jaspertzx"},"content":"    public void taskStorageMarkTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"Jaspertzx"},"content":"        TaskStorage taskStorage \u003d new TaskStorage();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"Jaspertzx"},"content":"        Task t1Task \u003d new ToDo(\"Test\");","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"Jaspertzx"},"content":"        Task t2Task \u003d new ToDo(\"Test 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"Jaspertzx"},"content":"        Task t3Task \u003d new ToDo(\"Test 3\");","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t1Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t2Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.addTask(t3Task);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"Jaspertzx"},"content":"        taskStorage.markTask(3, true);","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(t3Task.getCompleted(), \"1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"Jaspertzx"},"content":"    ","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jaspertzx":55}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"import task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"Jaspertzx"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"Jaspertzx"},"content":"    public void todoConstructTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new ToDo(\"Homework Test\");","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(task.toString(), \"[T][ ] Homework Test\");","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"Jaspertzx"},"content":"    public void taskMarkTest(){","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new ToDo(\"Homework Test 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"Jaspertzx"},"content":"        task.mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(task.toString(), \"[T][X] Homework Test 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"Jaspertzx"},"content":"    public void taskUnmarkTest(){","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new ToDo(\"Homework Test 3\");","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"Jaspertzx"},"content":"        task.mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"Jaspertzx"},"content":"        task.unmark();","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(task.toString(), \"[T][ ] Homework Test 3\");","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Jaspertzx"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Jaspertzx"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Jaspertzx"},"content":"    public void taskFormatPrintTest(){","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Jaspertzx"},"content":"        Task task \u003d new ToDo(\"Homework Test 4\");","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"Jaspertzx"},"content":"        task.mark();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"Jaspertzx"},"content":"        task.unmark();","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"Jaspertzx"},"content":"        assertEquals(task.formatDataLine(), \"ToDo|\" + task.getCompleted() + \"|Homework Test 4\");","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"Jaspertzx"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"Jaspertzx"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"Jaspertzx":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jaspertzx"},"content":"deadline cs2103 /by today","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"Jaspertzx"},"content":"event concert /from today /to tomorrow","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"Jaspertzx"},"content":"todo homework","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Jaspertzx"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Jaspertzx"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Jaspertzx"},"content":"delete 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Jaspertzx"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Jaspertzx"},"content":"unmark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Jaspertzx"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Jaspertzx":9}}]
