[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"# Using AI","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"When starting on duke in week 2,","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"I wanted to try to learn how to effectively use","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"GitHub CoPilot to help me write code.","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"I had heard about it from a friend and was curious","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"to see how it would work.","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"(This Markdown file was","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"written with CoPilot\u0027s help.)","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"I also used ChatGPT for refactoring to use handlers.","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":12}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"# duke project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drustanyjt":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drustanyjt":21,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":" * The Duke program is a chatbot that helps users to keep track of their tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":" * It can store and retrieve tasks from a file, and perform operations such as adding, deleting,","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":" * and marking tasks as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"public class Duke {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"     * Main method to run the Duke program.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        Application.launch(DukeApp.class);","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"drustanyjt":18,"-":1}},{"path":"src/main/java/duke/DukeApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":" * The Main app for Fluffy.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"public class DukeApp extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    private String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for DukeApp.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    public DukeApp() {","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        ui \u003d new Ui(this::handler);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"     * A function for dealing with user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"     * @param input the input from a user.","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"     * @return the result to show as a string.","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    public String handler(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        PrintStream newOut \u003d new PrintStream(outContent);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        System.setOut(newOut);","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"            if (c.isExit()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"                ui.exit();","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        } finally {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"        return outContent.toString();","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"        ui.start(stage);","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"drustanyjt":71}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":" * Represents an exception specific to Duke.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"drustanyjt":15}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to exit the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to exit the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     * @return Whether the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to be executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * @return Whether the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":28}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to add a deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to add a deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskAdded(deadline, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"     * @return Whether the command is an exit command.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    protected int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to delete a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskDeleted(task, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":41}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to add an event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public EventCommand(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to add an event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        tasks.addTask(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskAdded(event, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":47}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":" * The FindCommand class is a subclass of Command and represents a command to find tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * It takes in a keyword to search for in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    private String keyword;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * Constructs FindCommand object with keyword as a String.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    public FindCommand(String[] commandParts) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        this.keyword \u003d commandParts[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to find tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * It filters the tasks in the task list based on the keyword and shows the found tasks using a lambda expression.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks TaskList object representing the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     * @param ui Ui object representing the user interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"     * @param storage object representing the storage of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        TaskList foundTasks \u003d tasks.filterTasks(task -\u003e task.getDescription().contains(keyword));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to list all tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":27}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to mark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        tasks.getTask(index).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":39}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to add a todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskAdded(todo, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * Represents a command to unmark a task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * Executes the command to mark a task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * @param storage The storage to save the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the execution of the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        tasks.getTask(index).markAsNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as undone:\\n\" + tasks.getTask(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":39}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":" * Represents a parser to parse user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * @param fullCommand The full user input.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     * @return The corresponding command.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        String command \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        switch (command) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"            return parseTodoCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"            return parseDeadlineCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"            return parseEventCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"        case UNMARK_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"            return parseUnmarkCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"        case MARK_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"            return parseMarkCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"            return parseDeleteCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        case BYE_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"        case FIND_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"            return new FindCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"    static Command parseTodoCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"        return new TodoCommand(commandParts[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"    static Command parseDeadlineCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"        String[] deadlineParts \u003d commandParts[1].split(\" /by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"        if (deadlineParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The date of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"        LocalDate by;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"            by \u003d LocalDate.parse(deadlineParts[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"        return new DeadlineCommand(deadlineParts[0], by);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"    static Command parseEventCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"        String[] eventParts \u003d commandParts[1].split(\" /from \");","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"        if (eventParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The start date of an event cannot be empty. \"","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"drustanyjt"},"content":"                    + \"Please use /from to specify the start date.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"drustanyjt"},"content":"        String[] eventParts2 \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"drustanyjt"},"content":"        if (eventParts2.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The end date of an event cannot be empty. \"","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"drustanyjt"},"content":"                    + \"Please use /to to specify the end date.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"drustanyjt"},"content":"        LocalDate from;","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"drustanyjt"},"content":"        LocalDate to;","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"drustanyjt"},"content":"            from \u003d LocalDate.parse(eventParts2[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"drustanyjt"},"content":"            to \u003d LocalDate.parse(eventParts2[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"drustanyjt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"drustanyjt"},"content":"        return new EventCommand(eventParts[0], from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"drustanyjt"},"content":"    static Command parseMarkCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The index of a mark cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"drustanyjt"},"content":"        int indexToMark;","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"drustanyjt"},"content":"            indexToMark \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"drustanyjt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for marking. Please provide an integer.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"drustanyjt"},"content":"        return new MarkCommand(indexToMark);","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"drustanyjt"},"content":"    static Command parseUnmarkCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The index of an unmark cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"drustanyjt"},"content":"        int indexToUnmark;","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"drustanyjt"},"content":"            indexToUnmark \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"drustanyjt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for unmarking. Please provide an integer.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"drustanyjt"},"content":"        return new UnmarkCommand(indexToUnmark);","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"drustanyjt"},"content":"    static Command parseDeleteCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The index of a delete cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":143,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"drustanyjt"},"content":"        int indexToDelete;","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":146,"author":{"gitId":"drustanyjt"},"content":"            indexToDelete \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":147,"author":{"gitId":"drustanyjt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for deletion. Please provide an integer.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":149,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"drustanyjt"},"content":"        return new DeleteCommand(indexToDelete);","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":152}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":" * Represents a storage for saving and loading tasks to and from the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * @param filePath The file path of the storage.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * Saves data to the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the saving of the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"                fileWriter.write(encodeTask(task) + \"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"     * Loads data from the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"     * @return The list of tasks loaded from the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the loading of the tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"                tasks.add(decodeTask(line));","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Error reading from file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"     * Encodes task to a String for saving to the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"     * Prepends the type of task to the task\u0027s fileString.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"     * @param task the Task to be encoded.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"     * @return Encoded task as a String.","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"    public String encodeTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"        return task.getType() + \" | \" + task.toFileString();","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"     * Decodes task from a String read from the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"     * Extracts the type of task from the encoded task String and creates the task accordingly.","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"     * @param encodedTaskString the encoded task String read from the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"     * @return Decoded task.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If an error occurs during the decoding of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"    public Task decodeTask(String encodedTaskString) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d encodedTaskString.split(\" \\\\| \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"        String taskType \u003d taskDetails[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"        String taskFileString \u003d taskDetails[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"drustanyjt"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"drustanyjt"},"content":"            case \"T\":","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"drustanyjt"},"content":"                return Todo.todoFromFileString(taskFileString);","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"drustanyjt"},"content":"            case \"D\":","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"drustanyjt"},"content":"                return Deadline.deadlineFromFileString(taskFileString);","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"drustanyjt"},"content":"            case \"E\":","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"drustanyjt"},"content":"                return Event.eventFromFileString(taskFileString);","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"drustanyjt"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"drustanyjt"},"content":"                throw new DukeException(\"Error reading from file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":106}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    private final String TYPE \u003d \"D\";","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If the date is not in the correct format.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"     * @param by The date of the deadline.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"     * @param isDone Whether the deadline is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"    public String getType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"        return TYPE;","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"     * Returns the deadline in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"     * @return The deadline in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + TYPE + \"]\" + super.toString() + \" (by: \" + by.format(Task.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"     * Returns the deadline in the format to be saved in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"     * @return The deadline in the format to be saved in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"        return TYPE + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"     * Factory method to create a Deadline object from a file string.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"     * @param fileString The file string to be converted.","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"     * @return The Deadline object from the file string.","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"    public static Deadline deadlineFromFileString(String fileString) {","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"        boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d taskDetails[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"        LocalDate by \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"        return new Deadline(description, by, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":87}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If the date is not in the correct format.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"     * @param from The start date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"     * @param to The end date of the event.","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"     * @param isDone Whether the event is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"    public String getType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        return \"E\";","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"     * Returns the event in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"     * @return The event in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + getType() + \"]\" + super.toString() + \" (from: \" + from.format(Task.DATE_TIME_FORMATTER)","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"                + \" to: \" + to.format(Task.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"     * Returns the event in the format to be saved in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"     * @return The event in the format to be saved in the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"        return getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"     * Factory method to create an event from a file string.","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"     * @param fileString The file string to be converted to an event.","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"     * @return The event from the file string.","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"    public static Event eventFromFileString(String fileString) {","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"        boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d taskDetails[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"        LocalDate from \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"        LocalDate to \u003d LocalDate.parse(taskDetails[4]);","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"        return new Event(description, from, to, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":94}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":" * Represents a task.","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d false; // Task is not done by default","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        // Mark task as done","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        // Mark task as done","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"        // Return task description","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        return this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"     * Returns the task in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"     * @return The task in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"        // Return task status icon and description","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"     * Returns the task in the format to be saved to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"     * @return The task in the format to be saved to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"    public abstract String getType();","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"     * @return Whether the task is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":81}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for Todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * @param isDone Whether the todo is done.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public String getType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        return \"T\";","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     * Returns the todo in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * @return The todo in the format to be displayed to the user.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + this.getType() + \"]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"     * Returns the todo in the format to be saved to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"     * @return The todo in the format to be saved to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"        return this.getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"     * Factory method to create a todo from a file string.","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"     * @param fileString The file string to be converted to a todo.","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"     * @return The todo from the file string.","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"    public static Todo todoFromFileString(String fileString) {","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"        boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d taskDetails[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":60}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"     * Constructor for TaskList. Creates an empty list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"     * Deletes a task from the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The task number is out of bounds.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"     * Retrieves a task from the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"     * @param index The index of the task to be retrieved.","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"     * @return The task to be retrieved.","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"     * @throws DukeException If the index is out of bounds.","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The task number is out of bounds.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"     * Filters the tasks in the task list based on a lambda expression.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"     * @return A new TaskList object containing the filtered tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"    public TaskList filterTasks(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"            if (predicate.test(task)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"        return new TaskList(filteredTasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"     * Retrieves the size of the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"     * @return The size of the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":94}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.ui;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" * Encapsulates a person in a dialogue window.","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    private Label text;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     * Creates a DialogBox for displaying.","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"     * @param l The name of the person speaking.","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"     * @param iv Their user image.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"drustanyjt":55}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"public class Ui extends Application {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    private Image loki \u003d new Image(this.getClass().getResourceAsStream(\"/images/loki.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    private Image thor \u003d new Image(this.getClass().getResourceAsStream(\"/images/thor.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    private Function\u003cString, String\u003e commandHandler;","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"    public Ui() {","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    public Ui(Function\u003cString, String\u003e commandHandler) {","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"        this.commandHandler \u003d commandHandler;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        stage.show();","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"        stage.setTitle(\"Fluffy\");","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"drustanyjt"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"drustanyjt"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"drustanyjt"},"content":"        });","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"drustanyjt"},"content":"        showWelcome();","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"drustanyjt"},"content":"     * Exits the program.","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"drustanyjt"},"content":"    public void exit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"drustanyjt"},"content":"        System.exit(0);","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"drustanyjt"},"content":"     * Handles the user input and displays the response.","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"drustanyjt"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"drustanyjt"},"content":"        String userInputString \u003d userInput.getText();","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"drustanyjt"},"content":"        userSpeak(userInputString);","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"drustanyjt"},"content":"        fluffySpeak(getResponse(userInputString));","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"drustanyjt"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"drustanyjt"},"content":"     * Displays the response from User.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"drustanyjt"},"content":"     * @param message The response from User.","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"drustanyjt"},"content":"    public void userSpeak(String message) {","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"drustanyjt"},"content":"        Label response \u003d new Label(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"drustanyjt"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"drustanyjt"},"content":"                DialogBox.getUserDialog(response, new ImageView(loki))","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"drustanyjt"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"drustanyjt"},"content":"     * Displays the response from Fluffy.","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"drustanyjt"},"content":"     * @param message The response from Fluffy.","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"drustanyjt"},"content":"    public void fluffySpeak(String message) {","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"drustanyjt"},"content":"        Label response \u003d new Label(message);","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"drustanyjt"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"drustanyjt"},"content":"                DialogBox.getDukeDialog(response, new ImageView(thor))","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"drustanyjt"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":141,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"drustanyjt"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"drustanyjt"},"content":"        return commandHandler.apply(input);","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"drustanyjt"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"drustanyjt"},"content":"        fluffySpeak(\"Hello! I\u0027m Fluffy, \\nWhat can I do for you?\");","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"drustanyjt"},"content":"    public void setCommandHandler(Function\u003cString, String\u003e commandHandler) {","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"drustanyjt"},"content":"        this.commandHandler \u003d commandHandler;","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"drustanyjt"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":155,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"drustanyjt"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":159,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":160,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"drustanyjt"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"drustanyjt"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-04"},{"lineNumber":167,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Error loading file. Creating new file...\");","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":169,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"drustanyjt"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":171,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":172,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":173,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":174,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":175,"author":{"gitId":"drustanyjt"},"content":"     * Shows all tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":176,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks tasks to show.","lastModifiedDate":"2024-02-09"},{"lineNumber":177,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":178,"author":{"gitId":"drustanyjt"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":179,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":180,"author":{"gitId":"drustanyjt"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"drustanyjt"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":182,"author":{"gitId":"drustanyjt"},"content":"                System.out.println((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":183,"author":{"gitId":"drustanyjt"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":184,"author":{"gitId":"drustanyjt"},"content":"                showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":185,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":189,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":190,"author":{"gitId":"drustanyjt"},"content":"     * Shows the tasks that match the search keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":191,"author":{"gitId":"drustanyjt"},"content":"     * @param tasks The list of tasks that match the search keyword.","lastModifiedDate":"2024-02-04"},{"lineNumber":192,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":193,"author":{"gitId":"drustanyjt"},"content":"    public void showFoundTasks(TaskList tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":195,"author":{"gitId":"drustanyjt"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"drustanyjt"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":197,"author":{"gitId":"drustanyjt"},"content":"                System.out.println((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":198,"author":{"gitId":"drustanyjt"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":199,"author":{"gitId":"drustanyjt"},"content":"                showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":201,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":203,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":204,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":205,"author":{"gitId":"drustanyjt"},"content":"     * Shows the task that was added to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":206,"author":{"gitId":"drustanyjt"},"content":"     * @param task The task that was added to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":207,"author":{"gitId":"drustanyjt"},"content":"     * @param newSize The new size of the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":208,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"drustanyjt"},"content":"    public void showTaskAdded(Task task, int newSize) {","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":212,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":213,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":214,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":215,"author":{"gitId":"drustanyjt"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"drustanyjt"},"content":"     * Shows a deleted task.","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"drustanyjt"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":218,"author":{"gitId":"drustanyjt"},"content":"     * @param newSize The new size of the task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":220,"author":{"gitId":"drustanyjt"},"content":"    public void showTaskDeleted(Task task, int newSize) {","lastModifiedDate":"2024-02-04"},{"lineNumber":221,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":223,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":224,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":225,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":225}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":2}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import static duke.parser.Parser.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e parse(\"invalid\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_noStartDate_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\", \"description\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_noEndDate_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\", \"description /from 2022-01-01\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\", \"description /from 01-01-2022 /to 01-01-2023\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"   @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"   public void parseEventCommand_validCommand_eventCommandReturned() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"       String[] commandParts \u003d new String[]{\"event\", \"description /from 2022-01-01 /to 2023-01-01\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"       Command actual \u003d Parser.parseEventCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"       assertInstanceOf(EventCommand.class, actual);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"   }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":50}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    public void getType_returnsT() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(\"description\");","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        assertEquals(\"T\", todo.getType());","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public void constructor_correctlySetsValues() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(\"description\", true);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        assertEquals(\"description\", todo.getDescription());","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    public void toString_containsDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d \"description\";","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo.toString().contains(description));","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    public void toString_containsDescription_variations() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        String description1 \u003d \"description with spaces\";","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        Todo todo1 \u003d new Todo(description1);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo1.toString().contains(description1));","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        String description2 \u003d \"description_with_underscores\";","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        Todo todo2 \u003d new Todo(description2);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo2.toString().contains(description2));","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        String description3 \u003d \"description-with-hyphens\";","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        Todo todo3 \u003d new Todo(description3);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo3.toString().contains(description3));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":1}}]
