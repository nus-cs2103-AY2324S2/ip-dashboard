[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":15}},{"path":"src/main/java/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"import java.util.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"public class Luke {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"    static String[] validCommands \u003d {\"bye\", \"list\", \"unmark\", \"mark\", \"todo\", \"event\", \"deadline\", \"delete\"};","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"    private static boolean isCommandValid(String command) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"        for (String validCommand: validCommands) {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"            if (command.equals(validCommand)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"                return true;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"        return false;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"        String name \u003d \"Luke\";","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"        int noTasks \u003d 0;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"        Scanner scanner \u003d new Scanner (System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"            String[] splited \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"            String command \u003d splited[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"                if (!isCommandValid(command)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"                    throw new LukeException(\"Invalid command/task type.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"            } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"            switch (command) {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"                case \"list\":","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"                    for (int i \u003d 0; i \u003c noTasks; i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"                        System.out.println((i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"                    try {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"                        int markIndex \u003d Integer.valueOf(splited[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"                        if (markIndex \u003c\u003d 0 || markIndex \u003e noTasks) {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Task does not exist. Please give a valid task number.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"                        Task markTask \u003d taskList.get(markIndex - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"                        markTask.setToDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"                        System.out.println(markTask.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"                    } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"                    try {","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"                        int unmarkIndex \u003d Integer.valueOf(splited[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"                        if (unmarkIndex \u003c\u003d 0 || unmarkIndex \u003e noTasks) {","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Task does not exist. Please give a valid task number.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"                        Task unmarkTask \u003d taskList.get(unmarkIndex - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"                        unmarkTask.setToNotDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"                        System.out.println(unmarkTask.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"                    } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"                    try {","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"                        if (input.substring(4).trim().isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. The description cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"                        Todo todo \u003d new Todo(input.substring(5));","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"                        taskList.add(todo);","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"                        System.out.println(todo.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"                        noTasks++;","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Now you have \" + noTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"                    } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"                    try {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"                        String[] deadlineSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"                        if (deadlineSplit.length \u003c 2","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"                                || !deadlineSplit[1].substring(0,2).equals(\"by\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. Please follow the format for deadline tasks.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"                        if (deadlineSplit[0].substring(9).trim().isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. The description cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"                        if (deadlineSplit[1].trim().length() \u003c\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. The deadline cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"                        String deadlineDescription \u003d deadlineSplit[0].substring(9);","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"                        String by \u003d deadlineSplit[1].substring(3);","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"                        Deadline deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"LWS49"},"content":"                        taskList.add(deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"                        System.out.println(deadline.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"LWS49"},"content":"                        noTasks++;","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Now you have \" + noTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"                    } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"                case \"event\":","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"                    try {","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"                        String[] eventSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"                        if (eventSplit.length \u003c 3","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"LWS49"},"content":"                                || !eventSplit[1].substring(0,4).equals(\"from\")","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"LWS49"},"content":"                                || !eventSplit[2].substring(0,2).equals(\"to\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. Please follow the format for event tasks.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"LWS49"},"content":"                        if (eventSplit[0].substring(6).trim().isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. The description cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"LWS49"},"content":"                        if (eventSplit[1].trim().length() \u003c\u003d 4 ) {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. The from section cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"LWS49"},"content":"                        if (eventSplit[2].trim().length() \u003c\u003d 2 ) {","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Invalid command. The to section cannot be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"LWS49"},"content":"                        String eventDescription \u003d eventSplit[0].substring(6);","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"LWS49"},"content":"                        String from \u003d eventSplit[1].substring(5);","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"LWS49"},"content":"                        String to \u003d eventSplit[2].substring(3);","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"LWS49"},"content":"                        Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"LWS49"},"content":"                        taskList.add(event);","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"LWS49"},"content":"                        System.out.println(event.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"LWS49"},"content":"                        noTasks++;","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Now you have \" + noTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"LWS49"},"content":"                    } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"LWS49"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"LWS49"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"LWS49"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"LWS49"},"content":"                    try {","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"LWS49"},"content":"                        int deleteIndex \u003d Integer.valueOf(splited[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"LWS49"},"content":"                        if (deleteIndex \u003c\u003d 0 || deleteIndex \u003e noTasks) {","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"LWS49"},"content":"                            throw new LukeException(\"Task does not exist. Please give a valid task number.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"LWS49"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"LWS49"},"content":"                        Task deleteTask \u003d taskList.get(deleteIndex - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"LWS49"},"content":"                        taskList.remove(deleteIndex - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"LWS49"},"content":"                        System.out.println(deleteTask.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"LWS49"},"content":"                        noTasks--;","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"LWS49"},"content":"                        System.out.println(\"Now you have \" + noTasks + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"LWS49"},"content":"                    } catch (LukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"LWS49"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"LWS49"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"LWS49"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"LWS49"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":168}},{"path":"src/main/java/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"    public LukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LWS49":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"    protected boolean done;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"    protected String name;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"    public Task (String name) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"        if (done) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"    public void setToDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    public void setToNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"delete 4","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"hehe","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"deadline read book by 3","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"deadline read book /start 3","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"deadline /by 3","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"deadline read book /by","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"event project meeting /from Mon 2pm to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"event project meeting /fro Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"event project meeting /fro Mon 2pm /until 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"event /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"javac  -cp C:\\Users\\user\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\user\\ip\\bin C:\\Users\\user\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"java -classpath C:\\Users\\user\\ip\\bin Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LWS49":2,"-":19}}]
