[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":" Display                                                      |        Name         |            Github Profile             |                      Homepage                      ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         ","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":" ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) ","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Windofbitter":2,"-":8}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"instructions on how to use it.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"   first)","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"   like the below as the output:","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Windofbitter":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"checkstyle {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    testImplementation \u0027org.mockito:mockito-core:5.3.1\u0027","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Windofbitter":20,"-":40}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"T | 0 | hello ","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"T | 0 | hi ","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"Windofbitter":2}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.StorageOperationException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":" * The Duke program implements a chat bot that allows users to manage their tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"public class Duke {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    private Boolean isExit \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    private String loadingExceptionMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the Duke program, it would create a new Ui, and load tasks that users have from storage","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    public Duke() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"            ui.getLoadingExceptionMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            loadingExceptionMessage \u003d e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    public String getInitMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        return this.ui.getWelcomeMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    public String getLoadingExceptionMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        return this.loadingExceptionMessage;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"            isExit \u003d command.isExit();","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"            return ui.getResponse();","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"        return this.isExit;","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":63}},{"path":"src/main/java/seedu/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.StorageOperationException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a bye command initiated by the user. \u003ccode\u003eByeCommand\u003c/code\u003e would indicate the command is a command","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" * to exit the program and save the tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"bye: it would quit the chatbot and saves your tasks.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"            + \"Example: bye\";","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * Sets the variable representing whether the command wants to exit to true and save all tasks to the file","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"            super.isExit \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"            storage.save(taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            ui.generateErrorMessage(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        } finally {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"            ui.generateGoodByeMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":35}},{"path":"src/main/java/seedu/duke/command/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":" * Represents a check command initited by the user. \u003ccode\u003eCheckCommand\u003c/code\u003e would check for tasks due on a specific","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":" * date","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"check\";","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"check: it checks whether there are any task due to a specific date.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"            + \"Example: check 2022-01-01\";","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    private LocalDate checkDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the CheckCommand","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param checkDate the date that the user wants to check","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    public CheckCommand(LocalDate checkDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        this.checkDate \u003d checkDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * Checks the tasks due on a specific date and then display it to the user","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        List\u003cTask\u003e dueTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"            if (!task.getHasDone()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"                if (task instanceof Deadline \u0026\u0026 ((Deadline) task).getDeadline().toLocalDate().isEqual(this.checkDate)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"                    dueTaskList.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"                if (task instanceof Event \u0026\u0026 ((Event) task).getEndDate().toLocalDate().isEqual(this.checkDate)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"                    dueTaskList.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        ui.generateDueTaskListResponse(dueTaskList, checkDate);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":63}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" * Represents a Command initiated by the user","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * Execute the command","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * @throws DukeException","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     * Returns whether the Command is an exit command","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @return Whether the command is an exit command","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":32}},{"path":"src/main/java/seedu/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" * Represents a deadline command initiated by the user. \u003ccode\u003eDeadLineCommand\u003c/code\u003e would creates a deadline task","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"deadline: it creates a deadline task \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"            + \"Example: deadline SU 2103T /by 2024-02-06 18:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the deadline task","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * @param description description of the deadline task","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * @param deadline deadline of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    public DeadlineCommand(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * Creates a deadline task, save it to the task list and then display the result to the user","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        Deadline deadlineTask \u003d new Deadline(description, false, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        ui.generateNewTaskResponse(deadlineTask, taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":42}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" * Represents a delete command initiated by the user. \u003ccode\u003eDeleteCommand\u003c/code\u003e would delete a task in the task list","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":" * with the corresponding number.","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"delete: delete a task on the list.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"            + \"Example: delete 1\";","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    private int taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the DeleteCommand","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * @param taskNumber The task number in the list to be deleted","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * Deletes a task in the list with corresponding list number","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * @throws InvalidInputException if the task number given is out of the list","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getListSize()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_INPUT_VALUE, \"you can only mark task that are listed\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        taskList.deleteTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        ui.generateDeleteTaskResponse(task, taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":50}},{"path":"src/main/java/seedu/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":" * Represents an event command initiated by the user. \u003ccode\u003eEventCommand\u003c/code\u003e would create an event task","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"event: it creates an event task.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"            + \"Example: event foo /from 2022-01-01 10:00 /to 2022-01-01 18:00\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the event command","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     * @param startDate   The start date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param endDate     The end date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    public EventCommand(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     * Creates an event task and add it to the TaskList, then show the result to the user.","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     * @throws InvalidInputException If the start date is later than the end date","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(String.format(Messages.MESSAGE_INVALID_INPUT_VALUE,","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"                    \"Event start date cannot be after the end date\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"        Event event \u003d new Event(description, false, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        ui.generateNewTaskResponse(event, taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":57}},{"path":"src/main/java/seedu/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":" * Represents a find command initiated by the user. \u003ccode\u003eFindCommand\u003c/code\u003e would find tasks that match a keyword","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":" * and display it to the users.","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"find: finds tasks that match a keyword.\\n Example: find book\";","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    private String keyword;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the FindCommand","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     * @param keyword The keyword of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * Finds the tasks that match the keyword and then display them to the user","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        Pattern pattern \u003d Pattern.compile(\".*\" + keyword + \".*\");","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"            Matcher matcher \u003d pattern.matcher(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        ui.generateFindResultResponse(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"Windofbitter":56}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents a list command initiated by the user. \u003ccode\u003eListCommand\u003c/code\u003e would list all tasks that the users have.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \":\" + \"list all tasks.\\n\" + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * Shows the tasks that the users have","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        ui.generateTaskList(taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":27}},{"path":"src/main/java/seedu/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" * Represents a mark command initiated by the user. \u003ccode\u003eMarkCommand\u003c/code\u003e would mark a task as done","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"mark: marks a task in the list as completed by taking \"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"            + \"a numerical value input.\\n\" + \"Example mark 1\";","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private int taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the MarkCommand","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * @param taskNumber The task number in the list to be marked as done","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * Marks the selected task as done and show the result to the user using ui","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @throws InvalidInputException If user keyed in task number out of range","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getListSize()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_INPUT_VALUE, \"you can only mark task that are listed\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        task.setHasDone(true);","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        ui.generateMarkAsDoneResponse(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":48}},{"path":"src/main/java/seedu/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" * Represents a Todo command initiated by the user. \u003ccode\u003eTodoCommand\u003c/code\u003e would add an new todo task to the TaskList.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"todo: create an todo task.\\n Example: todo SU 2103T\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the TodoCommand","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param description Description of the Todo task","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     * Adds a todo task to the TaskList and show the result to the users using ui","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        Todo todo \u003d new Todo(this.description, false);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        ui.generateNewTaskResponse(todo, taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":39}},{"path":"src/main/java/seedu/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":" * Represents an unmark command initiated by the user. \u003cCode\u003eUnmarkCommand\u003c/Code\u003e corresponds to a command that","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":" * user would mark a task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"unmark: marks a task in the list as uncompleted by taking\"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"            + \" a numerical value input.\\n\" + \"Example mark 1\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    private int taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the unmark command","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * @param taskNumber the task number in the list that would mark as not done","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * Marks the task with corresponds number in the list to be not done and show the result using ui.","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * @param ui","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @param storage","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * @throws InvalidInputException If user keys in number that is not in the range of the list","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getListSize()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_INPUT_VALUE, \"you can only mark task that are listed\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        task.setHasDone(false);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        ui.generateMarkAsNotDoneResponse(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":49}},{"path":"src/main/java/seedu/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.common;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Contains message format to be used when formatting exception messages.","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"public class Messages {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Bro, you have entered the command format wrong. \\n %s\";","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    public static final String MESSAGE_INVALID_INPUT_VALUE \u003d","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"            \"Bro, you seems to have entered invalid value for the command.\\n %s\";","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    public static final String MESSAGE_FAILED_STORAGE \u003d \"Bro, there is something wrong with the storage.\\n %s\";","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":11}},{"path":"src/main/java/seedu/duke/common/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.common;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * Represents the tasks created by the user and also implements methods to modify the tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of TaskList","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * @param tasks the initial tasks of the users","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Adds a task to the tasks created by the users","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task to be added","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * Deletes a task with a given index","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     * @param index The index of the task in the task list to be deleted","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     * Returns the number of tasks that users have","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * @return the number of tasks that users have","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    public int getListSize() {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     * Returns a task by giving the index of the task in the task list","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     * @param index The index of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     * @return The task queried","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":54}},{"path":"src/main/java/seedu/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception thrown when running the duke program","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the DukeException","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * @param errorMessage The error message","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":15}},{"path":"src/main/java/seedu/duke/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception when user key in command in invalid format","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"public class InvalidCommandFormatException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of InvalidCommandFormatException","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * @param message The error message to be shown","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public InvalidCommandFormatException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":14}},{"path":"src/main/java/seedu/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception when users key in invalid input value","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of InvalidInputException","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * @param errorMessage The error message to be shown","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":14}},{"path":"src/main/java/seedu/duke/exception/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception to be thrown when saving or loading the tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"public class StorageOperationException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of StorageOperationException","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     * @param errorMessage The error message to be shown","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    public StorageOperationException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":15}},{"path":"src/main/java/seedu/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents an exception to be thrown when user key in command that is not defined","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of UnknownCommandException","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"        super(\"Bro, it seems that you have entered the wrong duke.command. \"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"                + \"You can enter one of the following commands:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"                + \"1. list\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"                + \"2. mark\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"                + \"3. unmark\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"                + \"4. delete\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"                + \"5. todo\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"                + \"6. event\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"                + \"7. deadline\\n\"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"                + \"8. check\\n\"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"                + \"9. find\");","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":24}},{"path":"src/main/java/seedu/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"public class Launcher {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":9}},{"path":"src/main/java/seedu/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.gui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.gui.window.MainWindow;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayInitMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"            stage.show();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":33}},{"path":"src/main/java/seedu/duke/gui/component/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.gui.component;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.gui.window.MainWindow;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    private void flip() {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"        db.flip();","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        return db;","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":63}},{"path":"src/main/java/seedu/duke/gui/window/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.gui.window;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.gui.component.DialogBox;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    public void displayInitMessage() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        assert duke !\u003d null;","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        if (duke.getLoadingExceptionMessage() !\u003d null) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getLoadingExceptionMessage(), dukeImage));","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.getInitMessage(), dukeImage));","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"    @FXML","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"        if(duke.isExit()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"            return;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"        );","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"                    DialogBox.getDukeDialog(\"Duke left the chat room\", dukeImage)","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"            );","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"            PauseTransition pauseTransition \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"            pauseTransition.setOnFinished(event -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"            });","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"            pauseTransition.play();","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":80}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.ByeCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.CheckCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.EventCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.FindCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.TodoCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.UnknownCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":" * The Parser class implements a method that would parse the user input into Command","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"public class Parser {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern DEADLINE_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+?) /by (?\u003cdeadline\u003e.*)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern ONE_ARG_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003carg\u003e.+?)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern EVENT_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"            \"(?\u003cdescription\u003e.+?) /from (?\u003cstartDate\u003e.*) /to (?\u003cendDate\u003e.*)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     * Returns a Command object by parsing the user input using pre-defined pattern","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"     * @param input The user input","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * @return The Command object that is parsed using the input","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     * @throws UnknownCommandException       If user key in command word that is not defined","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * @throws InvalidCommandFormatException If user entered command with incorrect format","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    public static Command parse(String input) throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(input.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"            if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"                throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"                        String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"            return prepareTodo(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"            return prepareDeadline(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"            return prepareEvent(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"            return prepareMarkOrUnmark(arguments, MarkCommand.COMMAND_WORD);","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"            return prepareMarkOrUnmark(arguments, UnmarkCommand.COMMAND_WORD);","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"            if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"                throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"                        String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ByeCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"            return prepareDelete(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"        case CheckCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"            return prepareCheck(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"            return prepareFind(arguments);","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"        default:","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareTodo(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TodoCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Windofbitter"},"content":"        return new TodoCommand(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareFind(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"Windofbitter"},"content":"        return new FindCommand(arg);","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareDelete(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"Windofbitter"},"content":"            int taskNumber \u003d Integer.parseInt(arg);","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"Windofbitter"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"Windofbitter"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareDeadline(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d DEADLINE_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(arguments);","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeadlineCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"Windofbitter"},"content":"            String description \u003d matcher.group(\"description\");","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"Windofbitter"},"content":"            String deadline \u003d matcher.group(\"deadline\");","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"Windofbitter"},"content":"            LocalDateTime deadlineTime \u003d LocalDateTime.parse(deadline, dateTimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"Windofbitter"},"content":"            return new DeadlineCommand(description, deadlineTime);","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeadlineCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareMarkOrUnmark(String arguments, String commandWord) throws","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"Windofbitter"},"content":"            InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"Windofbitter"},"content":"        String commandUsage \u003d commandWord.equals(\"mark\") ? MarkCommand.COMMAND_USAGE : UnmarkCommand.COMMAND_USAGE;","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, commandUsage));","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":160,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":161,"author":{"gitId":"Windofbitter"},"content":"            int taskNumber \u003d Integer.parseInt(arg);","lastModifiedDate":"2024-01-26"},{"lineNumber":162,"author":{"gitId":"Windofbitter"},"content":"            return commandWord.equals(MarkCommand.COMMAND_WORD) ? new MarkCommand(taskNumber) : new UnmarkCommand(","lastModifiedDate":"2024-01-26"},{"lineNumber":163,"author":{"gitId":"Windofbitter"},"content":"                    taskNumber);","lastModifiedDate":"2024-01-26"},{"lineNumber":164,"author":{"gitId":"Windofbitter"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, commandUsage));","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":170,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareEvent(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":171,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d EVENT_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"Windofbitter"},"content":"        String startDate \u003d matcher.group(\"startDate\");","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"Windofbitter"},"content":"        String endDate \u003d matcher.group(\"endDate\");","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"Windofbitter"},"content":"            return new EventCommand(description, LocalDateTime.parse(startDate, dateTimeFormatter),","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"Windofbitter"},"content":"                    LocalDateTime.parse(endDate, dateTimeFormatter));","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareCheck(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CheckCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":199,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":200,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":204,"author":{"gitId":"Windofbitter"},"content":"            LocalDate checkDate \u003d LocalDate.parse(arg, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":205,"author":{"gitId":"Windofbitter"},"content":"            return new CheckCommand(checkDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":206,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":208,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CheckCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":209,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":210,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":211,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":212,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":212}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.StorageOperationException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import java.io.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":" * The Storage class implements methods to save the TaskList created by the users to the given file and","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":" * load the tasks from the file","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"public class Storage {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * Saves the tasks created by the users to a given file by encoding them with pre-defined format","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList the tasks to be saved","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * @throws StorageOperationException if there is exception occurs when writing to file","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"            for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"                String taskString \u003d TaskEncoder.encodeTask(taskList.getTask(i));","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"                fileWriter.write(taskString);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"                fileWriter.write(\"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_FAILED_STORAGE, \"failed to save tasks.\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"     * Returns tasks that loaded from the given file","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"     * @return The tasks loaded","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"     * @throws StorageOperationException if there is exception writing into file or parsing the formats into task","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    public List\u003cTask\u003e load() throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"            String line;","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"                taskList.add(TaskDecoder.decodeTask(line));","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"            return taskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_FAILED_STORAGE, \"File may be corrupted\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":63}},{"path":"src/main/java/seedu/duke/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.Messages;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.StorageOperationException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":" * The TaskDecoder class implements a method that would decode string and parse it into Task object","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"public class TaskDecoder {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    private static final Pattern DEADLINE_SAVE_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"            \"D \\\\| (?\u003chasDone\u003e(0|1)) \\\\| (?\u003ctaskDescription\u003e.*) \\\\| (?\u003cdeadline\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    private static final Pattern TODO_SAVE_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"            \"T \\\\| (?\u003chasDone\u003e(0|1)) \\\\| (?\u003ctaskDescription\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    private static final Pattern EVENT_SAVE_FORMAT \u003d Pattern.compile(\"E \\\\| (?\u003chasDone\u003e(0|1)) \\\\|\"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"            + \" (?\u003ctaskDescription\u003e.*) \\\\| (?\u003cstartDate\u003e.*)\\\\-(?\u003cendDate\u003e.*)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    private static final DateTimeFormatter datetimeFormatter \u003d DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * Returns a task object based on string using pre-defined pattern","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     * @param taskString The task string to be decoded","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"     * @return the Task object that the string decoded into","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"     * @throws StorageOperationException If the string does not match any of the pattern or contains invalid contents","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    public static Task decodeTask(String taskString) throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        Matcher deadlineMatcher \u003d DEADLINE_SAVE_FORMAT.matcher(taskString.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        Matcher todoMatcher \u003d TODO_SAVE_FORMAT.matcher(taskString.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        Matcher eventMatcher \u003d EVENT_SAVE_FORMAT.matcher(taskString.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"            if (deadlineMatcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"                return decodeDeadline(deadlineMatcher);","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"            } else if (eventMatcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"                return decodeEvent(eventMatcher);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"            } else if (todoMatcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"                return decodeTodo(todoMatcher);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"                throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"                        String.format(Messages.MESSAGE_FAILED_STORAGE, \"File may be corrupted\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_FAILED_STORAGE, \"File may be corrupted\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"    private static Task decodeTodo(Matcher todoMatcher) {","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"        boolean hasDone \u003d !todoMatcher.group(\"hasDone\").equals(\"0\");","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"        String taskDescription \u003d todoMatcher.group(\"taskDescription\");","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"        return new Todo(taskDescription, hasDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"    private static Task decodeDeadline(Matcher deadlineMatcher) {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        boolean hasDone \u003d !deadlineMatcher.group(\"hasDone\").equals(\"0\");","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"        String taskDescription \u003d deadlineMatcher.group(\"taskDescription\");","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineMatcher.group(\"deadline\"), datetimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"        return new Deadline(taskDescription, hasDone, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"    private static Task decodeEvent(Matcher eventMatcher) {","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"        boolean hasDone \u003d !eventMatcher.group(\"hasDone\").equals(\"0\");","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"        String taskDescription \u003d eventMatcher.group(\"taskDescription\");","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(eventMatcher.group(\"startDate\"), datetimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(eventMatcher.group(\"endDate\"), datetimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"        return new Event(taskDescription, hasDone, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":85}},{"path":"src/main/java/seedu/duke/storage/TaskEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * The TaskEncoder class implements a method that would encode Task object into string","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class TaskEncoder {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * Returns the encoded string of the task object using the predefined format","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     * @param task the Task object to be encoded","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * @return The encoded string for a task","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public static String encodeTask(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        int hasDoneInt \u003d task.getHasDone() ? 1 : 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"            return String.format(\"T | %d | %s \", hasDoneInt, task.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"            return String.format(\"D | %d | %s | %s\", hasDoneInt, task.getDescription(), (","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"                    (Deadline) task).getDeadlineString());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"            assert task instanceof Event;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"            return String.format(\"T | %d | %s | %s-%s\", hasDoneInt, event.getDescription(),","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"                    event.getStartDateString(), event.getEndDateString());","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":33}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":" * Represents a deadline task . A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a deadline task created by the user","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * it contains additional datetime information about the deadline of the task. E.g. 2022-10-10 18:00","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    private String deadlineString;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the Deadline object","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * @param hasDone Whether the deadline is done","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param deadline The datetime of the deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    public Deadline(String description, boolean hasDone, LocalDateTime deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        this.deadlineString \u003d deadline.format(DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        super.setDescription(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        super.setHasDone(hasDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"     * Returns the datetime of deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"     * @return the datetime of deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        return deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * Returns a string representation of the datetime of deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     * @return the string representation of the datetime of deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        return deadlineString;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    public void setDeadline(LocalDateTime deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     * Returns a string representation of the deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"     * @return the string representation of the deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadlineString + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"Windofbitter":58}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":" * Represents an event task created by the user. A \u003ccode\u003eEvent\u003c/code\u003e represents a task containing","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":" * additional information for start date of the event and the end date of the event.","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    private String startDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private String endDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of Event object","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"     * @param hasDone Whether the event is done","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"     * @param startDate the start date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"     * @param endDate the end date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    public Event(String description, boolean hasDone, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        this.startDateString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        this.endDateString \u003d endDate.format(DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        super.setDescription(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        super.setHasDone(hasDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * Returns the start date of an event","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     * @return The start date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        return startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * Returns the end date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     * @return The end date of the event","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        return endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     * Returns the start date string representation","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     * @return The start date string representation","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    public String getStartDateString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        return startDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"     * Returns the end date string representation","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"     * @return The end date representation","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"    public String getEndDateString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"        return endDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"     * Returns the string representation of an event","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"     * @return The string representation of an event task","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startDateString + \" to: \" + this.endDateString + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":75}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task with description and information of","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" * whether the task is done.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"public class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    private boolean hasDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public Task() {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        this.hasDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     * Returns the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"     * @return the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * Sets the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    public boolean getHasDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        return hasDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     * Setter of whether the task is done","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     * @param hasDone A boolean variable representing whether the task has done","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"    public void setHasDone(boolean hasDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"        this.hasDone \u003d hasDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"     * Returns a String representation of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"     * @return the string repreesntation of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"        if (this.hasDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2024-01-19"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2024-01-19"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2024-01-19"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-19"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"Windofbitter":68}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":" * Represents a to do task created by the user. A \u003ccode\u003eTodo\u003c/code\u003e represents a task to be done by the user","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":" * with description of the task.","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    public Todo(String input) {","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"        super(input);","lastModifiedDate":"2024-01-19"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"     * Constructor of the Todo object","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"     * @param description The description of the todo","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"     * @param hasDone whether the todo has done","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public Todo(String description, Boolean hasDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        super.setHasDone(hasDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        super.setDescription(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Returns the string representation of the todo","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     * @return the string representation of the todo","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-19"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"Windofbitter":30}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package seedu.duke.ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":" * The Ui class implements methods that display result to users with given format and read input from the user","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"public class Ui {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private String response;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public String getResponse() {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        return this.response;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"     * Reads the input from user","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        return \"Hello Bro, I\u0027m wind\" + \"\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"     * Display loading exception message to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    public void getLoadingExceptionMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d \"Bro, something bad happens during loading, I can\u0027t load your tasks\";","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"     * Shows error message to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"     * @param message The error message","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    public void generateErrorMessage(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d message;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"     * Shows the tasks in the taskList in the users","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList the TaskList containing all tasks that users have","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    public void generateTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"            stringBuilder.append(number).append(\".\").append(taskList.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d stringBuilder.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"     * Show the result of new task being added to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"     * @param task     The new task","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The TaskList containing all the tasks that users have","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"    public void generateNewTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"                + \"%s\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"                + \"Now you have %d tasks in the list%n\", task, taskList.getListSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"     * Shows result when a task is being mark as done","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task that is being mark as done","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"    public void generateMarkAsDoneResponse(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"                + \" \" + task);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"     * Shows result when a task is being mark as not done","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"     * @param task The task being mark as not done","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"    public void generateMarkAsNotDoneResponse(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"                + \" \" + task;","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Windofbitter"},"content":"     * Shows result when a task is deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Windofbitter"},"content":"     * @param task     The task that is deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Windofbitter"},"content":"     * @param taskList The TaskList object containing all the tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Windofbitter"},"content":"    public void generateDeleteTaskResponse(Task task, TaskList taskList) {","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Windofbitter"},"content":"                + \" \" + task + \"\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Windofbitter"},"content":"                + \"Now you have \" + taskList.getListSize() + \" tasks in the list\";","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Windofbitter"},"content":"     * Shows the tasks that is due on a specific date","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Windofbitter"},"content":"     * @param tasks     The tasks that are due on that date","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Windofbitter"},"content":"     * @param localDate The due date","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Windofbitter"},"content":"    public void generateDueTaskListResponse(List\u003cTask\u003e tasks, LocalDate localDate) {","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Windofbitter"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Windofbitter"},"content":"            this.response \u003d String.format(\"You have no task due on %s\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Windofbitter"},"content":"                    localDate.format(DateTimeFormatter.ofPattern(\"MM dd yy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"Windofbitter"},"content":"            this.response \u003d String.format(\"You have the following tasks due on %s\\n\",","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"Windofbitter"},"content":"                    localDate.format(DateTimeFormatter.ofPattern(\"MM dd yy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Windofbitter"},"content":"            this.response +\u003d \"\\n\" + getListView(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Windofbitter"},"content":"    private String getListView(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Windofbitter"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Windofbitter"},"content":"            stringBuilder.append(i + 1).append(\".\").append(\" \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Windofbitter"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"Windofbitter"},"content":"     * Shows tasks that match the keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Windofbitter"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Windofbitter"},"content":"     * @param tasks Tasks that match the keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"Windofbitter"},"content":"    public void generateFindResultResponse(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Windofbitter"},"content":"        this.response +\u003d getListView(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"Windofbitter"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Windofbitter"},"content":"     * Shows goodbye message","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Windofbitter"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Windofbitter"},"content":"    public void generateGoodByeMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Windofbitter"},"content":"        this.response \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":149}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"            fx:controller\u003d\"seedu.duke.gui.window.MainWindow\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\"/\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"                AnchorPane.bottomAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"                    fitToWidth\u003d\"true\" fitToHeight\u003d\"true\" vvalue\u003d\"1.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"                    AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"                    AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"                AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"41.0\"   /\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Windofbitter":25}},{"path":"src/test/java/duke/ByeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.ByeCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.StorageOperationException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"public class ByeTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public void testBye() throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        ByeCommand byeCommand \u003d new ByeCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        byeCommand.execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateGoodByeMessage();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        verify(mockStorage).save(mockTaskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":26}},{"path":"src/test/java/duke/CheckTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.CheckCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"public class CheckTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void testCheck() throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        LocalDate localDate \u003d LocalDate.parse(\"2022-01-01\", DateTimeFormatter.ofPattern(\"yyy-MM-dd\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        Deadline deadline1 \u003d new Deadline(\"hello\", false, localDate.atStartOfDay());","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        Deadline deadline2 \u003d new Deadline(\"hello1\", true, localDate.atStartOfDay());","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        Deadline deadline3 \u003d new Deadline(\"hello2\", false, LocalDateTime.now());","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getListSize()).thenReturn(3);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getTask(0)).thenReturn(deadline1);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getTask(1)).thenReturn(deadline2);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getTask(2)).thenReturn(deadline3);","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        new CheckCommand(localDate).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateDueTaskListResponse(argThat(list -\u003e list.contains(deadline1)), eq(localDate));","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":38}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.DeadlineCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.ArgumentMatchers.argThat;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    public void testDeadline() {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d \"test\";","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        new DeadlineCommand(description, localDateTime).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        verify(mockTaskList).addTask(argThat(task -\u003e {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            assertTrue(task instanceof Deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(task.getDescription(), description);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"            assertFalse(task.getHasDone());","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(((Deadline) task).getDeadline(), localDateTime);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        }));","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":37}},{"path":"src/test/java/duke/DeleteTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.DukeException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"public class DeleteTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void testDelete() throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getListSize()).thenReturn(1);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        Task mockTask \u003d mock(Task.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getTask(0)).thenReturn(mockTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        new DeleteCommand(1).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        verify(mockTaskList).deleteTask(0);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateDeleteTaskResponse(mockTask, mockTaskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidInputException.class, () -\u003e","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"                new DeleteCommand(0).execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":34}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.EventCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.ArgumentMatchers.argThat;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"public class EventTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    public void testEvent() throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d \"hello\";","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(\"2022-10-10 18:00\",","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(\"2022-10-11 18:00\",","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        new EventCommand(description, startDate, endDate).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateNewTaskResponse(argThat(task -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"            assertTrue(task instanceof Event);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(task.getDescription(), description);","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(((Event) task).getStartDate(), startDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(((Event) task).getEndDate(), endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"            return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        }), eq(mockTaskList));","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidInputException.class,","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"                () -\u003e new EventCommand(description, LocalDateTime.now(), endDate).execute(mockTaskList, mockUi,","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"                        mockStorage));","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":46}},{"path":"src/test/java/duke/ListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class ListTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public void testList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        new ListCommand().execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateTaskList(mockTaskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":23}},{"path":"src/test/java/duke/MarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.MarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"public class MarkTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public void testMark() throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        Task mockTask \u003d mock(Task.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getListSize()).thenReturn(1);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getTask(0)).thenReturn(mockTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        new MarkCommand(1).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        verify(mockTask).setHasDone(true);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateMarkAsDoneResponse(mockTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidInputException.class, () -\u003e new MarkCommand(0).execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":33}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.UnknownCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public void testUnknownCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(UnknownCommandException.class, () -\u003e Parser.parse(\"blah\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    public void testList() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"list\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof ListCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"list aa\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public void testBye() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof ByeCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"bye aa\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    public void testCheck() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"check 2022-01-01\");","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof CheckCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"check 2222\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"check\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    public void testDelete() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof DeleteCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"delete a\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    public void testEvent() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"event hello /from 2022-10-10 18:00 /to 2022-10-11 18:00\");","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof EventCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class,","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"                () -\u003e Parser.parse(\"event /from 2022-10-10 18:00 /to 2022-10-11 18:00\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class,","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"                () -\u003e Parser.parse(\"event asd /from 2022-10-10 18:00 \"));","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class,","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"                () -\u003e Parser.parse(\"event  /to 2022-10-11 18:00\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class,","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"                () -\u003e Parser.parse(\"event  /from a /to b\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"    public void testMark() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"mark 1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof MarkCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"mark\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"mark a\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"    public void testTodo() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"todo a\");","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof TodoCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Windofbitter"},"content":"    public void testUnmark() throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"        Command c \u003d Parser.parse(\"unmark 1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"Windofbitter"},"content":"        assertTrue(c instanceof UnmarkCommand);","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"unmark\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidCommandFormatException.class, () -\u003e Parser.parse(\"unmark a\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":106}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.TodoCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.ArgumentMatchers.argThat;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.ArgumentMatchers.eq;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void testToDo() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d \"hello\";","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        new TodoCommand(description).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        verify(mockTaskList).addTask(argThat(task -\u003e {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"            assertTrue(task instanceof Todo);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(task.getDescription(), description);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        }));","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateNewTaskResponse(argThat(task -\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            assertTrue(task instanceof Todo);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"            assertEquals(task.getDescription(), description);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"            return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        }), eq(mockTaskList));","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":39}},{"path":"src/test/java/duke/UnmarkTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.common.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.exception.InvalidInputException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import static org.mockito.Mockito.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"public class UnmarkTest {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    @Test","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public void testUnmark() throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        Storage mockStorage \u003d mock(Storage.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        Ui mockUi \u003d mock(Ui.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        TaskList mockTaskList \u003d mock(TaskList.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        Task mockTask \u003d mock(Task.class);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getListSize()).thenReturn(1);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        when(mockTaskList.getTask(0)).thenReturn(mockTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        new UnmarkCommand(1).execute(mockTaskList, mockUi, mockStorage);","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        verify(mockTask).setHasDone(false);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        verify(mockUi).generateMarkAsNotDoneResponse(mockTask);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        assertThrows(InvalidInputException.class,","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"                () -\u003e new UnmarkCommand(0).execute(mockTaskList, mockUi, mockStorage));","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"blah","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"mark","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"mark 1 2","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"unmark","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"unmark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"unmark 1 2","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"delete","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"delete 1","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"delete 1 2","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"todo","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"deadline","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"deadline hello","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"deadline hello /a","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"deadline hello /by","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"event","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"event hello","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"event hello /a","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"event hello /from /b","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"event hello /from /to","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"todo SU All Courses","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"deadline Eat /by 9pm","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"event Exams /from 9am /to 9pm","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"unmark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"delete 1","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"bye","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Windofbitter":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Windofbitter":1,"-":20}}]
