[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    testImplementation \u0027org.mockito:mockito-core:4.+\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    testImplementation \u0027org.mockito:mockito-junit-jupiter:4.+\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    mainClass.set(\"james.James\")","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    archiveFileName \u003d \u0027james.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"-":41,"shamesjen":23}},{"path":"data/hardDisk.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"D | 0 | hehe | 09-02-2024 1200","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"D | 0 | return book | 22-02-2024 2350","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"shamesjen":2}},{"path":"src/main/java/james/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.controllers.MainWindow;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"    private void flip() {","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        db.flip();","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        return db;","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shamesjen":62}},{"path":"src/main/java/james/James.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.commands.Command;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.parser.Parser;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":" * Represents the main class of the Duke application.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"public class James extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    private static final String FILE_PATH \u003d \"./data/hardDisk.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/daUser.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/daDuke.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"     * Creates a new James with the given file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"     * @param filePath File path to store the tasks in.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"    public James(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    public James() {","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"        this(FILE_PATH);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"     * Starts the James application.","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"     * @param stage Stage to start the application.","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"        // Initialization of storage, tasks, and UI components","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"        initializeComponents();","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"        // Setup JavaFX components","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"        setupGui(stage);","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"        // Event handling for user input","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"        setupInputHandlers();","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"    private void initializeComponents() {","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"shamesjen"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"shamesjen"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"shamesjen"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"shamesjen"},"content":"    private void setupGui(Stage stage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"shamesjen"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"shamesjen"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-15"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"        stage.setTitle(\"James\");","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"shamesjen"},"content":"        configureLayout(mainLayout);","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"shamesjen"},"content":"        stage.show();","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"    private void configureLayout(AnchorPane mainLayout) {","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"shamesjen"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"shamesjen"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"shamesjen"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"shamesjen"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"shamesjen"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"shamesjen"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"shamesjen"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"shamesjen"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"shamesjen"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"shamesjen"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"shamesjen"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"shamesjen"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"shamesjen"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"shamesjen"},"content":"    private void setupInputHandlers() {","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"shamesjen"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"shamesjen"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"shamesjen"},"content":"        });","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"shamesjen"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"shamesjen"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"shamesjen"},"content":"        });","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"shamesjen"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"shamesjen"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"shamesjen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"shamesjen"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"shamesjen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"shamesjen"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"shamesjen"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"shamesjen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"shamesjen"},"content":"                DialogBox.getUserDialog(userText.getText(), user), // Fix: Pass the text of the Label","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"shamesjen"},"content":"                DialogBox.getDukeDialog(dukeText.getText(), duke) // Fix: Pass the text of the Label","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"shamesjen"},"content":"        );","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"shamesjen"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"shamesjen"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"shamesjen"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"shamesjen"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"shamesjen"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"shamesjen"},"content":"            return command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"shamesjen"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"shamesjen"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"shamesjen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"shamesjen"},"content":"        launch(args); // Launch the JavaFX application","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shamesjen":174,"-":2}},{"path":"src/main/java/james/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"public class Launcher {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shamesjen":12}},{"path":"src/main/java/james/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.controllers.MainWindow;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    private James james \u003d new James();","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(james);","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"            stage.show();","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shamesjen":32}},{"path":"src/main/java/james/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":" * Represents a command to add a new task.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    private Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     * Creates an AddCommand with the specified task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"     * Executes the add command which results in adding the task to the task list,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * displaying the addition in the UI, and attempting to save the updated task list","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     * to the storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     * @param tasks   The TaskList to which the task will be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"     * @param ui      The Ui responsible for interactions with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"     * @param storage The Storage where the task list is persisted.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        tasks.addTask(task); // Assume \u0027task\u0027 is already defined in this context","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        String result \u003d ui.showTask(\"Task added:\", task, tasks.getSize());","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            String errorMessage \u003d ui.showError(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"            result +\u003d \"\\n\" + errorMessage;","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"     * Indicates whether the application should terminate after the execution of","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"     * this command. For AddCommand, it always returns false.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"     * @return false as the application should not exit after adding a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":58}},{"path":"src/main/java/james/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":" * Represents a command to be executed.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":14}},{"path":"src/main/java/james/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    private int indexToDelete;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * Creates a DeleteCommand to delete the task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"     * @param indexToDelete The index of the task to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    public DeleteCommand(int indexToDelete) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        this.indexToDelete \u003d indexToDelete;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * Executes the delete command which results in removing the task from the task list,","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     * displaying the deletion in the UI, and attempting to save the updated task list","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     * to the storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"     * @param tasks   The TaskList from which the task will be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"     * @param ui      The Ui responsible for interactions with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"     * @param storage The Storage where the task list is persisted.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If the index provided is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"            Task taskToRemove \u003d tasks.deleteTask(indexToDelete); // Assuming indexToDelete is defined","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"            String successMessage \u003d ui.showDeletedTask(taskToRemove, tasks.getSize());","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"            return successMessage;","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"The task index provided is invalid.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"            String errorMessage \u003d ui.showError(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"            return errorMessage;","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"     * Indicates whether the application should terminate after the execution of","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"     * this command. For DeleteCommand, it always returns false.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"     * @return false as the application should not exit after deleting a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":62}},{"path":"src/main/java/james/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":" * Represents a command to terminate the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"     * Executes the exit command which results in terminating the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"     * This method should handle the necessary cleanup before exiting.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"     * @param tasks   The TaskList being managed.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     * @param ui      The Ui responsible for interactions with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     * @param storage The Storage where the task list is persisted.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"     * Indicates whether the application should terminate after the execution of","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * this command. For ExitCommand, it always returns true.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     * @return true as the application should exit.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":35}},{"path":"src/main/java/james/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" * Represents a command to search for tasks by a keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    private final String keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * Creates a FindCommand with the specified keyword for searching.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * Executes the find command which filters the tasks based on the search keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     * @param tasks The TaskList to search within.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     * @param ui    The Ui responsible for displaying the search results to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        List\u003cString\u003e matchingTasks \u003d tasks.getTasks().stream()","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"            .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"            .map(Task::toString)","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        return ui.showTasksFound(matchingTasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"     * Indicates whether the application should terminate after the execution of","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"     * this command. For FindCommand, it always returns false.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"     * @return false as the application should not exit after searching.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":51}},{"path":"src/main/java/james/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"     * Executes the command to list all tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"     * @param tasks   Task list to be listed.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"     * @param ui      Ui to interact with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     * @param storage Storage to save the task list to.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"     * @return False.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":32}},{"path":"src/main/java/james/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" * Represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    private int indexToMark;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * Creates a new MarkCommand with the given index of the task to mark.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"     * @param indexToMark Index of the task to mark.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    public MarkCommand(int indexToMark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        this.indexToMark \u003d indexToMark;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * Executes the command to mark a task as done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     * @param tasks   Task list to mark the task in.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     * @param ui      Ui to interact with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"     * @param storage Storage to save the task list to.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If an error occurs while marking the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        String result;","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"            Task taskToMark \u003d tasks.getTask(indexToMark);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"            taskToMark.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"            result \u003d ui.showMarkedTask(taskToMark); // Assumes this method returns a String message","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"The task index provided is invalid.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"            result \u003d ui.showError(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"     * @return False, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":59}},{"path":"src/main/java/james/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":" * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    private int indexToUnmark;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * Constructor for an unmark command.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"     * @param indexToUnmark","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    public UnmarkCommand(int indexToUnmark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        this.indexToUnmark \u003d indexToUnmark;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * Executes the command to unmark a task as not done in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     * @param tasks   Task list to unmark the task in.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     * @param ui      Ui to interact with the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"     * @param storage Storage to save the task list to.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If an error occurs while unmarking the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        String result;","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"            Task taskToUnmark \u003d tasks.getTask(indexToUnmark);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"            taskToUnmark.markAsNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"            result \u003d ui.showUnmarkedTask(taskToUnmark);","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"The task index provided is invalid.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"            result \u003d ui.showError(\"An error occurred while saving tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"     * @return False, as this is not an exit command.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":59}},{"path":"src/main/java/james/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.controllers;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import james.DialogBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import james.James;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    private James james;","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daUser.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daDuke.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    public void setDuke(James j) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        james \u003d j;","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"    @FXML","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        String response \u003d james.getResponse(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        );","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shamesjen":53}},{"path":"src/main/java/james/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":" * Represents an exception specific to Duke.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shamesjen":10}},{"path":"src/main/java/james/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import james.commands.AddCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import james.commands.Command;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.commands.DeleteCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.commands.ExitCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.commands.FindCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import james.commands.ListCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import james.commands.MarkCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import james.commands.UnmarkCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":" * Represents a parser to parse user input into commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"     * Parses the user input into a command.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"     * @param userInput User input to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"     * @return Command parsed from the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If an error occurs during parsing.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        String[] parts \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        String commandWord \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        System.out.println(commandWord);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"            assert parts.length \u003d\u003d 2 : \"Todo input should have two parts\";","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"            return new AddCommand(new Todo(parts[1].trim()));","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"            assert parts.length \u003d\u003d 2 : \"Deadline input should have two parts\";","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"            String[] deadlineParts \u003d parts[1].split(\" /by \");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"            if (deadlineParts.length \u003c 2 || deadlineParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The deadline must include a time.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"            return new AddCommand(new Deadline(deadlineParts[0].trim(), deadlineParts[1].trim()));","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"            assert parts.length \u003d\u003d 2 : \"Event input should have two parts\";","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"            String[] eventParts \u003d parts[1].split(\" /from \");","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"            if (eventParts.length \u003c 2 || eventParts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The event time must include a start and end time.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"            String[] fromto \u003d eventParts[1].split(\"/to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"            if (fromto.length \u003c 2 || fromto[0].trim().isEmpty() || fromto[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"Both start and end times must be provided for an event.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"            return new AddCommand(new Event(eventParts[0].trim(), fromto[0].trim(), fromto[1].trim()));","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The task number to mark as done cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"                int indexToMark \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"                return new MarkCommand(indexToMark);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The task number to mark as done must be a number.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The task number to unmark as done cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"shamesjen"},"content":"                int indexToUnmark \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"shamesjen"},"content":"                return new UnmarkCommand(indexToUnmark);","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"shamesjen"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The task number to unmark as done must be a number.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"shamesjen"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The task number to delete cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"                int indexToDelete \u003d Integer.parseInt(parts[1].trim()) - 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"                return new DeleteCommand(indexToDelete);","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The task number to delete must be a number.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"        case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"            if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"                throw new DukeException(\"The keyword to find cannot be empty.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"            return new FindCommand(parts[1].trim());","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"     * Parses a line from the storage file into a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"     * @param line Line from the storage file to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"     * @return Task parsed from the line.","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If an error occurs during parsing.","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"shamesjen"},"content":"    public static Task parseLineToTask(String line) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"shamesjen"},"content":"        assert line !\u003d null : \"Line to parse cannot be null\";","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"shamesjen"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"shamesjen"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"shamesjen"},"content":"        boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"shamesjen"},"content":"        String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"shamesjen"},"content":"        switch (type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"shamesjen"},"content":"        case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"shamesjen"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"shamesjen"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"shamesjen"},"content":"                todo.markAsDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"shamesjen"},"content":"            return todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"shamesjen"},"content":"        case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"shamesjen"},"content":"            String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"shamesjen"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"shamesjen"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"shamesjen"},"content":"                deadline.markAsDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"shamesjen"},"content":"            return deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"shamesjen"},"content":"        case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"shamesjen"},"content":"            String[] timeParts \u003d parts[3].split(\" to \");","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"shamesjen"},"content":"            String start \u003d timeParts[0].substring(6).trim(); // Remove \"from \" prefix","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"shamesjen"},"content":"            String end \u003d timeParts[1].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"shamesjen"},"content":"            Event event \u003d new Event(description, start, end);","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"shamesjen"},"content":"            if (isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"shamesjen"},"content":"                event.markAsDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"shamesjen"},"content":"            return event;","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"shamesjen"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"Unknown task type in file: \" + type);","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":152}},{"path":"src/main/java/james/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import james.parser.Parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":" * Represents the storage of tasks in the hard disk.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"     * Creates a new Storage with the given file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"     * @param filePath File path to store the tasks in.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"        assert filePath !\u003d null : \"File path cannot be null\";","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"     * Loads the tasks from the file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"     * @return List of tasks loaded from the file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"     * @throws IOException If an error occurs while loading the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"        assert Files.exists(path) || Files.notExists(path.getParent())","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"                : \"Task file or parent directory state is inconsistent\";","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        for (String line : lines) {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"                Task task \u003d Parser.parseLineToTask(line);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"                System.out.println(\"An error occurred while loading tasks: \" + e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"     * Saves the tasks to the file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"     * @param tasks List of tasks to save to the file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"     * @throws IOException If an error occurs while saving the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"        List\u003cString\u003e lines \u003d tasks.stream()","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"                                  .map(Task::toFileFormat)","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"                                  .collect(Collectors.toList());","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"        Files.write(path, lines);","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":73}},{"path":"src/main/java/james/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.tasklist;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"    private Integer size;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     * Constructor for a task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        this.size \u003d tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     * @param task Task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        this.size +\u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"     * Retrieves a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"     * @param index Index of the task to retrieve.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"The task number you are trying to access does not exist.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"     * @param index Index of the task to delete.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"     * @return Task that was deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If the index is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"The task number you are trying to delete does not exist.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        size -\u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"     * @return List of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"     * Retrieves the size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"     * @return Size of the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"        return this.size;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":81}},{"path":"src/main/java/james/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    private static final List\u003cDateTimeFormatter\u003e DFORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/M/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/M/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\")","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"            );","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    private static final List\u003cDateTimeFormatter\u003e DTFORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-MM-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd-M-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/M/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy Hmm\")","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    );","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"     * Constructor for a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"     * @param by          Date and time of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If the date and time format is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"        this.by \u003d parseDateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"        if (this.by \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"Invalid date time format. Please use a recognized format.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"    private LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"        for (DateTimeFormatter formatter : DTFORMATTERS) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"                return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"                // Ignored","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"        for (DateTimeFormatter formatter : DFORMATTERS) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"shamesjen"},"content":"                LocalDate date \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"shamesjen"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"shamesjen"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"shamesjen"},"content":"                // Ignored","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"shamesjen"},"content":"            LocalTime time \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"shamesjen"},"content":"            return LocalDateTime.of(LocalDate.now(), time);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"     * Converts the date and time to a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"     * @param s Date and time to be converted.","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"     * @return Date and time in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"    public String datetoString(LocalDateTime s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"        return s.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"shamesjen"},"content":"     * Converts the date and time to a string for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"     * @param s Date and time to be converted.","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"     * @return Date and time in string format for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"    public String datetoSaveString(LocalDateTime s) {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"shamesjen"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"shamesjen"},"content":"            return \"Invalid date time format. Please use the format dd-MM-yyyy HHmm\";","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"shamesjen"},"content":"        return s.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"shamesjen"},"content":"     * Gets the date and time of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"shamesjen"},"content":"     * @return Date and time of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"shamesjen"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"shamesjen"},"content":"        return this.by;","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"shamesjen"},"content":"     * Converts the deadline task to a string for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"shamesjen"},"content":"     * @return Deadline task in string format for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"shamesjen"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"shamesjen"},"content":"        return \"D | \" + super.toFileFormat() + \" | \" + this.datetoSaveString(this.getBy());","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"shamesjen"},"content":"     * Converts the deadline task to a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"shamesjen"},"content":"     * @return Deadline task in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"shamesjen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"shamesjen"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.datetoString(this.getBy()) + \")\";","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shamesjen":149}},{"path":"src/main/java/james/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    private static final List\u003cDateTimeFormatter\u003e DFORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-MM-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/M/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/MM/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/M/yyyy\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy\")","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    );","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"    private static final List\u003cDateTimeFormatter\u003e DTFORMATTERS \u003d Arrays.asList(","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-MM-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-MM-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-MM-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd-M-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d-M-yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/M/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"),","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"        DateTimeFormatter.ofPattern(\"d/M/yyyy Hmm\")","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    );","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"     * Constructor for an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"     * @param from        Start date and time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"     * @param to          End date and time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"     * @throws DukeException If the date time format is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"        this.from \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"        if (this.from \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"Invalid date time format. Please use a recognized format.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"        this.to \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"        if (this.to \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"            throw new DukeException(\"Invalid date time format. Please use a recognized format.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"    private LocalDateTime parseDateTime(String by) {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"        for (DateTimeFormatter formatter : DTFORMATTERS) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"shamesjen"},"content":"                return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"shamesjen"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"shamesjen"},"content":"                //ignored because multiple formats are tried","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"shamesjen"},"content":"        for (DateTimeFormatter formatter : DFORMATTERS) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"shamesjen"},"content":"                LocalDate date \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"shamesjen"},"content":"                return date.atStartOfDay();","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"shamesjen"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"                //ignored because multiple formats are tried","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"            LocalTime time \u003d LocalTime.parse(by, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"            return LocalDateTime.of(LocalDate.now(), time);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"            return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"     * Converts a date time to a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"     * @param s Date time to be converted.","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"shamesjen"},"content":"     * @return String representation of the date time.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"shamesjen"},"content":"    public String datetoString(LocalDateTime s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"            return \"Invalid date time format. Please use the format dd-MM-yyyy HHmm\";","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"        return s.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"shamesjen"},"content":"     * Converts a date time to a string for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"shamesjen"},"content":"     * @param s Date time to be converted.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"shamesjen"},"content":"     * @return String representation of the date time for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"shamesjen"},"content":"    public String datetoSaveString(LocalDateTime s) {","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"shamesjen"},"content":"        if (s \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"shamesjen"},"content":"            return \"Invalid date time format. Please use the format dd-MM-yyyy HHmm\";","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"shamesjen"},"content":"        return s.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"shamesjen"},"content":"     * Gets the start date and time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"shamesjen"},"content":"     * @return Start date and time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"shamesjen"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"shamesjen"},"content":"        return this.from;","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"shamesjen"},"content":"     * Gets the end date and time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"shamesjen"},"content":"     * @return End date and time of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"shamesjen"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"shamesjen"},"content":"        return this.to;","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"shamesjen"},"content":"     * Converts the event task to a string for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"shamesjen"},"content":"     * @return String representation of the event task for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"shamesjen"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"shamesjen"},"content":"        return \"E | \" + super.toFileFormat() + \" | from \" + this.datetoSaveString(this.getFrom())","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"shamesjen"},"content":"            + \" to \" + this.datetoSaveString(this.getTo());","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"shamesjen"},"content":"     * Converts the event task to a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"shamesjen"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":164,"author":{"gitId":"shamesjen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"shamesjen"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.datetoString(this.getFrom())","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"shamesjen"},"content":"            + \" to: \" + this.datetoString(this.getTo()) + \")\";","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shamesjen":168}},{"path":"src/main/java/james/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":" * Represents a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"     * Creates a task with the given description.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"     * @return Description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"     * Returns the task in a format suitable for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"     * @return Task in a format suitable for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"shamesjen":70}},{"path":"src/main/java/james/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"     * Constructor for a todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     * Returns the todo task in a format suitable for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"     * @return Todo task in a format suitable for saving to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"        return \"T | \" + super.toFileFormat();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"     * Returns the string representation of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shamesjen":34}},{"path":"src/main/java/james/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"        //empty constructor","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"     * Shows the welcome message to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"        return \"Hello! I\u0027m James!\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"     * Shows the goodbye message to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"     * Shows the error message to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"     * @param message The error message to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"        return message;","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"     * Shows the task to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"     * @param message The message to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"    public String showTask(String message, Task task, int size) {","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        return message + \"\\n\" + task + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"     * Shows the task list to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"     * @param tasks The task list to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"                sb.append((i + 1)).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"                sb.append(\"Error: \").append(e.getMessage()).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"        return sb.toString().trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"     * Shows the tasks found to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"     * @param tasks The tasks found to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"    public String showTasksFound(List\u003cString\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"shamesjen"},"content":"            return \"No tasks match your search keyword.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"shamesjen"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"shamesjen"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"shamesjen"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"shamesjen"},"content":"                sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"shamesjen"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"shamesjen"},"content":"            return sb.toString().trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"shamesjen"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"shamesjen"},"content":"     * Shows the tasks found to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"shamesjen"},"content":"     * @param task The tasks found to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"shamesjen"},"content":"     * @param remainingTasks The number of remaining tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"shamesjen"},"content":"    public String showDeletedTask(Task task, int remainingTasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"shamesjen"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\" + task + \"\\nNow you have \" + remainingTasks + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"shamesjen"},"content":"     * Shows the tasks found to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"shamesjen"},"content":"     * @param task The tasks found to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"shamesjen"},"content":"    public String showMarkedTask(Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"shamesjen"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"shamesjen"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"shamesjen"},"content":"     * Shows the tasks found to the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"shamesjen"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"shamesjen"},"content":"     * @param task The tasks found to be shown.","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"shamesjen"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"shamesjen"},"content":"    public String showUnmarkedTask(Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"shamesjen"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":114}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shamesjen":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"shamesjen":19}},{"path":"src/test/java/james/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import james.tasklist.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"class DeleteCommandTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"    private james.tasklist.TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    private Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    void setUp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        task \u003d mock(Task.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        Todo task1 \u003d new Todo(\"Task 1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        Todo task2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    @DisplayName(\"Delete command should remove a task from the list\")","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"    void deleteCommand_removesTaskFromList() throws IOException, DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"        Todo task2 \u003d new Todo(\"Task 2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        deleteCommand.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        assertEquals(task2.toString(), taskList.getTasks().get(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"    @DisplayName(\"Delete command with invalid index should throw DukeException\")","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    void deleteCommand_invalidIndex_throwsDukeException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"        int invalidIndex \u003d 10; // Assuming there\u0027s only 1 task in the list and index 10 is invalid","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"            deleteCommand.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"        });","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"        String expectedMessage \u003d \"The task number you are trying to delete does not exist.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"    void tearDown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"        // Clean up after each test if necessary","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":73}},{"path":"src/test/java/james/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import static org.mockito.ArgumentMatchers.anyList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"import static org.mockito.Mockito.times;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"import static org.mockito.Mockito.when;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"shamesjen"},"content":"import james.exception.DukeException;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"shamesjen"},"content":"import james.storage.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"shamesjen"},"content":"import james.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"shamesjen"},"content":"import james.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"shamesjen"},"content":"class MarkCommandTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"shamesjen"},"content":"    private james.tasklist.TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"shamesjen"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"shamesjen"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"shamesjen"},"content":"    private Task task;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"shamesjen"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"shamesjen"},"content":"    void setUp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"shamesjen"},"content":"        taskList \u003d new james.tasklist.TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"shamesjen"},"content":"        ui \u003d mock(Ui.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"shamesjen"},"content":"        storage \u003d mock(Storage.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"shamesjen"},"content":"        task \u003d mock(Task.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"shamesjen"},"content":"        // Add the task to the task list and ensure it starts as not done","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"shamesjen"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"shamesjen"},"content":"        when(task.isDone()).thenReturn(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"shamesjen"},"content":"    @DisplayName(\"Mark command should mark a task as done\")","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"shamesjen"},"content":"    void markCommand_marksTaskAsDone() throws IOException, DukeException {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"shamesjen"},"content":"        MarkCommand markCommand \u003d new MarkCommand(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"shamesjen"},"content":"        markCommand.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"shamesjen"},"content":"        verify(task, times(1)).markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"shamesjen"},"content":"        verify(storage, times(1)).save(anyList());","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"shamesjen"},"content":"        verify(ui, times(1)).showMarkedTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"shamesjen"},"content":"    @DisplayName(\"Mark command with invalid index should throw DukeException\")","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"shamesjen"},"content":"    void markCommand_invalidIndex_throwsDukeException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"shamesjen"},"content":"        int invalidIndex \u003d 10;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"shamesjen"},"content":"        MarkCommand markCommand \u003d new MarkCommand(invalidIndex);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"shamesjen"},"content":"        DukeException exception \u003d assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"shamesjen"},"content":"            markCommand.execute(taskList, ui, storage);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"shamesjen"},"content":"        });","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"shamesjen"},"content":"        String expectedMessage \u003d \"The task number you are trying to access does not exist.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"shamesjen"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"shamesjen"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"shamesjen"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"shamesjen"},"content":"    void tearDown() {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"shamesjen"},"content":"        // Clean up after each test","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":76}},{"path":"src/test/java/james/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"package james.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"shamesjen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"shamesjen"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"shamesjen"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"shamesjen"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"shamesjen"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"shamesjen"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"shamesjen"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"shamesjen"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"shamesjen"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"shamesjen"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"shamesjen":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shamesjen"},"content":"todo hi","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"shamesjen"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"shamesjen"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"shamesjen":3}}]
