[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"# duke project template","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Vision-2000":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    mainClass.set(\"duke.Stille\")","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    archiveBaseName \u003d \"Stille\"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Vision-2000":2}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Command for adding a new task to the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class AddCommand implements Command{","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private Task task;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        list.addTask(this.task);","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        ui.showAdd(this.task);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        ui.showListSize(list.getSize());","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":23}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Represents a command input by the user that needs to be executed","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public interface Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"     * Perform actions based on the type of command","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"     * @param list TaskList of the application","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"     * @param ui UserInterface for outputting messages","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"     * @return true if ExitCommand, false otherwise","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    boolean execute(TaskList list, UserInterface ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":18}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Command for removing a task at a specified index from the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class DeleteCommand implements Command{","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        Task t \u003d list.getTask(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        list.deleteTask(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        ui.showDelete(t);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        ui.showListSize(list.getSize());","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":24}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Command to signal the end of the program","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class ExitCommand implements Command{","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":15}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"    String match;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    public FindCommand(String match) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"        this.match \u003d match;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        ui.showFound(list.findTasks(match));","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":18}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Command to print the current state of the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class ListCommand implements Command{","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        ui.showList(list.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":15}},{"path":"src/main/java/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Command for marking a task as done at a specified index from the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class MarkDoneCommand implements Command{","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        list.markTaskDone(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        ui.showMarkDone(list.getTask(this.index));","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":20}},{"path":"src/main/java/commands/MarkNotDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package commands;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Command for marking a task as not done at a specified index from the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class MarkNotDoneCommand implements Command{","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    private int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    public MarkNotDoneCommand(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    public boolean execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        list.markTaskNotDone(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        ui.showMarkNotDone(list.getTask(this.index));","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":20}},{"path":"src/main/java/duke/Stille.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import commands.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import storage.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import ui.UserInterface;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":" * Main driver class, initializes the required classes and starts the operation.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"public class Stille {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    private final UserInterface ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    private final TaskList list;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public Stille() {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        this.ui \u003d new UserInterface();","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"            list.loadFromSaveFormat(storage.load());","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"            ui.showError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"     * Main logic of application, displays opening message and enters command loop.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"    public void run() {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        ui.showOpeningMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"        while(!isExit) {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"                Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"                isExit \u003d c.execute(this.list, this.ui);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"                ui.showError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        this.exit();","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"     * At the end of operation, save the current tasklist, output closing message.","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    public void exit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"            this.storage.save(this.list.toSaveFormat());","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"            ui.showError(e);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"        } finally {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"            ui.showClosingMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        new Stille().run();","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Vision-2000":65}},{"path":"src/main/java/exceptions/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Throw if the arguments to a command input by the user is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class ArgumentException extends DukeException{","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"    public ArgumentException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":10}},{"path":"src/main/java/exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Throw if an unrecognised command is input by the user","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class CommandException extends DukeException{","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"    public CommandException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":10}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Exceptions local this application, requires a message to be provided","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"    public DukeException (String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"        super(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":10}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import commands.*;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import exceptions.CommandException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" * Class containing methods relating to input string from user or data file","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"     * Parses input to corresponding Command","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"     * @param input String to be read","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"     * @return Command corresponding to input","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"     * @throws CommandException if the first word in input does not match the list of command words","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    public static Command parseInput(String input) throws CommandException, ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        String[] inputArgs \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        switch (inputArgs[0]) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"            return new AddCommand(Task.makeTask(inputArgs[0].trim(), inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"            return new DeleteCommand(Integer.parseInt(inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        case \"list\":","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"            return new MarkDoneCommand(Integer.parseInt(inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"            return new MarkNotDoneCommand(Integer.parseInt(inputArgs[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"        case \"find\":","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"            return new FindCommand(inputArgs[1].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"            throw new CommandException(\"Please input a valid command\");","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"     * Parses a line in data file to a Task","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"     * @param line String from a line in saved data format","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"     * @return Generated Task","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    public static Task parseLine(String line) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        String[] taskData \u003d line.split(\" \", 3);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"        return Task.makeTask(taskData);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"     * Parses a string into an array of String of size 2 with arguments for constructor of Deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"     * @param arg String containing the arguments for Deadline","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"     * @return array of String of size 2","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if less than 2 arguments are provided","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"    public static String[] parseDeadlineArgument(String arg) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"        String[] result \u003d arg.split(\"\\\\/by\", 2);","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        if (result.length \u003c 2) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Insufficient argument provided for deadline task\");","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"     * Parses a string into an array of String of size 3 with arguments for constructor of Event","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"     * @param arg String containing the arguments for Event","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"     * @return array of String of size 3","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"     * @throws ArgumentException if less than 3 arguments are provided","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"    public static String[] parseEventArgument(String arg) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"        String[] result \u003d arg.split(\"\\\\/from|\\\\/to\", 3);","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"        if (result.length \u003c 3) {","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Insufficient argument provided for event task\");","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"    public static boolean matchStrings(String target, String matcher) {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"        return target.toLowerCase().contains(matcher.toLowerCase());","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":86}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":" * Represents the interface for managing data transfer between the program and the local storage","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"public class Storage {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    private static final String DEFAULT_PATH \u003d \"data.txt\";","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    private Path path;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public Storage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        this.path \u003d Paths.get(DEFAULT_PATH);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"     * Load task data from local storage","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"     * @return list of String representing the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"     * @throws DukeException if IOException is thrown","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"    public List\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"            if (!(Files.exists(path))) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"                Files.createFile(path);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"            List\u003cString\u003e fileOutput \u003d Files.readAllLines(path);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"            return fileOutput;","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"            throw new DukeException(\"Failed to load from disk\");","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"     * Save task data to local storage","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"     * @param tasks list of String representing the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"     * @throws DukeException if IOException is thrown","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"    public void save(List\u003cString\u003e tasks) throws DukeException {","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"            Files.write(path, tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"            throw new DukeException(\"Failed to save to disk\");","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":52}},{"path":"src/main/java/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import java.util.List;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":" * Represents the todolist of the application","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        list.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"        list.remove(index  -1);","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"    public void markTaskDone(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"        list.get(index - 1).markDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    public void markTaskNotDone(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        list.get(index - 1).markNotDone();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"        return list.size();","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"        return list.get(index - 1);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"    public String findTasks(String matcher) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"        int outputIndex \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        for (Task t : list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"            if (t.isFound(matcher)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"                output +\u003d outputIndex + \".\" + t.toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        return output;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"    public List\u003cString\u003e toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"        List\u003cString\u003e output\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"            output.add(task.toSaveFormat());","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"        return output;","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"    public void loadFromSaveFormat(List\u003cString\u003e input) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        for (String line : input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"            list.add(Parser.parseLine(line));","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"        for (int i\u003d0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"            Task t \u003d list.get(i);","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"            output +\u003d (i + 1) + \".\" + t.toString() + \"\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"        return output;","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":" }","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":77}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Task that has an ending date","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"    public Deadline(String description, LocalDate by, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        super(description, status);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"        return \"D \" + super.toSaveFormat() + \" /by \" + by;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":32}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":" * Task that has a starting and ending date","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    public Event(String description, LocalDate from, LocalDate to, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        super(description, status);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        return \"E \" + super.toSaveFormat() + \" /from \" + from + \" /to \" + to;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":35}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import exceptions.ArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" * Represents a task in the TaskList","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"    public static Task makeTask(String[] taskData) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        String taskType \u003d taskData[0];","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        case \"T\":","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"            return new ToDo(taskData[2], taskData[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"        case \"D\":","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"            String[] args \u003d Parser.parseDeadlineArgument(taskData[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"            return new Deadline(args[0].trim(), LocalDate.parse(args[1].trim()), taskData[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        case \"E\":","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"            args \u003d Parser.parseEventArgument(taskData[2]);","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"            return new Event(args[0].trim(), LocalDate.parse(args[1].trim()),","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"                    LocalDate.parse(args[2].trim()), taskData[1]);","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Did not recognize task type \" + taskType);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"    public static Task makeTask(String taskType, String taskArgument) throws ArgumentException {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"            if (taskArgument.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"                throw new ArgumentException(\"Insufficient argument provided for todo task\");","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"            return new ToDo(taskArgument);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"            String[] args \u003d Parser.parseDeadlineArgument(taskArgument);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"            return new Deadline(args[0].trim(), LocalDate.parse(args[1].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"        case \"event\":","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"            args \u003d Parser.parseEventArgument(taskArgument);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"            return new Event(args[0].trim(), LocalDate.parse(args[1].trim()),","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"                    LocalDate.parse(args[2].trim()));","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"            throw new ArgumentException(\"Did not recognize task type \" + taskType);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"    public Task(String description, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"        if (status.equals(\"Y\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"        return isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"        return this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"Vision-2000"},"content":"    public void markDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"Vision-2000"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"Vision-2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"Vision-2000"},"content":"    public boolean isFound(String matcher) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Vision-2000"},"content":"        return Parser.matchStrings(this.description, matcher);","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"Vision-2000"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"Vision-2000"},"content":"            return \"Y \" + this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"Vision-2000"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"Vision-2000"},"content":"            return \"N \" + this.description;","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"Vision-2000"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"Vision-2000"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":101}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":" * Task that has no starting or ending date","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    public ToDo(String description, String status) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        super(description, status);","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        return \"T \" + super.toSaveFormat();","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Vision-2000":26}},{"path":"src/main/java/ui/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":" * Manages output to the command line","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class UserInterface {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    private String openingMessage \u003d \"Hello! I\u0027m Stille\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    private String closingMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    private String dividerLine \u003d \"___________________________________\";","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"    private String errorMessage \u003d \"Error: \";","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"    public UserInterface() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        showDividerLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"        showDividerLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Vision-2000"},"content":"    public void showOpeningMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(openingMessage);","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"Vision-2000"},"content":"    public void showClosingMessage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(closingMessage);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"Vision-2000"},"content":"    public void showDividerLine() {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"Vision-2000"},"content":"        System.out.println(dividerLine);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"Vision-2000"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(errorMessage + e.getMessage());","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"Vision-2000"},"content":"    public void showList(String list) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Here are the tasks in your list:\\n\" + list);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Vision-2000"},"content":"    public void showMarkDone(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Nice! I\u0027ve marked this task as done:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"Vision-2000"},"content":"    public void showMarkNotDone(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"OK, I\u0027ve marked this task as not done yet:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"Vision-2000"},"content":"    public void showDelete(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Noted. I\u0027ve removed this task:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Vision-2000"},"content":"    public void showAdd(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Got it. I\u0027ve added this task:\\n \" + task);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"Vision-2000"},"content":"    public void showListSize(int size) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Vision-2000"},"content":"    public void showFound(String list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Vision-2000"},"content":"        this.showMessage(\"Here are the matching tasks in your list:\\n\" + list);","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Vision-2000"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Vision-2000"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Vision-2000":73}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"    public void parseEventArgTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"            String[] testArray \u003d Parser.parseEventArgument(\"Description /from 2019-12-02 /to 2019-12-03\");","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"            assertEquals(testArray[0], \"Description \");","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"            assertEquals(testArray[1], \" 2019-12-02 \");","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"            assertEquals(testArray[2], \" 2019-12-03\");","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        });","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":21}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"package tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Vision-2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Vision-2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Vision-2000"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"public class EventTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Vision-2000"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Vision-2000"},"content":"    public void eventFormatTest() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Vision-2000"},"content":"        Event e \u003d new Event(\"Description\", LocalDate.parse(\"2019-12-02\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Vision-2000"},"content":"                LocalDate.parse(\"2019-12-02\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"[E][ ] Description (from: Dec 2 2019 to: Dec 2 2019)\", e.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"E N Description /from 2019-12-02 /to 2019-12-02\", e.toSaveFormat());","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Vision-2000"},"content":"        e.isDone \u003d true;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"[E][X] Description (from: Dec 2 2019 to: Dec 2 2019)\", e.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Vision-2000"},"content":"        assertEquals(\"E Y Description /from 2019-12-02 /to 2019-12-02\", e.toSaveFormat());","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Vision-2000"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Vision-2000"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Vision-2000"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Vision-2000":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Vision-2000"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Vision-2000"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Vision-2000":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Vision-2000"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Vision-2000"},"content":"java -classpath ..\\bin Stille \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Vision-2000":2}}]
