[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"# TalkingBot project template","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"3. After that, locate the `src/main/java/TalkingBot.java` file, right-click it, and choose `Run TalkingBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":2,"-":22}},{"path":"data/talkingbot.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"T | 0 | read book","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"    public Deadline(String description, boolean isDone, String endTime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, \"\", endTime, TaskType.DEADLINE);","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"[D] %s (by: %s)\", super.toString(), super.getEndTime());","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"    public Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, startTime, endTime, TaskType.EVENT);","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"[E] %s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"                super.getStartTime(), super.getEndTime());","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":11}},{"path":"src/main/java/SaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"public class SaveFile {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"    private final File saveFile;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    private final String path;","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"    public SaveFile(String path) throws TalkingBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"        this.saveFile \u003d new File(path);","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"        if (!this.saveFile.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"                this.saveFile.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(\"ERROR! IOException occurred!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"    public TaskList getTasksFromFile() throws TalkingBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"            Scanner fileScanner \u003d new Scanner(this.saveFile);","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"                String curLine \u003d fileScanner.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"                taskList.addTask(Task.generateTaskFromFile(curLine));","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"            return taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(\"ERROR! File not found!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"    public void saveTasksToFile(TaskList taskList) throws TalkingBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"            StringBuilder strBuild \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"                Task curTask \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"                boolean isDone \u003d curTask.getDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"                int mark \u003d isDone ? 1 : 0;","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"                if (curTask.getTypeEquals(TaskType.TODO)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"                    strBuild.append(String.format(\"T | %d | %s\", mark,","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"                            curTask.getDescription()));","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"                } else if (curTask.getTypeEquals(TaskType.DEADLINE)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"                    strBuild.append(String.format(\"D | %d | %s | %s\", mark,","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"                            curTask.getDescription(), curTask.getEndTime()));","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"                } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"                    strBuild.append(String.format(\"E | %d | %s | %s | %s\", mark,","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"                            curTask.getDescription(), curTask.getStartTime(),","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"                            curTask.getEndTime()));","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"            fileWriter.write(strBuild.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"            throw new TalkingBotException(\"ERROR! IOException occurred!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":63}},{"path":"src/main/java/TalkingBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"public class TalkingBot {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"        String hLine \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"        String welcome \u003d \"\\tHello! I\u0027m TalkingBot\\n\\tWhat can I do for you?\";","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"        String fileName \u003d \"./data/talkingbot.txt\";","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"        System.out.println(hLine);","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"        System.out.println(welcome);","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"        System.out.println(hLine);","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"            SaveFile saveFile \u003d new SaveFile(fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"            TaskList taskList \u003d saveFile.getTasksFromFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"            while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"                String entry \u003d scanner.nextLine();","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"                if (entry.equals(\"bye\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"                    saveFile.saveTasksToFile(taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-01-21"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"                String[] curCommand \u003d entry.split(\" \");","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"                System.out.println(hLine);","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"                switch (curCommand[0]) {","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"                case \"list\":","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"                    System.out.println(taskList);","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-20"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"                    int markIdxInt \u003d Integer.valueOf(curCommand[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"                    Task modifiedTask \u003d taskList.getTask(markIdxInt - 1);","lastModifiedDate":"2024-01-20"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"                    if (curCommand[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"                        modifiedTask.setDone(true);","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\t\" + modifiedTask);","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"                    } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\tAlright, I\u0027ve marked this task as undone.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"                        modifiedTask.setDone(false);","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\t\" + modifiedTask);","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"                    }","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"                    taskList.setTask(markIdxInt - 1, modifiedTask);","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-21"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"                    // Fallthrough","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-21"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"                    // Fallthrough","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"                case \"event\":","lastModifiedDate":"2024-01-21"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"                    StringBuilder sbDescription \u003d new StringBuilder();","lastModifiedDate":"2024-01-21"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"                    for (int idx \u003d 1; idx \u003c curCommand.length; idx++) {","lastModifiedDate":"2024-01-21"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"                        sbDescription.append(curCommand[idx]);","lastModifiedDate":"2024-01-21"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"                        if (idx \u003c curCommand.length - 1) {","lastModifiedDate":"2024-01-21"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"                            sbDescription.append(\" \");","lastModifiedDate":"2024-01-21"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"                        }","lastModifiedDate":"2024-01-21"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"                    }","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"                    String fullDescription \u003d sbDescription.toString();","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"                    try {","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"                        Task curTask \u003d Task.generateTask(fullDescription, curCommand[0]);","lastModifiedDate":"2024-01-21"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"                        taskList.addTask(curTask);","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\tAlright, I\u0027ve added this task to your list:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\t\\t\" + curTask);","lastModifiedDate":"2024-01-21"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(String.format(\"\\tYou now have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"                    } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"\\t\" + e);","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"                    }","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"                    int deleteIdxInt \u003d Integer.valueOf(curCommand[1]);","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"                    Task removedTask \u003d taskList.removeTask(deleteIdxInt - 1);","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"                    System.out.println(\"\\tRemoving task:\");","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"                    System.out.println(String.format(\"\\t\\t%s\", removedTask));","lastModifiedDate":"2024-01-21"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"                    System.out.println(String.format(\"\\tYou now have %d tasks in the list.\", taskList.getSize()));","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"                case \"save\":","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"                    try {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"Saving tasks to file: \" + fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"                        saveFile.saveTasksToFile(taskList);","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(\"Save done!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"                    } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"                        System.out.println(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"                default:","lastModifiedDate":"2024-01-21"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"                    System.out.println(\"\\tERROR! Unknown command detected.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"                }","lastModifiedDate":"2024-01-20"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"                System.out.println(hLine);","lastModifiedDate":"2024-01-20"},{"lineNumber":89,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":90,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":91,"author":{"gitId":"wilsonwid"},"content":"            String bye \u003d \"\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-21"},{"lineNumber":92,"author":{"gitId":"wilsonwid"},"content":"            System.out.println(hLine);","lastModifiedDate":"2024-01-20"},{"lineNumber":93,"author":{"gitId":"wilsonwid"},"content":"            System.out.println(bye);","lastModifiedDate":"2024-01-20"},{"lineNumber":94,"author":{"gitId":"wilsonwid"},"content":"            System.out.println(hLine);","lastModifiedDate":"2024-01-20"},{"lineNumber":95,"author":{"gitId":"wilsonwid"},"content":"            scanner.close();","lastModifiedDate":"2024-01-20"},{"lineNumber":96,"author":{"gitId":"wilsonwid"},"content":"        } catch (TalkingBotException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"wilsonwid"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wilsonwid":98,"-":2}},{"path":"src/main/java/TalkingBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"public class TalkingBotException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"    public TalkingBotException(String errorMessage) {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"wilsonwid":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"public class Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"    private final String description;","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    private final String startTime;","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"    private final String endTime;","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"    private final TaskType taskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"    public Task(String description, boolean isDone, String startTime, String endTime, TaskType taskType) {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    public static Task generateTask(String fullDescription, String type)","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"            throws TalkingBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"            if (fullDescription.isEmpty()) {","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(\"ERROR! todo descriptions cannot be empty\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"                        \" nor only containing whitespaces.\");","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"            return new Todo(fullDescription, false);","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2024-01-21"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"            String[] splitArr \u003d fullDescription.split(\" /by \");","lastModifiedDate":"2024-01-21"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"                return new Deadline(splitArr[0], false, splitArr[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"            } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2024-01-21"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"                    \"ERROR! deadline descriptions cannot be empty and must have a /by\" +","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"                    \" property.\"","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"                );","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"        } else {","lastModifiedDate":"2024-01-21"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"            String[] splitArr \u003d fullDescription.split(\"( /from )|( /to )\");","lastModifiedDate":"2024-01-21"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"            try {","lastModifiedDate":"2024-01-21"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"                return new Event(splitArr[0], false, splitArr[1], splitArr[2]);","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"            } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2024-01-21"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"                throw new TalkingBotException(","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"                    \"ERROR! event descriptions cannot be empty, and must have\" +","lastModifiedDate":"2024-01-21"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"                    \" /from and /to properties.\"","lastModifiedDate":"2024-01-21"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"                );","lastModifiedDate":"2024-01-21"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":47,"author":{"gitId":"wilsonwid"},"content":"    public static Task generateTaskFromFile(String line) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"wilsonwid"},"content":"        String[] lineArr \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"wilsonwid"},"content":"        boolean mark \u003d Boolean.parseBoolean(lineArr[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"wilsonwid"},"content":"        if (lineArr[0].equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"wilsonwid"},"content":"            return new Todo(lineArr[2], mark);","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"wilsonwid"},"content":"        } else if (lineArr[0].equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"wilsonwid"},"content":"            return new Deadline(lineArr[2], mark, lineArr[3]);","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"wilsonwid"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"wilsonwid"},"content":"            return new Event(lineArr[2], mark, lineArr[3], lineArr[4]);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"wilsonwid"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-20"},{"lineNumber":60,"author":{"gitId":"wilsonwid"},"content":"        return this.description;","lastModifiedDate":"2024-01-20"},{"lineNumber":61,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":62,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":63,"author":{"gitId":"wilsonwid"},"content":"    public String getStartTime() {","lastModifiedDate":"2024-01-21"},{"lineNumber":64,"author":{"gitId":"wilsonwid"},"content":"        return this.startTime;","lastModifiedDate":"2024-01-21"},{"lineNumber":65,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":66,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":67,"author":{"gitId":"wilsonwid"},"content":"    public String getEndTime() {","lastModifiedDate":"2024-01-21"},{"lineNumber":68,"author":{"gitId":"wilsonwid"},"content":"        return this.endTime;","lastModifiedDate":"2024-01-21"},{"lineNumber":69,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"wilsonwid"},"content":"    public boolean getTypeEquals(TaskType taskType) {","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"wilsonwid"},"content":"        return this.taskType.equals(taskType);","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":74,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":75,"author":{"gitId":"wilsonwid"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-01-20"},{"lineNumber":76,"author":{"gitId":"wilsonwid"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":78,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":79,"author":{"gitId":"wilsonwid"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"wilsonwid"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":82,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":83,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":84,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":85,"author":{"gitId":"wilsonwid"},"content":"        String addMark \u003d this.getDone() ? \"X\" : \" \";","lastModifiedDate":"2024-01-20"},{"lineNumber":86,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"[%s] %s\", addMark, this.getDescription());","lastModifiedDate":"2024-01-20"},{"lineNumber":87,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":88,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"wilsonwid":88}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"public class TaskList {","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"wilsonwid"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"wilsonwid"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"    public Task removeTask(int idx) {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"wilsonwid"},"content":"        return this.tasks.remove(idx);","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"wilsonwid"},"content":"    public Task getTask(int idx) {","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"wilsonwid"},"content":"    public void setTask(int idx, Task task) {","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"wilsonwid"},"content":"        this.tasks.set(idx, task);","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"wilsonwid"},"content":"    public int getSize() {","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"wilsonwid"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":33,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":34,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":35,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":36,"author":{"gitId":"wilsonwid"},"content":"        StringBuilder returnedString \u003d new StringBuilder();","lastModifiedDate":"2024-01-20"},{"lineNumber":37,"author":{"gitId":"wilsonwid"},"content":"        returnedString.append(\"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2024-01-21"},{"lineNumber":38,"author":{"gitId":"wilsonwid"},"content":"        for (int idx \u003d 0; idx \u003c this.tasks.size(); idx++) {","lastModifiedDate":"2024-01-20"},{"lineNumber":39,"author":{"gitId":"wilsonwid"},"content":"            returnedString.append(String.format(\"\\t%d. %s\", idx+1, this.getTask(idx).toString()));","lastModifiedDate":"2024-01-20"},{"lineNumber":40,"author":{"gitId":"wilsonwid"},"content":"            if (idx !\u003d this.tasks.size() - 1) {","lastModifiedDate":"2024-01-20"},{"lineNumber":41,"author":{"gitId":"wilsonwid"},"content":"                returnedString.append(\"\\n\");","lastModifiedDate":"2024-01-20"},{"lineNumber":42,"author":{"gitId":"wilsonwid"},"content":"            }","lastModifiedDate":"2024-01-20"},{"lineNumber":43,"author":{"gitId":"wilsonwid"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":44,"author":{"gitId":"wilsonwid"},"content":"        return returnedString.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":45,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":46,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"wilsonwid":46}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"public enum TaskType {","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":3}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"        super(description, isDone, \"\", \"\", TaskType.TODO);","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"    @Override","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"    public String toString() {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"        return String.format(\"[T] %s\", super.toString());","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wilsonwid"},"content":"todo make sushi","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"wilsonwid"},"content":"deadline create social media post /by Sunday","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"wilsonwid"},"content":"event make salad /from 1pm /to 2pm today","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"wilsonwid"},"content":"mark 3","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"wilsonwid"},"content":"mark 2","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"wilsonwid"},"content":"unmark 2","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"wilsonwid"},"content":"list","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"wilsonwid"},"content":"bye","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"wilsonwid":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wilsonwid"},"content":"java -classpath ..\\bin TalkingBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"wilsonwid"},"content":"java -classpath ../bin TalkingBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wilsonwid":1,"-":37}}]
