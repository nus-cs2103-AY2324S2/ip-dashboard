[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iamtr":2,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ]  ","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ]  ","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ]  ","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ] hi","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":" * The main class of the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":" * Runs the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    private Tasklist tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    public Duke() {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"        tasklist \u003d new Tasklist();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        duke.run();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"     * Keeps receiving commands from the user and executing them until the user types \"bye\".","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        while (!isBye) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"            String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"            isBye \u003d parser.parseCommand(command, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iamtr":39,"-":4}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"iamtr":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":" * Represents a parser that parses user input and executes the corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    protected Tasklist todolist;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    public Parser() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"        todolist \u003d new Tasklist();","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"     * Parses the user input and executes the corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"     * @param storage The storage for the tasklist.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"     * @return True if the user input is \"bye\", false otherwise.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    public boolean parseCommand(String input, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"        int taskNumber;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        switch (command) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        case \"list\":","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"            output \u003d todolist.printTodolist();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"                storage.saveData(todolist.getTodolist());","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"                System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"            taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"            todolist.markTaskAsDone(taskNumber, true);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"            output \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t\" + todolist.getTaskString(taskNumber);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"            taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"            todolist.markTaskAsDone(taskNumber, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"            output \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + todolist.getTaskString(taskNumber);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"                if (details.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"                Task todo \u003d new Todo(details, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"                output \u003d \"added todo: \" + todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"                todolist.addItem(todo);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"                output \u003d e.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"            String deadlineName;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"            LocalDate by;","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"            Task deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"                String[] d \u003d details.split(\"/by\");","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"                if (d.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"                    throw new DukeException(\"Invalid deadline task!\\n\\t\"","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"                            + \"Format: \u0027deadline [deadline name] /by yyyy-mm-dd\u0027\");","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"                deadlineName \u003d d[0].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"iamtr"},"content":"                by \u003d LocalDate.parse(d[1].trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"                deadline \u003d new Deadline(deadlineName, by, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"iamtr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"                output \u003d e.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"                output \u003d \"Please specify the correct format date: yyyy-mm-dd\";","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"iamtr"},"content":"            todolist.addItem(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"iamtr"},"content":"            output \u003d \"added deadline: \" + deadline.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"iamtr"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"iamtr"},"content":"        case \"event\":","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"iamtr"},"content":"            String eventName \u003d details.split(\"/from \")[0].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"iamtr"},"content":"            LocalDate from \u003d LocalDate.parse(details.split(\"/from \")[1].split(\" /to\")[0].trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"iamtr"},"content":"            LocalDate to \u003d LocalDate.parse(details.split(\"/to \")[1].trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"iamtr"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"iamtr"},"content":"                Task event \u003d new Event(eventName, from, to, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"iamtr"},"content":"                todolist.addItem(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"iamtr"},"content":"                output \u003d \"added event: \" + event.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"iamtr"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"iamtr"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"iamtr"},"content":"                output \u003d \"Please specify the correct format date: yyyy-mm-dd\";","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"iamtr"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"iamtr"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"iamtr"},"content":"            taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"iamtr"},"content":"            Task t \u003d todolist.removeItem(taskNumber);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"iamtr"},"content":"            output \u003d \"Noted. I\u0027ve removed this task:\" + t.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"iamtr"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"iamtr"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"iamtr"},"content":"            return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"iamtr"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"iamtr"},"content":"            DukeException e \u003d new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"iamtr"},"content":"            output \u003d e.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"iamtr"},"content":"        if (!output.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(output);","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"iamtr"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":125}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":" * Represents the storage for the tasklist.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"public class Storage {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"    private static final Path path \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     * Loads the data from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"     * @return The data from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"     * @throws IOException If an error occurs while reading from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    public static List\u003cString\u003e loadData() throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"        Path dirPath \u003d path.getParent();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        Files.createDirectories(dirPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"        return Files.readAllLines(path);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"     * Saves the data to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"     * @param todolist The data to be saved.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"    public void saveData(List\u003cTask\u003e todolist) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"        String entry;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        Path dirPath \u003d java.nio.file.Paths.get(\"data\");","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        Path fullPath \u003d dirPath.resolve(\"duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        Files.createDirectories(dirPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"        try (FileWriter fw \u003d new FileWriter(fullPath.toString(), false)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"            for (Task t : todolist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"                entry \u003d t.getDataString() + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"                fw.write(entry);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"            throw e;","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     * @param by The deadline of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + by;","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"iamtr":32}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     * @param from The start date of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"     * @param to The end date of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"iamtr":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":" * Represents a task, which is a base class for other tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"     * Returns the status icon of the task, either \"X\" or \"\"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"    public void markAsDone(boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"     * Gets the full state of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"     * E.g. \"T | 0 | read book\"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"        return \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"        return this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"iamtr":61}},{"path":"src/main/java/duke/task/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":" * Represents a list of tasks, with methods for operations on task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"public class Tasklist {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    private List\u003cTask\u003e todolist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    public Tasklist() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"        restoreData();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    public void addItem(Task item) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"        todolist.add(item);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    public Task removeItem(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        return todolist.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        return todolist.isEmpty();","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"     * Prints the list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"     * @return The list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"    public String printTodolist() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        if (isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"            s \u003d new StringBuilder(\"Todolist is empty!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"            return s.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        for (Task t : todolist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"            s.append(i).append(\". \").append(t.toString()).append(\"\\n\\t\");","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"            i++;","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        return s.toString().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"     * Marks a task as done or undone in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    public void markTaskAsDone(int taskNumber, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"        todolist.get(taskNumber).markAsDone(isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"     * Gets the list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"     * @return The list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"    public List\u003cTask\u003e getTodolist() {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"        return todolist;","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"     * Gets the string representation of a task in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"     * @param taskNumber The index of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"    public String getTaskString(int taskNumber) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"        return todolist.get(taskNumber).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"     * Restores the data from existing file, if any.","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"iamtr"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"iamtr"},"content":"    public void restoreData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"            boolean isDone;","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"            List\u003cString\u003e tasks \u003d Storage.loadData();","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"            for (String task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"                String[] details \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"                isDone \u003d !Objects.equals(details[1], \"0\");","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"iamtr"},"content":"                for (int i \u003d 0; i \u003c details.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"iamtr"},"content":"                    details[i] \u003d details[i].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"iamtr"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"iamtr"},"content":"                if (details[0].equals(\"T\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"iamtr"},"content":"                    addItem(new Todo(details[2], isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"iamtr"},"content":"                } else if (details[0].equals(\"D\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"iamtr"},"content":"                    addItem(new Deadline(details[2], LocalDate.parse(details[3]), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"iamtr"},"content":"                } else if (details[0].equals(\"E\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"iamtr"},"content":"                    addItem(new Event(details[2], LocalDate.parse(details[3]), LocalDate.parse(details[4]), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"iamtr"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"iamtr"},"content":"            System.out.println(\"An error has occured while executing loadData()\");","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":109}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"     * Constructor for Todo.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"     * @param isDone The status of the todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + super.getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"iamtr":28}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"    private static final String SEP \u003d \"\\t__________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    private final Scanner in;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    public Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"        this(System.in, System.out);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"     * @param in The input stream of the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"     * @param out The output stream of the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        this.out \u003d out;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"     * Prints a message to the user with dividers.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"    public void printMessage(String... message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        out.println(SEP);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"        for (String m : message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"            System.out.println(\"\\t\" + m);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        out.println(SEP);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        String[] s \u003d {\"Hello! I\u0027m JOSEPH JOSHTUR!!!\", \"What can I do for you?\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        printMessage(s);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"    public void printByeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"        String[] s \u003d {\"Bye. Hope to see you again soon!\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"        printMessage(s);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"     * Gets the command from the user\u0027s input on the console.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"     * @return The command from the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"    public String getCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"        while (input.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"        return input.trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":72}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":" * Represents a test class for Parser","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"        System.setOut(new PrintStream(outContent)); // Redirect System.out to capture the output for testing","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"        // Assuming there\u0027s already a task in the list","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"        parser.parseCommand(\"todo read book\", ui, storage); // Add a task first","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"        String markInput \u003d \"mark 1\";","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        parser.parseCommand(markInput, ui, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(\"Nice! I\u0027ve marked this task as done\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    public void testAddTodo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        parser.parseCommand(input, ui, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(\"added todo: [T][ ] read book\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"    public void testInvalidCommand() {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        String input \u003d \"dance\";","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        parser.parseCommand(input, ui, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"    public void testEmptyTodo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"        parser.parseCommand(\"todo\", ui, storage);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(\"OOPS!!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"iamtr":58}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":" * Represents a test class for Ui","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"public class UiTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(new ByteArrayInputStream(\"\".getBytes()), System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    @AfterEach","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    public void tearDown() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    public void testPrintMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        String message \u003d \"This is a test message.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        ui.printMessage(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        String expectedOutput \u003d \"\\t__________________________________________\\r\\n\\t\"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"                + message + \"\\r\\n\\t__________________________________________\\r\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(expectedOutput));","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"    public void testPrintWelcomeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        String welcomeMessage1 \u003d \"Hello! I\u0027m JOSEPH JOSHTUR!!!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"        String welcomeMessage2 \u003d \"What can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(welcomeMessage1));","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(welcomeMessage2));","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    public void testPrintByeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"        String byeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(byeMessage));","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"    public void testGetCommand() {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"        String simulatedUserInput \u003d \"test command\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"        System.setIn(new ByteArrayInputStream(simulatedUserInput.getBytes()));","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"        assertEquals(\"test command\", command, \"getCommand should return the input trimmed and normalized.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"    public void testGetCommandWithLeadingAndTrailingSpaces() {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"        String simulatedUserInput \u003d \"   test command   \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"        System.setIn(new ByteArrayInputStream(simulatedUserInput.getBytes()));","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"        assertEquals(\"test command\", command, \"getCommand should trim leading and trailing spaces.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"    public void testGetCommandWithEmptyInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"        // Providing multiple lines of input where the first one is empty","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"        // to simulate pressing enter without typing anything and then providing valid input","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"iamtr"},"content":"        String simulatedUserInput \u003d \"\\nvalid command\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"        System.setIn(new ByteArrayInputStream(simulatedUserInput.getBytes()));","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"        assertEquals(\"valid command\", command, \"getCommand should ignore empty lines and wait for valid input.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"iamtr":92}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"todo t1","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iamtr":3}}]
