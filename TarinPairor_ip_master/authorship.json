[{"path":"src/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"[T][ ] a","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"[T][X] b","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import processor.Processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":" * The Duke class is responsible for running the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    private final Ui chatbotUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    private final Processor processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Duke object with the specified Ui, TaskList, Processor, and Parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"    public Duke() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"        chatbotUi \u003d new Ui();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"        processor \u003d new Processor(taskList, chatbotUi);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"        parser \u003d new Parser(processor);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"     * Runs the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while running the chatbot","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        // Greet User","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"        System.out.print(chatbotUi.greetingBox());","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        String userInput;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"        do {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"            userInput \u003d chatbotUi.getCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"            parser.processCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"        } while (true);","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"        System.out.println(chatbotUi.dividerWrapper(Ui.bye()));","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"        d.run();","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":52,"-":4}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import processor.Processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":" * The Parser class is responsible for processing user commands and delegating them to the appropriate methods in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"    private final Processor processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Parser object with the specified Processor.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"     * @param processor the Processor object to be used for processing user commands","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    public Parser(Processor processor) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"        this.processor \u003d processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"     * ","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    public void processCommand(String userInput) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"        if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputDeleteTask(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"        } else if (userInput.startsWith(\"mark\") || userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputProcessMarkUnmark(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputListTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputAddTask(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":38}},{"path":"src/main/java/processor/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":" * The Processor class is responsible for processing user input and performing operations on the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":" * It interacts with the TaskList, Ui, and Storage classes to handle user commands and manage tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"public class Processor {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"    private Ui chatbotUi;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    public Processor(TaskList taskList, Ui chatbotUi) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"        this.chatbotUi \u003d chatbotUi;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"        //this.file \u003d new File(\"src/data/tasks.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        this.storage \u003d new Storage(\"src/data/tasks.txt\", taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"     *Specifically, this method processes the user command to mark or unmark a task in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"    public void userInputProcessMarkUnmark(String userInput) throws IOException{","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        String[] array \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"        String command \u003d array[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"            int number \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"                taskList.markTask(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(chatbotUi.mark() + \"\\n\" + taskList.getTaskAtIndex(number - 1)));","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"                taskList.unmarkTask(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(chatbotUi.unmark() + \"\\n\" + taskList.getTaskAtIndex(number - 1)));","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"            storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must use a number to mark.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must select a number within the size of the Task List.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to add a task to the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"    public void userInputAddTask(String userInput) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Can not type a blank input!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"        if (!(command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\"))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"I do not know what type of task that is!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"       if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"           System.out.println(chatbotUi.dividerWrapper(\"Description of todo can\u0027t be blank!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"           return;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"       }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"        String description \u003d tokens[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"        String times[] \u003d userInput.split(\"//\");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"        String desc \u003d times[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"        int firstSpaceIndex \u003d desc.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"        String substringAfterSpace \u003d desc.substring(firstSpaceIndex + 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"        switch (command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"                taskList.addTask(new Task(description, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTaskAtIndex(taskList.size() - 1)","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"                        + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"                if (times.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"                    System.out.println(chatbotUi.dividerWrapper(\"Wrong syntax! Must be `deadline \u003ctask\u003e //by \u003cdeadline\u003e`\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"                    return;","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"                String deadline \u003d times[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"                if (!deadline.startsWith(\"by \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"                    System.out.println(chatbotUi.dividerWrapper(\"You must start the statement with the word `//by`.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"TarinPairor"},"content":"                    return;","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TarinPairor"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"TarinPairor"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"TarinPairor"},"content":"                    //System.out.println(deadline + \" test\");","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"TarinPairor"},"content":"                    LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadline.substring(3), DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"TarinPairor"},"content":"                    String formattedDeadline \u003d deadlineDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"TarinPairor"},"content":"                    taskList.addDeadlineTask(substringAfterSpace, formattedDeadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"TarinPairor"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"TarinPairor"},"content":"                    System.out.println(chatbotUi.recommenderWrapper(\"Added the task, but recommend using the date/time format `M/d/yyyy HHmm` for better experience.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"TarinPairor"},"content":"                    taskList.addDeadlineTask(substringAfterSpace, deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"TarinPairor"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTaskAtIndex(taskList.size() - 1)","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"TarinPairor"},"content":"                        + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"TarinPairor"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"TarinPairor"},"content":"            case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"TarinPairor"},"content":"                if (times.length \u003c 3) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"TarinPairor"},"content":"                    System.out.println(chatbotUi.dividerWrapper(\"Wrong syntax! Must be `event \u003ctask\u003e //from \u003cstart date\u003e //to \u003cend date\u003e`\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"TarinPairor"},"content":"                    return;","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"TarinPairor"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"TarinPairor"},"content":"                String start \u003d times[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"TarinPairor"},"content":"                String end \u003d times[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"TarinPairor"},"content":"                if (!start.startsWith(\"from \") || !end.startsWith(\"to \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"TarinPairor"},"content":"                    System.out.println(chatbotUi.dividerWrapper(\"You must start the statements with the words `//from` and `//to`.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"TarinPairor"},"content":"                    return;","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"TarinPairor"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"TarinPairor"},"content":"                try {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"TarinPairor"},"content":"                    LocalDateTime startDateTime \u003d LocalDateTime.parse(start.substring(5), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"TarinPairor"},"content":"                    LocalDateTime endDateTime \u003d LocalDateTime.parse(end.substring(3), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"TarinPairor"},"content":"                    String formattedStart \u003d startDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"TarinPairor"},"content":"                    String formattedEnd \u003d endDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"TarinPairor"},"content":"                    taskList.addEventTask(substringAfterSpace, formattedStart, formattedEnd);","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"TarinPairor"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"TarinPairor"},"content":"                    System.out.println(chatbotUi.recommenderWrapper(\"Added the task, but recommend using the date/time format `M/d/yyyy HHmm` on both start and end dates for better experience.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"TarinPairor"},"content":"                    taskList.addEventTask(substringAfterSpace, start, end.substring(3)); //substring(3) to remove \"to \"","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"TarinPairor"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTaskAtIndex(taskList.size() - 1)","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"TarinPairor"},"content":"                        + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"TarinPairor"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"TarinPairor"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Invalid command. Please enter a valid command.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"TarinPairor"},"content":"        storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to list all tasks in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"TarinPairor"},"content":"    public void userInputListTasks() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"TarinPairor"},"content":"        // if array empty","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"TarinPairor"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Your list is empty\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"TarinPairor"},"content":"        else {","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Here are the tasks in your list: \\n\" + storage.generateTasks()));","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to delete a task from the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"TarinPairor"},"content":"    public void userInputDeleteTask(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"TarinPairor"},"content":"        String[] array \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"TarinPairor"},"content":"            int number \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"TarinPairor"},"content":"            Task temp \u003d taskList.getTaskAtIndex(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"TarinPairor"},"content":"            taskList.deleteAtIndex(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Noted. I\u0027ve removed this task:\\n\" + temp + \"\\nNow you have \"+ taskList.size() + \" tasks in the list\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"TarinPairor"},"content":"            storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"TarinPairor"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must use a number to delete successfully.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"TarinPairor"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"TarinPairor"},"content":"            // System.out.println(e)","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"TarinPairor"},"content":"            if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Can not delete, task list is empty!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must select a number within the scope of the task list\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"TarinPairor"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Error writing to file.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":205}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":" * The Storage class is responsible for reading and writing tasks to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Storage object with the specified file path and TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"     * @param filePath the file path of the file to be used for storing tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"     * @param taskList the TaskList object to be used for storing tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    public Storage(String filePath, TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"     * Writes the tasks to the file and adds them to the TaskList representation.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while reading the file","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    public void writeToFile() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"            writer.write(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"            writer.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"    } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        System.out.println(\"Error writing to file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"     * Generates a String representation of the tasks in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"     * @return a String representation of the tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while generating the String representation","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"    public String generateTasks() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"        String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"            tasks.append(i++ + \". \").append(line).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"        reader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"        return tasks.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":57}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":" * The Task class represents a task in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"    private String desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"    private TaskType type;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    private String start, end;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"     * The TaskType enum represents the type of task.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"        TODO(\u0027T\u0027), DEADLINE(\u0027D\u0027), EVENT(\u0027E\u0027);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"        private char code;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"        TaskType(char code) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"            this.code \u003d code;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        public char getCode() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"            return code;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"    // Constructor for Todo task","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"    // Constructor for Deadline task","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"    public Task(String desc, boolean isDone, String start) {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"    // Constructor for Event task","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"    public Task(String desc, boolean isDone, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"    /*","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"     * mark() and unmark() methods are used to mark and unmark a task as done respectively.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"     * @return a String representation of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"        taskString.append(\"[\").append(type.getCode()).append(\"]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"        taskString.append(isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"        // Append task description","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"        taskString.append(\" \").append(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"        // Append date/time information if available","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"        if (type \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"            taskString.append(\" (\").append(start).append(\")\");","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"        } else if (type \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"            taskString.append(\" (\").append(start).append(\" to \").append(end).append(\")\");","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"        return taskString.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":87}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.util.*;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    private static List\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"     * Obtain List object with the specified list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"     * @return the list of tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        return taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"     * Adds a task to the list of tasks..","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"     * @param task the task to be added to the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a TaskList object with the specified list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"     * @return the number of tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"    public int size() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a representation of the Tasklist.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"     * @return a String representation of the tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"    public String showList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"            sb.append(i++).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"     * Gets a task at a specific index","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be retrieved","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"     * @return the task at the specified index","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"    public Task getTaskAtIndex(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"     * Deletes a task at a specific index","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"    public void deleteAtIndex(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"            taskList.remove(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"     * Marks a task at a specific index as done","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"        taskList.get(index).mark();","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"     * Unmarks a task at a specific index","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be unmarked","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"        taskList.get(index).unmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"    ","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"     * Adds a deadline task to the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"     * @param desc description of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"     * @param start start time of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"    public void addDeadlineTask(String desc, String start) {","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"        Task deadlineTask \u003d new Task(desc, false, start);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"        taskList.add(deadlineTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"     * Adds an event task to the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"     * @param desc description of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"     * @param start start time of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"TarinPairor"},"content":"     * @param end end time of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"TarinPairor"},"content":"    public void addEventTask(String desc, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"TarinPairor"},"content":"        Task eventTask \u003d new Task(desc, false, start, end);","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"TarinPairor"},"content":"        taskList.add(eventTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":113}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"public class Ui {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"    private static final String NAME \u003d \"Tartar\";","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"    private static final String GREETING \u003d String.format(\"Hello! I\u0027m %s\\n\", NAME);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"    private static final String QUESTION \u003d \"What can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    private static final String BYE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    private static final String MARKED \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    private static final String UNMARKED \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    private static final String RECOMMENDER \u003d \"RECCOMENDATION\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    private Scanner sc;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"    public Ui() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    public String greeting() {return GREETING;}","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"    public String divider() {return DIVIDER;}","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"    public String question() {return QUESTION;}","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"    public String mark() {return MARKED;}","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"    public String unmark() {return UNMARKED;}","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"    public static String bye() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        return BYE;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the given text wrapped in a divider.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"     * @param text the text to be wrapped in a divider","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the given text wrapped in a divider","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"    public String dividerWrapper(String text) {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        return divider() + text + \"\\n\" + divider();","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the given text wrapped in a recommender.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"     * @param text the text to be wrapped in a recommender","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the given text wrapped in a recommender","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"    public String recommenderWrapper(String text) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"        return RECOMMENDER + \"\\n\" + text + \"\\n\" + RECOMMENDER;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the greeting and question wrapped in a divider.","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the greeting and question wrapped in a divider","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"    public String greetingBox() {","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"        return dividerWrapper(greeting() + question());","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":74}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"todo something","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":2}}]
