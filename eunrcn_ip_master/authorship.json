[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"# *Skyler Feature Enhancement*","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"## *Changes Made*","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"1. Implemented new features and improvements for Skyler.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"2. Enhanced user experience with text-based interactions.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"3. Added functionality to manage tasks efficiently.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"## *Features Added*","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"- Managing tasks with Skyler is now text-based and easy to learn.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"- Skyler is FAST, SUPER FAST to use.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"- Download Skyler [here](https://github.com/eunrcn/ip).","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"- Double-click the downloaded file to launch Skyler.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"- Add your tasks and let Skyler manage them for you ðŸ˜‰.","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"- Skyler is FREE!","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"## *Features*","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"[x] Managing tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"[x] Managing deadlines.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"[   ] Reminders.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"\u003e skyler is the name of a very cutie doge","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"## *For Java Programmers*","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"If you are a Java programmer, you can use Skyler to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"```java","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"    private Skyler skyler \u003d new Skyler();","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSkyler(skyler);","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"            stage.setTitle(\"Skyler\");","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"            stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"eunrcn":50}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    // id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"// checkstyle {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"//     toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"// }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"    mainClass.set(\"skyler.main.Launcher\")","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"    archiveBaseName \u003d \u0027skyler\u0027","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"java {","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":28,"-":40}},{"path":"data/Git.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"1. Create and Switch to the Branch:","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"git checkout -b *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"2. Make the necessary change. During this process, commit your changes regularly.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"git add .","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"git commit -m \"Commit message\"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"git push origin *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"3. Switch to Master Branch:","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"git checkout master","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"4. Merge new branch to Master with a Merge Commit:","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"git merge --no-ff *branch name* -m \"Merge branch-Level-8 for Level 8 implementation\"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"This will create a merge commit even if it\u0027s a fast-forward merge.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"5. Tag the Merge Commit:","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"git tag *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"6. git push","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"git push origin master","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"git push origin *branch name*","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"git push origin --tags","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":23}},{"path":"data/Skyler.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"[E][ ] Team meeting (from: Jan 20 2022 to: Jan 21 2022)","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"eunrcn":1}},{"path":"data/jar.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"  ./gradlew build","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":" ","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":" java -jar build/libs/skyler.jar ","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"eunrcn":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"Skyler\u0027s User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"1. **List tasks:** Type `list` to display all your tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    list","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"2. **Add a to-do task:** Type `todo` followed by the task description.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    todo Buy groceries","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"3. **Add a deadline task:** Type `deadline` followed by the task description and the deadline in the format `/by yyyy-MM-dd`.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    deadline Complete project /by 2022-12-31","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"4. **Add an event task:** Type `event` followed by the task description, start date (`/from`), and end date (`/to`) in the format `/from yyyy-MM-dd /to yyyy-MM-dd`.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    event Team meeting /from 2022-12-01 /to 2022-12-02","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"5. **Delete a task:** Type `delete` followed by the task index.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    delete 2","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"6. **Undo the last action:** Type `undo` to revert the last task modification.","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"    undo","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"7. **Mark a task as done:** Type `mark` followed by the task index.","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"    mark 1","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2024-01-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"8. **Unmark a task (mark as undone):** Type `unmark` followed by the task index.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"    unmark 1","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"9. **Find tasks containing a keyword:** Type `find` followed by the keyword.","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"    find meeting","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"10. **View tasks on a specific date:** Type `view` followed by the date in the format `yyyy-MM-dd`.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"    Example:","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    view 2022-12-01","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"    ```","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"eunrcn":50,"-":21}},{"path":"src/main/java/skyler/exception/SkylerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.exception;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"public class SkylerException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    public SkylerException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        return getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":13}},{"path":"src/main/java/skyler/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    private final boolean isUser;","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"        this.isUser \u003d isUser; ","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        dialog.setTextFill(Color.BLACK);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"        setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        Color color \u003d isUser ? Color.LIGHTSKYBLUE : Color.LIGHTPINK;","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"        this.setBackground(","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"                new Background(","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"                        new BackgroundFill(","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"                                color,","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"                                new CornerRadii(10.0),","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"                                new Insets(5, 5, 5, 5)","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"                        )","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"                )","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"     * right.","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"    static DialogBox getSkylerDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"eunrcn":90}},{"path":"src/main/java/skyler/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"eunrcn":9}},{"path":"src/main/java/skyler/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    private Skyler skyler \u003d new Skyler();","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSkyler(skyler);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"            stage.setTitle(\"Skyler\");","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"eunrcn":30}},{"path":"src/main/java/skyler/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    private Skyler skyler;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"    private Image skylerImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Skyler.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    private Image teddyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Teddy.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"        showWelcomeMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    public void setSkyler(Skyler s) {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"        skyler \u003d s;","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"        String response;","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"            response \u003d skyler.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"        } catch (SkylerException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"            response \u003d \"Skyler: Woof, \" + e.getMessage() + \"\\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"        if (response.trim().isBlank()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"                    DialogBox.getUserDialog(input, skylerImage));","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"            return;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"                DialogBox.getUserDialog(input,","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"                        skylerImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"                DialogBox.getSkylerDialog(response, teddyImage));","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"                DialogBox.getSkylerDialog(\"Welcome to Skyler!\\nType \u0027help\u0027 for a list of possible commands. \", teddyImage));","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"eunrcn":70}},{"path":"src/main/java/skyler/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import skyler.task.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"     * Processes user input and performs corresponding actions based on the command","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"     * provided.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"     * @param userInput The user input to be processed.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error processing the user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    public static String processUserInput(String userInput) throws SkylerException {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.listTasks();","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.addTask(new ToDo(getTaskDescription(userInput, 4), false));","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"            String[] parts \u003d userInput.split(\"/by\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"            if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"                        \"Invalid \u0027deadline\u0027 command. Please provide a valid description and deadline.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"            LocalDate byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.addTask(new Deadline(description, byDate, false));","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"            String[] parts \u003d userInput.split(\"/from\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"            if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid \u0027event\u0027 command. Please provide a valid description and timeframe.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"            String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"            String from \u003d parts[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"            String to \u003d parts[1].split(\"/to\")[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"            LocalDate fromDate \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"            LocalDate toDate \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.addTask(new Event(description, fromDate, toDate, false));","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.deleteTask(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"undo\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.undoTask();","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.markTask(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.unmarkTask(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.findTasks(userInput.substring(5).trim());","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"view\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.viewTasksOnDate(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"help\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"            result \u003d TaskList.help();","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"    }else {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"        return result;","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"     * Extracts the task description from the user input, starting from the","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"     * specified index.","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"     * @param userInput  The user input containing the task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"     * @param startIndex The index from which to start extracting the description.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"     * @param keywords   Optional keywords to be removed from the beginning of the","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"     *                   description.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"     * @return The extracted task description.","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If the description is empty or if there is an error","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"     *                         extracting it.","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"    public static String getTaskDescription(String userInput, int startIndex, String... keywords)","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"            throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"        String description \u003d userInput.substring(startIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"            if (description.startsWith(keyword)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"                description \u003d description.substring(keyword.length()).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"                break;","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"        return description;","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":99}},{"path":"src/main/java/skyler/main/Skyler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"public class Skyler {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    public Skyler() {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Executing load from local\");","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"        Storage.loadTasksFromFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    public String getResponse(String userInput) throws SkylerException {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"            Ui.getByeMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"            Storage.saveTasksToFile();","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"            return \"Skyler: Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        return Parser.processUserInput(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":20}},{"path":"src/main/java/skyler/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"import skyler.task.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    private static final String FILE_PATH \u003d \"./data/Skyler.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"     * Loads tasks from the specified file path and adds them to the common tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"     * list.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"     * Assumes the file format is compatible with the task parsing logic in","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"     * parseTaskFromFile method.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"    public static void loadTasksFromFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d parseTaskFromFile(data);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"                tasks.add(task); // Add the task to the common list","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"            scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException | SkylerException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"An error occurred while loading tasks.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"     * Parses a task from the given data string, determining the task type (ToDo,","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"     * Deadline, Event)","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"     * and creating the corresponding Task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"     * @param data The string containing the task data in a specific format.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"     * @return The Task object parsed from the data string.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error parsing the task or if the task","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"     *                         type is unknown.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"    public static Task parseTaskFromFile(String data) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"        assert data !\u003d null : \"The \u0027data\u0027 parameter should not be null.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        String taskType \u003d data.substring(1, 2); // Extracting task type (T, D, E)","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"        boolean isDone \u003d data.charAt(4) \u003d\u003d \u0027X\u0027; // Assuming \u0027x\u0027 represents a completed task","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"        String details \u003d data.substring(7).trim(); // Extracting task details","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"            case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"                return new ToDo(details, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"            case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"                int byIndex \u003d details.indexOf(\"(by:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"                String descriptionD \u003d details.substring(0, byIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"                String byString \u003d details.substring(byIndex + 4, details.length() - 1).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"                LocalDate byDate \u003d LocalDate.parse(byString, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"                return new Deadline(descriptionD, byDate, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"            case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"                int fromIndex \u003d details.indexOf(\"(from:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"                int toIndex \u003d details.indexOf(\"to:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"                String descriptionE \u003d details.substring(0, fromIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"                String fromString \u003d details.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"                String toString \u003d details.substring(toIndex + 3, details.length() - 1).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"                LocalDate fromDate \u003d LocalDate.parse(fromString, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"                LocalDate toDate \u003d LocalDate.parse(toString, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"                return new Event(descriptionE, fromDate, toDate, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Unknown task type in the file: \" + data);","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"     * Saves the tasks from the common tasks list to the specified file path.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"     * Assumes the tasks have a valid toString method for serialization.","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"    public static void saveTasksToFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"            writer.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"An error occurred while saving tasks.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"     * Retrieves the common tasks list.","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"     * @return The list of tasks stored in the common tasks list.","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"    // Add this method to get the common tasks list for TaskList.java","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"    public static List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"        return tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":109}},{"path":"src/main/java/skyler/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"import skyler.task.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    private static List\u003cTask\u003e tasks \u003d Storage.getTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"     * Adds a new task to the task list, saves tasks to file, and returns a","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"     * confirmation message.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"     * @return A confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"    static String addTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"        Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"        return \"Skyler: Got it. I\u0027ve added this task:\\n  \" + task +","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"                \"\\nSkyler: Now you have \" + tasks.size()","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"                + \" tasks in the list.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"     * Lists all tasks in the task list with their respective indices.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"     * @return A string containing the list of tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"    static String listTasks() {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"        StringBuilder result \u003d new StringBuilder(\"Skyler: Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"            result.append(\" \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        return result.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"     * Deletes a task from the task list based on the provided user input, saves","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"     * tasks to file,","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"     * and returns a confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"     * @param userInput The user input specifying the task to be deleted.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"     * @return A confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error deleting the task or if the task","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"     *                         number is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"    public static String deleteTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"                Task removedTask \u003d tasks.remove(taskId - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"                return \"Skyler: Noted. I\u0027ve removed this task:\\n  \" + removedTask +","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"                        \"\\nSkyler: Now you have \" + tasks.size()","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"                        + \" tasks in the list.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027delete \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"     * Undoes the last task operation (add, delete, mark, unmark) and returns a","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"     * confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"     * @return A confirmation message for the undone task operation.","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error undoing the task operation or if","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"     *                         there are no operations to undo.","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"    public static String undoTask() throws SkylerException {","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Nothing to undo. Task list is empty.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"        // Retrieve and remove the last task operation","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"        Task lastTask \u003d tasks.remove(tasks.size() - 1);","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"        Storage.saveTasksToFile();","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"        return \"Skyler: Successfully undid the last task operation:\\n  \" + lastTask +","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"                \"\\nSkyler: Now you have \" + tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"     * Marks a task as done in the task list based on the provided user input, saves","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"     * tasks to file, and returns a confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"     * @param userInput The user input specifying the task to be marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"     * @return A confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error marking the task as done or if","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"     *                         the task number is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"    public static String markTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"                return \"Skyler: Nice! I\u0027ve marked this task as done:\\n  \" + task +","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":"                        \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027mark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"eunrcn"},"content":"     * Marks a task as not done in the task list based on the provided user input,","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"     * saves tasks to file, and returns a confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"eunrcn"},"content":"     * @param userInput The user input specifying the task to be marked as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"eunrcn"},"content":"     * @return A confirmation message.","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error marking the task as not done or","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"eunrcn"},"content":"     *                         if the task number is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"eunrcn"},"content":"    public static String unmarkTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"eunrcn"},"content":"                task.markAsUndone();","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"eunrcn"},"content":"                Storage.saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"eunrcn"},"content":"                return \"Skyler: OK, I\u0027ve marked this task as not done yet:\\n  \" + task +","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"eunrcn"},"content":"                        \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027unmark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"eunrcn"},"content":"     * Checks if the provided task ID is valid (within the range of existing tasks).","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"eunrcn"},"content":"     * @param taskId The task ID to be checked.","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"eunrcn"},"content":"     * @return True if the task ID is valid, false otherwise.","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"eunrcn"},"content":"    public static boolean isValidTaskId(int taskId) {","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"eunrcn"},"content":"        return taskId \u003e 0 \u0026\u0026 taskId \u003c\u003d tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"eunrcn"},"content":"     * Finds tasks containing the specified keyword and returns the result.","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"eunrcn"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"eunrcn"},"content":"     * @return A string containing the matching tasks or a message if no matches are","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"eunrcn"},"content":"     *         found.","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"eunrcn"},"content":"    public static String findTasks(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"eunrcn"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"eunrcn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"eunrcn"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"eunrcn"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"eunrcn"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"eunrcn"},"content":"            return \"Skyler: No matching tasks found.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":173,"author":{"gitId":"eunrcn"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"eunrcn"},"content":"            StringBuilder result \u003d new StringBuilder(\"Skyler: Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"eunrcn"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"eunrcn"},"content":"                result.append(\" \").append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"eunrcn"},"content":"            return result.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"eunrcn"},"content":"     * Views tasks on the specified date, based on the provided user input, and","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"eunrcn"},"content":"     * returns a string.","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"eunrcn"},"content":"     * @param userInput The user input specifying the date to view tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"eunrcn"},"content":"     * @return A string containing the tasks for the specified date.","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error viewing tasks or if the date","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"eunrcn"},"content":"     *                         format is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"eunrcn"},"content":"    public static String viewTasksOnDate(String userInput) throws SkylerException {","lastModifiedDate":"2024-02-11"},{"lineNumber":192,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"eunrcn"},"content":"            String dateString \u003d userInput.split(\" \")[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"eunrcn"},"content":"            LocalDate dateToView \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"eunrcn"},"content":"            StringBuilder result \u003d new StringBuilder(\"Skyler: Here are the tasks for \"","lastModifiedDate":"2024-02-11"},{"lineNumber":197,"author":{"gitId":"eunrcn"},"content":"                    + dateToView.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \":\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":198,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"eunrcn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"eunrcn"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"eunrcn"},"content":"                    LocalDate deadlineDate \u003d ((Deadline) task).getBy();","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"eunrcn"},"content":"                    if (deadlineDate.equals(dateToView)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"eunrcn"},"content":"                        result.append(\"  \").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":204,"author":{"gitId":"eunrcn"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"eunrcn"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"eunrcn"},"content":"                    LocalDate fromDate \u003d ((Event) task).getFrom();","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"eunrcn"},"content":"                    LocalDate toDate \u003d ((Event) task).getTo();","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"eunrcn"},"content":"                    if ((dateToView.isEqual(fromDate) || dateToView.isAfter(fromDate)) \u0026\u0026","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"eunrcn"},"content":"                            (dateToView.isEqual(toDate) || dateToView.isBefore(toDate))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":210,"author":{"gitId":"eunrcn"},"content":"                        result.append(\"  \").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":211,"author":{"gitId":"eunrcn"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"eunrcn"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"eunrcn"},"content":"            return result.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":216,"author":{"gitId":"eunrcn"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid \u0027view\u0027 command. Please provide a valid date in yyyy-MM-dd format.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":221,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":222,"author":{"gitId":"eunrcn"},"content":"     * Displays a user guide explaining how to use the TaskList features.","lastModifiedDate":"2024-02-23"},{"lineNumber":223,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":224,"author":{"gitId":"eunrcn"},"content":"     * @return A string containing the user guide.","lastModifiedDate":"2024-02-23"},{"lineNumber":225,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":226,"author":{"gitId":"eunrcn"},"content":"    public static String help() {","lastModifiedDate":"2024-02-23"},{"lineNumber":227,"author":{"gitId":"eunrcn"},"content":"        StringBuilder guide \u003d new StringBuilder(\"# Skyler TaskList User Guide\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Welcome to Skyler, your personal task management chatbot!\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":229,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":230,"author":{"gitId":"eunrcn"},"content":"        // 1. Adding Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":231,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 1. Adding Tasks\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":232,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"To add a new task, use one of the following commands:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":233,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":234,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"todo Buy groceries\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":235,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"deadline Submit report /by 2024-02-29\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":236,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"event Team meeting /from 2024-03-01 /to 2024-03-01\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":237,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":238,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Skyler will confirm the addition and update you on the total number of tasks in your list.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":239,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":240,"author":{"gitId":"eunrcn"},"content":"        // 2. Listing Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":241,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 2. Listing Tasks\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":242,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"To view all tasks in your list, use the following command:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":243,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":244,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"list\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":245,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Skyler will provide a numbered list of all your tasks.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":247,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":248,"author":{"gitId":"eunrcn"},"content":"        // 3. Deleting Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 3. Deleting Tasks\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"You can delete a task by specifying its number in the list. For example:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":252,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"delete 2\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":253,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":254,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"This will remove the task at position 2 in your list. Skyler will confirm the deletion and update you on the total number of tasks remaining.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":255,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":256,"author":{"gitId":"eunrcn"},"content":"        // 4. Undoing Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":257,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 4. Undoing Tasks\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":258,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Undo the last add operation with the following command:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":259,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":260,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"undo\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":261,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":262,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Skyler will confirm the undone operation and update you on the current state of your task list.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":263,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":264,"author":{"gitId":"eunrcn"},"content":"        // 5. Marking Tasks as Done","lastModifiedDate":"2024-02-23"},{"lineNumber":265,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 5. Marking Tasks as Done\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":266,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"To mark a task as done, use the following command:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":267,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":268,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"mark 3\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":269,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":270,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"This will mark the task at position 3 as done. Skyler will confirm the action.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":271,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":272,"author":{"gitId":"eunrcn"},"content":"        // 6. Marking Tasks as Not Done","lastModifiedDate":"2024-02-23"},{"lineNumber":273,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 6. Marking Tasks as Not Done\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":274,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"To mark a task as not done (undoing a previous mark), use the following command:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":275,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":276,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"unmark 3\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":277,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":278,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"This will unmark the task at position 3. Skyler will confirm the action.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":279,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":280,"author":{"gitId":"eunrcn"},"content":"        // 7. Finding Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":281,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 7. Finding Tasks\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":282,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"You can search for tasks containing a specific keyword:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":283,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":284,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"find groceries\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":285,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":286,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Skyler will provide a list of tasks that match the keyword.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":287,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":288,"author":{"gitId":"eunrcn"},"content":"        // 8. Viewing Tasks on a Specific Date","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"## 8. Viewing Tasks on a Specific Date\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"To view tasks scheduled for a particular date, use the following command:\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":292,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"view 2024-02-29\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":293,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"```\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":294,"author":{"gitId":"eunrcn"},"content":"        guide.append(\"Skyler will display tasks with deadlines or events on the specified date.\\n\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":295,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":296,"author":{"gitId":"eunrcn"},"content":"        return guide.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":297,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":298,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":299,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":299}},{"path":"src/main/java/skyler/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"     * Returns a greeting message including the chatbot\u0027s name and an introductory","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"     * message.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"     * @param chatbotName The name of the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"     * @return A greeting message.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    public static String getGreeting(String chatbotName) {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        StringBuilder greeting \u003d new StringBuilder(\"   /\\\\_/\\\\\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        greeting.append(\"  ( o.o ) Hello! I\u0027m \").append(chatbotName).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        greeting.append(\"   \u003e ^ \u003c What can I do for you?\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        return greeting.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"     * Prompts the user for input, reads the input from the provided scanner, and","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"     * returns the user\u0027s input.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"     * @param scanner The Scanner object used to read user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    public static String getUserInput(Scanner scanner) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"        return userInput + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"     * Returns a farewell message when the user decides to exit the chat.","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"     * @return A farewell message.","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"    public static String getByeMessage() {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"        return \"Skyler: Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":42}},{"path":"src/main/java/skyler/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"     * Constructs a Deadline task with the specified description, deadline date, and","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"     * completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"     * @param by          The deadline date.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error creating the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"     * Retrieves the deadline date of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"     * @return The deadline date.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"        return by;","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"     * Returns a string representation of the Deadline task, including its type,","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"     * description, and deadline date.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"     * @return The formatted string representation of the Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":44}},{"path":"src/main/java/skyler/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    private LocalDate from;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    private LocalDate to;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"     * Constructs an Event task with the specified description, start date, end","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"     * date, and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"     * @param to          The end date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"     * @throws SkylerException If there is an error creating the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"     * Retrieves the start date of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"     * @return The start date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"        return from;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"     * Retrieves the end date of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"     * @return The end date of the event.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        return to;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"     * Returns a string representation of the Event task, including its type,","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"     * description, start date, and end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"     * @return The formatted string representation of the Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":56}},{"path":"src/main/java/skyler/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"     * Returns the status icon representing whether the task is done or not done.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"     * @return The status icon.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"     * Returns a string representation of the task, including its status icon and","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"     * description.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":60}},{"path":"src/main/java/skyler/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"     * Constructs a ToDo task with the specified description and completion status.","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"     * Returns a string representation of the ToDo task, including its type and","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"     * description.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"     * @return The formatted string representation of the ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"eunrcn":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"skyler.main.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"eunrcn":19}},{"path":"src/test/java/skyler/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.main;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    public void processUserInput_eventCommand_addsEventTask() throws SkylerException {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d \"event Team meeting /from 2022-01-20 /to 2022-01-21\";","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"        Parser.processUserInput(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        assertEquals(\"[E][ ] Team meeting (from: Jan 20 2022 to: Jan 21 2022)\", Storage.getTasks().get(0).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"    public void processUserInput_invalidCommand_throwsSkylerException() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"        String userInput \u003d \"invalidCommand\";","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        assertThrows(SkylerException.class, () -\u003e Parser.processUserInput(userInput));","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":24}},{"path":"src/test/java/skyler/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"package skyler.task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"import skyler.exception.SkylerException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    public void testEventToString() throws SkylerException {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        LocalDate from \u003d LocalDate.of(2022, 2, 10);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        LocalDate to \u003d LocalDate.of(2022, 2, 15);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"        Event event \u003d new Event(\"Test Event\", from, to, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"        String expectedString \u003d \"[E][ ] Test Event (from: Feb 10 2022 to: Feb 15 2022)\";","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"eunrcn":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"todo read a book","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"java -classpath ../bin Skyler \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eunrcn":1,"-":37}}]
