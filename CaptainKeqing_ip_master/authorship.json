[{"path":"src/main/java/Lindi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"import javax.xml.stream.events.Characters;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"public class Lindi {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"    private final static Task[] taskList \u003d new Task[100];","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"    private static int taskListCount \u003d 0;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"    private static void parseInputAndExecute(String userInput) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"        class LocalFuncs {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"            void executeList(){","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"                for (int i \u003d 0; i \u003c taskListCount; i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(i+1 + \". \" + taskList[i]);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"            void executeNone(Task task){","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"                taskList[taskListCount++] \u003d task;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"Added: \" + task);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"            /**","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"             * Prints a goodbye message and Exits the program (return code 0)","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"             */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"CaptainKeqing"},"content":"            void goodByeAndExit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"CaptainKeqing"},"content":"                printSeparator();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"CaptainKeqing"},"content":"                System.exit(0); // exit with code 0, terminates program","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"CaptainKeqing"},"content":"            /**","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"CaptainKeqing"},"content":"             * @param listIndex: listIndex as shown by the `list` command, starts from 1","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"CaptainKeqing"},"content":"             */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"CaptainKeqing"},"content":"            void executeMark(int listIndex) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"CaptainKeqing"},"content":"                // Index starts from 1, up to 100","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"CaptainKeqing"},"content":"                if (listIndex \u003c 1 || listIndex \u003e taskListCount) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(\"Sorry, I can\u0027t find that task. Please enter a valid index\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"CaptainKeqing"},"content":"                            \"You can see the tasks list by inputting \\\"list\\\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"CaptainKeqing"},"content":"                Task task \u003d taskList[listIndex - 1];","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"CaptainKeqing"},"content":"                task.markDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"CaptainKeqing"},"content":"            /**","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"CaptainKeqing"},"content":"             * @param listIndex: listIndex as shown by the `list` command, starts from 1","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"CaptainKeqing"},"content":"             */","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"CaptainKeqing"},"content":"            void executeUnmark(int listIndex) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"CaptainKeqing"},"content":"                // Index starts from 1, up to 100","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"CaptainKeqing"},"content":"                if (listIndex \u003c 1 || listIndex \u003e taskListCount) {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"CaptainKeqing"},"content":"                    System.out.println(\"Sorry, I can\u0027t find that task. Please enter a valid index\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"CaptainKeqing"},"content":"                            \"You can see the tasks list by inputting \\\"list\\\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"CaptainKeqing"},"content":"                Task task \u003d taskList[listIndex - 1];","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"CaptainKeqing"},"content":"                task.unmarkDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"CaptainKeqing"},"content":"                System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"CaptainKeqing"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"CaptainKeqing"},"content":"        String[] userInputTokens \u003d userInput.split(\" \", 3);","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(userInputTokens.length);","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"CaptainKeqing"},"content":"        switch (userInputTokens[0]) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"CaptainKeqing"},"content":"            case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"CaptainKeqing"},"content":"                new LocalFuncs().executeList();","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"CaptainKeqing"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"CaptainKeqing"},"content":"                // Now check if the second token 1) exists, 2) is a number. Else, treat it as a new task.","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"CaptainKeqing"},"content":"                if (userInputTokens.length \u003d\u003d 2) { // check if there is only 1 argument after unmark command","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"CaptainKeqing"},"content":"                    // check if it is a number","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"CaptainKeqing"},"content":"                    if (isNumber(userInputTokens[1])) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"CaptainKeqing"},"content":"                        System.out.println(\"is number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"CaptainKeqing"},"content":"                        int taskIndex \u003d Integer.parseInt(userInputTokens[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"CaptainKeqing"},"content":"                        new LocalFuncs().executeUnmark(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"CaptainKeqing"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"CaptainKeqing"},"content":"                else {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"CaptainKeqing"},"content":"                    new LocalFuncs().executeNone(new Task(userInput));","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"CaptainKeqing"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"CaptainKeqing"},"content":"                // Now check if the second token 1) exists, 2) is a number. Else, treat it as a new task.","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"CaptainKeqing"},"content":"                if (userInputTokens.length \u003d\u003d 2) { // check if there is only 1 argument after unmark command","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"CaptainKeqing"},"content":"                    // check if it is a number","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"CaptainKeqing"},"content":"                    if (isNumber(userInputTokens[1])) {","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"CaptainKeqing"},"content":"                        int taskIndex \u003d Integer.parseInt(userInputTokens[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"CaptainKeqing"},"content":"                        new LocalFuncs().executeMark(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"CaptainKeqing"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"CaptainKeqing"},"content":"                else {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"CaptainKeqing"},"content":"                    new LocalFuncs().executeNone(new Task(userInput));","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"CaptainKeqing"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"CaptainKeqing"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"CaptainKeqing"},"content":"                new LocalFuncs().goodByeAndExit();","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"CaptainKeqing"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"CaptainKeqing"},"content":"                new LocalFuncs().executeNone(new Task(userInput));","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"CaptainKeqing"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"CaptainKeqing"},"content":"     * Prints a horizontal line for better readability","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"CaptainKeqing"},"content":"    private static void printSeparator() {","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(\"-\".repeat(50));","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"CaptainKeqing"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"CaptainKeqing"},"content":"     * Prints a greeting message.","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"CaptainKeqing"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"CaptainKeqing"},"content":"    private static void greeting() {","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"CaptainKeqing"},"content":"        String name \u003d \"Lindi\";  // Log It N Do It -\u003e LINDI","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"CaptainKeqing"},"content":"        printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(\"Hello! I\u0027m \" + name);","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"CaptainKeqing"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"CaptainKeqing"},"content":"        printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"CaptainKeqing"},"content":"    private static void chatLoop() {","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"CaptainKeqing"},"content":"        String userInput;","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"CaptainKeqing"},"content":"        while (true) { // This will not be an infinite loop, because goodByeAndExit() terminates the program when called","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"CaptainKeqing"},"content":"            userInput \u003d System.console().readLine(); // Note that System.console() does not work with IDE run","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"CaptainKeqing"},"content":"            printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"CaptainKeqing"},"content":"            parseInputAndExecute(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"CaptainKeqing"},"content":"            printSeparator();","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"CaptainKeqing"},"content":"    private static boolean isNumber(String s) {","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"CaptainKeqing"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"CaptainKeqing"},"content":"            Integer.valueOf(s);","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"CaptainKeqing"},"content":"            System.out.println(\"true number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"CaptainKeqing"},"content":"            return true;","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"CaptainKeqing"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"CaptainKeqing"},"content":"            System.out.println(\"false number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"CaptainKeqing"},"content":"            return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"CaptainKeqing"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"CaptainKeqing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"CaptainKeqing"},"content":"        greeting();","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"CaptainKeqing"},"content":"        chatLoop();","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"CaptainKeqing":148}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CaptainKeqing"},"content":"public class Task { // Adapted from Course Website","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"CaptainKeqing"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"CaptainKeqing"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"CaptainKeqing"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"CaptainKeqing"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"CaptainKeqing"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"CaptainKeqing"},"content":"    public void unmarkDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"CaptainKeqing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"CaptainKeqing"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"CaptainKeqing"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"CaptainKeqing"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"CaptainKeqing"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"CaptainKeqing"},"content":"                                isDone ? \"X\" : \" \",","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"CaptainKeqing"},"content":"                                this.description);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"CaptainKeqing"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"CaptainKeqing"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"CaptainKeqing":24}}]
