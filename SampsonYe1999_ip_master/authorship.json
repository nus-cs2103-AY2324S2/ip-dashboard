[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"    protected String by;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Hello! I\u0027m Duke101\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"        while (true) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"            try{","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"                processCommand(userInput, taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"            }catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"        scanner.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"SampsonYe1999"},"content":"    private static void displayList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"No tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"SampsonYe1999"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"SampsonYe1999"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"SampsonYe1999"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(((i + 1) + \".\" + task));","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"SampsonYe1999"},"content":"    private static void processCommand(String userInput, List\u003cTask\u003e taskList) throws Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"SampsonYe1999"},"content":"        if(userInput.trim().isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IllegalArgumentException(\"Command cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"SampsonYe1999"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"SampsonYe1999"},"content":"        try{","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"SampsonYe1999"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"SampsonYe1999"},"content":"                displayList(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"SampsonYe1999"},"content":"            } else if(command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")){","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"SampsonYe1999"},"content":"                addTask(userInput, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"SampsonYe1999"},"content":"            } else if(command.equals(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"SampsonYe1999"},"content":"                markTask(userInput, taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"SampsonYe1999"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"SampsonYe1999"},"content":"                unmarkTask(userInput, taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"SampsonYe1999"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"SampsonYe1999"},"content":"                deleteTask(userInput, taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"SampsonYe1999"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"SampsonYe1999"},"content":"                throw new DukeException(\"Hey, please choose from the following commands\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"SampsonYe1999"},"content":"                        \"if you want to add task, please use todo, deadline or event\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"SampsonYe1999"},"content":"                        \"if you want to mark or unmark task, please use mark or unmark\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"SampsonYe1999"},"content":"                        \"if you want delete a task, please use delete\\n\" +","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"SampsonYe1999"},"content":"                        \"if you want to view the existing task list, please enter list.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"SampsonYe1999"},"content":"        }catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"SampsonYe1999"},"content":"    private static void markTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"SampsonYe1999"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IllegalArgumentException(\"Please provide a task number.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"SampsonYe1999"},"content":"        int taskIndex \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IndexOutOfBoundsException(\"Please check how many tasks are there in your list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"SampsonYe1999"},"content":"        taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Nice, I\u0027ve marked this task as done for you:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println((taskList.get(taskIndex)));","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"SampsonYe1999"},"content":"    private static void unmarkTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"SampsonYe1999"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IllegalArgumentException(\"Please provide a task number.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"SampsonYe1999"},"content":"        int taskIndex \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IndexOutOfBoundsException(\"Please check how many tasks are there in your list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"SampsonYe1999"},"content":"        taskList.get(taskIndex).markAsUndone();","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Nice, I\u0027ve marked this task as undone for you:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println((taskList.get(taskIndex)));","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"SampsonYe1999"},"content":"    private static void addTask(String userInput, List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"SampsonYe1999"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"SampsonYe1999"},"content":"        String taskInfo \u003d parts[1];","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"SampsonYe1999"},"content":"        try{","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"SampsonYe1999"},"content":"            if (command.equals(\"todo\")){","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"SampsonYe1999"},"content":"                if(parts.length \u003c 2 || parts[1].trim().isEmpty()){","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"SampsonYe1999"},"content":"                    throw new IllegalArgumentException(\"The description of a todo task cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"SampsonYe1999"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"SampsonYe1999"},"content":"                ToDo newTask \u003d new ToDo(taskInfo);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"SampsonYe1999"},"content":"                taskList.add(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" task(s) left in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"SampsonYe1999"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"SampsonYe1999"},"content":"                String[] details \u003d taskInfo.split(\"/by\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"SampsonYe1999"},"content":"                if (details.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"SampsonYe1999"},"content":"                    throw new IllegalArgumentException(\"Invalid format for deadline, please include a task description and date/time details.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"SampsonYe1999"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"SampsonYe1999"},"content":"                String taskDescription \u003d details[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"SampsonYe1999"},"content":"                String deadline \u003d details[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"SampsonYe1999"},"content":"                Deadline newTask \u003d new Deadline(taskDescription, deadline);","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"SampsonYe1999"},"content":"                taskList.add(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" task(s) left in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"SampsonYe1999"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"SampsonYe1999"},"content":"                String[] taskDetails \u003d taskInfo.split(\"/from\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"SampsonYe1999"},"content":"                if (taskDetails.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"SampsonYe1999"},"content":"                    throw new IllegalArgumentException(\"Invalid format for event, please include a task description and date/time details.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"SampsonYe1999"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"SampsonYe1999"},"content":"                String taskDescription \u003d taskDetails[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"SampsonYe1999"},"content":"                String dateTimeDetails \u003d taskDetails[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"SampsonYe1999"},"content":"                String[] dateTimeSplit \u003d  dateTimeDetails.split(\"/to\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"SampsonYe1999"},"content":"                String from \u003d dateTimeSplit[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"SampsonYe1999"},"content":"                String until \u003d dateTimeSplit[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"SampsonYe1999"},"content":"                Event newTask \u003d new Event(taskDescription, from, until);","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"SampsonYe1999"},"content":"                taskList.add(newTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(newTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"SampsonYe1999"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" task(s) left in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"SampsonYe1999"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"SampsonYe1999"},"content":"        }catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"OOPS!!!\" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"SampsonYe1999"},"content":"            System.out.println(\"------------------------------\");","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"SampsonYe1999"},"content":"    private static void deleteTask(String userInput, List\u003cTask\u003e taskList) throws Exception{","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"SampsonYe1999"},"content":"        String[] parts \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"SampsonYe1999"},"content":"        if (parts.length \u003c 2 || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IllegalArgumentException(\"Please provide the task number to delete.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"SampsonYe1999"},"content":"        int taskIndex \u003d Integer.valueOf(parts[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"SampsonYe1999"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"SampsonYe1999"},"content":"            throw new IndexOutOfBoundsException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"SampsonYe1999"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":159,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"SampsonYe1999"},"content":"        Task removedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":162,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\" \" + removedTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) left in the list. \");","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"SampsonYe1999"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"SampsonYe1999":162}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"    protected String from;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"    protected String to;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"public class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"    protected String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"SampsonYe1999"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"SampsonYe1999"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"SampsonYe1999"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"SampsonYe1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"SampsonYe1999"},"content":"        return (this.getStatusIcon() + \" \" + this.description);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"SampsonYe1999":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SampsonYe1999"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"SampsonYe1999"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"SampsonYe1999"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"SampsonYe1999"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"SampsonYe1999"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"SampsonYe1999"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"SampsonYe1999"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"SampsonYe1999"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"SampsonYe1999"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"SampsonYe1999":10}}]
