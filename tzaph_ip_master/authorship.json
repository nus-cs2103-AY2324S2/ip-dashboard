[{"path":"src/main/java/Arona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"import exception.AronaIncompleteCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"import exception.AronaInvalidCommandException;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"import exception.AronaInvalidIndexException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"import task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"public class Arona {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"    private Storage tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"    Arona() {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"        tasks \u003d new Storage();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":"    private void greet() {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"Welcome, sensei! Arona has been waiting for you.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":"    private void exit() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"Thanks for the hard work, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"    private void listTasks() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"tzaph"},"content":"            System.out.println(\"Sensei! There are no tasks. \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"tzaph"},"content":"                    \"Take care of your health too. It\u0027s gotta take priority!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"tzaph"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"tzaph"},"content":"            System.out.println(\"Sensei! Pick a task. I\u0027ll back you up!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"tzaph"},"content":"        tasks.printElements();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"tzaph"},"content":"    private void addToDo(String str) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tzaph"},"content":"        ToDo task \u003d new ToDo(str);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tzaph"},"content":"        tasks.addElements(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"I\u0027ve added this task, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"Now, your task list has \" + tasks.taskCount() + \" task\"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"tzaph"},"content":"                + (tasks.taskCount() \u003d\u003d 1 ? \"\" : \"s\") + \".\");","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"tzaph"},"content":"    private void addDeadline(String str, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"tzaph"},"content":"        Deadline deadline \u003d new Deadline(str, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"tzaph"},"content":"        tasks.addElements(deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"I\u0027ve added this deadline, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"    \" + deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"Now, your task list has \" + tasks.taskCount() + \" task\"","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"tzaph"},"content":"                + (tasks.taskCount() \u003d\u003d 1 ? \"\" : \"s\") + \".\");","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"tzaph"},"content":"    private void addEvent(String str, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"tzaph"},"content":"        Event event \u003d new Event(str, start, end);","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"tzaph"},"content":"        tasks.addElements(event);","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"I\u0027ve added this event, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"    \" + event);","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"Now, your task list has \" + tasks.taskCount() + \" task\"","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"tzaph"},"content":"                + (tasks.taskCount() \u003d\u003d 1 ? \"\" : \"s\") + \".\");","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"tzaph"},"content":"    private void deleteTask(int id) {","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"I\u0027ve removed this task, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"    \" + tasks.getTask(id));","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"tzaph"},"content":"        tasks.deleteElements(id);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"Now, your task list has \" + tasks.taskCount() + \" task\"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"tzaph"},"content":"                + (tasks.taskCount() \u003d\u003d 1 ? \"\" : \"s\") + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"tzaph"},"content":"    private void markDone(int id) {","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"tzaph"},"content":"        tasks.markIndexAsDone(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"I\u0027ve marked this task as done, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"    \" + tasks.getTask(id));","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"tzaph"},"content":"    private void markUndone(int id) {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"tzaph"},"content":"        tasks.markIndexAsUndone(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"I\u0027ve marked this task as not done, Sensei!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"tzaph"},"content":"        System.out.println(\"    \" + tasks.getTask(id));","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"tzaph"},"content":"    private boolean processCommand(String command) throws AronaIncompleteCommandException, AronaInvalidIndexException, AronaInvalidCommandException {","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"tzaph"},"content":"        String[] commandSplit \u003d command.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"tzaph"},"content":"        if (commandSplit[0].equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"tzaph"},"content":"            return false;","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"tzaph"},"content":"        } else if (commandSplit[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"tzaph"},"content":"            listTasks();","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"tzaph"},"content":"        } else if (commandSplit[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"tzaph"},"content":"            if (commandSplit.length \u003d\u003d 1 || commandSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"index number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"tzaph"},"content":"            if (!tasks.checkIndexValidity(Integer.parseInt(commandSplit[1]))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"tzaph"},"content":"                throw new AronaInvalidIndexException(Integer.toString(tasks.taskCount()));","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"tzaph"},"content":"            int index \u003d Integer.parseInt(commandSplit[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"tzaph"},"content":"            markDone(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"tzaph"},"content":"        } else if (commandSplit[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"tzaph"},"content":"            if (commandSplit.length \u003d\u003d 1 || commandSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"index number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"tzaph"},"content":"            if (!tasks.checkIndexValidity(Integer.parseInt(commandSplit[1]))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"tzaph"},"content":"                throw new AronaInvalidIndexException(Integer.toString(tasks.taskCount()));","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"tzaph"},"content":"            int index \u003d Integer.parseInt(commandSplit[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"tzaph"},"content":"            markUndone(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"tzaph"},"content":"        } else if (commandSplit[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"tzaph"},"content":"            if (commandSplit.length \u003d\u003d 1 || commandSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"task description\");","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"tzaph"},"content":"            addToDo(commandSplit[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"tzaph"},"content":"        } else if (commandSplit[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"tzaph"},"content":"            if (commandSplit.length \u003d\u003d 1 || commandSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"task description\");","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"tzaph"},"content":"            String[] deadlineSplit \u003d commandSplit[1].split(\" /by \");","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"tzaph"},"content":"            if (deadlineSplit.length \u003d\u003d 1 || deadlineSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"deadline time\");","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"tzaph"},"content":"            addDeadline(deadlineSplit[0], deadlineSplit[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"tzaph"},"content":"        } else if (commandSplit[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"tzaph"},"content":"            if (commandSplit.length \u003d\u003d 1 || commandSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"task description\");","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"tzaph"},"content":"            String[] eventSplit \u003d commandSplit[1].split(\" /from \");","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"tzaph"},"content":"            if (eventSplit.length \u003d\u003d 1 || eventSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"start time\");","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"tzaph"},"content":"            String[] eventSplitTime \u003d eventSplit[1].split(\" /to \");","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"tzaph"},"content":"            if (eventSplitTime.length \u003d\u003d 1 || eventSplitTime[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"end time\");","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"tzaph"},"content":"            addEvent(eventSplit[0], eventSplitTime[0], eventSplitTime[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"tzaph"},"content":"        } else if(commandSplit[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"tzaph"},"content":"            if (commandSplit.length \u003d\u003d 1 || commandSplit[1].equals(\"\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"tzaph"},"content":"                throw new AronaIncompleteCommandException(\"index number\");","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"tzaph"},"content":"            if (!tasks.checkIndexValidity(Integer.parseInt(commandSplit[1]))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"tzaph"},"content":"                throw new AronaInvalidIndexException(Integer.toString(tasks.taskCount()));","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":158,"author":{"gitId":"tzaph"},"content":"            int index \u003d Integer.parseInt(commandSplit[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"tzaph"},"content":"            deleteTask(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"tzaph"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"tzaph"},"content":"            throw new AronaInvalidCommandException(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":162,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":163,"author":{"gitId":"tzaph"},"content":"        return true;","lastModifiedDate":"2024-01-25"},{"lineNumber":164,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"tzaph"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"tzaph"},"content":"        Arona arona \u003d new Arona();","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"tzaph"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"tzaph"},"content":"        String command;","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"tzaph"},"content":"        arona.greet();","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"tzaph"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"tzaph"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"tzaph"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"tzaph"},"content":"                if (!arona.processCommand(command))","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"tzaph"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"tzaph"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"tzaph"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"tzaph"},"content":"        arona.exit();","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"tzaph"},"content":"        scanner.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tzaph":186}},{"path":"src/main/java/exception/AronaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents an exception that might happen in the chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"public class AronaException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"    public AronaException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tzaph":12}},{"path":"src/main/java/exception/AronaIncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents an exception when the command argument is incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"public class AronaIncompleteCommandException extends AronaException {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"    public AronaIncompleteCommandException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"        super(\"Sorry, sensei! You are missing the \" + message + \" argument (\u003e.\u003c)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tzaph":12}},{"path":"src/main/java/exception/AronaInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents an exception when the command is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"public class AronaInvalidCommandException extends AronaException {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"    public AronaInvalidCommandException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"        super(\"Sorry, sensei! I don\u0027t understand your message (\u003e_\u003c)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tzaph":12}},{"path":"src/main/java/exception/AronaInvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents an exception when the index provided is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"public class AronaInvalidIndexException extends AronaException {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"    public AronaInvalidIndexException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"        super(\"Sorry, sensei! You only have \" + message + \" task\"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"                + (Integer.parseInt(message) \u003d\u003d 1 ? \"\" : \"s\")","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"                + \". Please choose a valid task number (\u003e.\u003c)\");","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"tzaph":14}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":"import java.time.temporal.TemporalAdjuster;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"import task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":" * The Storage class can modify and store the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":" * The task list is stored locally in a .txt file.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"     * The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tzaph"},"content":"     * A public constructor for the Storage class.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tzaph"},"content":"    public Storage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tzaph"},"content":"        tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tzaph"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tzaph"},"content":"            File dataFolder \u003d new File(\"./data\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tzaph"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tzaph"},"content":"                dataFolder.mkdir();","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"tzaph"},"content":"            File dataFile \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"tzaph"},"content":"            if (!dataFile.exists()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"tzaph"},"content":"                dataFolder.createNewFile();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"tzaph"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"tzaph"},"content":"                this.readTasksFromData();","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"tzaph"},"content":"        } catch (IOException error) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"tzaph"},"content":"            System.out.println(\"Sorry, Sensei! I seem to be struggling to load the tasks :(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"tzaph"},"content":"     * Fetches the locally saved data containing the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"tzaph"},"content":"     * @throws IOException - an exception thrown if the data is not read","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"tzaph"},"content":"    private void readTasksFromData() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"tzaph"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"tzaph"},"content":"        File dataFile \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"tzaph"},"content":"        Scanner istream \u003d new Scanner(dataFile);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"tzaph"},"content":"        while (istream.hasNextLine()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"tzaph"},"content":"            String[] streamSplit \u003d istream.nextLine().split(Pattern.quote(\"|\"), 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"tzaph"},"content":"            String taskType \u003d streamSplit[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"tzaph"},"content":"            String[] taskArguments \u003d streamSplit[1].split(Pattern.quote(\"|\"), 0);","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"tzaph"},"content":"            Task task;","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"tzaph"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"tzaph"},"content":"                task \u003d new ToDo(taskArguments[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"tzaph"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"tzaph"},"content":"                task \u003d new Deadline(taskArguments[1], taskArguments[2]);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"tzaph"},"content":"            } else { // if (taskType.equals(\"E\"))","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"tzaph"},"content":"                task \u003d new Event(taskArguments[1], taskArguments[2], taskArguments[3]);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"tzaph"},"content":"            if (taskArguments[0].equals(\"1\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"tzaph"},"content":"                task.setDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"tzaph"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"tzaph"},"content":"                task.setNotDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"tzaph"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"tzaph"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"tzaph"},"content":"        istream.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"tzaph"},"content":"     * Saves the task list to a local save data.","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"tzaph"},"content":"    private void writeTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"tzaph"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"tzaph"},"content":"            FileWriter ostream \u003d new FileWriter(\"./data/data.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"tzaph"},"content":"            for (Task task : this.tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"tzaph"},"content":"                ostream.write(task.toDataFormat() + \"\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"tzaph"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"tzaph"},"content":"            ostream.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"tzaph"},"content":"        } catch (IOException error) {","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"tzaph"},"content":"            System.out.println(\"Sorry, Sensei! I seem to be struggling to save the tasks :(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"tzaph"},"content":"     * Checks whether the list is empty or not.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"tzaph"},"content":"     * @return True if the list is empty, False otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"tzaph"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"tzaph"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"tzaph"},"content":"     * Checks whether the given index is available in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"tzaph"},"content":"     * @param id - the index to be checked","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"tzaph"},"content":"     * @return True if the index is inside bounds, False otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"tzaph"},"content":"    public boolean checkIndexValidity(int id) {","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"tzaph"},"content":"        id \u003d id - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"tzaph"},"content":"        return 0 \u003c\u003d id \u0026\u0026 id \u003c tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"tzaph"},"content":"     * Retrieves the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"tzaph"},"content":"     * @return The number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"tzaph"},"content":"    public int taskCount() {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"tzaph"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"tzaph"},"content":"     * Adds a task to the back of the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"tzaph"},"content":"     * @param task - the Task that is added to the list","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"tzaph"},"content":"    public void addElements(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"tzaph"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"tzaph"},"content":"        this.writeTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"tzaph"},"content":"     * Removes the task of a given index from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"tzaph"},"content":"     * @param id - the index of the task to be deleted","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"tzaph"},"content":"    public void deleteElements(int id) {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"tzaph"},"content":"        tasks.remove(id);","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"tzaph"},"content":"        this.writeTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"tzaph"},"content":"     * Prints the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"tzaph"},"content":"    public void printElements() {","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"tzaph"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"tzaph"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"tzaph"},"content":"     * Marks the task of given index from the list as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"tzaph"},"content":"     * @param id - the index of the task to be marked","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"tzaph"},"content":"    public void markIndexAsDone(int id) {","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"tzaph"},"content":"        Task task \u003d tasks.get(id);","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"tzaph"},"content":"        task.setDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"tzaph"},"content":"        this.writeTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"tzaph"},"content":"     * Marks the task of given index from the list as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"tzaph"},"content":"     * @param id - the index of the task to be unmarked","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"tzaph"},"content":"    public void markIndexAsUndone(int id) {","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"tzaph"},"content":"        Task task \u003d tasks.get(id);","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"tzaph"},"content":"        task.setNotDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"tzaph"},"content":"        this.writeTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"tzaph"},"content":"     * Retrieves the task of given index from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"tzaph"},"content":"     * @param id - the index","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"tzaph"},"content":"     * @return The task at index id","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"tzaph"},"content":"    public Task getTask(int id) {","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"tzaph"},"content":"        return tasks.get(id);","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tzaph":185}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents a \"Deadline\" task,","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" * which is a task with a deadline time attached.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"     * The due date of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"    protected String deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"     * A public constructor for the task.Deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"     * @param desc - the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"     * @param deadline - the deadline of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":"    public Deadline(String desc, String deadline) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":"        super(desc);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"    public String toDataFormat() {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"        return \"D|\" + super.toDataFormat() + \"|\" + this.deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tzaph"},"content":"     * Represent the task into a String format applicable for printing output.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tzaph"},"content":"     * Uses an extra [D] to represent a task.Deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tzaph"},"content":"     * @return A String representation of the task.Deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tzaph"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tzaph"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tzaph":39}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents a \"Event\" task,","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" * which is a task with a start time and end time attached.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"     * The start time of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"    String startTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"     * The end time of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"    String endTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":"     * A public constructor for the task.Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":"     * @param desc - the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":"     * @param startTime - the start time of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":"     * @param endTime - the end time of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"    public Event(String desc, String startTime, String endTime) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"        super(desc);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tzaph"},"content":"    public String toDataFormat() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tzaph"},"content":"        return \"E|\" + super.toDataFormat() + \"|\" + this.startTime + \"|\" + this.endTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tzaph"},"content":"     * Represent the task into a String format applicable for printing output.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tzaph"},"content":"     * Uses an extra [E] to represent a task.Event.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tzaph"},"content":"     * @return A String representation of the task.Event","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"tzaph"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"tzaph"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tzaph":45}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"     * The task name or description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"    protected String desc;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"     * Marker whether the task is done or not.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":"     * A public constructor for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":"     * A task is not done by default.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":"     * @param desc - the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":"    public Task(String desc) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tzaph"},"content":"     * Returns the representative icon for the status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tzaph"},"content":"     * @return A String representing the icon","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tzaph"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"tzaph"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"tzaph"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"tzaph"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"tzaph"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"tzaph"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"tzaph"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"tzaph"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"tzaph"},"content":"     * Represent the task into stored data.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"tzaph"},"content":"     * @return A String representing the data information of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"tzaph"},"content":"    public String toDataFormat() {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"tzaph"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"tzaph"},"content":"            return \"1|\" + this.desc;","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"tzaph"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"tzaph"},"content":"            return \"0|\" + this.desc;","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"tzaph"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"tzaph"},"content":"     * Represent the task into a String format applicable for printing output.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"tzaph"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"tzaph"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"tzaph"},"content":"        return getStatusIcon() + \" \" + this.desc;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tzaph":70}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":" * Represents a \"To Do\" task,","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":" * which is a task with no time attached.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":" * @author Maximilliano Utomo","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"     * A public constructor for the task.Todo.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"     * @param desc - the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"        super(desc);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":"    public String toDataFormat() {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":"        return \"T|\" + super.toDataFormat();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"     * Represent the task into a String format applicable for printing output.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"     * Uses an extra [T] to represent a task.Todo.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"     * @return A String representation of the task.Todo","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"tzaph"},"content":"    public String toString() {","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"tzaph"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"tzaph"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"tzaph"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"tzaph":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzaph"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"tzaph"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"tzaph"},"content":"Event CS4231 Lecture /from 6.30 PM /to 9.30 PM","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"tzaph"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"tzaph"},"content":"unmark -1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"tzaph"},"content":"todo Wash laundry","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"tzaph"},"content":"deadLine CS2108 Homework /by Monday","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"tzaph"},"content":"event side project meeting /from 10.00PM /to idk","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"tzaph"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"tzaph"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"tzaph"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"tzaph"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"tzaph"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"tzaph"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"tzaph"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"tzaph"},"content":"delete 2","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"tzaph"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"tzaph"},"content":"delete -5","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"tzaph"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"tzaph"},"content":"unmark -1","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"tzaph"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"tzaph"},"content":"event a /from v /to","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"tzaph"},"content":"deadline x /by","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"tzaph"},"content":"event cc","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"tzaph"},"content":"deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"tzaph"},"content":"exit","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"tzaph"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"tzaph":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tzaph"},"content":"java -classpath ..\\bin Arona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tzaph":1,"-":20}}]
