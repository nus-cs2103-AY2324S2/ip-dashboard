[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimZiJia":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    testImplementation \"org.mockito:mockito-inline:3.+\"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    testImplementation \"org.mockito:mockito-junit-jupiter:3.+\"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    // JavaFX","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"    mainClass.set(\"duke.ui.Launcher\")","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"    archiveBaseName \u003d \"skibidi\"","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"sourceSets {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"    test {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        java {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"            srcDirs \u003d [\u0027src/test\u0027]","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"    main {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"        java {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"            srcDirs \u003d [\u0027src/main\u0027]","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"checkstyle {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LimZiJia":40,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"T,0,2106_lab_2","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"E,0,mid_terms,2024-03-01,2024-03-14","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"D,0,2102_assignment_1,2024-03-07","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"LimZiJia":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"# Skibidi User Guide","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"![UI Image](https://github.com/LimZiJia/ip/blob/master/docs/UI.png?raw\u003dtrue)","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"Skibidi is a Command-Line task manager. Use it to keep track of todo, deadlines and event tasks.","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"To use Skibidi chatbot, download `skibidi-v0.2.jar` from our lastest github","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"[release](https://github.com/LimZiJia/ip/releases),","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"and double click it or type the following line in terminal at the directory containing","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"`skibidi-v0.2.jar` to start the app:","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"java -jar skibidi-v0.2.jar","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"# Commands","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"## Adding todos","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"Format: `todo \u003ctask_name\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"e.g: `todo 2106_lab_2`","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"       [T][ ] 2106_lab_2","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"     Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"Format: `deadline \u003ctask_name\u003e /by \u003cdate\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"with date in the form of `YYYY-MM-DD`","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"e.g: `deadline CS2102_assignment_1 /by 2024-03-07`","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"       [D][ ] CS2102_assignment_1 (by: Mar 07 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"## Adding events","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"Format: `event \u003ctask_name\u003e /from \u003cdate\u003e /to \u003cdate\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"with date in the form of `YYYY-MM-DD`","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"e.g: `event mid_terms /from 2024-03-01 /to 2024-03-14`","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"       [E][ ] mid_terms (from: Mar 01 2024 to: Mar 14 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"     Now you have 3 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"## Listing tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"Format: `list`","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"     1.[T][ ] 2106_lab_2","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"     2.[D][ ] CS2102_assignment_1 (by: Mar 07 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"     3.[E][ ] mid_terms (from: Mar 01 2024 to: Mar 14 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"## Deleting tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"Format: `delete \u003ctask_indexes\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"e.g: `delete 2`, `delete 2 1 3`","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"     Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"       [E][ ] mid_terms (from: Mar 01 2024 to: Mar 14 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"     Now you have 2 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"     Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"       [D][ ] CS2102_assignment_1 (by: Mar 07 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"     Now you have 1 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"     Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"       [T][ ] 2106_lab_2","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"     Now you have 0 tasks in the list.","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"## Marking tasks as done","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"Format: `mark \u003ctask_indexes\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"e.g: `mark 2`,`mark 2 1 3`","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"       [D][ ] CS2102_assignment_1 (by: Mar 07 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"       [T][ ] 2106_lab_2","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"     Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"       [E][ ] mid_terms (from: Mar 01 2024 to: Mar 14 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"## Unmarking tasks as not done","lastModifiedDate":"2024-02-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"Format: `unmark \u003ctask_indexes\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"e.g: `unmark 2`, `unmark 2 1 3`","lastModifiedDate":"2024-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-26"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"       [D][ ] CS2102_assignment_1 (by: Mar 07 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"       ","lastModifiedDate":"2024-02-26"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-26"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"       [T][ ] 2106_lab_2","lastModifiedDate":"2024-02-26"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"     ","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"     OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"       [E][ ] mid_terms (from: Mar 01 2024 to: Mar 14 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"## Searching tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"Format: `find \u003cpattern\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"e.g: `find assignment`","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"     Here are the matching tasks in your list:","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"       1. [D][ ] CS2102_assignment_1 (by: Mar 07 2024)","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"```","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"LimZiJia":107,"-":25}},{"path":"src/main/duke/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import duke.ui.Skibidi;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Class that runs the chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    /** The storage object that is used in Duke. */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    private static Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    /** A list that contains all your tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    /** The class that prints to screen and chat. */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    private Skibidi skibidi \u003d new Skibidi();","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    /** The parser that understands the input and generates the reply. */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    public Duke() {}","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"     * Creates a Duke object that is capable of running a chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"     * @param filePath The path of the saved data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     * @param fileName The name of the saved data file.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        storage \u003d new Storage(filePath, fileName);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"     * Takes in a String input and outputs the corresponding output.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"     * @param input User\u0027s String input.","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     * @return The reply from the bot to the user.","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        String response \u003d parser.parse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        return skibidi.formatOutput(response);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"    public Storage getStorage() {","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"        return Duke.storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        return Duke.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"    public void setStorage(Storage storage) {","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        Duke.storage \u003d storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    public void setTaskList(TaskList tl) {","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        Duke.tasks \u003d tl;","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LimZiJia":61,"-":3}},{"path":"src/main/duke/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import duke.exceptions.DukeEmptyArgumentException;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import duke.exceptions.DukeErroneousArgumentException;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import duke.exceptions.DukeInvalidInputException;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import duke.exceptions.DukeWrongDateOrderException;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import duke.ui.Skibidi;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":" * This class helps the chatbot to parse inputs in order to execute the reactions that the user wants.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public Parser() {}","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    enum Command {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"        BYE, LIST, SAVE, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, FIND, UNKNOWN","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    private Command parseUserMsg(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        switch (input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"            return Command.BYE;","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        case \"list\":","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"            return Command.LIST;","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"        case \"save\":","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"            return Command.SAVE;","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"            return Command.TODO;","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        case \"event\":","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"            return Command.EVENT;","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"            return Command.MARK;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"            return Command.UNMARK;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"            return Command.DELETE;","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        case \"find\":","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"            return Command.FIND;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"     * The main parsing logic. Takes the input and calls the relevant functions for the desired outputs.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"     * @param input The string input that the user has passed into the program.","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"     * @return A TaskList that has been altered if there is a need to. The value is null if the command is \u0027bye\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"    public String parse(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"        String[] inputParsed \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"        Command command \u003d parseUserMsg(inputParsed[0]);","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"        taskList \u003d duke.getTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"        storage \u003d duke.getStorage();","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        String reply;","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        assert command !\u003d null : \"You are missing the command\";","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"            checkValidFormat(inputParsed, command); // Throws various exceptions corresponding to foreseeable errors.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"            switch (command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"            case BYE:","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d Skibidi.BYE;","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"            case LIST:","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d taskList.printList();","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"            case SAVE:","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d storage.save(taskList);","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"            case MARK:","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d taskList.mark(inputParsed); // mark(task number)","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d taskList.unmark(inputParsed); // unmark(task number)","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"            case DELETE:","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d taskList.delete(inputParsed); // delete(task number)","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"            case FIND:","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d taskList.find(inputParsed[1]); // find(task name)","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"            case UNKNOWN:","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d \"Unknown command\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"            case TODO:","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"            case EVENT:","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d addTask(inputParsed, command);","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"            default:","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"                reply \u003d \"Something has gone horribly wrong with your input!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"            reply \u003d \"I/O Exception\";","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeInvalidInputException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"            reply \u003d \"This is not a valid input!!!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeEmptyArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"            reply \u003d \"There is an argument that is empty!!!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeErroneousArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"            reply \u003d \"There is an argument in the wrong format!!!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"            reply \u003d \"The format of your date is wrong! Make sure it is of the form \u0027yyyy-MM-dd\u0027.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"            reply +\u003d \"More specifically: \\n\" + e.getMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"        } catch (DukeWrongDateOrderException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"            reply \u003d \"The end date should be after the start date\";","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"        return reply;","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"     * A helper function that is dedicated to adding tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"     * @param inputs Array of Strings of inputs to be parsed.","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"     * @param command The command","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"     * @return The edited task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"    public String addTask(String[] inputs, Command command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"        String s;","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"        switch (command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"        case TODO:","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"LimZiJia"},"content":"            taskList.add(new Todo(inputs[1])); // Todo(name)","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"            taskList.add(new Deadline(inputs[1], inputs[3])); // Deadline(name, by)","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"        case EVENT:","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"LimZiJia"},"content":"            Event e \u003d new Event(inputs[1], inputs[3], inputs[5]); // Event(name, from, to)","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"LimZiJia"},"content":"            if (!e.isCorrectOrder()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeWrongDateOrderException();","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"            taskList.add(e);","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"            return \"Some catastrophic error has occurred when adding tasks!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"LimZiJia"},"content":"        s \u003d \"Got it added this task:\\n  \" + taskList.get(taskList.size() - 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"        s +\u003d String.format(\"Now you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"LimZiJia"},"content":"        return s;","lastModifiedDate":"2024-02-11"},{"lineNumber":160,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"LimZiJia"},"content":"    private void checkValidFormat(String[] inputs, Command command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"LimZiJia"},"content":"        switch (command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"        case MARK: // Command: mark listOfTaskNumbers","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"        case UNMARK: // Command: unmark listOfTaskNumbers","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"        case DELETE:// Command: delete listOfTaskNumbers","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"        case FIND: // Command: find taskName","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"LimZiJia"},"content":"        case TODO: // Command: todo taskName","lastModifiedDate":"2024-02-13"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"            if (inputs.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"            } else if (inputs.length \u003e 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"        case DEADLINE: // Command: deadline taskName /by when","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"            if (inputs.length \u003c 4) {","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"            } else if (!inputs[2].equals(\"/by\") || inputs.length \u003e 4) {","lastModifiedDate":"2024-02-11"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"        case EVENT: // Command: event taskName /from start /to end","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"            if (inputs.length \u003c 6) {","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeEmptyArgumentException();","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"            } else if (inputs.length \u003e 6 || !(inputs[2].equals(\"/from\") \u0026\u0026 inputs[4].equals(\"/to\"))) {","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"                throw new DukeErroneousArgumentException();","lastModifiedDate":"2024-02-11"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-11"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-02-11"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":197}},{"path":"src/main/duke/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import duke.ui.Skibidi;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":" * The storage class contains the file paths and methods to load and save task lists.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    /** The path to the saved file\u0027s directory. */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    private static Path pathDir;","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    /** The path to the saved file. */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    private static Path pathFile;","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    public Storage() {}","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    public Storage(String dir, String name) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        String userDir \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        pathDir \u003d Paths.get(userDir + dir);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        pathFile \u003d Paths.get(userDir + dir + name);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"     * Loads the saved file if there is one.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"     * @return The saved TaskList if it exists or an empty one if there is none.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"    public String load() {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        String s;","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        assert pathFile !\u003d null : \"Your file directory is missing!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"            List\u003cString\u003e read \u003d Files.readAllLines(pathFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"            List\u003cTask\u003e list \u003d read.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"                    .map(this::stringToTask)","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"            duke.setTaskList(new TaskList(list)); // TaskList stored in static Duke because there is only one TaskList","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"            s \u003d \"Your current list:\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"            s +\u003d duke.getTaskList().printList();","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"            s \u003d \"You do not have a saved list.\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        return s;","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"     * Converts strings in the saved file into Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"     * @param s Line from the saved file representing a Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"     * @return Task that is derived from the saved string representation.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"    private Task stringToTask(String s) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e taskLst \u003d Arrays.asList(s.split(\",\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"        switch (taskLst.get(0)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        case \"T\": // Using todo constructor Todo(done, name)","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"            t \u003d new Todo(taskLst.get(1).equals(\"1\"), taskLst.get(2));","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"        case \"D\": // Using deadline constructor Deadline(done, name, by)","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"            t \u003d new Deadline(taskLst.get(1).equals(\"1\"), taskLst.get(2), taskLst.get(3));","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"        case \"E\": // Using event constructor Event(done, name, from, to)","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"            t \u003d new Event(taskLst.get(1).equals(\"1\"), taskLst.get(2), taskLst.get(3), taskLst.get(4));","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        return t;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"     * Writes the saved content to the directory and file paths indicated in the private fields.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"     * @param f The path of the file that should be written to.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"     * @param tl The task list to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"     * @throws IOException If file at the path does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"    private void writeToFile(Path f, TaskList tl) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e lines \u003d tl.taskToSavedString();","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"        Files.write(f, lines);","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"     * Saves desired TaskList to memory.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"     * @param tl The TaskList to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"     * @throws IOException If directory or file at the paths do not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"    public String save(TaskList tl) throws IOException {","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"        assert pathDir !\u003d null : \"Your directory is missing!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"        // Create directory if it does not exist","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"        if (!Files.exists(pathDir)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"            Files.createDirectories(pathDir);","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"        assert pathFile !\u003d null : \"Your file directory is missing!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"        // Delete file if exists because we want to write fresh","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"        if (Files.exists(pathFile)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"            Files.delete(pathFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"        ","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"        Files.createFile(pathFile);","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"        // Writing to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"        writeToFile(pathFile, tl);","lastModifiedDate":"2024-02-05"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"        return \"Your list has been saved to\\n\" + pathFile;","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":127}},{"path":"src/main/duke/exceptions/DukeEmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when an argument is empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeEmptyArgumentException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeEmptyArgumentException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/duke/exceptions/DukeErroneousArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when an argument is wrong.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeErroneousArgumentException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeErroneousArgumentException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * Parent class for Duke exceptions.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/duke/exceptions/DukeInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when an input is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"public class DukeInvalidInputException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    public DukeInvalidInputException() {}","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/duke/exceptions/DukeWrongDateOrderException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An exception that is thrown when the order of dates are wrong.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" * e.g. Date D1 that is supposed to be after D2 is actually before D2 instead.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"public class DukeWrongDateOrderException extends DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"    public DukeWrongDateOrderException() {}","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"LimZiJia":9}},{"path":"src/main/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a deadline type task.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    /** The time of the deadline. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    private LocalDate time;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"     * @param done True if the task is done.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"     * @param time Time of the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    public Deadline(boolean done, String name, String time) {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"        super(done, name);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"     * @param time Time of the deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    public Deadline(String name, String time) {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    public String taskToSavedString() {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"D,%s,%s,%s\",","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \u00271\u0027 : \u00270\u0027,","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"                this.time.format(DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"[D][%s] %s (by: %s)\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \"X\" : \" \",","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        return this.name.equals(deadline.name)","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.done \u003d\u003d deadline.done","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.time.equals(deadline.time);","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":67}},{"path":"src/main/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of an event type task.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    /** The time of the start of the event. */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    /** The time of the end of the event. */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"     * @param done True if the task is done.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"     * @param from Time of the start of event.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"     * @param to   Time of the end of event.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    public Event(boolean done, String name, String from, String to) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"        super(done, name);","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"     * @param from Time of the start of event.","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"     * @param to   Time of the end of event.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"     * Checks if from \u003c to.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"     * @return True if the dates are in the correct order.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"    public boolean isCorrectOrder() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        return this.to.isAfter(this.from) | this.to.isEqual(this.from);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    public String taskToSavedString() {","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"E,%s,%s,%s,%s\",","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \u00271\u0027 : \u00270\u0027,","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"                this.from.format(DateTimeFormatter.ISO_LOCAL_DATE),","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"                this.to.format(DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"[E][%s] %s (from: %s to: %s)\\n\",","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \"X\" : \" \",","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"                this.name,","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"        if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"        Event event \u003d (Event) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"        return this.name.equals(event.name)","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.done \u003d\u003d event.done","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.from.equals(event.from)","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.to.equals(event.to);","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":85}},{"path":"src/main/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"    /** The name of the task */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"    protected final String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"    /** Represents if a task is done */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    protected boolean done;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"     * @param done True if the task is done.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    public Task(boolean done, String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d done;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"     * An abstract method that asks subclasses to be able to convert themselves into a format that is used for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"     * @return The string of the saved object.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    public abstract String taskToSavedString();","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"     * A method that determines if a string exists in the name of this task.","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"     * @param toFind A substring to be found in name.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"     * @return True if toFind is a substring of name.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"    public boolean has(String toFind) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        return this.name.contains(toFind);","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":63}},{"path":"src/main/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-25"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    /** List of tasks. */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-25"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"     * Prints a list containing the current tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    public String printList() {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        int number \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        for (Task t : this.list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"            reply.append(String.format(\"%d. %s\", number, t));","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"            number++;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"        return reply.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        this.list.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"    public Task get(int idx) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        return this.list.get(idx);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        return this.list.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    public void set(int idx, Task t) {","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        this.list.set(idx, t);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"    public Task remove(int idx) {","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        return this.list.remove(idx);","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        return this.list;","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"     * @param input The index of the task that should be marked as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"    public String mark(String[] input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        String forPrintingError \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d duke.getTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"            // Start at 1 beacuse indexes start at 1. Index 0 is \"mark\"","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"            for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"                forPrintingError \u003d input[i];","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"                int idx \u003d Integer.parseInt(input[i]);","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"                Task t \u003d tl.get(idx - 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"                t.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"                tl.set(idx - 1, t);","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"                duke.setTaskList(tl);","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"                s.append(\"Nice! I\u0027ve marked this task as done:\\n  \").append(t).append(\u0027\\n\u0027);","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"            s \u003d new StringBuilder(forPrintingError + \" is not a valid number!\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"            s \u003d new StringBuilder(forPrintingError + \"--\u003e index out of range!\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"        return s.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"     * @param input The index of the task that should be marked as not done.","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"    public String unmark(String[] input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"        String forPrintingError \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d duke.getTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"            // Start at 1 beacuse indexes start at 1. Index 0 is \"unmark\"","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"            for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"                forPrintingError \u003d input[i];","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"                int idx \u003d Integer.parseInt(input[i]);","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"                Task t \u003d tl.get(idx - 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"                t.markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"                tl.set(idx - 1, t);","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"                duke.setTaskList(tl);","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"                s.append(\"OK, I\u0027ve marked this task as not done yet:\\n  \").append(t).append(\u0027\\n\u0027);","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"            s \u003d new StringBuilder(forPrintingError + \" is not a valid number!\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"            s \u003d new StringBuilder(forPrintingError + \"--\u003e index out of range!\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"        return s.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"     * @param input The index of the task that should be deleted.","lastModifiedDate":"2024-02-13"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"    public String delete(String[] input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"        String forPrintingError \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d duke.getTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"        // Sort in reverse order so that deleted indexes doesn\u0027t cause unexpected errors","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"        int[] numbers \u003d Arrays.stream(input, 1, input.length).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"        Arrays.sort(numbers);","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"            // Start at 1 beacuse indexes start at 1. Index 0 is \"delete\"","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"LimZiJia"},"content":"            for (int i \u003d 0; i \u003c numbers.length; i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"                int idx \u003d numbers[numbers.length - i - 1];","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"                forPrintingError \u003d String.valueOf(idx);","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"                Task t \u003d tl.remove(idx - 1);","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"                duke.setTaskList(tl);","lastModifiedDate":"2024-02-25"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"                s.append(\"Noted. I\u0027ve removed this task:\\n  \").append(t);","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"LimZiJia"},"content":"                s.append(String.format(\"Now you have %d tasks in the list.\\n\\n\", tl.size()));","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"            s \u003d new StringBuilder(forPrintingError + \" is not a valid number! Or perhaps add a \u0027 \u0027\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"            s \u003d new StringBuilder(forPrintingError + \"--\u003e index out of range!\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"        return s.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"LimZiJia"},"content":"     * Converts a list of tasks to a list of strings that are in the format used for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"LimZiJia"},"content":"     * @return A list of strings that will be used for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"LimZiJia"},"content":"    public List\u003cString\u003e taskToSavedString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"LimZiJia"},"content":"        return list.stream()","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"                .map(Task::taskToSavedString)","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"     * Finds if the substring is in the name of th list of tasks and print it if there is.","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"     * @param input A string in the format of \"find x\" where x is the substring to find.","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"    public String find(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"        StringBuilder s \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d duke.getTaskList();","lastModifiedDate":"2024-02-25"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"        int number \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"        for (Task t : tl.getList()) {","lastModifiedDate":"2024-02-25"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"            if (t.has(input)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"                s.append(String.format(\"%d. %s\", number, t));","lastModifiedDate":"2024-02-11"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"                number++;","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"        return s.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"        } else if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d (TaskList) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"        return this.list.equals(tl.list);","lastModifiedDate":"2024-02-13"},{"lineNumber":198,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"LimZiJia":200}},{"path":"src/main/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":" * An encapsulation of a todo type task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Todo.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"     * @param done True if the task is done.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    public Todo(boolean done, String name) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"        super(done, name);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"     * @param name Name of the Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    public String taskToSavedString() {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"T,%s,%s\",","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"                this.done ? \u00271\u0027 : \u00270\u0027,","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"                this.name);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        return String.format(\"[T][%s] %s\\n\", this.done ? \"X\" : \" \", this.name);","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"        } else if (obj.getClass() !\u003d this.getClass()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d (Todo) obj;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        return this.name.equals(todo.name) \u0026\u0026 this.done \u003d\u003d todo.done;","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":49}},{"path":"src/main/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    private DialogBox(String text, Image img, Color c) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        assert MainWindow.class.getResource(\"/view/DialogBox.fxml\") !\u003d null : \"DialogBox.fxml is missing!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        Circle clip \u003d new Circle();","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        clip.setCenterX(90);","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        clip.setCenterY(90);","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        clip.setRadius(82);","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        setBackground(new Background(new BackgroundFill(c,","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"                new CornerRadii(30),","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"                new Insets(5, 5, 10, 10))));","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"        return new DialogBox(text, img, Color.LIGHTSTEELBLUE);","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"        var db \u003d new DialogBox(text, img, Color.LIGHTGRAY);","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"LimZiJia":76}},{"path":"src/main/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"        assert Main.class !\u003d null : \"Check if Main is missing.\";","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"LimZiJia":8}},{"path":"src/main/duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":" * A GUI for Skibidi using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    private static final String FILE_PATH \u003d \"/data/\";","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    /** Duke object that we will run the bot features from. */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    private Duke duke \u003d new Duke(FILE_PATH, FILE_NAME);","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"            assert Main.class.getResource(\"/view/MainWindow.fxml\") !\u003d null : \"MainWindow.fxml is missing!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"            assert duke !\u003d null : \"duke object has not been initialised!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"LimZiJia":40}},{"path":"src/main/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    private final Image SKIBIDI_TOILET \u003d","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/SkibidiToilet.png\")));","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    private final Image SKIBIDI_AGENT \u003d","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/SkibidiAgent.png\")));","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        String load \u003d duke.getStorage().load();","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"                DialogBox.getDukeDialog(Skibidi.GREETING, SKIBIDI_TOILET),","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"                DialogBox.getDukeDialog(load, SKIBIDI_TOILET)","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"                DialogBox.getUserDialog(input, SKIBIDI_AGENT),","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"                DialogBox.getDukeDialog(response, SKIBIDI_TOILET)","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"LimZiJia":63}},{"path":"src/main/duke/ui/Skibidi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke.ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Parser;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" * The class that contains formatted strings for the chat bot.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" *","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":" * @author Lim Zi Jia","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"public class Skibidi {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    /** Logo of Skibidi. */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"            \" ____  _  _____ ____ ___ ____ ___ \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"            + \"/ ___|| |/ /_ _| __ )_ _|  _ \\\\_ _|\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"            + \"\\\\___ \\\\| \u0027 / | ||  _ \\\\| || | | | | \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"            + \" ___) | . \\\\ | || |_) | || |_| | | \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"            + \"|____/|_|\\\\_\\\\___|____/___|____/___|\";","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    /** Greeting for startup */","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    public static final String GREETING \u003d LOGO + \"\\n\" +\"Hello! I\u0027m Skibidi!\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    /** Says goodbye to the user. */","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public static final String BYE \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    public String formatOutput(String... strings) {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        for (String s:strings) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"            output.append(s).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        return output.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"LimZiJia":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"\u003cfx:root alignment\u003d\"CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefHeight\u003d\"240.0\" prefWidth\u003d\"498.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"240.0\" prefWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"              \u003cLabel fx:id\u003d\"dialog\" layoutX\u003d\"6.0\" prefHeight\u003d\"240.0\" prefWidth\u003d\"300.0\" text\u003d\"Label\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"6.0\" AnchorPane.rightAnchor\u003d\"-20.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"                  \u003cFont name\u003d\"Consolas\" size\u003d\"9.0\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"               \u003c/font\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefHeight\u003d\"240.0\" prefWidth\u003d\"188.0\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"171.0\" fitWidth\u003d\"170.0\" layoutX\u003d\"9.0\" layoutY\u003d\"35.0\" pickOnBounds\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"LimZiJia":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"759.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"425.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"75.0\" AnchorPane.topAnchor\u003d\"759.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"759.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" pannable\u003d\"true\" prefHeight\u003d\"760.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"40.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"         \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"LimZiJia":19}},{"path":"src/test/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static org.mockito.Mockito.verify;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import duke.ui.Skibidi;","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Parser;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import duke.exceptions.DukeEmptyArgumentException;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import duke.exceptions.DukeErroneousArgumentException;","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    private Duke d \u003d new Duke(\"/data/\", \"duke.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"    private Parser p \u003d new Parser(d);","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    void byeShouldReturnNull() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(Skibidi.BYE, p.parse(input));","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    void listShouldCallPrintList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d mock(TaskList.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl);","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        verify(tl).printList();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    void saveShouldCallStorageSaveSuccess() {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"save\";","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        Storage store \u003d mock(Storage.class);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        d.setStorage(store);","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl);","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        boolean thrown \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"            p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"            verify(store).save(tl);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"            thrown \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"        assertFalse(thrown);","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"    void markShouldReturnMarkedTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"                new Todo(\"task1\"),","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"                new Todo(true, \"task2\")));","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"mark 2\";","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl1);","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"    void unmarkShouldReturnUnmarkedTasks() {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"),","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"                new Todo(true, \"task2\")));","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"unmark 2\";","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl1);","lastModifiedDate":"2024-02-25"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"    void deleteShouldReturnDeletedTaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"delete 2\";","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl1);","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"    void todoShouldAddTodoTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\"), new Todo(\"task2\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"todo task2\";","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl1);","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"    void deadlineShouldAddDeadlineTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"                new Todo(\"task1\"), new Deadline(\"task2\", \"2024-01-31\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"deadline task2 /by 2024-01-31\";","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl1);","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"    void eventShouldAddEventTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstBefore \u003d new ArrayList\u003c\u003e(Arrays.asList(new Todo(\"task1\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lstAfter \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"                new Todo(\"task1\"), new Event(\"task2\", \"2024-01-31\", \"2024-02-01\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl1 \u003d new TaskList(lstBefore);","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl2 \u003d new TaskList(lstAfter);","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event task2 /from 2024-01-31 /to 2024-02-01\";","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"        d.setTaskList(tl1);","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"        p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl2, tl1);","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"LimZiJia"},"content":"    void emptyTodoShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"todo \";","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument that is empty!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"    void emptyDeadlineShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"deadline /by 2024-01-01\";","lastModifiedDate":"2024-02-16"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument that is empty!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"    void emptyDeadlineDateTimeShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"deadline test /by \";","lastModifiedDate":"2024-02-16"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument that is empty!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"    void erroneousDeadlineShouldThrowErroneousArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"deadline test /b 2024-01-01\";","lastModifiedDate":"2024-02-16"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument in the wrong format!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"    void erroneousDeadLineFormatShouldThrowDateTimeException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"deadline test /by 2024-0-01\";","lastModifiedDate":"2024-02-16"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":198,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":199,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":200,"author":{"gitId":"LimZiJia"},"content":"        String expected \u003d \"The format of your date is wrong! Make sure it is of the form \u0027yyyy-MM-dd\u0027.\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":201,"author":{"gitId":"LimZiJia"},"content":"                + \"More specifically: \\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":202,"author":{"gitId":"LimZiJia"},"content":"                + \"Text \u00272024-0-01\u0027 could not be parsed at index 5\";","lastModifiedDate":"2024-02-16"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":204,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(expected, reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":205,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"LimZiJia"},"content":"    void emptyEventShouldThrowEmptyArgumentException() {","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event /from 2024-01-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-16"},{"lineNumber":210,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":211,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":212,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":213,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument that is empty!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":214,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"LimZiJia"},"content":"    void emptyEventDateTimeShouldThrowEmptyArgumentException1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event test /from /to 2024-01-02\";","lastModifiedDate":"2024-02-16"},{"lineNumber":219,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":220,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":222,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument that is empty!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":223,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"LimZiJia"},"content":"    void emptyEventDateTimeShouldThrowEmptyArgumentException2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event test /from 2024-01-02 /to \";","lastModifiedDate":"2024-02-16"},{"lineNumber":228,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":229,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":230,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":231,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument that is empty!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":232,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventShouldThrowErroneousArgumentException1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event test /fro 2024-01-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-16"},{"lineNumber":237,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":238,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":239,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":240,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument in the wrong format!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":241,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventShouldThrowErroneousArgumentException2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event test /from 2024-01-01 /t 2024-01-02\";","lastModifiedDate":"2024-02-16"},{"lineNumber":246,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":247,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":248,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":249,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"There is an argument in the wrong format!!!\", reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":250,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventFormatShouldThrowDateTimeException1() {","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event test /from 2024-00-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-16"},{"lineNumber":255,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":256,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":257,"author":{"gitId":"LimZiJia"},"content":"        String expected \u003d \"The format of your date is wrong! Make sure it is of the form \u0027yyyy-MM-dd\u0027.\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":258,"author":{"gitId":"LimZiJia"},"content":"                + \"More specifically: \\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":259,"author":{"gitId":"LimZiJia"},"content":"                + \"Text \u00272024-00-01\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 0\";","lastModifiedDate":"2024-02-16"},{"lineNumber":260,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":261,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(expected, reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":262,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":264,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":265,"author":{"gitId":"LimZiJia"},"content":"    void erroneousEventFormatShouldThrowDateTimeException2() {","lastModifiedDate":"2024-02-02"},{"lineNumber":266,"author":{"gitId":"LimZiJia"},"content":"        String input \u003d \"event test /from 2024-01-01 /to 2024-00-02\";","lastModifiedDate":"2024-02-16"},{"lineNumber":267,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":268,"author":{"gitId":"LimZiJia"},"content":"        String reply \u003d p.parse(input);","lastModifiedDate":"2024-02-16"},{"lineNumber":269,"author":{"gitId":"LimZiJia"},"content":"        String expected \u003d \"The format of your date is wrong! Make sure it is of the form \u0027yyyy-MM-dd\u0027.\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":270,"author":{"gitId":"LimZiJia"},"content":"                + \"More specifically: \\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":271,"author":{"gitId":"LimZiJia"},"content":"                + \"Text \u00272024-00-02\u0027 could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 0\";","lastModifiedDate":"2024-02-16"},{"lineNumber":272,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":273,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(expected, reply);","lastModifiedDate":"2024-02-16"},{"lineNumber":274,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":275,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LimZiJia":275}},{"path":"src/test/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import duke.duke.Duke;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import org.mockito.junit.jupiter.MockitoExtension;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"@ExtendWith(MockitoExtension.class)","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    @AfterEach","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    void printListShouldPrintList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d new Todo(\"task1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(List.of(todo));","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList(lst);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        String output \u003d tl.printList();","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"                + \"1. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"                + todo, output);","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    void convertTasksToStringForm() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d new Todo(\"task1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        Deadline deadline \u003d new Deadline(\"task2\", \"2024-01-01\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        Event event \u003d new Event(\"task3\", \"2024-01-01\", \"2024-01-02\");","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList(lst);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e str \u003d new ArrayList\u003c\u003e(Arrays.asList(todo.taskToSavedString(),","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"                deadline.taskToSavedString(),","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"                event.taskToSavedString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(tl.taskToSavedString(), str);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"    void findShouldFindTasksAndPrint() {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        Todo todo \u003d new Todo(\"tass1\");","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"        Deadline deadline \u003d new Deadline(\"task2\", \"2024-01-01\");","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"        Event event \u003d new Event(\"task3\", \"2024-01-01\", \"2024-01-02\");","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"        TaskList tl \u003d new TaskList(lst);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"        duke.setTaskList(tl);","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        String output \u003d tl.find(\"task\");","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"                + \"1. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"                + deadline","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"                + \"2. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"                + event, output);","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"LimZiJia":81}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"T,0,task1","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"D,0,task2 ,2024-01-31","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"E,0,task3,2024-02-01,2024-02-28","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"LimZiJia":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"delete 1","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"todo task1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"deadline task2 /by 2024-01-31","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"event task3 /from 2024-02-01 /to 2024-02-28","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"no such command","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"todo for deleting","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"deadline task4 /wrong argument","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"event task5 /from 24-02-01 /to 2024-02-28","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"event task6 /from 2024-99-01 /to 2024-02-28","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"event task7 /from 2024-02-01 /to 2024-02-30","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"event task7 /from 2024-02-28 /to 2024-02-01","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"mark 5","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"unmark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"delete 4","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"save","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LimZiJia":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\exceptions\\*.java","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"java -cp ..\\bin\\duke Duke.class \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LimZiJia":5,"-":19}}]
