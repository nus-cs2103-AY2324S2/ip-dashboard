[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"T | 0 | sleep | NILL | NILL","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"D | 0 | sleep | 2/12/2019 1800 | NILL","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"E | 0 | play computer games | 2/12/2019 1800 | 3/12/2019 1800","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"D | 0 | cs2103 homework | 2/12/2019 1900 | NILL","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"KhoonSun47":4}},{"path":"src/main/java/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":" * The Commands class contains the list of commands to be used in the switch","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":" * case for William.java","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"public enum Commands {","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"    list, bye, mark, unmark, todo, deadline, event, delete","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"    private LocalDateTime byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    public Deadline(String name, LocalDateTime byDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public Deadline(String name, LocalDateTime byDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + super.outputDateAsString(byDate) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"        return \"D\";","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] { super.changeDateToString(byDate), \"NILL\" };","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":31}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"    public LocalDateTime fromDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"    public LocalDateTime toDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    public Event(String name, LocalDateTime fromDate, LocalDateTime toDate) {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    public Event(String name, LocalDateTime fromDate, LocalDateTime toDate, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + super.outputDateAsString(fromDate) + \" to: \"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"                + super.outputDateAsString(toDate) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        return \"E\";","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] { super.changeDateToString(fromDate), super.changeDateToString(toDate) };","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":35}},{"path":"src/main/java/FileSaving.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":" * The FileSaving class will save the tasks in the hard disk whenever the task","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":" * list changes, and load the data from the hard disk when the chatbot starts up","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"public class FileSaving {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"     * Load tasks from the hard disk","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"     * @return arraylist ArrayList of tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the lists in the txt file is not in the expected","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"     *                          format OR if the pattern is wrong","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"    public static List\u003cTask\u003e loadFromFile(String filePath) throws FileNotFoundException, WilliamException {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"        /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"         * Pattern to match lines with five parts separated by pipes (\u0027|\u0027)","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"         * ","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"         * Each part can contain any characters, with whitespace handling","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"         * Capture non-whitespace characters in the first two parts and at least one","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"         * character in the last three parts","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"         */","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        String matchingPattern \u003d \"^\\\\s*(\\\\S+)\\\\s*\\\\|\\\\s*(\\\\S+)\\\\s*\\\\|\\\\s*(.+?)\\\\s*\\\\|\\\\s*(.+?)\\\\s*\\\\|\\\\s*(.+?)\\\\s*$\";","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"        Pattern pattern \u003d Pattern.compile(matchingPattern);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"            Matcher matcher \u003d pattern.matcher(sc.nextLine());","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"            if (matcher.matches() \u003d\u003d false) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"                throw new WilliamException(\"The lists is not in the expected format OR The pattern is wrong!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"            String type \u003d matcher.group(1);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"            boolean isDone \u003d Integer.parseInt(matcher.group(2)) \u003d\u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"            String name \u003d matcher.group(3);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"            String firstPart \u003d matcher.group(4);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"            String secondPart \u003d matcher.group(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"            switch (type) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                    tasks.add(new Todo(name, isDone));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                    tasks.add(new Event(name, Methods.convertStringToDate(firstPart),","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"                            Methods.convertStringToDate(secondPart), isDone));","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                    tasks.add(new Deadline(name, Methods.convertStringToDate(firstPart), isDone));","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"        sc.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"     * Save tasks into hard disk","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"     * @param arraylist Arraylist of tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"     * @throws IOException if the arraylist cannot be written to the file","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"    public static void writeToFile(String filePath, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"        int actualSizeComparison \u003d tasks.size() - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"                String name \u003d task.getName();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"                boolean isDoneBFormat \u003d task.getIsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"                int isDone \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"                if (isDoneBFormat \u003d\u003d true) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"                    isDone \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"                    isDone \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"                String[] times \u003d task.getTimes();","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"                if (i !\u003d actualSizeComparison) {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"                    sb.append(task.getType()).append(\" | \").append(isDone).append(\" | \").append(name).append(\" | \")","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[0])","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"                            .append(\" | \")","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[1]).append(System.lineSeparator());","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"                } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"                    sb.append(task.getType()).append(\" | \").append(isDone).append(\" | \").append(name).append(\" | \")","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[0])","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"                            .append(\" | \")","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"                            .append(times[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"            fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"KhoonSun47":106}},{"path":"src/main/java/Methods.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":" * The FileSaving class will store the methods that will be used by the","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":" * William.java","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"public class Methods {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    private static final DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"     * Adds the opening message in the William Chatbot","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    public static void openingTitle() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"        String logo \u003d \"William\";","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Hello! I\u0027m \" + logo);","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the split input after getting the user input","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input from the user","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] String[] consisting of two variables: [0] \u003d\u003d command, [1] \u003d\u003d","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"     *         additional information","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] retrieveTexts(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"        String[] resultOfSplit \u003d new String[2];","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        int indexOfFirstSpace \u003d input.indexOf(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"        if (indexOfFirstSpace \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[0] \u003d input;","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[1] \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[0] \u003d input.substring(0, indexOfFirstSpace);","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"            resultOfSplit[1] \u003d input.substring(indexOfFirstSpace + 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        return resultOfSplit;","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"     * Returns the enum command","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is a command in String format","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"     * @return output Output that is a command in Commands format","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the command does not exist in the Commands class","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"    public static Commands retrieveCommand(String input) throws WilliamException {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"            return Commands.valueOf(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"This command \" + input + \" does not exist, please try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"     * Unmark/mark the task based on the ID","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The ID of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"     * @param tasks The list that contains the task","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"    public static void markAndUnmark(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"        int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"        int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"        tasks.get(actualId).changeIsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(tasks.get(actualId).toString() + \"\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"     * Print out of all the tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"     * @param tasks The list that contains the task","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"    public static void printList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Your list is empty. Please add some task to the list first!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"                System.out.println((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println();","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"KhoonSun47"},"content":"     * Split the method by \"/by\"","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is the additional details","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] String[] that contains the name and the date","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the input does not have the \"/by\" or missing text","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"KhoonSun47"},"content":"     *                          before/after \"/by\"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] splitBy(String input) throws WilliamException {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"KhoonSun47"},"content":"        checkAdditionalDetailEmpty(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"KhoonSun47"},"content":"        String[] twoParts \u003d input.split(\" /by \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"KhoonSun47"},"content":"        if (twoParts.length \u003c 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"KhoonSun47"},"content":"                    \"The input does not contain the required \u0027/by\u0027 keyword or is missing text before/after \u0027/by\u0027 keyword. Please try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"KhoonSun47"},"content":"        acceptDateAndTime(twoParts[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"KhoonSun47"},"content":"        return twoParts;","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"KhoonSun47"},"content":"     * Split the method by \"/to\" and \"/from\"","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is the additional details","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"KhoonSun47"},"content":"     * @return string[] String[] that contains the name, from and to date","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the input does not contain \"/to\", \"/from\"","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"KhoonSun47"},"content":"     *                          keywords","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"KhoonSun47"},"content":"     *                          and is missing text before/after the keywords","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"KhoonSun47"},"content":"    public static String[] splitToAndFrom(String input) throws WilliamException {","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"KhoonSun47"},"content":"        checkAdditionalDetailEmpty(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"KhoonSun47"},"content":"        String[] firstSplit \u003d input.split(\" /from \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"KhoonSun47"},"content":"        if (firstSplit.length \u003c 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"KhoonSun47"},"content":"                    \"The input does not contain the required \u0027/from\u0027 keyword or is missing text before/after \u0027/from\u0027 keyword. Please try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"KhoonSun47"},"content":"        String[] secondSplit \u003d firstSplit[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"KhoonSun47"},"content":"        if (secondSplit.length \u003c 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"KhoonSun47"},"content":"                    \"The input does not contain the required \u0027/to\u0027 keyword or is missing text before/after \u0027/to\u0027 keyword. Please try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"KhoonSun47"},"content":"        acceptDateAndTime(secondSplit[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"KhoonSun47"},"content":"        acceptDateAndTime(secondSplit[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"KhoonSun47"},"content":"        checkWhetherToAndFromValid(secondSplit[0], secondSplit[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"KhoonSun47"},"content":"        String[] threeParts \u003d { firstSplit[0], secondSplit[0], secondSplit[1] };","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"KhoonSun47"},"content":"        return threeParts;","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"KhoonSun47"},"content":"     * Add task into the list of tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"KhoonSun47"},"content":"     * @param task  Input that is the task (could be todo, deadline or event)","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"KhoonSun47"},"content":"     * @param tasks The list that contains the tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"KhoonSun47"},"content":"    public static void addTask(Task task, List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"KhoonSun47"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"KhoonSun47"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"KhoonSun47"},"content":"     * Check whether the additional detail is empty","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"KhoonSun47"},"content":"     * @param input Input that is the additional detail","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the description of the additional detail is empty","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"KhoonSun47"},"content":"    public static void checkAdditionalDetailEmpty(String input) throws WilliamException {","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"KhoonSun47"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"The description of a task should not be empty. Please try again!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"KhoonSun47"},"content":"     * Delete the specified task from the list","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The ID of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"KhoonSun47"},"content":"     * @param tasks The list that contains the tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"KhoonSun47"},"content":"    public static void deleteFromList(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"KhoonSun47"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"There are no task to be deleted. Please add some task to the list first!\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"KhoonSun47"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"KhoonSun47"},"content":"            int idOfItem \u003d Integer.parseInt(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"KhoonSun47"},"content":"            int actualId \u003d idOfItem - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(tasks.get(actualId).toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":173,"author":{"gitId":"KhoonSun47"},"content":"            tasks.remove(actualId);","lastModifiedDate":"2024-01-23"},{"lineNumber":174,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":175,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":177,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"KhoonSun47"},"content":"     * Check whether the input matches the date and time format","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"KhoonSun47"},"content":"     * @param input The date and time of the task","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the format of the date and time is wrong","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"KhoonSun47"},"content":"    public static void acceptDateAndTime(String input) throws WilliamException {","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":186,"author":{"gitId":"KhoonSun47"},"content":"            LocalDateTime.parse(input, inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"KhoonSun47"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(\"The date and time format is invalid. Please try again!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":192,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"KhoonSun47"},"content":"     * Check whether the \u0027/from\u0027 date is before the \u0027/to\u0027 date","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"KhoonSun47"},"content":"     * @param fromDate The input date \u0027/from\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"KhoonSun47"},"content":"     * @param toDate   The input date \u0027/to\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"KhoonSun47"},"content":"     * @throws WilliamException If the \u0027/from\u0027 date is not before the \u0027/to\u0027 date","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"KhoonSun47"},"content":"    public static void checkWhetherToAndFromValid(String fromDate, String toDate) throws WilliamException {","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime fromDateModified \u003d LocalDateTime.parse(fromDate, inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime toDateModified \u003d LocalDateTime.parse(toDate, inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"KhoonSun47"},"content":"        if (fromDateModified.isBefore(toDateModified) \u003d\u003d false) {","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"KhoonSun47"},"content":"            throw new WilliamException(","lastModifiedDate":"2024-01-28"},{"lineNumber":205,"author":{"gitId":"KhoonSun47"},"content":"                    \"The \u0027/from\u0027 date and time should be before \u0027/to\u0027 date and time. Please try again!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":206,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":207,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":208,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"KhoonSun47"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"KhoonSun47"},"content":"     * Convert String date to LocalDateTime date","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"KhoonSun47"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"KhoonSun47"},"content":"     * @param date Date in String","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"KhoonSun47"},"content":"     * @return Date in LocalDateTime","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"KhoonSun47"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"KhoonSun47"},"content":"    public static LocalDateTime convertStringToDate(String date) {","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"KhoonSun47"},"content":"        LocalDateTime modifiedDate \u003d LocalDateTime.parse(date, inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"KhoonSun47"},"content":"        return modifiedDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":218,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":219,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":219}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"public class Task {","lastModifiedDate":"2024-01-21"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"    private String name;","lastModifiedDate":"2024-01-21"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    private String type;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    private String[] times;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    private static DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy EEEE, ha\");","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"    private static DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-21"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public void changeIsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        this.isDone ^\u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"        return this.type;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"        return this.times;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"    public String getName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"        return this.name;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"    public String outputDateAsString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"        return dateTime.format(outputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"    public String changeDateToString(LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"        return dateTime.format(inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":58}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"    public Todo(String name) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"        super(name, isDone);","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"    public String getType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        return \"T\";","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"    public String[] getTimes() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"        return new String[] { \"NILL\", \"NILL\" };","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":25}},{"path":"src/main/java/William.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"public class William {","lastModifiedDate":"2024-01-21"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-21"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-21"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"        String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"        Methods.openingTitle();","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"KhoonSun47"},"content":"            tasks \u003d FileSaving.loadFromFile(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"KhoonSun47"},"content":"        } catch (FileNotFoundException | WilliamException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"KhoonSun47"},"content":"            System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":20,"author":{"gitId":"KhoonSun47"},"content":"        while (true) {","lastModifiedDate":"2024-01-21"},{"lineNumber":21,"author":{"gitId":"KhoonSun47"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-01-21"},{"lineNumber":22,"author":{"gitId":"KhoonSun47"},"content":"            Commands command \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"            String[] texts \u003d Methods.retrieveTexts(input);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"KhoonSun47"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"KhoonSun47"},"content":"                command \u003d Methods.retrieveCommand(texts[0]);","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"KhoonSun47"},"content":"            } catch (WilliamException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"KhoonSun47"},"content":"                System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"KhoonSun47"},"content":"                continue;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"KhoonSun47"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":31,"author":{"gitId":"KhoonSun47"},"content":"            switch (command) {","lastModifiedDate":"2024-01-21"},{"lineNumber":32,"author":{"gitId":"KhoonSun47"},"content":"                case todo:","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"KhoonSun47"},"content":"                    try {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"KhoonSun47"},"content":"                        Methods.checkAdditionalDetailEmpty(texts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"KhoonSun47"},"content":"                        Methods.addTask(new Todo(texts[1]), tasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"KhoonSun47"},"content":"                    } catch (WilliamException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"KhoonSun47"},"content":"                        System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"KhoonSun47"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"KhoonSun47"},"content":"                case deadline:","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"KhoonSun47"},"content":"                    try {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"KhoonSun47"},"content":"                        String[] deadlineDetails \u003d Methods.splitBy(texts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"KhoonSun47"},"content":"                        Methods.addTask(new Deadline(deadlineDetails[0], Methods.convertStringToDate(deadlineDetails[1])), tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"KhoonSun47"},"content":"                    } catch (WilliamException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"KhoonSun47"},"content":"                        System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"KhoonSun47"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"KhoonSun47"},"content":"                case event:","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"KhoonSun47"},"content":"                    try {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"KhoonSun47"},"content":"                        String[] eventDetails \u003d Methods.splitToAndFrom(texts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"KhoonSun47"},"content":"                        Methods.addTask(new Event(eventDetails[0], Methods.convertStringToDate(eventDetails[1]), Methods.convertStringToDate(eventDetails[2])), tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"KhoonSun47"},"content":"                    } catch (WilliamException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"KhoonSun47"},"content":"                        System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"KhoonSun47"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"KhoonSun47"},"content":"                case list:","lastModifiedDate":"2024-01-21"},{"lineNumber":57,"author":{"gitId":"KhoonSun47"},"content":"                    Methods.printList(tasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":59,"author":{"gitId":"KhoonSun47"},"content":"                case delete:","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"KhoonSun47"},"content":"                    Methods.deleteFromList(texts[1], tasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"KhoonSun47"},"content":"                case mark:","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"KhoonSun47"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"KhoonSun47"},"content":"                    Methods.markAndUnmark(texts[1], tasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"KhoonSun47"},"content":"                case unmark:","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"KhoonSun47"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"KhoonSun47"},"content":"                    Methods.markAndUnmark(texts[1], tasks);","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-21"},{"lineNumber":70,"author":{"gitId":"KhoonSun47"},"content":"                case bye:","lastModifiedDate":"2024-01-21"},{"lineNumber":71,"author":{"gitId":"KhoonSun47"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-21"},{"lineNumber":72,"author":{"gitId":"KhoonSun47"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"KhoonSun47"},"content":"                        FileSaving.writeToFile(filePath, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"KhoonSun47"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"KhoonSun47"},"content":"                        System.out.println(e.getMessage() + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"KhoonSun47"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"KhoonSun47"},"content":"                    sc.close();","lastModifiedDate":"2024-01-21"},{"lineNumber":78,"author":{"gitId":"KhoonSun47"},"content":"                    return;","lastModifiedDate":"2024-01-21"},{"lineNumber":79,"author":{"gitId":"KhoonSun47"},"content":"                default:","lastModifiedDate":"2024-01-21"},{"lineNumber":80,"author":{"gitId":"KhoonSun47"},"content":"                    break;","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"KhoonSun47"},"content":"            }","lastModifiedDate":"2024-01-21"},{"lineNumber":82,"author":{"gitId":"KhoonSun47"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"KhoonSun47":84}},{"path":"src/main/java/WilliamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"public class WilliamException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"    public WilliamException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KhoonSun47"},"content":"todo make dinner","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"KhoonSun47"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"KhoonSun47"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"KhoonSun47"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"KhoonSun47"},"content":"deadline create linkedin account /by Monday","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"KhoonSun47"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"KhoonSun47"},"content":"mark 5","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"KhoonSun47"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"KhoonSun47"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"KhoonSun47"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"KhoonSun47":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"KhoonSun47"},"content":"java -classpath ../bin William \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KhoonSun47":1,"-":37}}]
